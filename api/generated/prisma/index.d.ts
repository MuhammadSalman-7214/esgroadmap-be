
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model UniqueFactorsTable
 * 
 */
export type UniqueFactorsTable = $Result.DefaultSelection<Prisma.$UniqueFactorsTablePayload>
/**
 * Model CompanyUniverse
 * 
 */
export type CompanyUniverse = $Result.DefaultSelection<Prisma.$CompanyUniversePayload>
/**
 * Model CompanyData
 * 
 */
export type CompanyData = $Result.DefaultSelection<Prisma.$CompanyDataPayload>
/**
 * Model CompanyData2
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type CompanyData2 = $Result.DefaultSelection<Prisma.$CompanyData2Payload>
/**
 * Model PercentageTable
 * The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
 */
export type PercentageTable = $Result.DefaultSelection<Prisma.$PercentageTablePayload>
/**
 * Model RoadmapCarbon
 * 
 */
export type RoadmapCarbon = $Result.DefaultSelection<Prisma.$RoadmapCarbonPayload>
/**
 * Model SentenceAll
 * 
 */
export type SentenceAll = $Result.DefaultSelection<Prisma.$SentenceAllPayload>
/**
 * Model TargetSentence
 * 
 */
export type TargetSentence = $Result.DefaultSelection<Prisma.$TargetSentencePayload>
/**
 * Model Testable
 * 
 */
export type Testable = $Result.DefaultSelection<Prisma.$TestablePayload>
/**
 * Model wp_actionscheduler_actions
 * 
 */
export type wp_actionscheduler_actions = $Result.DefaultSelection<Prisma.$wp_actionscheduler_actionsPayload>
/**
 * Model wp_actionscheduler_claims
 * 
 */
export type wp_actionscheduler_claims = $Result.DefaultSelection<Prisma.$wp_actionscheduler_claimsPayload>
/**
 * Model wp_actionscheduler_groups
 * 
 */
export type wp_actionscheduler_groups = $Result.DefaultSelection<Prisma.$wp_actionscheduler_groupsPayload>
/**
 * Model wp_actionscheduler_logs
 * 
 */
export type wp_actionscheduler_logs = $Result.DefaultSelection<Prisma.$wp_actionscheduler_logsPayload>
/**
 * Model wp_aioseo_notifications
 * 
 */
export type wp_aioseo_notifications = $Result.DefaultSelection<Prisma.$wp_aioseo_notificationsPayload>
/**
 * Model wp_aioseo_posts
 * 
 */
export type wp_aioseo_posts = $Result.DefaultSelection<Prisma.$wp_aioseo_postsPayload>
/**
 * Model wp_commentmeta
 * 
 */
export type wp_commentmeta = $Result.DefaultSelection<Prisma.$wp_commentmetaPayload>
/**
 * Model wp_comments
 * 
 */
export type wp_comments = $Result.DefaultSelection<Prisma.$wp_commentsPayload>
/**
 * Model wp_links
 * 
 */
export type wp_links = $Result.DefaultSelection<Prisma.$wp_linksPayload>
/**
 * Model wp_nextend2_image_storage
 * 
 */
export type wp_nextend2_image_storage = $Result.DefaultSelection<Prisma.$wp_nextend2_image_storagePayload>
/**
 * Model wp_nextend2_section_storage
 * 
 */
export type wp_nextend2_section_storage = $Result.DefaultSelection<Prisma.$wp_nextend2_section_storagePayload>
/**
 * Model wp_nextend2_smartslider3_generators
 * 
 */
export type wp_nextend2_smartslider3_generators = $Result.DefaultSelection<Prisma.$wp_nextend2_smartslider3_generatorsPayload>
/**
 * Model wp_nextend2_smartslider3_sliders
 * 
 */
export type wp_nextend2_smartslider3_sliders = $Result.DefaultSelection<Prisma.$wp_nextend2_smartslider3_slidersPayload>
/**
 * Model wp_nextend2_smartslider3_sliders_xref
 * 
 */
export type wp_nextend2_smartslider3_sliders_xref = $Result.DefaultSelection<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>
/**
 * Model wp_nextend2_smartslider3_slides
 * 
 */
export type wp_nextend2_smartslider3_slides = $Result.DefaultSelection<Prisma.$wp_nextend2_smartslider3_slidesPayload>
/**
 * Model wp_options
 * 
 */
export type wp_options = $Result.DefaultSelection<Prisma.$wp_optionsPayload>
/**
 * Model wp_postmeta
 * 
 */
export type wp_postmeta = $Result.DefaultSelection<Prisma.$wp_postmetaPayload>
/**
 * Model wp_posts
 * 
 */
export type wp_posts = $Result.DefaultSelection<Prisma.$wp_postsPayload>
/**
 * Model wp_term_relationships
 * 
 */
export type wp_term_relationships = $Result.DefaultSelection<Prisma.$wp_term_relationshipsPayload>
/**
 * Model wp_term_taxonomy
 * 
 */
export type wp_term_taxonomy = $Result.DefaultSelection<Prisma.$wp_term_taxonomyPayload>
/**
 * Model wp_termmeta
 * 
 */
export type wp_termmeta = $Result.DefaultSelection<Prisma.$wp_termmetaPayload>
/**
 * Model wp_terms
 * 
 */
export type wp_terms = $Result.DefaultSelection<Prisma.$wp_termsPayload>
/**
 * Model wp_um_metadata
 * 
 */
export type wp_um_metadata = $Result.DefaultSelection<Prisma.$wp_um_metadataPayload>
/**
 * Model wp_user_registration_sessions
 * 
 */
export type wp_user_registration_sessions = $Result.DefaultSelection<Prisma.$wp_user_registration_sessionsPayload>
/**
 * Model wp_usermeta
 * 
 */
export type wp_usermeta = $Result.DefaultSelection<Prisma.$wp_usermetaPayload>
/**
 * Model wp_users
 * 
 */
export type wp_users = $Result.DefaultSelection<Prisma.$wp_usersPayload>
/**
 * Model wp_wpdatacharts
 * 
 */
export type wp_wpdatacharts = $Result.DefaultSelection<Prisma.$wp_wpdatachartsPayload>
/**
 * Model wp_wpdatatables
 * 
 */
export type wp_wpdatatables = $Result.DefaultSelection<Prisma.$wp_wpdatatablesPayload>
/**
 * Model wp_wpdatatables_columns
 * 
 */
export type wp_wpdatatables_columns = $Result.DefaultSelection<Prisma.$wp_wpdatatables_columnsPayload>
/**
 * Model wp_wpdatatables_rows
 * 
 */
export type wp_wpdatatables_rows = $Result.DefaultSelection<Prisma.$wp_wpdatatables_rowsPayload>
/**
 * Model wp_wpforms_tasks_meta
 * 
 */
export type wp_wpforms_tasks_meta = $Result.DefaultSelection<Prisma.$wp_wpforms_tasks_metaPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Ticket
 * 
 */
export type Ticket = $Result.DefaultSelection<Prisma.$TicketPayload>
/**
 * Model TicketDocument
 * 
 */
export type TicketDocument = $Result.DefaultSelection<Prisma.$TicketDocumentPayload>
/**
 * Model TicketComment
 * 
 */
export type TicketComment = $Result.DefaultSelection<Prisma.$TicketCommentPayload>
/**
 * Model UserSubscription
 * 
 */
export type UserSubscription = $Result.DefaultSelection<Prisma.$UserSubscriptionPayload>
/**
 * Model Portfolio
 * 
 */
export type Portfolio = $Result.DefaultSelection<Prisma.$PortfolioPayload>
/**
 * Model sentenceallview
 * 
 */
export type sentenceallview = $Result.DefaultSelection<Prisma.$sentenceallviewPayload>
/**
 * Model Search
 * 
 */
export type Search = $Result.DefaultSelection<Prisma.$SearchPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const wp_wpdatacharts_engine: {
  google: 'google',
  highcharts: 'highcharts',
  chartjs: 'chartjs'
};

export type wp_wpdatacharts_engine = (typeof wp_wpdatacharts_engine)[keyof typeof wp_wpdatacharts_engine]


export const wp_wpdatatables_columns_filter_type: {
  none: 'none',
  null_str: 'null_str',
  text: 'text',
  number: 'number',
  number_range: 'number_range',
  date_range: 'date_range',
  datetime_range: 'datetime_range',
  time_range: 'time_range',
  select: 'select',
  multiselect: 'multiselect',
  checkbox: 'checkbox'
};

export type wp_wpdatatables_columns_filter_type = (typeof wp_wpdatatables_columns_filter_type)[keyof typeof wp_wpdatatables_columns_filter_type]


export const wp_wpdatatables_columns_column_type: {
  autodetect: 'autodetect',
  string: 'string',
  int: 'int',
  float: 'float',
  date: 'date',
  link: 'link',
  email: 'email',
  image: 'image',
  formula: 'formula',
  datetime: 'datetime',
  time: 'time',
  masterdetail: 'masterdetail'
};

export type wp_wpdatatables_columns_column_type = (typeof wp_wpdatatables_columns_column_type)[keyof typeof wp_wpdatatables_columns_column_type]


export const wp_wpdatatables_columns_input_type: {
  none: 'none',
  text: 'text',
  textarea: 'textarea',
  mce_editor: 'mce_editor',
  date: 'date',
  datetime: 'datetime',
  time: 'time',
  link: 'link',
  email: 'email',
  selectbox: 'selectbox',
  multi_selectbox: 'multi_selectbox',
  attachment: 'attachment'
};

export type wp_wpdatatables_columns_input_type = (typeof wp_wpdatatables_columns_input_type)[keyof typeof wp_wpdatatables_columns_input_type]

}

export type wp_wpdatacharts_engine = $Enums.wp_wpdatacharts_engine

export const wp_wpdatacharts_engine: typeof $Enums.wp_wpdatacharts_engine

export type wp_wpdatatables_columns_filter_type = $Enums.wp_wpdatatables_columns_filter_type

export const wp_wpdatatables_columns_filter_type: typeof $Enums.wp_wpdatatables_columns_filter_type

export type wp_wpdatatables_columns_column_type = $Enums.wp_wpdatatables_columns_column_type

export const wp_wpdatatables_columns_column_type: typeof $Enums.wp_wpdatatables_columns_column_type

export type wp_wpdatatables_columns_input_type = $Enums.wp_wpdatatables_columns_input_type

export const wp_wpdatatables_columns_input_type: typeof $Enums.wp_wpdatatables_columns_input_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more UniqueFactorsTables
 * const uniqueFactorsTables = await prisma.uniqueFactorsTable.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more UniqueFactorsTables
   * const uniqueFactorsTables = await prisma.uniqueFactorsTable.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.uniqueFactorsTable`: Exposes CRUD operations for the **UniqueFactorsTable** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UniqueFactorsTables
    * const uniqueFactorsTables = await prisma.uniqueFactorsTable.findMany()
    * ```
    */
  get uniqueFactorsTable(): Prisma.UniqueFactorsTableDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.companyUniverse`: Exposes CRUD operations for the **CompanyUniverse** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CompanyUniverses
    * const companyUniverses = await prisma.companyUniverse.findMany()
    * ```
    */
  get companyUniverse(): Prisma.CompanyUniverseDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.companyData`: Exposes CRUD operations for the **CompanyData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CompanyData
    * const companyData = await prisma.companyData.findMany()
    * ```
    */
  get companyData(): Prisma.CompanyDataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.companyData2`: Exposes CRUD operations for the **CompanyData2** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CompanyData2s
    * const companyData2s = await prisma.companyData2.findMany()
    * ```
    */
  get companyData2(): Prisma.CompanyData2Delegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.percentageTable`: Exposes CRUD operations for the **PercentageTable** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PercentageTables
    * const percentageTables = await prisma.percentageTable.findMany()
    * ```
    */
  get percentageTable(): Prisma.PercentageTableDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roadmapCarbon`: Exposes CRUD operations for the **RoadmapCarbon** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RoadmapCarbons
    * const roadmapCarbons = await prisma.roadmapCarbon.findMany()
    * ```
    */
  get roadmapCarbon(): Prisma.RoadmapCarbonDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sentenceAll`: Exposes CRUD operations for the **SentenceAll** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SentenceAlls
    * const sentenceAlls = await prisma.sentenceAll.findMany()
    * ```
    */
  get sentenceAll(): Prisma.SentenceAllDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.targetSentence`: Exposes CRUD operations for the **TargetSentence** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TargetSentences
    * const targetSentences = await prisma.targetSentence.findMany()
    * ```
    */
  get targetSentence(): Prisma.TargetSentenceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.testable`: Exposes CRUD operations for the **Testable** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Testables
    * const testables = await prisma.testable.findMany()
    * ```
    */
  get testable(): Prisma.TestableDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_actionscheduler_actions`: Exposes CRUD operations for the **wp_actionscheduler_actions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_actions
    * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany()
    * ```
    */
  get wp_actionscheduler_actions(): Prisma.wp_actionscheduler_actionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_actionscheduler_claims`: Exposes CRUD operations for the **wp_actionscheduler_claims** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_claims
    * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findMany()
    * ```
    */
  get wp_actionscheduler_claims(): Prisma.wp_actionscheduler_claimsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_actionscheduler_groups`: Exposes CRUD operations for the **wp_actionscheduler_groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_groups
    * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findMany()
    * ```
    */
  get wp_actionscheduler_groups(): Prisma.wp_actionscheduler_groupsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_actionscheduler_logs`: Exposes CRUD operations for the **wp_actionscheduler_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_logs
    * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findMany()
    * ```
    */
  get wp_actionscheduler_logs(): Prisma.wp_actionscheduler_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_aioseo_notifications`: Exposes CRUD operations for the **wp_aioseo_notifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_aioseo_notifications
    * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.findMany()
    * ```
    */
  get wp_aioseo_notifications(): Prisma.wp_aioseo_notificationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_aioseo_posts`: Exposes CRUD operations for the **wp_aioseo_posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_aioseo_posts
    * const wp_aioseo_posts = await prisma.wp_aioseo_posts.findMany()
    * ```
    */
  get wp_aioseo_posts(): Prisma.wp_aioseo_postsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_commentmeta`: Exposes CRUD operations for the **wp_commentmeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_commentmetas
    * const wp_commentmetas = await prisma.wp_commentmeta.findMany()
    * ```
    */
  get wp_commentmeta(): Prisma.wp_commentmetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_comments`: Exposes CRUD operations for the **wp_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_comments
    * const wp_comments = await prisma.wp_comments.findMany()
    * ```
    */
  get wp_comments(): Prisma.wp_commentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_links`: Exposes CRUD operations for the **wp_links** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_links
    * const wp_links = await prisma.wp_links.findMany()
    * ```
    */
  get wp_links(): Prisma.wp_linksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_nextend2_image_storage`: Exposes CRUD operations for the **wp_nextend2_image_storage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_nextend2_image_storages
    * const wp_nextend2_image_storages = await prisma.wp_nextend2_image_storage.findMany()
    * ```
    */
  get wp_nextend2_image_storage(): Prisma.wp_nextend2_image_storageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_nextend2_section_storage`: Exposes CRUD operations for the **wp_nextend2_section_storage** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_nextend2_section_storages
    * const wp_nextend2_section_storages = await prisma.wp_nextend2_section_storage.findMany()
    * ```
    */
  get wp_nextend2_section_storage(): Prisma.wp_nextend2_section_storageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_nextend2_smartslider3_generators`: Exposes CRUD operations for the **wp_nextend2_smartslider3_generators** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_nextend2_smartslider3_generators
    * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.findMany()
    * ```
    */
  get wp_nextend2_smartslider3_generators(): Prisma.wp_nextend2_smartslider3_generatorsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_nextend2_smartslider3_sliders`: Exposes CRUD operations for the **wp_nextend2_smartslider3_sliders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_nextend2_smartslider3_sliders
    * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.findMany()
    * ```
    */
  get wp_nextend2_smartslider3_sliders(): Prisma.wp_nextend2_smartslider3_slidersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_nextend2_smartslider3_sliders_xref`: Exposes CRUD operations for the **wp_nextend2_smartslider3_sliders_xref** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_nextend2_smartslider3_sliders_xrefs
    * const wp_nextend2_smartslider3_sliders_xrefs = await prisma.wp_nextend2_smartslider3_sliders_xref.findMany()
    * ```
    */
  get wp_nextend2_smartslider3_sliders_xref(): Prisma.wp_nextend2_smartslider3_sliders_xrefDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_nextend2_smartslider3_slides`: Exposes CRUD operations for the **wp_nextend2_smartslider3_slides** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_nextend2_smartslider3_slides
    * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.findMany()
    * ```
    */
  get wp_nextend2_smartslider3_slides(): Prisma.wp_nextend2_smartslider3_slidesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_options`: Exposes CRUD operations for the **wp_options** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_options
    * const wp_options = await prisma.wp_options.findMany()
    * ```
    */
  get wp_options(): Prisma.wp_optionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_postmeta`: Exposes CRUD operations for the **wp_postmeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_postmetas
    * const wp_postmetas = await prisma.wp_postmeta.findMany()
    * ```
    */
  get wp_postmeta(): Prisma.wp_postmetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_posts`: Exposes CRUD operations for the **wp_posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_posts
    * const wp_posts = await prisma.wp_posts.findMany()
    * ```
    */
  get wp_posts(): Prisma.wp_postsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_term_relationships`: Exposes CRUD operations for the **wp_term_relationships** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_term_relationships
    * const wp_term_relationships = await prisma.wp_term_relationships.findMany()
    * ```
    */
  get wp_term_relationships(): Prisma.wp_term_relationshipsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_term_taxonomy`: Exposes CRUD operations for the **wp_term_taxonomy** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_term_taxonomies
    * const wp_term_taxonomies = await prisma.wp_term_taxonomy.findMany()
    * ```
    */
  get wp_term_taxonomy(): Prisma.wp_term_taxonomyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_termmeta`: Exposes CRUD operations for the **wp_termmeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_termmetas
    * const wp_termmetas = await prisma.wp_termmeta.findMany()
    * ```
    */
  get wp_termmeta(): Prisma.wp_termmetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_terms`: Exposes CRUD operations for the **wp_terms** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_terms
    * const wp_terms = await prisma.wp_terms.findMany()
    * ```
    */
  get wp_terms(): Prisma.wp_termsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_um_metadata`: Exposes CRUD operations for the **wp_um_metadata** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_um_metadata
    * const wp_um_metadata = await prisma.wp_um_metadata.findMany()
    * ```
    */
  get wp_um_metadata(): Prisma.wp_um_metadataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_user_registration_sessions`: Exposes CRUD operations for the **wp_user_registration_sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_user_registration_sessions
    * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.findMany()
    * ```
    */
  get wp_user_registration_sessions(): Prisma.wp_user_registration_sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_usermeta`: Exposes CRUD operations for the **wp_usermeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_usermetas
    * const wp_usermetas = await prisma.wp_usermeta.findMany()
    * ```
    */
  get wp_usermeta(): Prisma.wp_usermetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_users`: Exposes CRUD operations for the **wp_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_users
    * const wp_users = await prisma.wp_users.findMany()
    * ```
    */
  get wp_users(): Prisma.wp_usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpdatacharts`: Exposes CRUD operations for the **wp_wpdatacharts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpdatacharts
    * const wp_wpdatacharts = await prisma.wp_wpdatacharts.findMany()
    * ```
    */
  get wp_wpdatacharts(): Prisma.wp_wpdatachartsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpdatatables`: Exposes CRUD operations for the **wp_wpdatatables** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpdatatables
    * const wp_wpdatatables = await prisma.wp_wpdatatables.findMany()
    * ```
    */
  get wp_wpdatatables(): Prisma.wp_wpdatatablesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpdatatables_columns`: Exposes CRUD operations for the **wp_wpdatatables_columns** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpdatatables_columns
    * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.findMany()
    * ```
    */
  get wp_wpdatatables_columns(): Prisma.wp_wpdatatables_columnsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpdatatables_rows`: Exposes CRUD operations for the **wp_wpdatatables_rows** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpdatatables_rows
    * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.findMany()
    * ```
    */
  get wp_wpdatatables_rows(): Prisma.wp_wpdatatables_rowsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpforms_tasks_meta`: Exposes CRUD operations for the **wp_wpforms_tasks_meta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpforms_tasks_metas
    * const wp_wpforms_tasks_metas = await prisma.wp_wpforms_tasks_meta.findMany()
    * ```
    */
  get wp_wpforms_tasks_meta(): Prisma.wp_wpforms_tasks_metaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticket`: Exposes CRUD operations for the **Ticket** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tickets
    * const tickets = await prisma.ticket.findMany()
    * ```
    */
  get ticket(): Prisma.TicketDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticketDocument`: Exposes CRUD operations for the **TicketDocument** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TicketDocuments
    * const ticketDocuments = await prisma.ticketDocument.findMany()
    * ```
    */
  get ticketDocument(): Prisma.TicketDocumentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ticketComment`: Exposes CRUD operations for the **TicketComment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TicketComments
    * const ticketComments = await prisma.ticketComment.findMany()
    * ```
    */
  get ticketComment(): Prisma.TicketCommentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userSubscription`: Exposes CRUD operations for the **UserSubscription** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSubscriptions
    * const userSubscriptions = await prisma.userSubscription.findMany()
    * ```
    */
  get userSubscription(): Prisma.UserSubscriptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.portfolio`: Exposes CRUD operations for the **Portfolio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Portfolios
    * const portfolios = await prisma.portfolio.findMany()
    * ```
    */
  get portfolio(): Prisma.PortfolioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sentenceallview`: Exposes CRUD operations for the **sentenceallview** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sentenceallviews
    * const sentenceallviews = await prisma.sentenceallview.findMany()
    * ```
    */
  get sentenceallview(): Prisma.sentenceallviewDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.search`: Exposes CRUD operations for the **Search** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Searches
    * const searches = await prisma.search.findMany()
    * ```
    */
  get search(): Prisma.SearchDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    UniqueFactorsTable: 'UniqueFactorsTable',
    CompanyUniverse: 'CompanyUniverse',
    CompanyData: 'CompanyData',
    CompanyData2: 'CompanyData2',
    PercentageTable: 'PercentageTable',
    RoadmapCarbon: 'RoadmapCarbon',
    SentenceAll: 'SentenceAll',
    TargetSentence: 'TargetSentence',
    Testable: 'Testable',
    wp_actionscheduler_actions: 'wp_actionscheduler_actions',
    wp_actionscheduler_claims: 'wp_actionscheduler_claims',
    wp_actionscheduler_groups: 'wp_actionscheduler_groups',
    wp_actionscheduler_logs: 'wp_actionscheduler_logs',
    wp_aioseo_notifications: 'wp_aioseo_notifications',
    wp_aioseo_posts: 'wp_aioseo_posts',
    wp_commentmeta: 'wp_commentmeta',
    wp_comments: 'wp_comments',
    wp_links: 'wp_links',
    wp_nextend2_image_storage: 'wp_nextend2_image_storage',
    wp_nextend2_section_storage: 'wp_nextend2_section_storage',
    wp_nextend2_smartslider3_generators: 'wp_nextend2_smartslider3_generators',
    wp_nextend2_smartslider3_sliders: 'wp_nextend2_smartslider3_sliders',
    wp_nextend2_smartslider3_sliders_xref: 'wp_nextend2_smartslider3_sliders_xref',
    wp_nextend2_smartslider3_slides: 'wp_nextend2_smartslider3_slides',
    wp_options: 'wp_options',
    wp_postmeta: 'wp_postmeta',
    wp_posts: 'wp_posts',
    wp_term_relationships: 'wp_term_relationships',
    wp_term_taxonomy: 'wp_term_taxonomy',
    wp_termmeta: 'wp_termmeta',
    wp_terms: 'wp_terms',
    wp_um_metadata: 'wp_um_metadata',
    wp_user_registration_sessions: 'wp_user_registration_sessions',
    wp_usermeta: 'wp_usermeta',
    wp_users: 'wp_users',
    wp_wpdatacharts: 'wp_wpdatacharts',
    wp_wpdatatables: 'wp_wpdatatables',
    wp_wpdatatables_columns: 'wp_wpdatatables_columns',
    wp_wpdatatables_rows: 'wp_wpdatatables_rows',
    wp_wpforms_tasks_meta: 'wp_wpforms_tasks_meta',
    User: 'User',
    Ticket: 'Ticket',
    TicketDocument: 'TicketDocument',
    TicketComment: 'TicketComment',
    UserSubscription: 'UserSubscription',
    Portfolio: 'Portfolio',
    sentenceallview: 'sentenceallview',
    Search: 'Search'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "uniqueFactorsTable" | "companyUniverse" | "companyData" | "companyData2" | "percentageTable" | "roadmapCarbon" | "sentenceAll" | "targetSentence" | "testable" | "wp_actionscheduler_actions" | "wp_actionscheduler_claims" | "wp_actionscheduler_groups" | "wp_actionscheduler_logs" | "wp_aioseo_notifications" | "wp_aioseo_posts" | "wp_commentmeta" | "wp_comments" | "wp_links" | "wp_nextend2_image_storage" | "wp_nextend2_section_storage" | "wp_nextend2_smartslider3_generators" | "wp_nextend2_smartslider3_sliders" | "wp_nextend2_smartslider3_sliders_xref" | "wp_nextend2_smartslider3_slides" | "wp_options" | "wp_postmeta" | "wp_posts" | "wp_term_relationships" | "wp_term_taxonomy" | "wp_termmeta" | "wp_terms" | "wp_um_metadata" | "wp_user_registration_sessions" | "wp_usermeta" | "wp_users" | "wp_wpdatacharts" | "wp_wpdatatables" | "wp_wpdatatables_columns" | "wp_wpdatatables_rows" | "wp_wpforms_tasks_meta" | "user" | "ticket" | "ticketDocument" | "ticketComment" | "userSubscription" | "portfolio" | "sentenceallview" | "search"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      UniqueFactorsTable: {
        payload: Prisma.$UniqueFactorsTablePayload<ExtArgs>
        fields: Prisma.UniqueFactorsTableFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UniqueFactorsTableFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UniqueFactorsTableFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload>
          }
          findFirst: {
            args: Prisma.UniqueFactorsTableFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UniqueFactorsTableFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload>
          }
          findMany: {
            args: Prisma.UniqueFactorsTableFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload>[]
          }
          create: {
            args: Prisma.UniqueFactorsTableCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload>
          }
          createMany: {
            args: Prisma.UniqueFactorsTableCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UniqueFactorsTableDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload>
          }
          update: {
            args: Prisma.UniqueFactorsTableUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload>
          }
          deleteMany: {
            args: Prisma.UniqueFactorsTableDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UniqueFactorsTableUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UniqueFactorsTableUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UniqueFactorsTablePayload>
          }
          aggregate: {
            args: Prisma.UniqueFactorsTableAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUniqueFactorsTable>
          }
          groupBy: {
            args: Prisma.UniqueFactorsTableGroupByArgs<ExtArgs>
            result: $Utils.Optional<UniqueFactorsTableGroupByOutputType>[]
          }
          count: {
            args: Prisma.UniqueFactorsTableCountArgs<ExtArgs>
            result: $Utils.Optional<UniqueFactorsTableCountAggregateOutputType> | number
          }
        }
      }
      CompanyUniverse: {
        payload: Prisma.$CompanyUniversePayload<ExtArgs>
        fields: Prisma.CompanyUniverseFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyUniverseFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyUniverseFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload>
          }
          findFirst: {
            args: Prisma.CompanyUniverseFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyUniverseFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload>
          }
          findMany: {
            args: Prisma.CompanyUniverseFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload>[]
          }
          create: {
            args: Prisma.CompanyUniverseCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload>
          }
          createMany: {
            args: Prisma.CompanyUniverseCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyUniverseDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload>
          }
          update: {
            args: Prisma.CompanyUniverseUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload>
          }
          deleteMany: {
            args: Prisma.CompanyUniverseDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUniverseUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUniverseUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyUniversePayload>
          }
          aggregate: {
            args: Prisma.CompanyUniverseAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompanyUniverse>
          }
          groupBy: {
            args: Prisma.CompanyUniverseGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyUniverseGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyUniverseCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyUniverseCountAggregateOutputType> | number
          }
        }
      }
      CompanyData: {
        payload: Prisma.$CompanyDataPayload<ExtArgs>
        fields: Prisma.CompanyDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload>
          }
          findFirst: {
            args: Prisma.CompanyDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload>
          }
          findMany: {
            args: Prisma.CompanyDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload>[]
          }
          create: {
            args: Prisma.CompanyDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload>
          }
          createMany: {
            args: Prisma.CompanyDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload>
          }
          update: {
            args: Prisma.CompanyDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyDataPayload>
          }
          aggregate: {
            args: Prisma.CompanyDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompanyData>
          }
          groupBy: {
            args: Prisma.CompanyDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyDataCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyDataCountAggregateOutputType> | number
          }
        }
      }
      CompanyData2: {
        payload: Prisma.$CompanyData2Payload<ExtArgs>
        fields: Prisma.CompanyData2FieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyData2FindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyData2FindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload>
          }
          findFirst: {
            args: Prisma.CompanyData2FindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyData2FindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload>
          }
          findMany: {
            args: Prisma.CompanyData2FindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload>[]
          }
          create: {
            args: Prisma.CompanyData2CreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload>
          }
          createMany: {
            args: Prisma.CompanyData2CreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyData2DeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload>
          }
          update: {
            args: Prisma.CompanyData2UpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload>
          }
          deleteMany: {
            args: Prisma.CompanyData2DeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyData2UpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyData2UpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyData2Payload>
          }
          aggregate: {
            args: Prisma.CompanyData2AggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompanyData2>
          }
          groupBy: {
            args: Prisma.CompanyData2GroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyData2GroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyData2CountArgs<ExtArgs>
            result: $Utils.Optional<CompanyData2CountAggregateOutputType> | number
          }
        }
      }
      PercentageTable: {
        payload: Prisma.$PercentageTablePayload<ExtArgs>
        fields: Prisma.PercentageTableFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PercentageTableFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PercentageTableFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload>
          }
          findFirst: {
            args: Prisma.PercentageTableFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PercentageTableFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload>
          }
          findMany: {
            args: Prisma.PercentageTableFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload>[]
          }
          create: {
            args: Prisma.PercentageTableCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload>
          }
          createMany: {
            args: Prisma.PercentageTableCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PercentageTableDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload>
          }
          update: {
            args: Prisma.PercentageTableUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload>
          }
          deleteMany: {
            args: Prisma.PercentageTableDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PercentageTableUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PercentageTableUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PercentageTablePayload>
          }
          aggregate: {
            args: Prisma.PercentageTableAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePercentageTable>
          }
          groupBy: {
            args: Prisma.PercentageTableGroupByArgs<ExtArgs>
            result: $Utils.Optional<PercentageTableGroupByOutputType>[]
          }
          count: {
            args: Prisma.PercentageTableCountArgs<ExtArgs>
            result: $Utils.Optional<PercentageTableCountAggregateOutputType> | number
          }
        }
      }
      RoadmapCarbon: {
        payload: Prisma.$RoadmapCarbonPayload<ExtArgs>
        fields: Prisma.RoadmapCarbonFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoadmapCarbonFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoadmapCarbonFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload>
          }
          findFirst: {
            args: Prisma.RoadmapCarbonFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoadmapCarbonFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload>
          }
          findMany: {
            args: Prisma.RoadmapCarbonFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload>[]
          }
          create: {
            args: Prisma.RoadmapCarbonCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload>
          }
          createMany: {
            args: Prisma.RoadmapCarbonCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RoadmapCarbonDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload>
          }
          update: {
            args: Prisma.RoadmapCarbonUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload>
          }
          deleteMany: {
            args: Prisma.RoadmapCarbonDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoadmapCarbonUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoadmapCarbonUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RoadmapCarbonPayload>
          }
          aggregate: {
            args: Prisma.RoadmapCarbonAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoadmapCarbon>
          }
          groupBy: {
            args: Prisma.RoadmapCarbonGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoadmapCarbonGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoadmapCarbonCountArgs<ExtArgs>
            result: $Utils.Optional<RoadmapCarbonCountAggregateOutputType> | number
          }
        }
      }
      SentenceAll: {
        payload: Prisma.$SentenceAllPayload<ExtArgs>
        fields: Prisma.SentenceAllFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SentenceAllFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SentenceAllFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload>
          }
          findFirst: {
            args: Prisma.SentenceAllFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SentenceAllFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload>
          }
          findMany: {
            args: Prisma.SentenceAllFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload>[]
          }
          create: {
            args: Prisma.SentenceAllCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload>
          }
          createMany: {
            args: Prisma.SentenceAllCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SentenceAllDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload>
          }
          update: {
            args: Prisma.SentenceAllUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload>
          }
          deleteMany: {
            args: Prisma.SentenceAllDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SentenceAllUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SentenceAllUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SentenceAllPayload>
          }
          aggregate: {
            args: Prisma.SentenceAllAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSentenceAll>
          }
          groupBy: {
            args: Prisma.SentenceAllGroupByArgs<ExtArgs>
            result: $Utils.Optional<SentenceAllGroupByOutputType>[]
          }
          count: {
            args: Prisma.SentenceAllCountArgs<ExtArgs>
            result: $Utils.Optional<SentenceAllCountAggregateOutputType> | number
          }
        }
      }
      TargetSentence: {
        payload: Prisma.$TargetSentencePayload<ExtArgs>
        fields: Prisma.TargetSentenceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TargetSentenceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TargetSentenceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload>
          }
          findFirst: {
            args: Prisma.TargetSentenceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TargetSentenceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload>
          }
          findMany: {
            args: Prisma.TargetSentenceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload>[]
          }
          create: {
            args: Prisma.TargetSentenceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload>
          }
          createMany: {
            args: Prisma.TargetSentenceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TargetSentenceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload>
          }
          update: {
            args: Prisma.TargetSentenceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload>
          }
          deleteMany: {
            args: Prisma.TargetSentenceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TargetSentenceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TargetSentenceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TargetSentencePayload>
          }
          aggregate: {
            args: Prisma.TargetSentenceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTargetSentence>
          }
          groupBy: {
            args: Prisma.TargetSentenceGroupByArgs<ExtArgs>
            result: $Utils.Optional<TargetSentenceGroupByOutputType>[]
          }
          count: {
            args: Prisma.TargetSentenceCountArgs<ExtArgs>
            result: $Utils.Optional<TargetSentenceCountAggregateOutputType> | number
          }
        }
      }
      Testable: {
        payload: Prisma.$TestablePayload<ExtArgs>
        fields: Prisma.TestableFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TestableFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TestableFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload>
          }
          findFirst: {
            args: Prisma.TestableFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TestableFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload>
          }
          findMany: {
            args: Prisma.TestableFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload>[]
          }
          create: {
            args: Prisma.TestableCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload>
          }
          createMany: {
            args: Prisma.TestableCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TestableDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload>
          }
          update: {
            args: Prisma.TestableUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload>
          }
          deleteMany: {
            args: Prisma.TestableDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TestableUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TestableUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TestablePayload>
          }
          aggregate: {
            args: Prisma.TestableAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTestable>
          }
          groupBy: {
            args: Prisma.TestableGroupByArgs<ExtArgs>
            result: $Utils.Optional<TestableGroupByOutputType>[]
          }
          count: {
            args: Prisma.TestableCountArgs<ExtArgs>
            result: $Utils.Optional<TestableCountAggregateOutputType> | number
          }
        }
      }
      wp_actionscheduler_actions: {
        payload: Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_actionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_actionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_actionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_actionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_actionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_actionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_actionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_actionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_actionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_actionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_actionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_actionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_actionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_actionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_actions>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_actionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_actionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_actionsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_actionsCountAggregateOutputType> | number
          }
        }
      }
      wp_actionscheduler_claims: {
        payload: Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_claimsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_claimsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_claimsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_claimsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_claimsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_claimsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_claimsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_claimsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_claimsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_claimsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_claimsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_claimsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_claimsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_claimsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_claims>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_claimsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_claimsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_claimsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_claimsCountAggregateOutputType> | number
          }
        }
      }
      wp_actionscheduler_groups: {
        payload: Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_groupsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_groupsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_groupsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_groupsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_groupsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_groupsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_groupsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_groupsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_groupsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_groupsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_groupsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_groupsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_groupsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_groups>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_groupsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_groupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_groupsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_groupsCountAggregateOutputType> | number
          }
        }
      }
      wp_actionscheduler_logs: {
        payload: Prisma.$wp_actionscheduler_logsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_logs>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_logsCountAggregateOutputType> | number
          }
        }
      }
      wp_aioseo_notifications: {
        payload: Prisma.$wp_aioseo_notificationsPayload<ExtArgs>
        fields: Prisma.wp_aioseo_notificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_aioseo_notificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_aioseo_notificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload>
          }
          findFirst: {
            args: Prisma.wp_aioseo_notificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_aioseo_notificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload>
          }
          findMany: {
            args: Prisma.wp_aioseo_notificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload>[]
          }
          create: {
            args: Prisma.wp_aioseo_notificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload>
          }
          createMany: {
            args: Prisma.wp_aioseo_notificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_aioseo_notificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload>
          }
          update: {
            args: Prisma.wp_aioseo_notificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload>
          }
          deleteMany: {
            args: Prisma.wp_aioseo_notificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_aioseo_notificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_aioseo_notificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_notificationsPayload>
          }
          aggregate: {
            args: Prisma.Wp_aioseo_notificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_aioseo_notifications>
          }
          groupBy: {
            args: Prisma.wp_aioseo_notificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_aioseo_notificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_aioseo_notificationsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_aioseo_notificationsCountAggregateOutputType> | number
          }
        }
      }
      wp_aioseo_posts: {
        payload: Prisma.$wp_aioseo_postsPayload<ExtArgs>
        fields: Prisma.wp_aioseo_postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_aioseo_postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_aioseo_postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload>
          }
          findFirst: {
            args: Prisma.wp_aioseo_postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_aioseo_postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload>
          }
          findMany: {
            args: Prisma.wp_aioseo_postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload>[]
          }
          create: {
            args: Prisma.wp_aioseo_postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload>
          }
          createMany: {
            args: Prisma.wp_aioseo_postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_aioseo_postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload>
          }
          update: {
            args: Prisma.wp_aioseo_postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload>
          }
          deleteMany: {
            args: Prisma.wp_aioseo_postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_aioseo_postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_aioseo_postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_aioseo_postsPayload>
          }
          aggregate: {
            args: Prisma.Wp_aioseo_postsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_aioseo_posts>
          }
          groupBy: {
            args: Prisma.wp_aioseo_postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_aioseo_postsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_aioseo_postsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_aioseo_postsCountAggregateOutputType> | number
          }
        }
      }
      wp_commentmeta: {
        payload: Prisma.$wp_commentmetaPayload<ExtArgs>
        fields: Prisma.wp_commentmetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_commentmetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_commentmetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          findFirst: {
            args: Prisma.wp_commentmetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_commentmetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          findMany: {
            args: Prisma.wp_commentmetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>[]
          }
          create: {
            args: Prisma.wp_commentmetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          createMany: {
            args: Prisma.wp_commentmetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_commentmetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          update: {
            args: Prisma.wp_commentmetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_commentmetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_commentmetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_commentmetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_commentmetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_commentmeta>
          }
          groupBy: {
            args: Prisma.wp_commentmetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentmetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_commentmetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentmetaCountAggregateOutputType> | number
          }
        }
      }
      wp_comments: {
        payload: Prisma.$wp_commentsPayload<ExtArgs>
        fields: Prisma.wp_commentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_commentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_commentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          findFirst: {
            args: Prisma.wp_commentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_commentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          findMany: {
            args: Prisma.wp_commentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>[]
          }
          create: {
            args: Prisma.wp_commentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          createMany: {
            args: Prisma.wp_commentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_commentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          update: {
            args: Prisma.wp_commentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          deleteMany: {
            args: Prisma.wp_commentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_commentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_commentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          aggregate: {
            args: Prisma.Wp_commentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_comments>
          }
          groupBy: {
            args: Prisma.wp_commentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_commentsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentsCountAggregateOutputType> | number
          }
        }
      }
      wp_links: {
        payload: Prisma.$wp_linksPayload<ExtArgs>
        fields: Prisma.wp_linksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_linksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_linksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          findFirst: {
            args: Prisma.wp_linksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_linksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          findMany: {
            args: Prisma.wp_linksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>[]
          }
          create: {
            args: Prisma.wp_linksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          createMany: {
            args: Prisma.wp_linksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_linksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          update: {
            args: Prisma.wp_linksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          deleteMany: {
            args: Prisma.wp_linksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_linksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_linksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          aggregate: {
            args: Prisma.Wp_linksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_links>
          }
          groupBy: {
            args: Prisma.wp_linksGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_linksGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_linksCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_linksCountAggregateOutputType> | number
          }
        }
      }
      wp_nextend2_image_storage: {
        payload: Prisma.$wp_nextend2_image_storagePayload<ExtArgs>
        fields: Prisma.wp_nextend2_image_storageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_nextend2_image_storageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_nextend2_image_storageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload>
          }
          findFirst: {
            args: Prisma.wp_nextend2_image_storageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_nextend2_image_storageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload>
          }
          findMany: {
            args: Prisma.wp_nextend2_image_storageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload>[]
          }
          create: {
            args: Prisma.wp_nextend2_image_storageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload>
          }
          createMany: {
            args: Prisma.wp_nextend2_image_storageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_nextend2_image_storageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload>
          }
          update: {
            args: Prisma.wp_nextend2_image_storageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload>
          }
          deleteMany: {
            args: Prisma.wp_nextend2_image_storageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_nextend2_image_storageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_nextend2_image_storageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_image_storagePayload>
          }
          aggregate: {
            args: Prisma.Wp_nextend2_image_storageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_nextend2_image_storage>
          }
          groupBy: {
            args: Prisma.wp_nextend2_image_storageGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_image_storageGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_nextend2_image_storageCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_image_storageCountAggregateOutputType> | number
          }
        }
      }
      wp_nextend2_section_storage: {
        payload: Prisma.$wp_nextend2_section_storagePayload<ExtArgs>
        fields: Prisma.wp_nextend2_section_storageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_nextend2_section_storageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_nextend2_section_storageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload>
          }
          findFirst: {
            args: Prisma.wp_nextend2_section_storageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_nextend2_section_storageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload>
          }
          findMany: {
            args: Prisma.wp_nextend2_section_storageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload>[]
          }
          create: {
            args: Prisma.wp_nextend2_section_storageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload>
          }
          createMany: {
            args: Prisma.wp_nextend2_section_storageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_nextend2_section_storageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload>
          }
          update: {
            args: Prisma.wp_nextend2_section_storageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload>
          }
          deleteMany: {
            args: Prisma.wp_nextend2_section_storageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_nextend2_section_storageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_nextend2_section_storageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_section_storagePayload>
          }
          aggregate: {
            args: Prisma.Wp_nextend2_section_storageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_nextend2_section_storage>
          }
          groupBy: {
            args: Prisma.wp_nextend2_section_storageGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_section_storageGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_nextend2_section_storageCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_section_storageCountAggregateOutputType> | number
          }
        }
      }
      wp_nextend2_smartslider3_generators: {
        payload: Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>
        fields: Prisma.wp_nextend2_smartslider3_generatorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_nextend2_smartslider3_generatorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_generatorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload>
          }
          findFirst: {
            args: Prisma.wp_nextend2_smartslider3_generatorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_generatorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload>
          }
          findMany: {
            args: Prisma.wp_nextend2_smartslider3_generatorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload>[]
          }
          create: {
            args: Prisma.wp_nextend2_smartslider3_generatorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload>
          }
          createMany: {
            args: Prisma.wp_nextend2_smartslider3_generatorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_nextend2_smartslider3_generatorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload>
          }
          update: {
            args: Prisma.wp_nextend2_smartslider3_generatorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload>
          }
          deleteMany: {
            args: Prisma.wp_nextend2_smartslider3_generatorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_nextend2_smartslider3_generatorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_nextend2_smartslider3_generatorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload>
          }
          aggregate: {
            args: Prisma.Wp_nextend2_smartslider3_generatorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_nextend2_smartslider3_generators>
          }
          groupBy: {
            args: Prisma.wp_nextend2_smartslider3_generatorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_generatorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_nextend2_smartslider3_generatorsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_generatorsCountAggregateOutputType> | number
          }
        }
      }
      wp_nextend2_smartslider3_sliders: {
        payload: Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>
        fields: Prisma.wp_nextend2_smartslider3_slidersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_nextend2_smartslider3_slidersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_slidersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload>
          }
          findFirst: {
            args: Prisma.wp_nextend2_smartslider3_slidersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_slidersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload>
          }
          findMany: {
            args: Prisma.wp_nextend2_smartslider3_slidersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload>[]
          }
          create: {
            args: Prisma.wp_nextend2_smartslider3_slidersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload>
          }
          createMany: {
            args: Prisma.wp_nextend2_smartslider3_slidersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_nextend2_smartslider3_slidersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload>
          }
          update: {
            args: Prisma.wp_nextend2_smartslider3_slidersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload>
          }
          deleteMany: {
            args: Prisma.wp_nextend2_smartslider3_slidersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_nextend2_smartslider3_slidersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_nextend2_smartslider3_slidersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidersPayload>
          }
          aggregate: {
            args: Prisma.Wp_nextend2_smartslider3_slidersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_nextend2_smartslider3_sliders>
          }
          groupBy: {
            args: Prisma.wp_nextend2_smartslider3_slidersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_slidersGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_nextend2_smartslider3_slidersCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_slidersCountAggregateOutputType> | number
          }
        }
      }
      wp_nextend2_smartslider3_sliders_xref: {
        payload: Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>
        fields: Prisma.wp_nextend2_smartslider3_sliders_xrefFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>
          }
          findFirst: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>
          }
          findMany: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>[]
          }
          create: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>
          }
          createMany: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>
          }
          update: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>
          }
          deleteMany: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload>
          }
          aggregate: {
            args: Prisma.Wp_nextend2_smartslider3_sliders_xrefAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_nextend2_smartslider3_sliders_xref>
          }
          groupBy: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_sliders_xrefGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_nextend2_smartslider3_sliders_xrefCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_sliders_xrefCountAggregateOutputType> | number
          }
        }
      }
      wp_nextend2_smartslider3_slides: {
        payload: Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>
        fields: Prisma.wp_nextend2_smartslider3_slidesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_nextend2_smartslider3_slidesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_slidesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload>
          }
          findFirst: {
            args: Prisma.wp_nextend2_smartslider3_slidesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_nextend2_smartslider3_slidesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload>
          }
          findMany: {
            args: Prisma.wp_nextend2_smartslider3_slidesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload>[]
          }
          create: {
            args: Prisma.wp_nextend2_smartslider3_slidesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload>
          }
          createMany: {
            args: Prisma.wp_nextend2_smartslider3_slidesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_nextend2_smartslider3_slidesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload>
          }
          update: {
            args: Prisma.wp_nextend2_smartslider3_slidesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload>
          }
          deleteMany: {
            args: Prisma.wp_nextend2_smartslider3_slidesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_nextend2_smartslider3_slidesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_nextend2_smartslider3_slidesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_nextend2_smartslider3_slidesPayload>
          }
          aggregate: {
            args: Prisma.Wp_nextend2_smartslider3_slidesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_nextend2_smartslider3_slides>
          }
          groupBy: {
            args: Prisma.wp_nextend2_smartslider3_slidesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_slidesGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_nextend2_smartslider3_slidesCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_nextend2_smartslider3_slidesCountAggregateOutputType> | number
          }
        }
      }
      wp_options: {
        payload: Prisma.$wp_optionsPayload<ExtArgs>
        fields: Prisma.wp_optionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_optionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_optionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          findFirst: {
            args: Prisma.wp_optionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_optionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          findMany: {
            args: Prisma.wp_optionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>[]
          }
          create: {
            args: Prisma.wp_optionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          createMany: {
            args: Prisma.wp_optionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_optionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          update: {
            args: Prisma.wp_optionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          deleteMany: {
            args: Prisma.wp_optionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_optionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_optionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          aggregate: {
            args: Prisma.Wp_optionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_options>
          }
          groupBy: {
            args: Prisma.wp_optionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_optionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_optionsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_optionsCountAggregateOutputType> | number
          }
        }
      }
      wp_postmeta: {
        payload: Prisma.$wp_postmetaPayload<ExtArgs>
        fields: Prisma.wp_postmetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_postmetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_postmetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          findFirst: {
            args: Prisma.wp_postmetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_postmetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          findMany: {
            args: Prisma.wp_postmetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>[]
          }
          create: {
            args: Prisma.wp_postmetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          createMany: {
            args: Prisma.wp_postmetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_postmetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          update: {
            args: Prisma.wp_postmetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_postmetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_postmetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_postmetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_postmetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_postmeta>
          }
          groupBy: {
            args: Prisma.wp_postmetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_postmetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_postmetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_postmetaCountAggregateOutputType> | number
          }
        }
      }
      wp_posts: {
        payload: Prisma.$wp_postsPayload<ExtArgs>
        fields: Prisma.wp_postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          findFirst: {
            args: Prisma.wp_postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          findMany: {
            args: Prisma.wp_postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>[]
          }
          create: {
            args: Prisma.wp_postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          createMany: {
            args: Prisma.wp_postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          update: {
            args: Prisma.wp_postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          deleteMany: {
            args: Prisma.wp_postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          aggregate: {
            args: Prisma.Wp_postsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_posts>
          }
          groupBy: {
            args: Prisma.wp_postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_postsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_postsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_postsCountAggregateOutputType> | number
          }
        }
      }
      wp_term_relationships: {
        payload: Prisma.$wp_term_relationshipsPayload<ExtArgs>
        fields: Prisma.wp_term_relationshipsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_term_relationshipsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_term_relationshipsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          findFirst: {
            args: Prisma.wp_term_relationshipsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_term_relationshipsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          findMany: {
            args: Prisma.wp_term_relationshipsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>[]
          }
          create: {
            args: Prisma.wp_term_relationshipsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          createMany: {
            args: Prisma.wp_term_relationshipsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_term_relationshipsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          update: {
            args: Prisma.wp_term_relationshipsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          deleteMany: {
            args: Prisma.wp_term_relationshipsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_term_relationshipsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_term_relationshipsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          aggregate: {
            args: Prisma.Wp_term_relationshipsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_term_relationships>
          }
          groupBy: {
            args: Prisma.wp_term_relationshipsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_relationshipsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_term_relationshipsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_relationshipsCountAggregateOutputType> | number
          }
        }
      }
      wp_term_taxonomy: {
        payload: Prisma.$wp_term_taxonomyPayload<ExtArgs>
        fields: Prisma.wp_term_taxonomyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_term_taxonomyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_term_taxonomyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          findFirst: {
            args: Prisma.wp_term_taxonomyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_term_taxonomyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          findMany: {
            args: Prisma.wp_term_taxonomyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>[]
          }
          create: {
            args: Prisma.wp_term_taxonomyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          createMany: {
            args: Prisma.wp_term_taxonomyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_term_taxonomyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          update: {
            args: Prisma.wp_term_taxonomyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          deleteMany: {
            args: Prisma.wp_term_taxonomyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_term_taxonomyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_term_taxonomyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          aggregate: {
            args: Prisma.Wp_term_taxonomyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_term_taxonomy>
          }
          groupBy: {
            args: Prisma.wp_term_taxonomyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_taxonomyGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_term_taxonomyCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_taxonomyCountAggregateOutputType> | number
          }
        }
      }
      wp_termmeta: {
        payload: Prisma.$wp_termmetaPayload<ExtArgs>
        fields: Prisma.wp_termmetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_termmetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_termmetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          findFirst: {
            args: Prisma.wp_termmetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_termmetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          findMany: {
            args: Prisma.wp_termmetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>[]
          }
          create: {
            args: Prisma.wp_termmetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          createMany: {
            args: Prisma.wp_termmetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_termmetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          update: {
            args: Prisma.wp_termmetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_termmetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_termmetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_termmetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_termmetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_termmeta>
          }
          groupBy: {
            args: Prisma.wp_termmetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_termmetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_termmetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_termmetaCountAggregateOutputType> | number
          }
        }
      }
      wp_terms: {
        payload: Prisma.$wp_termsPayload<ExtArgs>
        fields: Prisma.wp_termsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_termsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_termsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          findFirst: {
            args: Prisma.wp_termsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_termsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          findMany: {
            args: Prisma.wp_termsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>[]
          }
          create: {
            args: Prisma.wp_termsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          createMany: {
            args: Prisma.wp_termsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_termsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          update: {
            args: Prisma.wp_termsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          deleteMany: {
            args: Prisma.wp_termsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_termsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_termsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          aggregate: {
            args: Prisma.Wp_termsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_terms>
          }
          groupBy: {
            args: Prisma.wp_termsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_termsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_termsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_termsCountAggregateOutputType> | number
          }
        }
      }
      wp_um_metadata: {
        payload: Prisma.$wp_um_metadataPayload<ExtArgs>
        fields: Prisma.wp_um_metadataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_um_metadataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_um_metadataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload>
          }
          findFirst: {
            args: Prisma.wp_um_metadataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_um_metadataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload>
          }
          findMany: {
            args: Prisma.wp_um_metadataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload>[]
          }
          create: {
            args: Prisma.wp_um_metadataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload>
          }
          createMany: {
            args: Prisma.wp_um_metadataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_um_metadataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload>
          }
          update: {
            args: Prisma.wp_um_metadataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload>
          }
          deleteMany: {
            args: Prisma.wp_um_metadataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_um_metadataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_um_metadataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_um_metadataPayload>
          }
          aggregate: {
            args: Prisma.Wp_um_metadataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_um_metadata>
          }
          groupBy: {
            args: Prisma.wp_um_metadataGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_um_metadataGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_um_metadataCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_um_metadataCountAggregateOutputType> | number
          }
        }
      }
      wp_user_registration_sessions: {
        payload: Prisma.$wp_user_registration_sessionsPayload<ExtArgs>
        fields: Prisma.wp_user_registration_sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_user_registration_sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_user_registration_sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload>
          }
          findFirst: {
            args: Prisma.wp_user_registration_sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_user_registration_sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload>
          }
          findMany: {
            args: Prisma.wp_user_registration_sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload>[]
          }
          create: {
            args: Prisma.wp_user_registration_sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload>
          }
          createMany: {
            args: Prisma.wp_user_registration_sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_user_registration_sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload>
          }
          update: {
            args: Prisma.wp_user_registration_sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload>
          }
          deleteMany: {
            args: Prisma.wp_user_registration_sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_user_registration_sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_user_registration_sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_user_registration_sessionsPayload>
          }
          aggregate: {
            args: Prisma.Wp_user_registration_sessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_user_registration_sessions>
          }
          groupBy: {
            args: Prisma.wp_user_registration_sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_user_registration_sessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_user_registration_sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_user_registration_sessionsCountAggregateOutputType> | number
          }
        }
      }
      wp_usermeta: {
        payload: Prisma.$wp_usermetaPayload<ExtArgs>
        fields: Prisma.wp_usermetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_usermetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_usermetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          findFirst: {
            args: Prisma.wp_usermetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_usermetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          findMany: {
            args: Prisma.wp_usermetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>[]
          }
          create: {
            args: Prisma.wp_usermetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          createMany: {
            args: Prisma.wp_usermetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_usermetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          update: {
            args: Prisma.wp_usermetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_usermetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_usermetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_usermetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_usermetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_usermeta>
          }
          groupBy: {
            args: Prisma.wp_usermetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_usermetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_usermetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_usermetaCountAggregateOutputType> | number
          }
        }
      }
      wp_users: {
        payload: Prisma.$wp_usersPayload<ExtArgs>
        fields: Prisma.wp_usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          findFirst: {
            args: Prisma.wp_usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          findMany: {
            args: Prisma.wp_usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>[]
          }
          create: {
            args: Prisma.wp_usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          createMany: {
            args: Prisma.wp_usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          update: {
            args: Prisma.wp_usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          deleteMany: {
            args: Prisma.wp_usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          aggregate: {
            args: Prisma.Wp_usersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_users>
          }
          groupBy: {
            args: Prisma.wp_usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_usersGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_usersCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_usersCountAggregateOutputType> | number
          }
        }
      }
      wp_wpdatacharts: {
        payload: Prisma.$wp_wpdatachartsPayload<ExtArgs>
        fields: Prisma.wp_wpdatachartsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpdatachartsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpdatachartsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload>
          }
          findFirst: {
            args: Prisma.wp_wpdatachartsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpdatachartsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload>
          }
          findMany: {
            args: Prisma.wp_wpdatachartsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload>[]
          }
          create: {
            args: Prisma.wp_wpdatachartsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload>
          }
          createMany: {
            args: Prisma.wp_wpdatachartsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpdatachartsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload>
          }
          update: {
            args: Prisma.wp_wpdatachartsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload>
          }
          deleteMany: {
            args: Prisma.wp_wpdatachartsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpdatachartsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpdatachartsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatachartsPayload>
          }
          aggregate: {
            args: Prisma.Wp_wpdatachartsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpdatacharts>
          }
          groupBy: {
            args: Prisma.wp_wpdatachartsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatachartsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpdatachartsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatachartsCountAggregateOutputType> | number
          }
        }
      }
      wp_wpdatatables: {
        payload: Prisma.$wp_wpdatatablesPayload<ExtArgs>
        fields: Prisma.wp_wpdatatablesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpdatatablesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpdatatablesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload>
          }
          findFirst: {
            args: Prisma.wp_wpdatatablesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpdatatablesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload>
          }
          findMany: {
            args: Prisma.wp_wpdatatablesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload>[]
          }
          create: {
            args: Prisma.wp_wpdatatablesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload>
          }
          createMany: {
            args: Prisma.wp_wpdatatablesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpdatatablesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload>
          }
          update: {
            args: Prisma.wp_wpdatatablesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload>
          }
          deleteMany: {
            args: Prisma.wp_wpdatatablesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpdatatablesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpdatatablesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatablesPayload>
          }
          aggregate: {
            args: Prisma.Wp_wpdatatablesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpdatatables>
          }
          groupBy: {
            args: Prisma.wp_wpdatatablesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatatablesGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpdatatablesCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatatablesCountAggregateOutputType> | number
          }
        }
      }
      wp_wpdatatables_columns: {
        payload: Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>
        fields: Prisma.wp_wpdatatables_columnsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpdatatables_columnsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpdatatables_columnsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload>
          }
          findFirst: {
            args: Prisma.wp_wpdatatables_columnsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpdatatables_columnsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload>
          }
          findMany: {
            args: Prisma.wp_wpdatatables_columnsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload>[]
          }
          create: {
            args: Prisma.wp_wpdatatables_columnsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload>
          }
          createMany: {
            args: Prisma.wp_wpdatatables_columnsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpdatatables_columnsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload>
          }
          update: {
            args: Prisma.wp_wpdatatables_columnsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload>
          }
          deleteMany: {
            args: Prisma.wp_wpdatatables_columnsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpdatatables_columnsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpdatatables_columnsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_columnsPayload>
          }
          aggregate: {
            args: Prisma.Wp_wpdatatables_columnsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpdatatables_columns>
          }
          groupBy: {
            args: Prisma.wp_wpdatatables_columnsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatatables_columnsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpdatatables_columnsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatatables_columnsCountAggregateOutputType> | number
          }
        }
      }
      wp_wpdatatables_rows: {
        payload: Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>
        fields: Prisma.wp_wpdatatables_rowsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpdatatables_rowsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpdatatables_rowsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload>
          }
          findFirst: {
            args: Prisma.wp_wpdatatables_rowsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpdatatables_rowsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload>
          }
          findMany: {
            args: Prisma.wp_wpdatatables_rowsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload>[]
          }
          create: {
            args: Prisma.wp_wpdatatables_rowsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload>
          }
          createMany: {
            args: Prisma.wp_wpdatatables_rowsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpdatatables_rowsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload>
          }
          update: {
            args: Prisma.wp_wpdatatables_rowsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload>
          }
          deleteMany: {
            args: Prisma.wp_wpdatatables_rowsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpdatatables_rowsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpdatatables_rowsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpdatatables_rowsPayload>
          }
          aggregate: {
            args: Prisma.Wp_wpdatatables_rowsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpdatatables_rows>
          }
          groupBy: {
            args: Prisma.wp_wpdatatables_rowsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatatables_rowsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpdatatables_rowsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpdatatables_rowsCountAggregateOutputType> | number
          }
        }
      }
      wp_wpforms_tasks_meta: {
        payload: Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>
        fields: Prisma.wp_wpforms_tasks_metaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpforms_tasks_metaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpforms_tasks_metaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload>
          }
          findFirst: {
            args: Prisma.wp_wpforms_tasks_metaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpforms_tasks_metaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload>
          }
          findMany: {
            args: Prisma.wp_wpforms_tasks_metaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload>[]
          }
          create: {
            args: Prisma.wp_wpforms_tasks_metaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload>
          }
          createMany: {
            args: Prisma.wp_wpforms_tasks_metaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpforms_tasks_metaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload>
          }
          update: {
            args: Prisma.wp_wpforms_tasks_metaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload>
          }
          deleteMany: {
            args: Prisma.wp_wpforms_tasks_metaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpforms_tasks_metaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpforms_tasks_metaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpforms_tasks_metaPayload>
          }
          aggregate: {
            args: Prisma.Wp_wpforms_tasks_metaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpforms_tasks_meta>
          }
          groupBy: {
            args: Prisma.wp_wpforms_tasks_metaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpforms_tasks_metaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpforms_tasks_metaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpforms_tasks_metaCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Ticket: {
        payload: Prisma.$TicketPayload<ExtArgs>
        fields: Prisma.TicketFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          findFirst: {
            args: Prisma.TicketFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          findMany: {
            args: Prisma.TicketFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>[]
          }
          create: {
            args: Prisma.TicketCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          createMany: {
            args: Prisma.TicketCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TicketDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          update: {
            args: Prisma.TicketUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          deleteMany: {
            args: Prisma.TicketDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TicketUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketPayload>
          }
          aggregate: {
            args: Prisma.TicketAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicket>
          }
          groupBy: {
            args: Prisma.TicketGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketCountArgs<ExtArgs>
            result: $Utils.Optional<TicketCountAggregateOutputType> | number
          }
        }
      }
      TicketDocument: {
        payload: Prisma.$TicketDocumentPayload<ExtArgs>
        fields: Prisma.TicketDocumentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketDocumentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketDocumentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload>
          }
          findFirst: {
            args: Prisma.TicketDocumentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketDocumentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload>
          }
          findMany: {
            args: Prisma.TicketDocumentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload>[]
          }
          create: {
            args: Prisma.TicketDocumentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload>
          }
          createMany: {
            args: Prisma.TicketDocumentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TicketDocumentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload>
          }
          update: {
            args: Prisma.TicketDocumentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload>
          }
          deleteMany: {
            args: Prisma.TicketDocumentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketDocumentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TicketDocumentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketDocumentPayload>
          }
          aggregate: {
            args: Prisma.TicketDocumentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicketDocument>
          }
          groupBy: {
            args: Prisma.TicketDocumentGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketDocumentGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketDocumentCountArgs<ExtArgs>
            result: $Utils.Optional<TicketDocumentCountAggregateOutputType> | number
          }
        }
      }
      TicketComment: {
        payload: Prisma.$TicketCommentPayload<ExtArgs>
        fields: Prisma.TicketCommentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TicketCommentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TicketCommentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload>
          }
          findFirst: {
            args: Prisma.TicketCommentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TicketCommentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload>
          }
          findMany: {
            args: Prisma.TicketCommentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload>[]
          }
          create: {
            args: Prisma.TicketCommentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload>
          }
          createMany: {
            args: Prisma.TicketCommentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TicketCommentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload>
          }
          update: {
            args: Prisma.TicketCommentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload>
          }
          deleteMany: {
            args: Prisma.TicketCommentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TicketCommentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TicketCommentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TicketCommentPayload>
          }
          aggregate: {
            args: Prisma.TicketCommentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTicketComment>
          }
          groupBy: {
            args: Prisma.TicketCommentGroupByArgs<ExtArgs>
            result: $Utils.Optional<TicketCommentGroupByOutputType>[]
          }
          count: {
            args: Prisma.TicketCommentCountArgs<ExtArgs>
            result: $Utils.Optional<TicketCommentCountAggregateOutputType> | number
          }
        }
      }
      UserSubscription: {
        payload: Prisma.$UserSubscriptionPayload<ExtArgs>
        fields: Prisma.UserSubscriptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSubscriptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSubscriptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload>
          }
          findFirst: {
            args: Prisma.UserSubscriptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSubscriptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload>
          }
          findMany: {
            args: Prisma.UserSubscriptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload>[]
          }
          create: {
            args: Prisma.UserSubscriptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload>
          }
          createMany: {
            args: Prisma.UserSubscriptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserSubscriptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload>
          }
          update: {
            args: Prisma.UserSubscriptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload>
          }
          deleteMany: {
            args: Prisma.UserSubscriptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSubscriptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSubscriptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSubscriptionPayload>
          }
          aggregate: {
            args: Prisma.UserSubscriptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSubscription>
          }
          groupBy: {
            args: Prisma.UserSubscriptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSubscriptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSubscriptionCountArgs<ExtArgs>
            result: $Utils.Optional<UserSubscriptionCountAggregateOutputType> | number
          }
        }
      }
      Portfolio: {
        payload: Prisma.$PortfolioPayload<ExtArgs>
        fields: Prisma.PortfolioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PortfolioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PortfolioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          findFirst: {
            args: Prisma.PortfolioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PortfolioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          findMany: {
            args: Prisma.PortfolioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>[]
          }
          create: {
            args: Prisma.PortfolioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          createMany: {
            args: Prisma.PortfolioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PortfolioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          update: {
            args: Prisma.PortfolioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          deleteMany: {
            args: Prisma.PortfolioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PortfolioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PortfolioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PortfolioPayload>
          }
          aggregate: {
            args: Prisma.PortfolioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePortfolio>
          }
          groupBy: {
            args: Prisma.PortfolioGroupByArgs<ExtArgs>
            result: $Utils.Optional<PortfolioGroupByOutputType>[]
          }
          count: {
            args: Prisma.PortfolioCountArgs<ExtArgs>
            result: $Utils.Optional<PortfolioCountAggregateOutputType> | number
          }
        }
      }
      sentenceallview: {
        payload: Prisma.$sentenceallviewPayload<ExtArgs>
        fields: Prisma.sentenceallviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sentenceallviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sentenceallviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload>
          }
          findFirst: {
            args: Prisma.sentenceallviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sentenceallviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload>
          }
          findMany: {
            args: Prisma.sentenceallviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload>[]
          }
          create: {
            args: Prisma.sentenceallviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload>
          }
          createMany: {
            args: Prisma.sentenceallviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sentenceallviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload>
          }
          update: {
            args: Prisma.sentenceallviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload>
          }
          deleteMany: {
            args: Prisma.sentenceallviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sentenceallviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sentenceallviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sentenceallviewPayload>
          }
          aggregate: {
            args: Prisma.SentenceallviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSentenceallview>
          }
          groupBy: {
            args: Prisma.sentenceallviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<SentenceallviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.sentenceallviewCountArgs<ExtArgs>
            result: $Utils.Optional<SentenceallviewCountAggregateOutputType> | number
          }
        }
      }
      Search: {
        payload: Prisma.$SearchPayload<ExtArgs>
        fields: Prisma.SearchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SearchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SearchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload>
          }
          findFirst: {
            args: Prisma.SearchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SearchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload>
          }
          findMany: {
            args: Prisma.SearchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload>[]
          }
          create: {
            args: Prisma.SearchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload>
          }
          createMany: {
            args: Prisma.SearchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SearchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload>
          }
          update: {
            args: Prisma.SearchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload>
          }
          deleteMany: {
            args: Prisma.SearchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SearchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SearchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SearchPayload>
          }
          aggregate: {
            args: Prisma.SearchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSearch>
          }
          groupBy: {
            args: Prisma.SearchGroupByArgs<ExtArgs>
            result: $Utils.Optional<SearchGroupByOutputType>[]
          }
          count: {
            args: Prisma.SearchCountArgs<ExtArgs>
            result: $Utils.Optional<SearchCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    uniqueFactorsTable?: UniqueFactorsTableOmit
    companyUniverse?: CompanyUniverseOmit
    companyData?: CompanyDataOmit
    companyData2?: CompanyData2Omit
    percentageTable?: PercentageTableOmit
    roadmapCarbon?: RoadmapCarbonOmit
    sentenceAll?: SentenceAllOmit
    targetSentence?: TargetSentenceOmit
    testable?: TestableOmit
    wp_actionscheduler_actions?: wp_actionscheduler_actionsOmit
    wp_actionscheduler_claims?: wp_actionscheduler_claimsOmit
    wp_actionscheduler_groups?: wp_actionscheduler_groupsOmit
    wp_actionscheduler_logs?: wp_actionscheduler_logsOmit
    wp_aioseo_notifications?: wp_aioseo_notificationsOmit
    wp_aioseo_posts?: wp_aioseo_postsOmit
    wp_commentmeta?: wp_commentmetaOmit
    wp_comments?: wp_commentsOmit
    wp_links?: wp_linksOmit
    wp_nextend2_image_storage?: wp_nextend2_image_storageOmit
    wp_nextend2_section_storage?: wp_nextend2_section_storageOmit
    wp_nextend2_smartslider3_generators?: wp_nextend2_smartslider3_generatorsOmit
    wp_nextend2_smartslider3_sliders?: wp_nextend2_smartslider3_slidersOmit
    wp_nextend2_smartslider3_sliders_xref?: wp_nextend2_smartslider3_sliders_xrefOmit
    wp_nextend2_smartslider3_slides?: wp_nextend2_smartslider3_slidesOmit
    wp_options?: wp_optionsOmit
    wp_postmeta?: wp_postmetaOmit
    wp_posts?: wp_postsOmit
    wp_term_relationships?: wp_term_relationshipsOmit
    wp_term_taxonomy?: wp_term_taxonomyOmit
    wp_termmeta?: wp_termmetaOmit
    wp_terms?: wp_termsOmit
    wp_um_metadata?: wp_um_metadataOmit
    wp_user_registration_sessions?: wp_user_registration_sessionsOmit
    wp_usermeta?: wp_usermetaOmit
    wp_users?: wp_usersOmit
    wp_wpdatacharts?: wp_wpdatachartsOmit
    wp_wpdatatables?: wp_wpdatatablesOmit
    wp_wpdatatables_columns?: wp_wpdatatables_columnsOmit
    wp_wpdatatables_rows?: wp_wpdatatables_rowsOmit
    wp_wpforms_tasks_meta?: wp_wpforms_tasks_metaOmit
    user?: UserOmit
    ticket?: TicketOmit
    ticketDocument?: TicketDocumentOmit
    ticketComment?: TicketCommentOmit
    userSubscription?: UserSubscriptionOmit
    portfolio?: PortfolioOmit
    sentenceallview?: sentenceallviewOmit
    search?: SearchOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    Portfolio: number
    ticketComments: number
    tickets: number
    UserSubscription: number
    search: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Portfolio?: boolean | UserCountOutputTypeCountPortfolioArgs
    ticketComments?: boolean | UserCountOutputTypeCountTicketCommentsArgs
    tickets?: boolean | UserCountOutputTypeCountTicketsArgs
    UserSubscription?: boolean | UserCountOutputTypeCountUserSubscriptionArgs
    search?: boolean | UserCountOutputTypeCountSearchArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPortfolioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PortfolioWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTicketCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketCommentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTicketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserSubscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSubscriptionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSearchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SearchWhereInput
  }


  /**
   * Count Type TicketCountOutputType
   */

  export type TicketCountOutputType = {
    comments: number
    documents: number
  }

  export type TicketCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | TicketCountOutputTypeCountCommentsArgs
    documents?: boolean | TicketCountOutputTypeCountDocumentsArgs
  }

  // Custom InputTypes
  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketCountOutputType
     */
    select?: TicketCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketCommentWhereInput
  }

  /**
   * TicketCountOutputType without action
   */
  export type TicketCountOutputTypeCountDocumentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketDocumentWhereInput
  }


  /**
   * Models
   */

  /**
   * Model UniqueFactorsTable
   */

  export type AggregateUniqueFactorsTable = {
    _count: UniqueFactorsTableCountAggregateOutputType | null
    _avg: UniqueFactorsTableAvgAggregateOutputType | null
    _sum: UniqueFactorsTableSumAggregateOutputType | null
    _min: UniqueFactorsTableMinAggregateOutputType | null
    _max: UniqueFactorsTableMaxAggregateOutputType | null
  }

  export type UniqueFactorsTableAvgAggregateOutputType = {
    id: number | null
  }

  export type UniqueFactorsTableSumAggregateOutputType = {
    id: number | null
  }

  export type UniqueFactorsTableMinAggregateOutputType = {
    KPI_Report_Date: Date | null
    Company__NON_NULL_Total_: string | null
    Company__NON_NULL_Unique_: string | null
    Member_of_the_S_P500__YES_Total_: string | null
    Member_of_the_Russell_1000_Index__YES_Total_: string | null
    Ticker_s___NON_NULL_Total_: string | null
    Ticker_s___NON_NULL_Unique_: string | null
    Country__NON_NULL_Total_: string | null
    Country__NON_NULL_Unique_: string | null
    sector_code__1__NAICS___NON_NULL_Unique_: string | null
    sector_code__2__NAICS___NON_NULL_Unique_: string | null
    sector_code__3__NAICS___NON_NULL_Unique_: string | null
    sector_code__4__NAICS___NON_NULL_Unique_: string | null
    sector_code__5__NAICS___NON_NULL_Unique_: string | null
    sector_codes_all__NAICS___NON_NULL_Unique_: string | null
    ArticleTargetYear__NON_NULL_Unique_: string | null
    Source_Date__NON_NULL_Unique_: string | null
    PressReleaseYear__NON_NULL_Unique_: string | null
    Target_sentence__NON_NULL_Total_: string | null
    Target_sentence__NON_NULL_Unique_: string | null
    Targetyear_s___NON_NULL_Unique_: string | null
    sentence_carbon__1_Total_: string | null
    sentence_gender__1_Total_: string | null
    sentence_renewables__1_Total_: string | null
    sentence_suppliers__1_Total_: string | null
    sentence_water__1_Total_: string | null
    sentence_waste__1_Total_: string | null
    sentence_other__1_Total_: string | null
    id: number | null
  }

  export type UniqueFactorsTableMaxAggregateOutputType = {
    KPI_Report_Date: Date | null
    Company__NON_NULL_Total_: string | null
    Company__NON_NULL_Unique_: string | null
    Member_of_the_S_P500__YES_Total_: string | null
    Member_of_the_Russell_1000_Index__YES_Total_: string | null
    Ticker_s___NON_NULL_Total_: string | null
    Ticker_s___NON_NULL_Unique_: string | null
    Country__NON_NULL_Total_: string | null
    Country__NON_NULL_Unique_: string | null
    sector_code__1__NAICS___NON_NULL_Unique_: string | null
    sector_code__2__NAICS___NON_NULL_Unique_: string | null
    sector_code__3__NAICS___NON_NULL_Unique_: string | null
    sector_code__4__NAICS___NON_NULL_Unique_: string | null
    sector_code__5__NAICS___NON_NULL_Unique_: string | null
    sector_codes_all__NAICS___NON_NULL_Unique_: string | null
    ArticleTargetYear__NON_NULL_Unique_: string | null
    Source_Date__NON_NULL_Unique_: string | null
    PressReleaseYear__NON_NULL_Unique_: string | null
    Target_sentence__NON_NULL_Total_: string | null
    Target_sentence__NON_NULL_Unique_: string | null
    Targetyear_s___NON_NULL_Unique_: string | null
    sentence_carbon__1_Total_: string | null
    sentence_gender__1_Total_: string | null
    sentence_renewables__1_Total_: string | null
    sentence_suppliers__1_Total_: string | null
    sentence_water__1_Total_: string | null
    sentence_waste__1_Total_: string | null
    sentence_other__1_Total_: string | null
    id: number | null
  }

  export type UniqueFactorsTableCountAggregateOutputType = {
    KPI_Report_Date: number
    Company__NON_NULL_Total_: number
    Company__NON_NULL_Unique_: number
    Member_of_the_S_P500__YES_Total_: number
    Member_of_the_Russell_1000_Index__YES_Total_: number
    Ticker_s___NON_NULL_Total_: number
    Ticker_s___NON_NULL_Unique_: number
    Country__NON_NULL_Total_: number
    Country__NON_NULL_Unique_: number
    sector_code__1__NAICS___NON_NULL_Unique_: number
    sector_code__2__NAICS___NON_NULL_Unique_: number
    sector_code__3__NAICS___NON_NULL_Unique_: number
    sector_code__4__NAICS___NON_NULL_Unique_: number
    sector_code__5__NAICS___NON_NULL_Unique_: number
    sector_codes_all__NAICS___NON_NULL_Unique_: number
    ArticleTargetYear__NON_NULL_Unique_: number
    Source_Date__NON_NULL_Unique_: number
    PressReleaseYear__NON_NULL_Unique_: number
    Target_sentence__NON_NULL_Total_: number
    Target_sentence__NON_NULL_Unique_: number
    Targetyear_s___NON_NULL_Unique_: number
    sentence_carbon__1_Total_: number
    sentence_gender__1_Total_: number
    sentence_renewables__1_Total_: number
    sentence_suppliers__1_Total_: number
    sentence_water__1_Total_: number
    sentence_waste__1_Total_: number
    sentence_other__1_Total_: number
    id: number
    _all: number
  }


  export type UniqueFactorsTableAvgAggregateInputType = {
    id?: true
  }

  export type UniqueFactorsTableSumAggregateInputType = {
    id?: true
  }

  export type UniqueFactorsTableMinAggregateInputType = {
    KPI_Report_Date?: true
    Company__NON_NULL_Total_?: true
    Company__NON_NULL_Unique_?: true
    Member_of_the_S_P500__YES_Total_?: true
    Member_of_the_Russell_1000_Index__YES_Total_?: true
    Ticker_s___NON_NULL_Total_?: true
    Ticker_s___NON_NULL_Unique_?: true
    Country__NON_NULL_Total_?: true
    Country__NON_NULL_Unique_?: true
    sector_code__1__NAICS___NON_NULL_Unique_?: true
    sector_code__2__NAICS___NON_NULL_Unique_?: true
    sector_code__3__NAICS___NON_NULL_Unique_?: true
    sector_code__4__NAICS___NON_NULL_Unique_?: true
    sector_code__5__NAICS___NON_NULL_Unique_?: true
    sector_codes_all__NAICS___NON_NULL_Unique_?: true
    ArticleTargetYear__NON_NULL_Unique_?: true
    Source_Date__NON_NULL_Unique_?: true
    PressReleaseYear__NON_NULL_Unique_?: true
    Target_sentence__NON_NULL_Total_?: true
    Target_sentence__NON_NULL_Unique_?: true
    Targetyear_s___NON_NULL_Unique_?: true
    sentence_carbon__1_Total_?: true
    sentence_gender__1_Total_?: true
    sentence_renewables__1_Total_?: true
    sentence_suppliers__1_Total_?: true
    sentence_water__1_Total_?: true
    sentence_waste__1_Total_?: true
    sentence_other__1_Total_?: true
    id?: true
  }

  export type UniqueFactorsTableMaxAggregateInputType = {
    KPI_Report_Date?: true
    Company__NON_NULL_Total_?: true
    Company__NON_NULL_Unique_?: true
    Member_of_the_S_P500__YES_Total_?: true
    Member_of_the_Russell_1000_Index__YES_Total_?: true
    Ticker_s___NON_NULL_Total_?: true
    Ticker_s___NON_NULL_Unique_?: true
    Country__NON_NULL_Total_?: true
    Country__NON_NULL_Unique_?: true
    sector_code__1__NAICS___NON_NULL_Unique_?: true
    sector_code__2__NAICS___NON_NULL_Unique_?: true
    sector_code__3__NAICS___NON_NULL_Unique_?: true
    sector_code__4__NAICS___NON_NULL_Unique_?: true
    sector_code__5__NAICS___NON_NULL_Unique_?: true
    sector_codes_all__NAICS___NON_NULL_Unique_?: true
    ArticleTargetYear__NON_NULL_Unique_?: true
    Source_Date__NON_NULL_Unique_?: true
    PressReleaseYear__NON_NULL_Unique_?: true
    Target_sentence__NON_NULL_Total_?: true
    Target_sentence__NON_NULL_Unique_?: true
    Targetyear_s___NON_NULL_Unique_?: true
    sentence_carbon__1_Total_?: true
    sentence_gender__1_Total_?: true
    sentence_renewables__1_Total_?: true
    sentence_suppliers__1_Total_?: true
    sentence_water__1_Total_?: true
    sentence_waste__1_Total_?: true
    sentence_other__1_Total_?: true
    id?: true
  }

  export type UniqueFactorsTableCountAggregateInputType = {
    KPI_Report_Date?: true
    Company__NON_NULL_Total_?: true
    Company__NON_NULL_Unique_?: true
    Member_of_the_S_P500__YES_Total_?: true
    Member_of_the_Russell_1000_Index__YES_Total_?: true
    Ticker_s___NON_NULL_Total_?: true
    Ticker_s___NON_NULL_Unique_?: true
    Country__NON_NULL_Total_?: true
    Country__NON_NULL_Unique_?: true
    sector_code__1__NAICS___NON_NULL_Unique_?: true
    sector_code__2__NAICS___NON_NULL_Unique_?: true
    sector_code__3__NAICS___NON_NULL_Unique_?: true
    sector_code__4__NAICS___NON_NULL_Unique_?: true
    sector_code__5__NAICS___NON_NULL_Unique_?: true
    sector_codes_all__NAICS___NON_NULL_Unique_?: true
    ArticleTargetYear__NON_NULL_Unique_?: true
    Source_Date__NON_NULL_Unique_?: true
    PressReleaseYear__NON_NULL_Unique_?: true
    Target_sentence__NON_NULL_Total_?: true
    Target_sentence__NON_NULL_Unique_?: true
    Targetyear_s___NON_NULL_Unique_?: true
    sentence_carbon__1_Total_?: true
    sentence_gender__1_Total_?: true
    sentence_renewables__1_Total_?: true
    sentence_suppliers__1_Total_?: true
    sentence_water__1_Total_?: true
    sentence_waste__1_Total_?: true
    sentence_other__1_Total_?: true
    id?: true
    _all?: true
  }

  export type UniqueFactorsTableAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniqueFactorsTable to aggregate.
     */
    where?: UniqueFactorsTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniqueFactorsTables to fetch.
     */
    orderBy?: UniqueFactorsTableOrderByWithRelationInput | UniqueFactorsTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UniqueFactorsTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniqueFactorsTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniqueFactorsTables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UniqueFactorsTables
    **/
    _count?: true | UniqueFactorsTableCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UniqueFactorsTableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UniqueFactorsTableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UniqueFactorsTableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UniqueFactorsTableMaxAggregateInputType
  }

  export type GetUniqueFactorsTableAggregateType<T extends UniqueFactorsTableAggregateArgs> = {
        [P in keyof T & keyof AggregateUniqueFactorsTable]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUniqueFactorsTable[P]>
      : GetScalarType<T[P], AggregateUniqueFactorsTable[P]>
  }




  export type UniqueFactorsTableGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UniqueFactorsTableWhereInput
    orderBy?: UniqueFactorsTableOrderByWithAggregationInput | UniqueFactorsTableOrderByWithAggregationInput[]
    by: UniqueFactorsTableScalarFieldEnum[] | UniqueFactorsTableScalarFieldEnum
    having?: UniqueFactorsTableScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UniqueFactorsTableCountAggregateInputType | true
    _avg?: UniqueFactorsTableAvgAggregateInputType
    _sum?: UniqueFactorsTableSumAggregateInputType
    _min?: UniqueFactorsTableMinAggregateInputType
    _max?: UniqueFactorsTableMaxAggregateInputType
  }

  export type UniqueFactorsTableGroupByOutputType = {
    KPI_Report_Date: Date
    Company__NON_NULL_Total_: string | null
    Company__NON_NULL_Unique_: string | null
    Member_of_the_S_P500__YES_Total_: string | null
    Member_of_the_Russell_1000_Index__YES_Total_: string | null
    Ticker_s___NON_NULL_Total_: string | null
    Ticker_s___NON_NULL_Unique_: string | null
    Country__NON_NULL_Total_: string | null
    Country__NON_NULL_Unique_: string | null
    sector_code__1__NAICS___NON_NULL_Unique_: string | null
    sector_code__2__NAICS___NON_NULL_Unique_: string | null
    sector_code__3__NAICS___NON_NULL_Unique_: string | null
    sector_code__4__NAICS___NON_NULL_Unique_: string | null
    sector_code__5__NAICS___NON_NULL_Unique_: string | null
    sector_codes_all__NAICS___NON_NULL_Unique_: string | null
    ArticleTargetYear__NON_NULL_Unique_: string | null
    Source_Date__NON_NULL_Unique_: string | null
    PressReleaseYear__NON_NULL_Unique_: string | null
    Target_sentence__NON_NULL_Total_: string | null
    Target_sentence__NON_NULL_Unique_: string | null
    Targetyear_s___NON_NULL_Unique_: string | null
    sentence_carbon__1_Total_: string | null
    sentence_gender__1_Total_: string | null
    sentence_renewables__1_Total_: string | null
    sentence_suppliers__1_Total_: string | null
    sentence_water__1_Total_: string | null
    sentence_waste__1_Total_: string | null
    sentence_other__1_Total_: string | null
    id: number
    _count: UniqueFactorsTableCountAggregateOutputType | null
    _avg: UniqueFactorsTableAvgAggregateOutputType | null
    _sum: UniqueFactorsTableSumAggregateOutputType | null
    _min: UniqueFactorsTableMinAggregateOutputType | null
    _max: UniqueFactorsTableMaxAggregateOutputType | null
  }

  type GetUniqueFactorsTableGroupByPayload<T extends UniqueFactorsTableGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UniqueFactorsTableGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UniqueFactorsTableGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UniqueFactorsTableGroupByOutputType[P]>
            : GetScalarType<T[P], UniqueFactorsTableGroupByOutputType[P]>
        }
      >
    >


  export type UniqueFactorsTableSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KPI_Report_Date?: boolean
    Company__NON_NULL_Total_?: boolean
    Company__NON_NULL_Unique_?: boolean
    Member_of_the_S_P500__YES_Total_?: boolean
    Member_of_the_Russell_1000_Index__YES_Total_?: boolean
    Ticker_s___NON_NULL_Total_?: boolean
    Ticker_s___NON_NULL_Unique_?: boolean
    Country__NON_NULL_Total_?: boolean
    Country__NON_NULL_Unique_?: boolean
    sector_code__1__NAICS___NON_NULL_Unique_?: boolean
    sector_code__2__NAICS___NON_NULL_Unique_?: boolean
    sector_code__3__NAICS___NON_NULL_Unique_?: boolean
    sector_code__4__NAICS___NON_NULL_Unique_?: boolean
    sector_code__5__NAICS___NON_NULL_Unique_?: boolean
    sector_codes_all__NAICS___NON_NULL_Unique_?: boolean
    ArticleTargetYear__NON_NULL_Unique_?: boolean
    Source_Date__NON_NULL_Unique_?: boolean
    PressReleaseYear__NON_NULL_Unique_?: boolean
    Target_sentence__NON_NULL_Total_?: boolean
    Target_sentence__NON_NULL_Unique_?: boolean
    Targetyear_s___NON_NULL_Unique_?: boolean
    sentence_carbon__1_Total_?: boolean
    sentence_gender__1_Total_?: boolean
    sentence_renewables__1_Total_?: boolean
    sentence_suppliers__1_Total_?: boolean
    sentence_water__1_Total_?: boolean
    sentence_waste__1_Total_?: boolean
    sentence_other__1_Total_?: boolean
    id?: boolean
  }, ExtArgs["result"]["uniqueFactorsTable"]>



  export type UniqueFactorsTableSelectScalar = {
    KPI_Report_Date?: boolean
    Company__NON_NULL_Total_?: boolean
    Company__NON_NULL_Unique_?: boolean
    Member_of_the_S_P500__YES_Total_?: boolean
    Member_of_the_Russell_1000_Index__YES_Total_?: boolean
    Ticker_s___NON_NULL_Total_?: boolean
    Ticker_s___NON_NULL_Unique_?: boolean
    Country__NON_NULL_Total_?: boolean
    Country__NON_NULL_Unique_?: boolean
    sector_code__1__NAICS___NON_NULL_Unique_?: boolean
    sector_code__2__NAICS___NON_NULL_Unique_?: boolean
    sector_code__3__NAICS___NON_NULL_Unique_?: boolean
    sector_code__4__NAICS___NON_NULL_Unique_?: boolean
    sector_code__5__NAICS___NON_NULL_Unique_?: boolean
    sector_codes_all__NAICS___NON_NULL_Unique_?: boolean
    ArticleTargetYear__NON_NULL_Unique_?: boolean
    Source_Date__NON_NULL_Unique_?: boolean
    PressReleaseYear__NON_NULL_Unique_?: boolean
    Target_sentence__NON_NULL_Total_?: boolean
    Target_sentence__NON_NULL_Unique_?: boolean
    Targetyear_s___NON_NULL_Unique_?: boolean
    sentence_carbon__1_Total_?: boolean
    sentence_gender__1_Total_?: boolean
    sentence_renewables__1_Total_?: boolean
    sentence_suppliers__1_Total_?: boolean
    sentence_water__1_Total_?: boolean
    sentence_waste__1_Total_?: boolean
    sentence_other__1_Total_?: boolean
    id?: boolean
  }

  export type UniqueFactorsTableOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"KPI_Report_Date" | "Company__NON_NULL_Total_" | "Company__NON_NULL_Unique_" | "Member_of_the_S_P500__YES_Total_" | "Member_of_the_Russell_1000_Index__YES_Total_" | "Ticker_s___NON_NULL_Total_" | "Ticker_s___NON_NULL_Unique_" | "Country__NON_NULL_Total_" | "Country__NON_NULL_Unique_" | "sector_code__1__NAICS___NON_NULL_Unique_" | "sector_code__2__NAICS___NON_NULL_Unique_" | "sector_code__3__NAICS___NON_NULL_Unique_" | "sector_code__4__NAICS___NON_NULL_Unique_" | "sector_code__5__NAICS___NON_NULL_Unique_" | "sector_codes_all__NAICS___NON_NULL_Unique_" | "ArticleTargetYear__NON_NULL_Unique_" | "Source_Date__NON_NULL_Unique_" | "PressReleaseYear__NON_NULL_Unique_" | "Target_sentence__NON_NULL_Total_" | "Target_sentence__NON_NULL_Unique_" | "Targetyear_s___NON_NULL_Unique_" | "sentence_carbon__1_Total_" | "sentence_gender__1_Total_" | "sentence_renewables__1_Total_" | "sentence_suppliers__1_Total_" | "sentence_water__1_Total_" | "sentence_waste__1_Total_" | "sentence_other__1_Total_" | "id", ExtArgs["result"]["uniqueFactorsTable"]>

  export type $UniqueFactorsTablePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UniqueFactorsTable"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      KPI_Report_Date: Date
      Company__NON_NULL_Total_: string | null
      Company__NON_NULL_Unique_: string | null
      Member_of_the_S_P500__YES_Total_: string | null
      Member_of_the_Russell_1000_Index__YES_Total_: string | null
      Ticker_s___NON_NULL_Total_: string | null
      Ticker_s___NON_NULL_Unique_: string | null
      Country__NON_NULL_Total_: string | null
      Country__NON_NULL_Unique_: string | null
      sector_code__1__NAICS___NON_NULL_Unique_: string | null
      sector_code__2__NAICS___NON_NULL_Unique_: string | null
      sector_code__3__NAICS___NON_NULL_Unique_: string | null
      sector_code__4__NAICS___NON_NULL_Unique_: string | null
      sector_code__5__NAICS___NON_NULL_Unique_: string | null
      sector_codes_all__NAICS___NON_NULL_Unique_: string | null
      ArticleTargetYear__NON_NULL_Unique_: string | null
      Source_Date__NON_NULL_Unique_: string | null
      PressReleaseYear__NON_NULL_Unique_: string | null
      Target_sentence__NON_NULL_Total_: string | null
      Target_sentence__NON_NULL_Unique_: string | null
      Targetyear_s___NON_NULL_Unique_: string | null
      sentence_carbon__1_Total_: string | null
      sentence_gender__1_Total_: string | null
      sentence_renewables__1_Total_: string | null
      sentence_suppliers__1_Total_: string | null
      sentence_water__1_Total_: string | null
      sentence_waste__1_Total_: string | null
      sentence_other__1_Total_: string | null
      id: number
    }, ExtArgs["result"]["uniqueFactorsTable"]>
    composites: {}
  }

  type UniqueFactorsTableGetPayload<S extends boolean | null | undefined | UniqueFactorsTableDefaultArgs> = $Result.GetResult<Prisma.$UniqueFactorsTablePayload, S>

  type UniqueFactorsTableCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UniqueFactorsTableFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UniqueFactorsTableCountAggregateInputType | true
    }

  export interface UniqueFactorsTableDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UniqueFactorsTable'], meta: { name: 'UniqueFactorsTable' } }
    /**
     * Find zero or one UniqueFactorsTable that matches the filter.
     * @param {UniqueFactorsTableFindUniqueArgs} args - Arguments to find a UniqueFactorsTable
     * @example
     * // Get one UniqueFactorsTable
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UniqueFactorsTableFindUniqueArgs>(args: SelectSubset<T, UniqueFactorsTableFindUniqueArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UniqueFactorsTable that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UniqueFactorsTableFindUniqueOrThrowArgs} args - Arguments to find a UniqueFactorsTable
     * @example
     * // Get one UniqueFactorsTable
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UniqueFactorsTableFindUniqueOrThrowArgs>(args: SelectSubset<T, UniqueFactorsTableFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniqueFactorsTable that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniqueFactorsTableFindFirstArgs} args - Arguments to find a UniqueFactorsTable
     * @example
     * // Get one UniqueFactorsTable
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UniqueFactorsTableFindFirstArgs>(args?: SelectSubset<T, UniqueFactorsTableFindFirstArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UniqueFactorsTable that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniqueFactorsTableFindFirstOrThrowArgs} args - Arguments to find a UniqueFactorsTable
     * @example
     * // Get one UniqueFactorsTable
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UniqueFactorsTableFindFirstOrThrowArgs>(args?: SelectSubset<T, UniqueFactorsTableFindFirstOrThrowArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UniqueFactorsTables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniqueFactorsTableFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UniqueFactorsTables
     * const uniqueFactorsTables = await prisma.uniqueFactorsTable.findMany()
     * 
     * // Get first 10 UniqueFactorsTables
     * const uniqueFactorsTables = await prisma.uniqueFactorsTable.findMany({ take: 10 })
     * 
     * // Only select the `KPI_Report_Date`
     * const uniqueFactorsTableWithKPI_Report_DateOnly = await prisma.uniqueFactorsTable.findMany({ select: { KPI_Report_Date: true } })
     * 
     */
    findMany<T extends UniqueFactorsTableFindManyArgs>(args?: SelectSubset<T, UniqueFactorsTableFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UniqueFactorsTable.
     * @param {UniqueFactorsTableCreateArgs} args - Arguments to create a UniqueFactorsTable.
     * @example
     * // Create one UniqueFactorsTable
     * const UniqueFactorsTable = await prisma.uniqueFactorsTable.create({
     *   data: {
     *     // ... data to create a UniqueFactorsTable
     *   }
     * })
     * 
     */
    create<T extends UniqueFactorsTableCreateArgs>(args: SelectSubset<T, UniqueFactorsTableCreateArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UniqueFactorsTables.
     * @param {UniqueFactorsTableCreateManyArgs} args - Arguments to create many UniqueFactorsTables.
     * @example
     * // Create many UniqueFactorsTables
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UniqueFactorsTableCreateManyArgs>(args?: SelectSubset<T, UniqueFactorsTableCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UniqueFactorsTable.
     * @param {UniqueFactorsTableDeleteArgs} args - Arguments to delete one UniqueFactorsTable.
     * @example
     * // Delete one UniqueFactorsTable
     * const UniqueFactorsTable = await prisma.uniqueFactorsTable.delete({
     *   where: {
     *     // ... filter to delete one UniqueFactorsTable
     *   }
     * })
     * 
     */
    delete<T extends UniqueFactorsTableDeleteArgs>(args: SelectSubset<T, UniqueFactorsTableDeleteArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UniqueFactorsTable.
     * @param {UniqueFactorsTableUpdateArgs} args - Arguments to update one UniqueFactorsTable.
     * @example
     * // Update one UniqueFactorsTable
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UniqueFactorsTableUpdateArgs>(args: SelectSubset<T, UniqueFactorsTableUpdateArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UniqueFactorsTables.
     * @param {UniqueFactorsTableDeleteManyArgs} args - Arguments to filter UniqueFactorsTables to delete.
     * @example
     * // Delete a few UniqueFactorsTables
     * const { count } = await prisma.uniqueFactorsTable.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UniqueFactorsTableDeleteManyArgs>(args?: SelectSubset<T, UniqueFactorsTableDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UniqueFactorsTables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniqueFactorsTableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UniqueFactorsTables
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UniqueFactorsTableUpdateManyArgs>(args: SelectSubset<T, UniqueFactorsTableUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UniqueFactorsTable.
     * @param {UniqueFactorsTableUpsertArgs} args - Arguments to update or create a UniqueFactorsTable.
     * @example
     * // Update or create a UniqueFactorsTable
     * const uniqueFactorsTable = await prisma.uniqueFactorsTable.upsert({
     *   create: {
     *     // ... data to create a UniqueFactorsTable
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UniqueFactorsTable we want to update
     *   }
     * })
     */
    upsert<T extends UniqueFactorsTableUpsertArgs>(args: SelectSubset<T, UniqueFactorsTableUpsertArgs<ExtArgs>>): Prisma__UniqueFactorsTableClient<$Result.GetResult<Prisma.$UniqueFactorsTablePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UniqueFactorsTables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniqueFactorsTableCountArgs} args - Arguments to filter UniqueFactorsTables to count.
     * @example
     * // Count the number of UniqueFactorsTables
     * const count = await prisma.uniqueFactorsTable.count({
     *   where: {
     *     // ... the filter for the UniqueFactorsTables we want to count
     *   }
     * })
    **/
    count<T extends UniqueFactorsTableCountArgs>(
      args?: Subset<T, UniqueFactorsTableCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UniqueFactorsTableCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UniqueFactorsTable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniqueFactorsTableAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UniqueFactorsTableAggregateArgs>(args: Subset<T, UniqueFactorsTableAggregateArgs>): Prisma.PrismaPromise<GetUniqueFactorsTableAggregateType<T>>

    /**
     * Group by UniqueFactorsTable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UniqueFactorsTableGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UniqueFactorsTableGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UniqueFactorsTableGroupByArgs['orderBy'] }
        : { orderBy?: UniqueFactorsTableGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UniqueFactorsTableGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUniqueFactorsTableGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UniqueFactorsTable model
   */
  readonly fields: UniqueFactorsTableFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UniqueFactorsTable.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UniqueFactorsTableClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UniqueFactorsTable model
   */
  interface UniqueFactorsTableFieldRefs {
    readonly KPI_Report_Date: FieldRef<"UniqueFactorsTable", 'DateTime'>
    readonly Company__NON_NULL_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Company__NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Member_of_the_S_P500__YES_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Member_of_the_Russell_1000_Index__YES_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Ticker_s___NON_NULL_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Ticker_s___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Country__NON_NULL_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Country__NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sector_code__1__NAICS___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sector_code__2__NAICS___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sector_code__3__NAICS___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sector_code__4__NAICS___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sector_code__5__NAICS___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sector_codes_all__NAICS___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly ArticleTargetYear__NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Source_Date__NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly PressReleaseYear__NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Target_sentence__NON_NULL_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Target_sentence__NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly Targetyear_s___NON_NULL_Unique_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sentence_carbon__1_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sentence_gender__1_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sentence_renewables__1_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sentence_suppliers__1_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sentence_water__1_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sentence_waste__1_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly sentence_other__1_Total_: FieldRef<"UniqueFactorsTable", 'String'>
    readonly id: FieldRef<"UniqueFactorsTable", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * UniqueFactorsTable findUnique
   */
  export type UniqueFactorsTableFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * Filter, which UniqueFactorsTable to fetch.
     */
    where: UniqueFactorsTableWhereUniqueInput
  }

  /**
   * UniqueFactorsTable findUniqueOrThrow
   */
  export type UniqueFactorsTableFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * Filter, which UniqueFactorsTable to fetch.
     */
    where: UniqueFactorsTableWhereUniqueInput
  }

  /**
   * UniqueFactorsTable findFirst
   */
  export type UniqueFactorsTableFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * Filter, which UniqueFactorsTable to fetch.
     */
    where?: UniqueFactorsTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniqueFactorsTables to fetch.
     */
    orderBy?: UniqueFactorsTableOrderByWithRelationInput | UniqueFactorsTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniqueFactorsTables.
     */
    cursor?: UniqueFactorsTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniqueFactorsTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniqueFactorsTables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniqueFactorsTables.
     */
    distinct?: UniqueFactorsTableScalarFieldEnum | UniqueFactorsTableScalarFieldEnum[]
  }

  /**
   * UniqueFactorsTable findFirstOrThrow
   */
  export type UniqueFactorsTableFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * Filter, which UniqueFactorsTable to fetch.
     */
    where?: UniqueFactorsTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniqueFactorsTables to fetch.
     */
    orderBy?: UniqueFactorsTableOrderByWithRelationInput | UniqueFactorsTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UniqueFactorsTables.
     */
    cursor?: UniqueFactorsTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniqueFactorsTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniqueFactorsTables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UniqueFactorsTables.
     */
    distinct?: UniqueFactorsTableScalarFieldEnum | UniqueFactorsTableScalarFieldEnum[]
  }

  /**
   * UniqueFactorsTable findMany
   */
  export type UniqueFactorsTableFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * Filter, which UniqueFactorsTables to fetch.
     */
    where?: UniqueFactorsTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UniqueFactorsTables to fetch.
     */
    orderBy?: UniqueFactorsTableOrderByWithRelationInput | UniqueFactorsTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UniqueFactorsTables.
     */
    cursor?: UniqueFactorsTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UniqueFactorsTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UniqueFactorsTables.
     */
    skip?: number
    distinct?: UniqueFactorsTableScalarFieldEnum | UniqueFactorsTableScalarFieldEnum[]
  }

  /**
   * UniqueFactorsTable create
   */
  export type UniqueFactorsTableCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * The data needed to create a UniqueFactorsTable.
     */
    data: XOR<UniqueFactorsTableCreateInput, UniqueFactorsTableUncheckedCreateInput>
  }

  /**
   * UniqueFactorsTable createMany
   */
  export type UniqueFactorsTableCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UniqueFactorsTables.
     */
    data: UniqueFactorsTableCreateManyInput | UniqueFactorsTableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UniqueFactorsTable update
   */
  export type UniqueFactorsTableUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * The data needed to update a UniqueFactorsTable.
     */
    data: XOR<UniqueFactorsTableUpdateInput, UniqueFactorsTableUncheckedUpdateInput>
    /**
     * Choose, which UniqueFactorsTable to update.
     */
    where: UniqueFactorsTableWhereUniqueInput
  }

  /**
   * UniqueFactorsTable updateMany
   */
  export type UniqueFactorsTableUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UniqueFactorsTables.
     */
    data: XOR<UniqueFactorsTableUpdateManyMutationInput, UniqueFactorsTableUncheckedUpdateManyInput>
    /**
     * Filter which UniqueFactorsTables to update
     */
    where?: UniqueFactorsTableWhereInput
    /**
     * Limit how many UniqueFactorsTables to update.
     */
    limit?: number
  }

  /**
   * UniqueFactorsTable upsert
   */
  export type UniqueFactorsTableUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * The filter to search for the UniqueFactorsTable to update in case it exists.
     */
    where: UniqueFactorsTableWhereUniqueInput
    /**
     * In case the UniqueFactorsTable found by the `where` argument doesn't exist, create a new UniqueFactorsTable with this data.
     */
    create: XOR<UniqueFactorsTableCreateInput, UniqueFactorsTableUncheckedCreateInput>
    /**
     * In case the UniqueFactorsTable was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UniqueFactorsTableUpdateInput, UniqueFactorsTableUncheckedUpdateInput>
  }

  /**
   * UniqueFactorsTable delete
   */
  export type UniqueFactorsTableDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
    /**
     * Filter which UniqueFactorsTable to delete.
     */
    where: UniqueFactorsTableWhereUniqueInput
  }

  /**
   * UniqueFactorsTable deleteMany
   */
  export type UniqueFactorsTableDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UniqueFactorsTables to delete
     */
    where?: UniqueFactorsTableWhereInput
    /**
     * Limit how many UniqueFactorsTables to delete.
     */
    limit?: number
  }

  /**
   * UniqueFactorsTable without action
   */
  export type UniqueFactorsTableDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UniqueFactorsTable
     */
    select?: UniqueFactorsTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UniqueFactorsTable
     */
    omit?: UniqueFactorsTableOmit<ExtArgs> | null
  }


  /**
   * Model CompanyUniverse
   */

  export type AggregateCompanyUniverse = {
    _count: CompanyUniverseCountAggregateOutputType | null
    _min: CompanyUniverseMinAggregateOutputType | null
    _max: CompanyUniverseMaxAggregateOutputType | null
  }

  export type CompanyUniverseMinAggregateOutputType = {
    Company: string | null
    x: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    source: string | null
    Scraping_code_set_up__: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Domain: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__: string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__: string | null
    Plain_text_press_release_subscription_possible___yes_no_: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    WORKED_BY_: string | null
    COMMENTS___NOTES: string | null
    Carbon_sentence_available__: string | null
  }

  export type CompanyUniverseMaxAggregateOutputType = {
    Company: string | null
    x: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    source: string | null
    Scraping_code_set_up__: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Domain: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__: string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__: string | null
    Plain_text_press_release_subscription_possible___yes_no_: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    WORKED_BY_: string | null
    COMMENTS___NOTES: string | null
    Carbon_sentence_available__: string | null
  }

  export type CompanyUniverseCountAggregateOutputType = {
    Company: number
    x: number
    Member_of_the_S_P500: number
    Member_of_the_Russell_1000_Index: number
    source: number
    Scraping_code_set_up__: number
    Ticker_s_: number
    PR_Agency: number
    Example_2020_company_PR_agency_press_release_URL: number
    Domain: number
    Company_global_main_press___news_release_site_URL: number
    Subscribed_to_press_releases_esgroadmap_gmail_com__: number
    Subscribed_to_press_releases_jameskijani_gmail_com__: number
    Plain_text_press_release_subscription_possible___yes_no_: number
    Company_annual_reports_page_URL: number
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_: number
    Company_sustainability___ESG_reports_page_URL: number
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: number
    Country: number
    sector_code__1__NAICS_: number
    sector_name__1__NAICS_: number
    sector_code__2__NAICS_: number
    sector_name__2__NAICS_: number
    sector_code__3__NAICS_: number
    sector_name__3__NAICS_: number
    sector_code__4__NAICS_: number
    sector_name__4__NAICS_: number
    sector_code__5__NAICS_: number
    sector_name__5__NAICS_: number
    WORKED_BY_: number
    COMMENTS___NOTES: number
    Carbon_sentence_available__: number
    _all: number
  }


  export type CompanyUniverseMinAggregateInputType = {
    Company?: true
    x?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    source?: true
    Scraping_code_set_up__?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Domain?: true
    Company_global_main_press___news_release_site_URL?: true
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: true
    Subscribed_to_press_releases_jameskijani_gmail_com__?: true
    Plain_text_press_release_subscription_possible___yes_no_?: true
    Company_annual_reports_page_URL?: true
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    WORKED_BY_?: true
    COMMENTS___NOTES?: true
    Carbon_sentence_available__?: true
  }

  export type CompanyUniverseMaxAggregateInputType = {
    Company?: true
    x?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    source?: true
    Scraping_code_set_up__?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Domain?: true
    Company_global_main_press___news_release_site_URL?: true
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: true
    Subscribed_to_press_releases_jameskijani_gmail_com__?: true
    Plain_text_press_release_subscription_possible___yes_no_?: true
    Company_annual_reports_page_URL?: true
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    WORKED_BY_?: true
    COMMENTS___NOTES?: true
    Carbon_sentence_available__?: true
  }

  export type CompanyUniverseCountAggregateInputType = {
    Company?: true
    x?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    source?: true
    Scraping_code_set_up__?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Domain?: true
    Company_global_main_press___news_release_site_URL?: true
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: true
    Subscribed_to_press_releases_jameskijani_gmail_com__?: true
    Plain_text_press_release_subscription_possible___yes_no_?: true
    Company_annual_reports_page_URL?: true
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    WORKED_BY_?: true
    COMMENTS___NOTES?: true
    Carbon_sentence_available__?: true
    _all?: true
  }

  export type CompanyUniverseAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyUniverse to aggregate.
     */
    where?: CompanyUniverseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyUniverses to fetch.
     */
    orderBy?: CompanyUniverseOrderByWithRelationInput | CompanyUniverseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyUniverseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyUniverses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyUniverses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CompanyUniverses
    **/
    _count?: true | CompanyUniverseCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyUniverseMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyUniverseMaxAggregateInputType
  }

  export type GetCompanyUniverseAggregateType<T extends CompanyUniverseAggregateArgs> = {
        [P in keyof T & keyof AggregateCompanyUniverse]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompanyUniverse[P]>
      : GetScalarType<T[P], AggregateCompanyUniverse[P]>
  }




  export type CompanyUniverseGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyUniverseWhereInput
    orderBy?: CompanyUniverseOrderByWithAggregationInput | CompanyUniverseOrderByWithAggregationInput[]
    by: CompanyUniverseScalarFieldEnum[] | CompanyUniverseScalarFieldEnum
    having?: CompanyUniverseScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyUniverseCountAggregateInputType | true
    _min?: CompanyUniverseMinAggregateInputType
    _max?: CompanyUniverseMaxAggregateInputType
  }

  export type CompanyUniverseGroupByOutputType = {
    Company: string
    x: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    source: string | null
    Scraping_code_set_up__: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Domain: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__: string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__: string | null
    Plain_text_press_release_subscription_possible___yes_no_: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    WORKED_BY_: string | null
    COMMENTS___NOTES: string | null
    Carbon_sentence_available__: string | null
    _count: CompanyUniverseCountAggregateOutputType | null
    _min: CompanyUniverseMinAggregateOutputType | null
    _max: CompanyUniverseMaxAggregateOutputType | null
  }

  type GetCompanyUniverseGroupByPayload<T extends CompanyUniverseGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyUniverseGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyUniverseGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyUniverseGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyUniverseGroupByOutputType[P]>
        }
      >
    >


  export type CompanyUniverseSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Company?: boolean
    x?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    source?: boolean
    Scraping_code_set_up__?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Domain?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: boolean
    Subscribed_to_press_releases_jameskijani_gmail_com__?: boolean
    Plain_text_press_release_subscription_possible___yes_no_?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    WORKED_BY_?: boolean
    COMMENTS___NOTES?: boolean
    Carbon_sentence_available__?: boolean
  }, ExtArgs["result"]["companyUniverse"]>



  export type CompanyUniverseSelectScalar = {
    Company?: boolean
    x?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    source?: boolean
    Scraping_code_set_up__?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Domain?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: boolean
    Subscribed_to_press_releases_jameskijani_gmail_com__?: boolean
    Plain_text_press_release_subscription_possible___yes_no_?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    WORKED_BY_?: boolean
    COMMENTS___NOTES?: boolean
    Carbon_sentence_available__?: boolean
  }

  export type CompanyUniverseOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Company" | "x" | "Member_of_the_S_P500" | "Member_of_the_Russell_1000_Index" | "source" | "Scraping_code_set_up__" | "Ticker_s_" | "PR_Agency" | "Example_2020_company_PR_agency_press_release_URL" | "Domain" | "Company_global_main_press___news_release_site_URL" | "Subscribed_to_press_releases_esgroadmap_gmail_com__" | "Subscribed_to_press_releases_jameskijani_gmail_com__" | "Plain_text_press_release_subscription_possible___yes_no_" | "Company_annual_reports_page_URL" | "Company_annual_report_2020_URL_of_pdf_document__including_10_k_" | "Company_sustainability___ESG_reports_page_URL" | "Company_Sustainability___ESG_report_2020_URL_of_pdf_document" | "Country" | "sector_code__1__NAICS_" | "sector_name__1__NAICS_" | "sector_code__2__NAICS_" | "sector_name__2__NAICS_" | "sector_code__3__NAICS_" | "sector_name__3__NAICS_" | "sector_code__4__NAICS_" | "sector_name__4__NAICS_" | "sector_code__5__NAICS_" | "sector_name__5__NAICS_" | "WORKED_BY_" | "COMMENTS___NOTES" | "Carbon_sentence_available__", ExtArgs["result"]["companyUniverse"]>

  export type $CompanyUniversePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CompanyUniverse"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Company: string
      x: string | null
      Member_of_the_S_P500: string | null
      Member_of_the_Russell_1000_Index: string | null
      source: string | null
      Scraping_code_set_up__: string | null
      Ticker_s_: string | null
      PR_Agency: string | null
      Example_2020_company_PR_agency_press_release_URL: string | null
      Domain: string | null
      Company_global_main_press___news_release_site_URL: string | null
      Subscribed_to_press_releases_esgroadmap_gmail_com__: string | null
      Subscribed_to_press_releases_jameskijani_gmail_com__: string | null
      Plain_text_press_release_subscription_possible___yes_no_: string | null
      Company_annual_reports_page_URL: string | null
      Company_annual_report_2020_URL_of_pdf_document__including_10_k_: string | null
      Company_sustainability___ESG_reports_page_URL: string | null
      Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
      Country: string | null
      sector_code__1__NAICS_: string | null
      sector_name__1__NAICS_: string | null
      sector_code__2__NAICS_: string | null
      sector_name__2__NAICS_: string | null
      sector_code__3__NAICS_: string | null
      sector_name__3__NAICS_: string | null
      sector_code__4__NAICS_: string | null
      sector_name__4__NAICS_: string | null
      sector_code__5__NAICS_: string | null
      sector_name__5__NAICS_: string | null
      WORKED_BY_: string | null
      COMMENTS___NOTES: string | null
      Carbon_sentence_available__: string | null
    }, ExtArgs["result"]["companyUniverse"]>
    composites: {}
  }

  type CompanyUniverseGetPayload<S extends boolean | null | undefined | CompanyUniverseDefaultArgs> = $Result.GetResult<Prisma.$CompanyUniversePayload, S>

  type CompanyUniverseCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompanyUniverseFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyUniverseCountAggregateInputType | true
    }

  export interface CompanyUniverseDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CompanyUniverse'], meta: { name: 'CompanyUniverse' } }
    /**
     * Find zero or one CompanyUniverse that matches the filter.
     * @param {CompanyUniverseFindUniqueArgs} args - Arguments to find a CompanyUniverse
     * @example
     * // Get one CompanyUniverse
     * const companyUniverse = await prisma.companyUniverse.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyUniverseFindUniqueArgs>(args: SelectSubset<T, CompanyUniverseFindUniqueArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CompanyUniverse that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompanyUniverseFindUniqueOrThrowArgs} args - Arguments to find a CompanyUniverse
     * @example
     * // Get one CompanyUniverse
     * const companyUniverse = await prisma.companyUniverse.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyUniverseFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyUniverseFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyUniverse that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUniverseFindFirstArgs} args - Arguments to find a CompanyUniverse
     * @example
     * // Get one CompanyUniverse
     * const companyUniverse = await prisma.companyUniverse.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyUniverseFindFirstArgs>(args?: SelectSubset<T, CompanyUniverseFindFirstArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyUniverse that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUniverseFindFirstOrThrowArgs} args - Arguments to find a CompanyUniverse
     * @example
     * // Get one CompanyUniverse
     * const companyUniverse = await prisma.companyUniverse.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyUniverseFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyUniverseFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CompanyUniverses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUniverseFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CompanyUniverses
     * const companyUniverses = await prisma.companyUniverse.findMany()
     * 
     * // Get first 10 CompanyUniverses
     * const companyUniverses = await prisma.companyUniverse.findMany({ take: 10 })
     * 
     * // Only select the `Company`
     * const companyUniverseWithCompanyOnly = await prisma.companyUniverse.findMany({ select: { Company: true } })
     * 
     */
    findMany<T extends CompanyUniverseFindManyArgs>(args?: SelectSubset<T, CompanyUniverseFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CompanyUniverse.
     * @param {CompanyUniverseCreateArgs} args - Arguments to create a CompanyUniverse.
     * @example
     * // Create one CompanyUniverse
     * const CompanyUniverse = await prisma.companyUniverse.create({
     *   data: {
     *     // ... data to create a CompanyUniverse
     *   }
     * })
     * 
     */
    create<T extends CompanyUniverseCreateArgs>(args: SelectSubset<T, CompanyUniverseCreateArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CompanyUniverses.
     * @param {CompanyUniverseCreateManyArgs} args - Arguments to create many CompanyUniverses.
     * @example
     * // Create many CompanyUniverses
     * const companyUniverse = await prisma.companyUniverse.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyUniverseCreateManyArgs>(args?: SelectSubset<T, CompanyUniverseCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CompanyUniverse.
     * @param {CompanyUniverseDeleteArgs} args - Arguments to delete one CompanyUniverse.
     * @example
     * // Delete one CompanyUniverse
     * const CompanyUniverse = await prisma.companyUniverse.delete({
     *   where: {
     *     // ... filter to delete one CompanyUniverse
     *   }
     * })
     * 
     */
    delete<T extends CompanyUniverseDeleteArgs>(args: SelectSubset<T, CompanyUniverseDeleteArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CompanyUniverse.
     * @param {CompanyUniverseUpdateArgs} args - Arguments to update one CompanyUniverse.
     * @example
     * // Update one CompanyUniverse
     * const companyUniverse = await prisma.companyUniverse.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUniverseUpdateArgs>(args: SelectSubset<T, CompanyUniverseUpdateArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CompanyUniverses.
     * @param {CompanyUniverseDeleteManyArgs} args - Arguments to filter CompanyUniverses to delete.
     * @example
     * // Delete a few CompanyUniverses
     * const { count } = await prisma.companyUniverse.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyUniverseDeleteManyArgs>(args?: SelectSubset<T, CompanyUniverseDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompanyUniverses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUniverseUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CompanyUniverses
     * const companyUniverse = await prisma.companyUniverse.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUniverseUpdateManyArgs>(args: SelectSubset<T, CompanyUniverseUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CompanyUniverse.
     * @param {CompanyUniverseUpsertArgs} args - Arguments to update or create a CompanyUniverse.
     * @example
     * // Update or create a CompanyUniverse
     * const companyUniverse = await prisma.companyUniverse.upsert({
     *   create: {
     *     // ... data to create a CompanyUniverse
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CompanyUniverse we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUniverseUpsertArgs>(args: SelectSubset<T, CompanyUniverseUpsertArgs<ExtArgs>>): Prisma__CompanyUniverseClient<$Result.GetResult<Prisma.$CompanyUniversePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CompanyUniverses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUniverseCountArgs} args - Arguments to filter CompanyUniverses to count.
     * @example
     * // Count the number of CompanyUniverses
     * const count = await prisma.companyUniverse.count({
     *   where: {
     *     // ... the filter for the CompanyUniverses we want to count
     *   }
     * })
    **/
    count<T extends CompanyUniverseCountArgs>(
      args?: Subset<T, CompanyUniverseCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyUniverseCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CompanyUniverse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUniverseAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyUniverseAggregateArgs>(args: Subset<T, CompanyUniverseAggregateArgs>): Prisma.PrismaPromise<GetCompanyUniverseAggregateType<T>>

    /**
     * Group by CompanyUniverse.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUniverseGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyUniverseGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyUniverseGroupByArgs['orderBy'] }
        : { orderBy?: CompanyUniverseGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyUniverseGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyUniverseGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CompanyUniverse model
   */
  readonly fields: CompanyUniverseFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CompanyUniverse.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyUniverseClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CompanyUniverse model
   */
  interface CompanyUniverseFieldRefs {
    readonly Company: FieldRef<"CompanyUniverse", 'String'>
    readonly x: FieldRef<"CompanyUniverse", 'String'>
    readonly Member_of_the_S_P500: FieldRef<"CompanyUniverse", 'String'>
    readonly Member_of_the_Russell_1000_Index: FieldRef<"CompanyUniverse", 'String'>
    readonly source: FieldRef<"CompanyUniverse", 'String'>
    readonly Scraping_code_set_up__: FieldRef<"CompanyUniverse", 'String'>
    readonly Ticker_s_: FieldRef<"CompanyUniverse", 'String'>
    readonly PR_Agency: FieldRef<"CompanyUniverse", 'String'>
    readonly Example_2020_company_PR_agency_press_release_URL: FieldRef<"CompanyUniverse", 'String'>
    readonly Domain: FieldRef<"CompanyUniverse", 'String'>
    readonly Company_global_main_press___news_release_site_URL: FieldRef<"CompanyUniverse", 'String'>
    readonly Subscribed_to_press_releases_esgroadmap_gmail_com__: FieldRef<"CompanyUniverse", 'String'>
    readonly Subscribed_to_press_releases_jameskijani_gmail_com__: FieldRef<"CompanyUniverse", 'String'>
    readonly Plain_text_press_release_subscription_possible___yes_no_: FieldRef<"CompanyUniverse", 'String'>
    readonly Company_annual_reports_page_URL: FieldRef<"CompanyUniverse", 'String'>
    readonly Company_annual_report_2020_URL_of_pdf_document__including_10_k_: FieldRef<"CompanyUniverse", 'String'>
    readonly Company_sustainability___ESG_reports_page_URL: FieldRef<"CompanyUniverse", 'String'>
    readonly Company_Sustainability___ESG_report_2020_URL_of_pdf_document: FieldRef<"CompanyUniverse", 'String'>
    readonly Country: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_code__1__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_name__1__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_code__2__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_name__2__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_code__3__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_name__3__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_code__4__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_name__4__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_code__5__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly sector_name__5__NAICS_: FieldRef<"CompanyUniverse", 'String'>
    readonly WORKED_BY_: FieldRef<"CompanyUniverse", 'String'>
    readonly COMMENTS___NOTES: FieldRef<"CompanyUniverse", 'String'>
    readonly Carbon_sentence_available__: FieldRef<"CompanyUniverse", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CompanyUniverse findUnique
   */
  export type CompanyUniverseFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * Filter, which CompanyUniverse to fetch.
     */
    where: CompanyUniverseWhereUniqueInput
  }

  /**
   * CompanyUniverse findUniqueOrThrow
   */
  export type CompanyUniverseFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * Filter, which CompanyUniverse to fetch.
     */
    where: CompanyUniverseWhereUniqueInput
  }

  /**
   * CompanyUniverse findFirst
   */
  export type CompanyUniverseFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * Filter, which CompanyUniverse to fetch.
     */
    where?: CompanyUniverseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyUniverses to fetch.
     */
    orderBy?: CompanyUniverseOrderByWithRelationInput | CompanyUniverseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyUniverses.
     */
    cursor?: CompanyUniverseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyUniverses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyUniverses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyUniverses.
     */
    distinct?: CompanyUniverseScalarFieldEnum | CompanyUniverseScalarFieldEnum[]
  }

  /**
   * CompanyUniverse findFirstOrThrow
   */
  export type CompanyUniverseFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * Filter, which CompanyUniverse to fetch.
     */
    where?: CompanyUniverseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyUniverses to fetch.
     */
    orderBy?: CompanyUniverseOrderByWithRelationInput | CompanyUniverseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyUniverses.
     */
    cursor?: CompanyUniverseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyUniverses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyUniverses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyUniverses.
     */
    distinct?: CompanyUniverseScalarFieldEnum | CompanyUniverseScalarFieldEnum[]
  }

  /**
   * CompanyUniverse findMany
   */
  export type CompanyUniverseFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * Filter, which CompanyUniverses to fetch.
     */
    where?: CompanyUniverseWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyUniverses to fetch.
     */
    orderBy?: CompanyUniverseOrderByWithRelationInput | CompanyUniverseOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CompanyUniverses.
     */
    cursor?: CompanyUniverseWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyUniverses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyUniverses.
     */
    skip?: number
    distinct?: CompanyUniverseScalarFieldEnum | CompanyUniverseScalarFieldEnum[]
  }

  /**
   * CompanyUniverse create
   */
  export type CompanyUniverseCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * The data needed to create a CompanyUniverse.
     */
    data: XOR<CompanyUniverseCreateInput, CompanyUniverseUncheckedCreateInput>
  }

  /**
   * CompanyUniverse createMany
   */
  export type CompanyUniverseCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CompanyUniverses.
     */
    data: CompanyUniverseCreateManyInput | CompanyUniverseCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CompanyUniverse update
   */
  export type CompanyUniverseUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * The data needed to update a CompanyUniverse.
     */
    data: XOR<CompanyUniverseUpdateInput, CompanyUniverseUncheckedUpdateInput>
    /**
     * Choose, which CompanyUniverse to update.
     */
    where: CompanyUniverseWhereUniqueInput
  }

  /**
   * CompanyUniverse updateMany
   */
  export type CompanyUniverseUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CompanyUniverses.
     */
    data: XOR<CompanyUniverseUpdateManyMutationInput, CompanyUniverseUncheckedUpdateManyInput>
    /**
     * Filter which CompanyUniverses to update
     */
    where?: CompanyUniverseWhereInput
    /**
     * Limit how many CompanyUniverses to update.
     */
    limit?: number
  }

  /**
   * CompanyUniverse upsert
   */
  export type CompanyUniverseUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * The filter to search for the CompanyUniverse to update in case it exists.
     */
    where: CompanyUniverseWhereUniqueInput
    /**
     * In case the CompanyUniverse found by the `where` argument doesn't exist, create a new CompanyUniverse with this data.
     */
    create: XOR<CompanyUniverseCreateInput, CompanyUniverseUncheckedCreateInput>
    /**
     * In case the CompanyUniverse was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUniverseUpdateInput, CompanyUniverseUncheckedUpdateInput>
  }

  /**
   * CompanyUniverse delete
   */
  export type CompanyUniverseDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
    /**
     * Filter which CompanyUniverse to delete.
     */
    where: CompanyUniverseWhereUniqueInput
  }

  /**
   * CompanyUniverse deleteMany
   */
  export type CompanyUniverseDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyUniverses to delete
     */
    where?: CompanyUniverseWhereInput
    /**
     * Limit how many CompanyUniverses to delete.
     */
    limit?: number
  }

  /**
   * CompanyUniverse without action
   */
  export type CompanyUniverseDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyUniverse
     */
    select?: CompanyUniverseSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyUniverse
     */
    omit?: CompanyUniverseOmit<ExtArgs> | null
  }


  /**
   * Model CompanyData
   */

  export type AggregateCompanyData = {
    _count: CompanyDataCountAggregateOutputType | null
    _avg: CompanyDataAvgAggregateOutputType | null
    _sum: CompanyDataSumAggregateOutputType | null
    _min: CompanyDataMinAggregateOutputType | null
    _max: CompanyDataMaxAggregateOutputType | null
  }

  export type CompanyDataAvgAggregateOutputType = {
    sector_code__1__NAICS_: number | null
    id: number | null
  }

  export type CompanyDataSumAggregateOutputType = {
    sector_code__1__NAICS_: bigint | null
    id: number | null
  }

  export type CompanyDataMinAggregateOutputType = {
    company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    id: number | null
  }

  export type CompanyDataMaxAggregateOutputType = {
    company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    id: number | null
  }

  export type CompanyDataCountAggregateOutputType = {
    company: number
    Member_of_the_S_P500: number
    Member_of_the_Russell_1000_Index: number
    Ticker_s_: number
    PR_Agency: number
    Example_2020_company_PR_agency_press_release_URL: number
    Company_Global___Main_Website_URL: number
    Company_global_main_press___news_release_site_URL: number
    Company_annual_reports_page_URL: number
    Company_annual___financial_report_2020_URL_of_pdf_document: number
    Company_sustainability___ESG_reports_page_URL: number
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: number
    Country: number
    sector_code__1__NAICS_: number
    sector_name__1__NAICS_: number
    sector_code__2__NAICS_: number
    sector_name__2__NAICS_: number
    sector_code__3__NAICS_: number
    sector_name__3__NAICS_: number
    sector_code__4__NAICS_: number
    sector_name__4__NAICS_: number
    sector_code__5__NAICS_: number
    sector_name__5__NAICS_: number
    sector_codes_all__NAICS_: number
    sector_name_all__NAICS_: number
    id: number
    _all: number
  }


  export type CompanyDataAvgAggregateInputType = {
    sector_code__1__NAICS_?: true
    id?: true
  }

  export type CompanyDataSumAggregateInputType = {
    sector_code__1__NAICS_?: true
    id?: true
  }

  export type CompanyDataMinAggregateInputType = {
    company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    id?: true
  }

  export type CompanyDataMaxAggregateInputType = {
    company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    id?: true
  }

  export type CompanyDataCountAggregateInputType = {
    company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    id?: true
    _all?: true
  }

  export type CompanyDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyData to aggregate.
     */
    where?: CompanyDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData to fetch.
     */
    orderBy?: CompanyDataOrderByWithRelationInput | CompanyDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CompanyData
    **/
    _count?: true | CompanyDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyDataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanyDataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyDataMaxAggregateInputType
  }

  export type GetCompanyDataAggregateType<T extends CompanyDataAggregateArgs> = {
        [P in keyof T & keyof AggregateCompanyData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompanyData[P]>
      : GetScalarType<T[P], AggregateCompanyData[P]>
  }




  export type CompanyDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyDataWhereInput
    orderBy?: CompanyDataOrderByWithAggregationInput | CompanyDataOrderByWithAggregationInput[]
    by: CompanyDataScalarFieldEnum[] | CompanyDataScalarFieldEnum
    having?: CompanyDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyDataCountAggregateInputType | true
    _avg?: CompanyDataAvgAggregateInputType
    _sum?: CompanyDataSumAggregateInputType
    _min?: CompanyDataMinAggregateInputType
    _max?: CompanyDataMaxAggregateInputType
  }

  export type CompanyDataGroupByOutputType = {
    company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    id: number
    _count: CompanyDataCountAggregateOutputType | null
    _avg: CompanyDataAvgAggregateOutputType | null
    _sum: CompanyDataSumAggregateOutputType | null
    _min: CompanyDataMinAggregateOutputType | null
    _max: CompanyDataMaxAggregateOutputType | null
  }

  type GetCompanyDataGroupByPayload<T extends CompanyDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyDataGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyDataGroupByOutputType[P]>
        }
      >
    >


  export type CompanyDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    company?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Global___Main_Website_URL?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual___financial_report_2020_URL_of_pdf_document?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    sector_codes_all__NAICS_?: boolean
    sector_name_all__NAICS_?: boolean
    id?: boolean
  }, ExtArgs["result"]["companyData"]>



  export type CompanyDataSelectScalar = {
    company?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Global___Main_Website_URL?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual___financial_report_2020_URL_of_pdf_document?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    sector_codes_all__NAICS_?: boolean
    sector_name_all__NAICS_?: boolean
    id?: boolean
  }

  export type CompanyDataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"company" | "Member_of_the_S_P500" | "Member_of_the_Russell_1000_Index" | "Ticker_s_" | "PR_Agency" | "Example_2020_company_PR_agency_press_release_URL" | "Company_Global___Main_Website_URL" | "Company_global_main_press___news_release_site_URL" | "Company_annual_reports_page_URL" | "Company_annual___financial_report_2020_URL_of_pdf_document" | "Company_sustainability___ESG_reports_page_URL" | "Company_Sustainability___ESG_report_2020_URL_of_pdf_document" | "Country" | "sector_code__1__NAICS_" | "sector_name__1__NAICS_" | "sector_code__2__NAICS_" | "sector_name__2__NAICS_" | "sector_code__3__NAICS_" | "sector_name__3__NAICS_" | "sector_code__4__NAICS_" | "sector_name__4__NAICS_" | "sector_code__5__NAICS_" | "sector_name__5__NAICS_" | "sector_codes_all__NAICS_" | "sector_name_all__NAICS_" | "id", ExtArgs["result"]["companyData"]>

  export type $CompanyDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CompanyData"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      company: string | null
      Member_of_the_S_P500: string | null
      Member_of_the_Russell_1000_Index: string | null
      Ticker_s_: string | null
      PR_Agency: string | null
      Example_2020_company_PR_agency_press_release_URL: string | null
      Company_Global___Main_Website_URL: string | null
      Company_global_main_press___news_release_site_URL: string | null
      Company_annual_reports_page_URL: string | null
      Company_annual___financial_report_2020_URL_of_pdf_document: string | null
      Company_sustainability___ESG_reports_page_URL: string | null
      Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
      Country: string | null
      sector_code__1__NAICS_: bigint | null
      sector_name__1__NAICS_: string | null
      sector_code__2__NAICS_: string | null
      sector_name__2__NAICS_: string | null
      sector_code__3__NAICS_: string | null
      sector_name__3__NAICS_: string | null
      sector_code__4__NAICS_: string | null
      sector_name__4__NAICS_: string | null
      sector_code__5__NAICS_: string | null
      sector_name__5__NAICS_: string | null
      sector_codes_all__NAICS_: string | null
      sector_name_all__NAICS_: string | null
      id: number
    }, ExtArgs["result"]["companyData"]>
    composites: {}
  }

  type CompanyDataGetPayload<S extends boolean | null | undefined | CompanyDataDefaultArgs> = $Result.GetResult<Prisma.$CompanyDataPayload, S>

  type CompanyDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompanyDataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyDataCountAggregateInputType | true
    }

  export interface CompanyDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CompanyData'], meta: { name: 'CompanyData' } }
    /**
     * Find zero or one CompanyData that matches the filter.
     * @param {CompanyDataFindUniqueArgs} args - Arguments to find a CompanyData
     * @example
     * // Get one CompanyData
     * const companyData = await prisma.companyData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyDataFindUniqueArgs>(args: SelectSubset<T, CompanyDataFindUniqueArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CompanyData that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompanyDataFindUniqueOrThrowArgs} args - Arguments to find a CompanyData
     * @example
     * // Get one CompanyData
     * const companyData = await prisma.companyData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyDataFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDataFindFirstArgs} args - Arguments to find a CompanyData
     * @example
     * // Get one CompanyData
     * const companyData = await prisma.companyData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyDataFindFirstArgs>(args?: SelectSubset<T, CompanyDataFindFirstArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDataFindFirstOrThrowArgs} args - Arguments to find a CompanyData
     * @example
     * // Get one CompanyData
     * const companyData = await prisma.companyData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyDataFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CompanyData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CompanyData
     * const companyData = await prisma.companyData.findMany()
     * 
     * // Get first 10 CompanyData
     * const companyData = await prisma.companyData.findMany({ take: 10 })
     * 
     * // Only select the `company`
     * const companyDataWithCompanyOnly = await prisma.companyData.findMany({ select: { company: true } })
     * 
     */
    findMany<T extends CompanyDataFindManyArgs>(args?: SelectSubset<T, CompanyDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CompanyData.
     * @param {CompanyDataCreateArgs} args - Arguments to create a CompanyData.
     * @example
     * // Create one CompanyData
     * const CompanyData = await prisma.companyData.create({
     *   data: {
     *     // ... data to create a CompanyData
     *   }
     * })
     * 
     */
    create<T extends CompanyDataCreateArgs>(args: SelectSubset<T, CompanyDataCreateArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CompanyData.
     * @param {CompanyDataCreateManyArgs} args - Arguments to create many CompanyData.
     * @example
     * // Create many CompanyData
     * const companyData = await prisma.companyData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyDataCreateManyArgs>(args?: SelectSubset<T, CompanyDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CompanyData.
     * @param {CompanyDataDeleteArgs} args - Arguments to delete one CompanyData.
     * @example
     * // Delete one CompanyData
     * const CompanyData = await prisma.companyData.delete({
     *   where: {
     *     // ... filter to delete one CompanyData
     *   }
     * })
     * 
     */
    delete<T extends CompanyDataDeleteArgs>(args: SelectSubset<T, CompanyDataDeleteArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CompanyData.
     * @param {CompanyDataUpdateArgs} args - Arguments to update one CompanyData.
     * @example
     * // Update one CompanyData
     * const companyData = await prisma.companyData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyDataUpdateArgs>(args: SelectSubset<T, CompanyDataUpdateArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CompanyData.
     * @param {CompanyDataDeleteManyArgs} args - Arguments to filter CompanyData to delete.
     * @example
     * // Delete a few CompanyData
     * const { count } = await prisma.companyData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDataDeleteManyArgs>(args?: SelectSubset<T, CompanyDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompanyData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CompanyData
     * const companyData = await prisma.companyData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyDataUpdateManyArgs>(args: SelectSubset<T, CompanyDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CompanyData.
     * @param {CompanyDataUpsertArgs} args - Arguments to update or create a CompanyData.
     * @example
     * // Update or create a CompanyData
     * const companyData = await prisma.companyData.upsert({
     *   create: {
     *     // ... data to create a CompanyData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CompanyData we want to update
     *   }
     * })
     */
    upsert<T extends CompanyDataUpsertArgs>(args: SelectSubset<T, CompanyDataUpsertArgs<ExtArgs>>): Prisma__CompanyDataClient<$Result.GetResult<Prisma.$CompanyDataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CompanyData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDataCountArgs} args - Arguments to filter CompanyData to count.
     * @example
     * // Count the number of CompanyData
     * const count = await prisma.companyData.count({
     *   where: {
     *     // ... the filter for the CompanyData we want to count
     *   }
     * })
    **/
    count<T extends CompanyDataCountArgs>(
      args?: Subset<T, CompanyDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CompanyData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyDataAggregateArgs>(args: Subset<T, CompanyDataAggregateArgs>): Prisma.PrismaPromise<GetCompanyDataAggregateType<T>>

    /**
     * Group by CompanyData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyDataGroupByArgs['orderBy'] }
        : { orderBy?: CompanyDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CompanyData model
   */
  readonly fields: CompanyDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CompanyData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CompanyData model
   */
  interface CompanyDataFieldRefs {
    readonly company: FieldRef<"CompanyData", 'String'>
    readonly Member_of_the_S_P500: FieldRef<"CompanyData", 'String'>
    readonly Member_of_the_Russell_1000_Index: FieldRef<"CompanyData", 'String'>
    readonly Ticker_s_: FieldRef<"CompanyData", 'String'>
    readonly PR_Agency: FieldRef<"CompanyData", 'String'>
    readonly Example_2020_company_PR_agency_press_release_URL: FieldRef<"CompanyData", 'String'>
    readonly Company_Global___Main_Website_URL: FieldRef<"CompanyData", 'String'>
    readonly Company_global_main_press___news_release_site_URL: FieldRef<"CompanyData", 'String'>
    readonly Company_annual_reports_page_URL: FieldRef<"CompanyData", 'String'>
    readonly Company_annual___financial_report_2020_URL_of_pdf_document: FieldRef<"CompanyData", 'String'>
    readonly Company_sustainability___ESG_reports_page_URL: FieldRef<"CompanyData", 'String'>
    readonly Company_Sustainability___ESG_report_2020_URL_of_pdf_document: FieldRef<"CompanyData", 'String'>
    readonly Country: FieldRef<"CompanyData", 'String'>
    readonly sector_code__1__NAICS_: FieldRef<"CompanyData", 'BigInt'>
    readonly sector_name__1__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_code__2__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_name__2__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_code__3__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_name__3__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_code__4__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_name__4__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_code__5__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_name__5__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_codes_all__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly sector_name_all__NAICS_: FieldRef<"CompanyData", 'String'>
    readonly id: FieldRef<"CompanyData", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CompanyData findUnique
   */
  export type CompanyDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * Filter, which CompanyData to fetch.
     */
    where: CompanyDataWhereUniqueInput
  }

  /**
   * CompanyData findUniqueOrThrow
   */
  export type CompanyDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * Filter, which CompanyData to fetch.
     */
    where: CompanyDataWhereUniqueInput
  }

  /**
   * CompanyData findFirst
   */
  export type CompanyDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * Filter, which CompanyData to fetch.
     */
    where?: CompanyDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData to fetch.
     */
    orderBy?: CompanyDataOrderByWithRelationInput | CompanyDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyData.
     */
    cursor?: CompanyDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyData.
     */
    distinct?: CompanyDataScalarFieldEnum | CompanyDataScalarFieldEnum[]
  }

  /**
   * CompanyData findFirstOrThrow
   */
  export type CompanyDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * Filter, which CompanyData to fetch.
     */
    where?: CompanyDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData to fetch.
     */
    orderBy?: CompanyDataOrderByWithRelationInput | CompanyDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyData.
     */
    cursor?: CompanyDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyData.
     */
    distinct?: CompanyDataScalarFieldEnum | CompanyDataScalarFieldEnum[]
  }

  /**
   * CompanyData findMany
   */
  export type CompanyDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * Filter, which CompanyData to fetch.
     */
    where?: CompanyDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData to fetch.
     */
    orderBy?: CompanyDataOrderByWithRelationInput | CompanyDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CompanyData.
     */
    cursor?: CompanyDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData.
     */
    skip?: number
    distinct?: CompanyDataScalarFieldEnum | CompanyDataScalarFieldEnum[]
  }

  /**
   * CompanyData create
   */
  export type CompanyDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * The data needed to create a CompanyData.
     */
    data?: XOR<CompanyDataCreateInput, CompanyDataUncheckedCreateInput>
  }

  /**
   * CompanyData createMany
   */
  export type CompanyDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CompanyData.
     */
    data: CompanyDataCreateManyInput | CompanyDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CompanyData update
   */
  export type CompanyDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * The data needed to update a CompanyData.
     */
    data: XOR<CompanyDataUpdateInput, CompanyDataUncheckedUpdateInput>
    /**
     * Choose, which CompanyData to update.
     */
    where: CompanyDataWhereUniqueInput
  }

  /**
   * CompanyData updateMany
   */
  export type CompanyDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CompanyData.
     */
    data: XOR<CompanyDataUpdateManyMutationInput, CompanyDataUncheckedUpdateManyInput>
    /**
     * Filter which CompanyData to update
     */
    where?: CompanyDataWhereInput
    /**
     * Limit how many CompanyData to update.
     */
    limit?: number
  }

  /**
   * CompanyData upsert
   */
  export type CompanyDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * The filter to search for the CompanyData to update in case it exists.
     */
    where: CompanyDataWhereUniqueInput
    /**
     * In case the CompanyData found by the `where` argument doesn't exist, create a new CompanyData with this data.
     */
    create: XOR<CompanyDataCreateInput, CompanyDataUncheckedCreateInput>
    /**
     * In case the CompanyData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyDataUpdateInput, CompanyDataUncheckedUpdateInput>
  }

  /**
   * CompanyData delete
   */
  export type CompanyDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
    /**
     * Filter which CompanyData to delete.
     */
    where: CompanyDataWhereUniqueInput
  }

  /**
   * CompanyData deleteMany
   */
  export type CompanyDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyData to delete
     */
    where?: CompanyDataWhereInput
    /**
     * Limit how many CompanyData to delete.
     */
    limit?: number
  }

  /**
   * CompanyData without action
   */
  export type CompanyDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData
     */
    select?: CompanyDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData
     */
    omit?: CompanyDataOmit<ExtArgs> | null
  }


  /**
   * Model CompanyData2
   */

  export type AggregateCompanyData2 = {
    _count: CompanyData2CountAggregateOutputType | null
    _avg: CompanyData2AvgAggregateOutputType | null
    _sum: CompanyData2SumAggregateOutputType | null
    _min: CompanyData2MinAggregateOutputType | null
    _max: CompanyData2MaxAggregateOutputType | null
  }

  export type CompanyData2AvgAggregateOutputType = {
    id: number | null
  }

  export type CompanyData2SumAggregateOutputType = {
    id: number | null
  }

  export type CompanyData2MinAggregateOutputType = {
    company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    NAICS__1_GIG: string | null
    NAICS__1_GIG_name: string | null
    id: number | null
  }

  export type CompanyData2MaxAggregateOutputType = {
    company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    NAICS__1_GIG: string | null
    NAICS__1_GIG_name: string | null
    id: number | null
  }

  export type CompanyData2CountAggregateOutputType = {
    company: number
    Member_of_the_S_P500: number
    Member_of_the_Russell_1000_Index: number
    Ticker_s_: number
    PR_Agency: number
    Example_2020_company_PR_agency_press_release_URL: number
    Company_Global___Main_Website_URL: number
    Company_global_main_press___news_release_site_URL: number
    Company_annual_reports_page_URL: number
    Company_annual___financial_report_2020_URL_of_pdf_document: number
    Company_sustainability___ESG_reports_page_URL: number
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: number
    Country: number
    sector_code__1__NAICS_: number
    sector_name__1__NAICS_: number
    sector_code__2__NAICS_: number
    sector_name__2__NAICS_: number
    sector_code__3__NAICS_: number
    sector_name__3__NAICS_: number
    sector_code__4__NAICS_: number
    sector_name__4__NAICS_: number
    sector_code__5__NAICS_: number
    sector_name__5__NAICS_: number
    sector_codes_all__NAICS_: number
    sector_name_all__NAICS_: number
    NAICS__1_GIG: number
    NAICS__1_GIG_name: number
    id: number
    _all: number
  }


  export type CompanyData2AvgAggregateInputType = {
    id?: true
  }

  export type CompanyData2SumAggregateInputType = {
    id?: true
  }

  export type CompanyData2MinAggregateInputType = {
    company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    NAICS__1_GIG?: true
    NAICS__1_GIG_name?: true
    id?: true
  }

  export type CompanyData2MaxAggregateInputType = {
    company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    NAICS__1_GIG?: true
    NAICS__1_GIG_name?: true
    id?: true
  }

  export type CompanyData2CountAggregateInputType = {
    company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    NAICS__1_GIG?: true
    NAICS__1_GIG_name?: true
    id?: true
    _all?: true
  }

  export type CompanyData2AggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyData2 to aggregate.
     */
    where?: CompanyData2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData2s to fetch.
     */
    orderBy?: CompanyData2OrderByWithRelationInput | CompanyData2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyData2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CompanyData2s
    **/
    _count?: true | CompanyData2CountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyData2AvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanyData2SumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyData2MinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyData2MaxAggregateInputType
  }

  export type GetCompanyData2AggregateType<T extends CompanyData2AggregateArgs> = {
        [P in keyof T & keyof AggregateCompanyData2]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompanyData2[P]>
      : GetScalarType<T[P], AggregateCompanyData2[P]>
  }




  export type CompanyData2GroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyData2WhereInput
    orderBy?: CompanyData2OrderByWithAggregationInput | CompanyData2OrderByWithAggregationInput[]
    by: CompanyData2ScalarFieldEnum[] | CompanyData2ScalarFieldEnum
    having?: CompanyData2ScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyData2CountAggregateInputType | true
    _avg?: CompanyData2AvgAggregateInputType
    _sum?: CompanyData2SumAggregateInputType
    _min?: CompanyData2MinAggregateInputType
    _max?: CompanyData2MaxAggregateInputType
  }

  export type CompanyData2GroupByOutputType = {
    company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    NAICS__1_GIG: string | null
    NAICS__1_GIG_name: string | null
    id: number
    _count: CompanyData2CountAggregateOutputType | null
    _avg: CompanyData2AvgAggregateOutputType | null
    _sum: CompanyData2SumAggregateOutputType | null
    _min: CompanyData2MinAggregateOutputType | null
    _max: CompanyData2MaxAggregateOutputType | null
  }

  type GetCompanyData2GroupByPayload<T extends CompanyData2GroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyData2GroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyData2GroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyData2GroupByOutputType[P]>
            : GetScalarType<T[P], CompanyData2GroupByOutputType[P]>
        }
      >
    >


  export type CompanyData2Select<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    company?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Global___Main_Website_URL?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual___financial_report_2020_URL_of_pdf_document?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    sector_codes_all__NAICS_?: boolean
    sector_name_all__NAICS_?: boolean
    NAICS__1_GIG?: boolean
    NAICS__1_GIG_name?: boolean
    id?: boolean
  }, ExtArgs["result"]["companyData2"]>



  export type CompanyData2SelectScalar = {
    company?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Global___Main_Website_URL?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual___financial_report_2020_URL_of_pdf_document?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    sector_codes_all__NAICS_?: boolean
    sector_name_all__NAICS_?: boolean
    NAICS__1_GIG?: boolean
    NAICS__1_GIG_name?: boolean
    id?: boolean
  }

  export type CompanyData2Omit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"company" | "Member_of_the_S_P500" | "Member_of_the_Russell_1000_Index" | "Ticker_s_" | "PR_Agency" | "Example_2020_company_PR_agency_press_release_URL" | "Company_Global___Main_Website_URL" | "Company_global_main_press___news_release_site_URL" | "Company_annual_reports_page_URL" | "Company_annual___financial_report_2020_URL_of_pdf_document" | "Company_sustainability___ESG_reports_page_URL" | "Company_Sustainability___ESG_report_2020_URL_of_pdf_document" | "Country" | "sector_code__1__NAICS_" | "sector_name__1__NAICS_" | "sector_code__2__NAICS_" | "sector_name__2__NAICS_" | "sector_code__3__NAICS_" | "sector_name__3__NAICS_" | "sector_code__4__NAICS_" | "sector_name__4__NAICS_" | "sector_code__5__NAICS_" | "sector_name__5__NAICS_" | "sector_codes_all__NAICS_" | "sector_name_all__NAICS_" | "NAICS__1_GIG" | "NAICS__1_GIG_name" | "id", ExtArgs["result"]["companyData2"]>

  export type $CompanyData2Payload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CompanyData2"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      company: string | null
      Member_of_the_S_P500: string | null
      Member_of_the_Russell_1000_Index: string | null
      Ticker_s_: string | null
      PR_Agency: string | null
      Example_2020_company_PR_agency_press_release_URL: string | null
      Company_Global___Main_Website_URL: string | null
      Company_global_main_press___news_release_site_URL: string | null
      Company_annual_reports_page_URL: string | null
      Company_annual___financial_report_2020_URL_of_pdf_document: string | null
      Company_sustainability___ESG_reports_page_URL: string | null
      Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
      Country: string | null
      sector_code__1__NAICS_: string | null
      sector_name__1__NAICS_: string | null
      sector_code__2__NAICS_: string | null
      sector_name__2__NAICS_: string | null
      sector_code__3__NAICS_: string | null
      sector_name__3__NAICS_: string | null
      sector_code__4__NAICS_: string | null
      sector_name__4__NAICS_: string | null
      sector_code__5__NAICS_: string | null
      sector_name__5__NAICS_: string | null
      sector_codes_all__NAICS_: string | null
      sector_name_all__NAICS_: string | null
      NAICS__1_GIG: string | null
      NAICS__1_GIG_name: string | null
      id: number
    }, ExtArgs["result"]["companyData2"]>
    composites: {}
  }

  type CompanyData2GetPayload<S extends boolean | null | undefined | CompanyData2DefaultArgs> = $Result.GetResult<Prisma.$CompanyData2Payload, S>

  type CompanyData2CountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CompanyData2FindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CompanyData2CountAggregateInputType | true
    }

  export interface CompanyData2Delegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CompanyData2'], meta: { name: 'CompanyData2' } }
    /**
     * Find zero or one CompanyData2 that matches the filter.
     * @param {CompanyData2FindUniqueArgs} args - Arguments to find a CompanyData2
     * @example
     * // Get one CompanyData2
     * const companyData2 = await prisma.companyData2.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyData2FindUniqueArgs>(args: SelectSubset<T, CompanyData2FindUniqueArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CompanyData2 that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CompanyData2FindUniqueOrThrowArgs} args - Arguments to find a CompanyData2
     * @example
     * // Get one CompanyData2
     * const companyData2 = await prisma.companyData2.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyData2FindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyData2FindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyData2 that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyData2FindFirstArgs} args - Arguments to find a CompanyData2
     * @example
     * // Get one CompanyData2
     * const companyData2 = await prisma.companyData2.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyData2FindFirstArgs>(args?: SelectSubset<T, CompanyData2FindFirstArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CompanyData2 that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyData2FindFirstOrThrowArgs} args - Arguments to find a CompanyData2
     * @example
     * // Get one CompanyData2
     * const companyData2 = await prisma.companyData2.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyData2FindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyData2FindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CompanyData2s that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyData2FindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CompanyData2s
     * const companyData2s = await prisma.companyData2.findMany()
     * 
     * // Get first 10 CompanyData2s
     * const companyData2s = await prisma.companyData2.findMany({ take: 10 })
     * 
     * // Only select the `company`
     * const companyData2WithCompanyOnly = await prisma.companyData2.findMany({ select: { company: true } })
     * 
     */
    findMany<T extends CompanyData2FindManyArgs>(args?: SelectSubset<T, CompanyData2FindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CompanyData2.
     * @param {CompanyData2CreateArgs} args - Arguments to create a CompanyData2.
     * @example
     * // Create one CompanyData2
     * const CompanyData2 = await prisma.companyData2.create({
     *   data: {
     *     // ... data to create a CompanyData2
     *   }
     * })
     * 
     */
    create<T extends CompanyData2CreateArgs>(args: SelectSubset<T, CompanyData2CreateArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CompanyData2s.
     * @param {CompanyData2CreateManyArgs} args - Arguments to create many CompanyData2s.
     * @example
     * // Create many CompanyData2s
     * const companyData2 = await prisma.companyData2.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyData2CreateManyArgs>(args?: SelectSubset<T, CompanyData2CreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CompanyData2.
     * @param {CompanyData2DeleteArgs} args - Arguments to delete one CompanyData2.
     * @example
     * // Delete one CompanyData2
     * const CompanyData2 = await prisma.companyData2.delete({
     *   where: {
     *     // ... filter to delete one CompanyData2
     *   }
     * })
     * 
     */
    delete<T extends CompanyData2DeleteArgs>(args: SelectSubset<T, CompanyData2DeleteArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CompanyData2.
     * @param {CompanyData2UpdateArgs} args - Arguments to update one CompanyData2.
     * @example
     * // Update one CompanyData2
     * const companyData2 = await prisma.companyData2.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyData2UpdateArgs>(args: SelectSubset<T, CompanyData2UpdateArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CompanyData2s.
     * @param {CompanyData2DeleteManyArgs} args - Arguments to filter CompanyData2s to delete.
     * @example
     * // Delete a few CompanyData2s
     * const { count } = await prisma.companyData2.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyData2DeleteManyArgs>(args?: SelectSubset<T, CompanyData2DeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompanyData2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyData2UpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CompanyData2s
     * const companyData2 = await prisma.companyData2.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyData2UpdateManyArgs>(args: SelectSubset<T, CompanyData2UpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CompanyData2.
     * @param {CompanyData2UpsertArgs} args - Arguments to update or create a CompanyData2.
     * @example
     * // Update or create a CompanyData2
     * const companyData2 = await prisma.companyData2.upsert({
     *   create: {
     *     // ... data to create a CompanyData2
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CompanyData2 we want to update
     *   }
     * })
     */
    upsert<T extends CompanyData2UpsertArgs>(args: SelectSubset<T, CompanyData2UpsertArgs<ExtArgs>>): Prisma__CompanyData2Client<$Result.GetResult<Prisma.$CompanyData2Payload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CompanyData2s.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyData2CountArgs} args - Arguments to filter CompanyData2s to count.
     * @example
     * // Count the number of CompanyData2s
     * const count = await prisma.companyData2.count({
     *   where: {
     *     // ... the filter for the CompanyData2s we want to count
     *   }
     * })
    **/
    count<T extends CompanyData2CountArgs>(
      args?: Subset<T, CompanyData2CountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyData2CountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CompanyData2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyData2AggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyData2AggregateArgs>(args: Subset<T, CompanyData2AggregateArgs>): Prisma.PrismaPromise<GetCompanyData2AggregateType<T>>

    /**
     * Group by CompanyData2.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyData2GroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyData2GroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyData2GroupByArgs['orderBy'] }
        : { orderBy?: CompanyData2GroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyData2GroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyData2GroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CompanyData2 model
   */
  readonly fields: CompanyData2FieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CompanyData2.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyData2Client<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CompanyData2 model
   */
  interface CompanyData2FieldRefs {
    readonly company: FieldRef<"CompanyData2", 'String'>
    readonly Member_of_the_S_P500: FieldRef<"CompanyData2", 'String'>
    readonly Member_of_the_Russell_1000_Index: FieldRef<"CompanyData2", 'String'>
    readonly Ticker_s_: FieldRef<"CompanyData2", 'String'>
    readonly PR_Agency: FieldRef<"CompanyData2", 'String'>
    readonly Example_2020_company_PR_agency_press_release_URL: FieldRef<"CompanyData2", 'String'>
    readonly Company_Global___Main_Website_URL: FieldRef<"CompanyData2", 'String'>
    readonly Company_global_main_press___news_release_site_URL: FieldRef<"CompanyData2", 'String'>
    readonly Company_annual_reports_page_URL: FieldRef<"CompanyData2", 'String'>
    readonly Company_annual___financial_report_2020_URL_of_pdf_document: FieldRef<"CompanyData2", 'String'>
    readonly Company_sustainability___ESG_reports_page_URL: FieldRef<"CompanyData2", 'String'>
    readonly Company_Sustainability___ESG_report_2020_URL_of_pdf_document: FieldRef<"CompanyData2", 'String'>
    readonly Country: FieldRef<"CompanyData2", 'String'>
    readonly sector_code__1__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_name__1__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_code__2__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_name__2__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_code__3__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_name__3__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_code__4__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_name__4__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_code__5__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_name__5__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_codes_all__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly sector_name_all__NAICS_: FieldRef<"CompanyData2", 'String'>
    readonly NAICS__1_GIG: FieldRef<"CompanyData2", 'String'>
    readonly NAICS__1_GIG_name: FieldRef<"CompanyData2", 'String'>
    readonly id: FieldRef<"CompanyData2", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * CompanyData2 findUnique
   */
  export type CompanyData2FindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * Filter, which CompanyData2 to fetch.
     */
    where: CompanyData2WhereUniqueInput
  }

  /**
   * CompanyData2 findUniqueOrThrow
   */
  export type CompanyData2FindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * Filter, which CompanyData2 to fetch.
     */
    where: CompanyData2WhereUniqueInput
  }

  /**
   * CompanyData2 findFirst
   */
  export type CompanyData2FindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * Filter, which CompanyData2 to fetch.
     */
    where?: CompanyData2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData2s to fetch.
     */
    orderBy?: CompanyData2OrderByWithRelationInput | CompanyData2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyData2s.
     */
    cursor?: CompanyData2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyData2s.
     */
    distinct?: CompanyData2ScalarFieldEnum | CompanyData2ScalarFieldEnum[]
  }

  /**
   * CompanyData2 findFirstOrThrow
   */
  export type CompanyData2FindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * Filter, which CompanyData2 to fetch.
     */
    where?: CompanyData2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData2s to fetch.
     */
    orderBy?: CompanyData2OrderByWithRelationInput | CompanyData2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyData2s.
     */
    cursor?: CompanyData2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData2s.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyData2s.
     */
    distinct?: CompanyData2ScalarFieldEnum | CompanyData2ScalarFieldEnum[]
  }

  /**
   * CompanyData2 findMany
   */
  export type CompanyData2FindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * Filter, which CompanyData2s to fetch.
     */
    where?: CompanyData2WhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyData2s to fetch.
     */
    orderBy?: CompanyData2OrderByWithRelationInput | CompanyData2OrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CompanyData2s.
     */
    cursor?: CompanyData2WhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyData2s from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyData2s.
     */
    skip?: number
    distinct?: CompanyData2ScalarFieldEnum | CompanyData2ScalarFieldEnum[]
  }

  /**
   * CompanyData2 create
   */
  export type CompanyData2CreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * The data needed to create a CompanyData2.
     */
    data?: XOR<CompanyData2CreateInput, CompanyData2UncheckedCreateInput>
  }

  /**
   * CompanyData2 createMany
   */
  export type CompanyData2CreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CompanyData2s.
     */
    data: CompanyData2CreateManyInput | CompanyData2CreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CompanyData2 update
   */
  export type CompanyData2UpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * The data needed to update a CompanyData2.
     */
    data: XOR<CompanyData2UpdateInput, CompanyData2UncheckedUpdateInput>
    /**
     * Choose, which CompanyData2 to update.
     */
    where: CompanyData2WhereUniqueInput
  }

  /**
   * CompanyData2 updateMany
   */
  export type CompanyData2UpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CompanyData2s.
     */
    data: XOR<CompanyData2UpdateManyMutationInput, CompanyData2UncheckedUpdateManyInput>
    /**
     * Filter which CompanyData2s to update
     */
    where?: CompanyData2WhereInput
    /**
     * Limit how many CompanyData2s to update.
     */
    limit?: number
  }

  /**
   * CompanyData2 upsert
   */
  export type CompanyData2UpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * The filter to search for the CompanyData2 to update in case it exists.
     */
    where: CompanyData2WhereUniqueInput
    /**
     * In case the CompanyData2 found by the `where` argument doesn't exist, create a new CompanyData2 with this data.
     */
    create: XOR<CompanyData2CreateInput, CompanyData2UncheckedCreateInput>
    /**
     * In case the CompanyData2 was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyData2UpdateInput, CompanyData2UncheckedUpdateInput>
  }

  /**
   * CompanyData2 delete
   */
  export type CompanyData2DeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
    /**
     * Filter which CompanyData2 to delete.
     */
    where: CompanyData2WhereUniqueInput
  }

  /**
   * CompanyData2 deleteMany
   */
  export type CompanyData2DeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyData2s to delete
     */
    where?: CompanyData2WhereInput
    /**
     * Limit how many CompanyData2s to delete.
     */
    limit?: number
  }

  /**
   * CompanyData2 without action
   */
  export type CompanyData2DefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyData2
     */
    select?: CompanyData2Select<ExtArgs> | null
    /**
     * Omit specific fields from the CompanyData2
     */
    omit?: CompanyData2Omit<ExtArgs> | null
  }


  /**
   * Model PercentageTable
   */

  export type AggregatePercentageTable = {
    _count: PercentageTableCountAggregateOutputType | null
    _avg: PercentageTableAvgAggregateOutputType | null
    _sum: PercentageTableSumAggregateOutputType | null
    _min: PercentageTableMinAggregateOutputType | null
    _max: PercentageTableMaxAggregateOutputType | null
  }

  export type PercentageTableAvgAggregateOutputType = {
    id: number | null
  }

  export type PercentageTableSumAggregateOutputType = {
    id: number | null
  }

  export type PercentageTableMinAggregateOutputType = {
    KPI_Report_Date: Date | null
    Company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    climateaction100: string | null
    emails: string | null
    full_text: string | null
    Source_link: string | null
    pr_site: string | null
    release_date: string | null
    source: string | null
    ticker: string | null
    title: string | null
    ArticleTargetYear: string | null
    PressReleaseFullCleanstep1: string | null
    PressReleaseFullClean: string | null
    Source_Date: string | null
    Annual_Report_Date: string | null
    PressReleaseYear: string | null
    PressReleaseMonth: string | null
    Target_sentence: string | null
    SentenceTargetYear: string | null
    Targetyear_s_: string | null
    sentence_carbon: string | null
    sentence_gender: string | null
    sentence_renewables: string | null
    sentence_suppliers: string | null
    sentence_water: string | null
    sentence_waste: string | null
    sentence_other: string | null
    id: number | null
  }

  export type PercentageTableMaxAggregateOutputType = {
    KPI_Report_Date: Date | null
    Company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    climateaction100: string | null
    emails: string | null
    full_text: string | null
    Source_link: string | null
    pr_site: string | null
    release_date: string | null
    source: string | null
    ticker: string | null
    title: string | null
    ArticleTargetYear: string | null
    PressReleaseFullCleanstep1: string | null
    PressReleaseFullClean: string | null
    Source_Date: string | null
    Annual_Report_Date: string | null
    PressReleaseYear: string | null
    PressReleaseMonth: string | null
    Target_sentence: string | null
    SentenceTargetYear: string | null
    Targetyear_s_: string | null
    sentence_carbon: string | null
    sentence_gender: string | null
    sentence_renewables: string | null
    sentence_suppliers: string | null
    sentence_water: string | null
    sentence_waste: string | null
    sentence_other: string | null
    id: number | null
  }

  export type PercentageTableCountAggregateOutputType = {
    KPI_Report_Date: number
    Company: number
    Member_of_the_S_P500: number
    Member_of_the_Russell_1000_Index: number
    Ticker_s_: number
    PR_Agency: number
    Example_2020_company_PR_agency_press_release_URL: number
    Company_Global___Main_Website_URL: number
    Company_global_main_press___news_release_site_URL: number
    Company_annual_reports_page_URL: number
    Company_annual___financial_report_2020_URL_of_pdf_document: number
    Company_sustainability___ESG_reports_page_URL: number
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: number
    Country: number
    sector_code__1__NAICS_: number
    sector_name__1__NAICS_: number
    sector_code__2__NAICS_: number
    sector_name__2__NAICS_: number
    sector_code__3__NAICS_: number
    sector_name__3__NAICS_: number
    sector_code__4__NAICS_: number
    sector_name__4__NAICS_: number
    sector_code__5__NAICS_: number
    sector_name__5__NAICS_: number
    sector_codes_all__NAICS_: number
    sector_name_all__NAICS_: number
    climateaction100: number
    emails: number
    full_text: number
    Source_link: number
    pr_site: number
    release_date: number
    source: number
    ticker: number
    title: number
    ArticleTargetYear: number
    PressReleaseFullCleanstep1: number
    PressReleaseFullClean: number
    Source_Date: number
    Annual_Report_Date: number
    PressReleaseYear: number
    PressReleaseMonth: number
    Target_sentence: number
    SentenceTargetYear: number
    Targetyear_s_: number
    sentence_carbon: number
    sentence_gender: number
    sentence_renewables: number
    sentence_suppliers: number
    sentence_water: number
    sentence_waste: number
    sentence_other: number
    id: number
    _all: number
  }


  export type PercentageTableAvgAggregateInputType = {
    id?: true
  }

  export type PercentageTableSumAggregateInputType = {
    id?: true
  }

  export type PercentageTableMinAggregateInputType = {
    KPI_Report_Date?: true
    Company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    climateaction100?: true
    emails?: true
    full_text?: true
    Source_link?: true
    pr_site?: true
    release_date?: true
    source?: true
    ticker?: true
    title?: true
    ArticleTargetYear?: true
    PressReleaseFullCleanstep1?: true
    PressReleaseFullClean?: true
    Source_Date?: true
    Annual_Report_Date?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    Target_sentence?: true
    SentenceTargetYear?: true
    Targetyear_s_?: true
    sentence_carbon?: true
    sentence_gender?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_water?: true
    sentence_waste?: true
    sentence_other?: true
    id?: true
  }

  export type PercentageTableMaxAggregateInputType = {
    KPI_Report_Date?: true
    Company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    climateaction100?: true
    emails?: true
    full_text?: true
    Source_link?: true
    pr_site?: true
    release_date?: true
    source?: true
    ticker?: true
    title?: true
    ArticleTargetYear?: true
    PressReleaseFullCleanstep1?: true
    PressReleaseFullClean?: true
    Source_Date?: true
    Annual_Report_Date?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    Target_sentence?: true
    SentenceTargetYear?: true
    Targetyear_s_?: true
    sentence_carbon?: true
    sentence_gender?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_water?: true
    sentence_waste?: true
    sentence_other?: true
    id?: true
  }

  export type PercentageTableCountAggregateInputType = {
    KPI_Report_Date?: true
    Company?: true
    Member_of_the_S_P500?: true
    Member_of_the_Russell_1000_Index?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Global___Main_Website_URL?: true
    Company_global_main_press___news_release_site_URL?: true
    Company_annual_reports_page_URL?: true
    Company_annual___financial_report_2020_URL_of_pdf_document?: true
    Company_sustainability___ESG_reports_page_URL?: true
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    sector_codes_all__NAICS_?: true
    sector_name_all__NAICS_?: true
    climateaction100?: true
    emails?: true
    full_text?: true
    Source_link?: true
    pr_site?: true
    release_date?: true
    source?: true
    ticker?: true
    title?: true
    ArticleTargetYear?: true
    PressReleaseFullCleanstep1?: true
    PressReleaseFullClean?: true
    Source_Date?: true
    Annual_Report_Date?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    Target_sentence?: true
    SentenceTargetYear?: true
    Targetyear_s_?: true
    sentence_carbon?: true
    sentence_gender?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_water?: true
    sentence_waste?: true
    sentence_other?: true
    id?: true
    _all?: true
  }

  export type PercentageTableAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PercentageTable to aggregate.
     */
    where?: PercentageTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PercentageTables to fetch.
     */
    orderBy?: PercentageTableOrderByWithRelationInput | PercentageTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PercentageTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PercentageTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PercentageTables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PercentageTables
    **/
    _count?: true | PercentageTableCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PercentageTableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PercentageTableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PercentageTableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PercentageTableMaxAggregateInputType
  }

  export type GetPercentageTableAggregateType<T extends PercentageTableAggregateArgs> = {
        [P in keyof T & keyof AggregatePercentageTable]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePercentageTable[P]>
      : GetScalarType<T[P], AggregatePercentageTable[P]>
  }




  export type PercentageTableGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PercentageTableWhereInput
    orderBy?: PercentageTableOrderByWithAggregationInput | PercentageTableOrderByWithAggregationInput[]
    by: PercentageTableScalarFieldEnum[] | PercentageTableScalarFieldEnum
    having?: PercentageTableScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PercentageTableCountAggregateInputType | true
    _avg?: PercentageTableAvgAggregateInputType
    _sum?: PercentageTableSumAggregateInputType
    _min?: PercentageTableMinAggregateInputType
    _max?: PercentageTableMaxAggregateInputType
  }

  export type PercentageTableGroupByOutputType = {
    KPI_Report_Date: Date
    Company: string | null
    Member_of_the_S_P500: string | null
    Member_of_the_Russell_1000_Index: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Global___Main_Website_URL: string | null
    Company_global_main_press___news_release_site_URL: string | null
    Company_annual_reports_page_URL: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document: string | null
    Company_sustainability___ESG_reports_page_URL: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
    Country: string | null
    sector_code__1__NAICS_: string | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    sector_codes_all__NAICS_: string | null
    sector_name_all__NAICS_: string | null
    climateaction100: string | null
    emails: string | null
    full_text: string | null
    Source_link: string | null
    pr_site: string | null
    release_date: string | null
    source: string | null
    ticker: string | null
    title: string | null
    ArticleTargetYear: string | null
    PressReleaseFullCleanstep1: string | null
    PressReleaseFullClean: string | null
    Source_Date: string | null
    Annual_Report_Date: string | null
    PressReleaseYear: string | null
    PressReleaseMonth: string | null
    Target_sentence: string | null
    SentenceTargetYear: string | null
    Targetyear_s_: string | null
    sentence_carbon: string | null
    sentence_gender: string | null
    sentence_renewables: string | null
    sentence_suppliers: string | null
    sentence_water: string | null
    sentence_waste: string | null
    sentence_other: string | null
    id: number
    _count: PercentageTableCountAggregateOutputType | null
    _avg: PercentageTableAvgAggregateOutputType | null
    _sum: PercentageTableSumAggregateOutputType | null
    _min: PercentageTableMinAggregateOutputType | null
    _max: PercentageTableMaxAggregateOutputType | null
  }

  type GetPercentageTableGroupByPayload<T extends PercentageTableGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PercentageTableGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PercentageTableGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PercentageTableGroupByOutputType[P]>
            : GetScalarType<T[P], PercentageTableGroupByOutputType[P]>
        }
      >
    >


  export type PercentageTableSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    KPI_Report_Date?: boolean
    Company?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Global___Main_Website_URL?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual___financial_report_2020_URL_of_pdf_document?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    sector_codes_all__NAICS_?: boolean
    sector_name_all__NAICS_?: boolean
    climateaction100?: boolean
    emails?: boolean
    full_text?: boolean
    Source_link?: boolean
    pr_site?: boolean
    release_date?: boolean
    source?: boolean
    ticker?: boolean
    title?: boolean
    ArticleTargetYear?: boolean
    PressReleaseFullCleanstep1?: boolean
    PressReleaseFullClean?: boolean
    Source_Date?: boolean
    Annual_Report_Date?: boolean
    PressReleaseYear?: boolean
    PressReleaseMonth?: boolean
    Target_sentence?: boolean
    SentenceTargetYear?: boolean
    Targetyear_s_?: boolean
    sentence_carbon?: boolean
    sentence_gender?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_water?: boolean
    sentence_waste?: boolean
    sentence_other?: boolean
    id?: boolean
  }, ExtArgs["result"]["percentageTable"]>



  export type PercentageTableSelectScalar = {
    KPI_Report_Date?: boolean
    Company?: boolean
    Member_of_the_S_P500?: boolean
    Member_of_the_Russell_1000_Index?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Global___Main_Website_URL?: boolean
    Company_global_main_press___news_release_site_URL?: boolean
    Company_annual_reports_page_URL?: boolean
    Company_annual___financial_report_2020_URL_of_pdf_document?: boolean
    Company_sustainability___ESG_reports_page_URL?: boolean
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    sector_codes_all__NAICS_?: boolean
    sector_name_all__NAICS_?: boolean
    climateaction100?: boolean
    emails?: boolean
    full_text?: boolean
    Source_link?: boolean
    pr_site?: boolean
    release_date?: boolean
    source?: boolean
    ticker?: boolean
    title?: boolean
    ArticleTargetYear?: boolean
    PressReleaseFullCleanstep1?: boolean
    PressReleaseFullClean?: boolean
    Source_Date?: boolean
    Annual_Report_Date?: boolean
    PressReleaseYear?: boolean
    PressReleaseMonth?: boolean
    Target_sentence?: boolean
    SentenceTargetYear?: boolean
    Targetyear_s_?: boolean
    sentence_carbon?: boolean
    sentence_gender?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_water?: boolean
    sentence_waste?: boolean
    sentence_other?: boolean
    id?: boolean
  }

  export type PercentageTableOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"KPI_Report_Date" | "Company" | "Member_of_the_S_P500" | "Member_of_the_Russell_1000_Index" | "Ticker_s_" | "PR_Agency" | "Example_2020_company_PR_agency_press_release_URL" | "Company_Global___Main_Website_URL" | "Company_global_main_press___news_release_site_URL" | "Company_annual_reports_page_URL" | "Company_annual___financial_report_2020_URL_of_pdf_document" | "Company_sustainability___ESG_reports_page_URL" | "Company_Sustainability___ESG_report_2020_URL_of_pdf_document" | "Country" | "sector_code__1__NAICS_" | "sector_name__1__NAICS_" | "sector_code__2__NAICS_" | "sector_name__2__NAICS_" | "sector_code__3__NAICS_" | "sector_name__3__NAICS_" | "sector_code__4__NAICS_" | "sector_name__4__NAICS_" | "sector_code__5__NAICS_" | "sector_name__5__NAICS_" | "sector_codes_all__NAICS_" | "sector_name_all__NAICS_" | "climateaction100" | "emails" | "full_text" | "Source_link" | "pr_site" | "release_date" | "source" | "ticker" | "title" | "ArticleTargetYear" | "PressReleaseFullCleanstep1" | "PressReleaseFullClean" | "Source_Date" | "Annual_Report_Date" | "PressReleaseYear" | "PressReleaseMonth" | "Target_sentence" | "SentenceTargetYear" | "Targetyear_s_" | "sentence_carbon" | "sentence_gender" | "sentence_renewables" | "sentence_suppliers" | "sentence_water" | "sentence_waste" | "sentence_other" | "id", ExtArgs["result"]["percentageTable"]>

  export type $PercentageTablePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PercentageTable"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      KPI_Report_Date: Date
      Company: string | null
      Member_of_the_S_P500: string | null
      Member_of_the_Russell_1000_Index: string | null
      Ticker_s_: string | null
      PR_Agency: string | null
      Example_2020_company_PR_agency_press_release_URL: string | null
      Company_Global___Main_Website_URL: string | null
      Company_global_main_press___news_release_site_URL: string | null
      Company_annual_reports_page_URL: string | null
      Company_annual___financial_report_2020_URL_of_pdf_document: string | null
      Company_sustainability___ESG_reports_page_URL: string | null
      Company_Sustainability___ESG_report_2020_URL_of_pdf_document: string | null
      Country: string | null
      sector_code__1__NAICS_: string | null
      sector_name__1__NAICS_: string | null
      sector_code__2__NAICS_: string | null
      sector_name__2__NAICS_: string | null
      sector_code__3__NAICS_: string | null
      sector_name__3__NAICS_: string | null
      sector_code__4__NAICS_: string | null
      sector_name__4__NAICS_: string | null
      sector_code__5__NAICS_: string | null
      sector_name__5__NAICS_: string | null
      sector_codes_all__NAICS_: string | null
      sector_name_all__NAICS_: string | null
      climateaction100: string | null
      emails: string | null
      full_text: string | null
      Source_link: string | null
      pr_site: string | null
      release_date: string | null
      source: string | null
      ticker: string | null
      title: string | null
      ArticleTargetYear: string | null
      PressReleaseFullCleanstep1: string | null
      PressReleaseFullClean: string | null
      Source_Date: string | null
      Annual_Report_Date: string | null
      PressReleaseYear: string | null
      PressReleaseMonth: string | null
      Target_sentence: string | null
      SentenceTargetYear: string | null
      Targetyear_s_: string | null
      sentence_carbon: string | null
      sentence_gender: string | null
      sentence_renewables: string | null
      sentence_suppliers: string | null
      sentence_water: string | null
      sentence_waste: string | null
      sentence_other: string | null
      id: number
    }, ExtArgs["result"]["percentageTable"]>
    composites: {}
  }

  type PercentageTableGetPayload<S extends boolean | null | undefined | PercentageTableDefaultArgs> = $Result.GetResult<Prisma.$PercentageTablePayload, S>

  type PercentageTableCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PercentageTableFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PercentageTableCountAggregateInputType | true
    }

  export interface PercentageTableDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PercentageTable'], meta: { name: 'PercentageTable' } }
    /**
     * Find zero or one PercentageTable that matches the filter.
     * @param {PercentageTableFindUniqueArgs} args - Arguments to find a PercentageTable
     * @example
     * // Get one PercentageTable
     * const percentageTable = await prisma.percentageTable.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PercentageTableFindUniqueArgs>(args: SelectSubset<T, PercentageTableFindUniqueArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PercentageTable that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PercentageTableFindUniqueOrThrowArgs} args - Arguments to find a PercentageTable
     * @example
     * // Get one PercentageTable
     * const percentageTable = await prisma.percentageTable.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PercentageTableFindUniqueOrThrowArgs>(args: SelectSubset<T, PercentageTableFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PercentageTable that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PercentageTableFindFirstArgs} args - Arguments to find a PercentageTable
     * @example
     * // Get one PercentageTable
     * const percentageTable = await prisma.percentageTable.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PercentageTableFindFirstArgs>(args?: SelectSubset<T, PercentageTableFindFirstArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PercentageTable that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PercentageTableFindFirstOrThrowArgs} args - Arguments to find a PercentageTable
     * @example
     * // Get one PercentageTable
     * const percentageTable = await prisma.percentageTable.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PercentageTableFindFirstOrThrowArgs>(args?: SelectSubset<T, PercentageTableFindFirstOrThrowArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PercentageTables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PercentageTableFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PercentageTables
     * const percentageTables = await prisma.percentageTable.findMany()
     * 
     * // Get first 10 PercentageTables
     * const percentageTables = await prisma.percentageTable.findMany({ take: 10 })
     * 
     * // Only select the `KPI_Report_Date`
     * const percentageTableWithKPI_Report_DateOnly = await prisma.percentageTable.findMany({ select: { KPI_Report_Date: true } })
     * 
     */
    findMany<T extends PercentageTableFindManyArgs>(args?: SelectSubset<T, PercentageTableFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PercentageTable.
     * @param {PercentageTableCreateArgs} args - Arguments to create a PercentageTable.
     * @example
     * // Create one PercentageTable
     * const PercentageTable = await prisma.percentageTable.create({
     *   data: {
     *     // ... data to create a PercentageTable
     *   }
     * })
     * 
     */
    create<T extends PercentageTableCreateArgs>(args: SelectSubset<T, PercentageTableCreateArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PercentageTables.
     * @param {PercentageTableCreateManyArgs} args - Arguments to create many PercentageTables.
     * @example
     * // Create many PercentageTables
     * const percentageTable = await prisma.percentageTable.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PercentageTableCreateManyArgs>(args?: SelectSubset<T, PercentageTableCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PercentageTable.
     * @param {PercentageTableDeleteArgs} args - Arguments to delete one PercentageTable.
     * @example
     * // Delete one PercentageTable
     * const PercentageTable = await prisma.percentageTable.delete({
     *   where: {
     *     // ... filter to delete one PercentageTable
     *   }
     * })
     * 
     */
    delete<T extends PercentageTableDeleteArgs>(args: SelectSubset<T, PercentageTableDeleteArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PercentageTable.
     * @param {PercentageTableUpdateArgs} args - Arguments to update one PercentageTable.
     * @example
     * // Update one PercentageTable
     * const percentageTable = await prisma.percentageTable.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PercentageTableUpdateArgs>(args: SelectSubset<T, PercentageTableUpdateArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PercentageTables.
     * @param {PercentageTableDeleteManyArgs} args - Arguments to filter PercentageTables to delete.
     * @example
     * // Delete a few PercentageTables
     * const { count } = await prisma.percentageTable.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PercentageTableDeleteManyArgs>(args?: SelectSubset<T, PercentageTableDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PercentageTables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PercentageTableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PercentageTables
     * const percentageTable = await prisma.percentageTable.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PercentageTableUpdateManyArgs>(args: SelectSubset<T, PercentageTableUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PercentageTable.
     * @param {PercentageTableUpsertArgs} args - Arguments to update or create a PercentageTable.
     * @example
     * // Update or create a PercentageTable
     * const percentageTable = await prisma.percentageTable.upsert({
     *   create: {
     *     // ... data to create a PercentageTable
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PercentageTable we want to update
     *   }
     * })
     */
    upsert<T extends PercentageTableUpsertArgs>(args: SelectSubset<T, PercentageTableUpsertArgs<ExtArgs>>): Prisma__PercentageTableClient<$Result.GetResult<Prisma.$PercentageTablePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PercentageTables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PercentageTableCountArgs} args - Arguments to filter PercentageTables to count.
     * @example
     * // Count the number of PercentageTables
     * const count = await prisma.percentageTable.count({
     *   where: {
     *     // ... the filter for the PercentageTables we want to count
     *   }
     * })
    **/
    count<T extends PercentageTableCountArgs>(
      args?: Subset<T, PercentageTableCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PercentageTableCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PercentageTable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PercentageTableAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PercentageTableAggregateArgs>(args: Subset<T, PercentageTableAggregateArgs>): Prisma.PrismaPromise<GetPercentageTableAggregateType<T>>

    /**
     * Group by PercentageTable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PercentageTableGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PercentageTableGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PercentageTableGroupByArgs['orderBy'] }
        : { orderBy?: PercentageTableGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PercentageTableGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPercentageTableGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PercentageTable model
   */
  readonly fields: PercentageTableFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PercentageTable.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PercentageTableClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PercentageTable model
   */
  interface PercentageTableFieldRefs {
    readonly KPI_Report_Date: FieldRef<"PercentageTable", 'DateTime'>
    readonly Company: FieldRef<"PercentageTable", 'String'>
    readonly Member_of_the_S_P500: FieldRef<"PercentageTable", 'String'>
    readonly Member_of_the_Russell_1000_Index: FieldRef<"PercentageTable", 'String'>
    readonly Ticker_s_: FieldRef<"PercentageTable", 'String'>
    readonly PR_Agency: FieldRef<"PercentageTable", 'String'>
    readonly Example_2020_company_PR_agency_press_release_URL: FieldRef<"PercentageTable", 'String'>
    readonly Company_Global___Main_Website_URL: FieldRef<"PercentageTable", 'String'>
    readonly Company_global_main_press___news_release_site_URL: FieldRef<"PercentageTable", 'String'>
    readonly Company_annual_reports_page_URL: FieldRef<"PercentageTable", 'String'>
    readonly Company_annual___financial_report_2020_URL_of_pdf_document: FieldRef<"PercentageTable", 'String'>
    readonly Company_sustainability___ESG_reports_page_URL: FieldRef<"PercentageTable", 'String'>
    readonly Company_Sustainability___ESG_report_2020_URL_of_pdf_document: FieldRef<"PercentageTable", 'String'>
    readonly Country: FieldRef<"PercentageTable", 'String'>
    readonly sector_code__1__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_name__1__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_code__2__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_name__2__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_code__3__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_name__3__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_code__4__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_name__4__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_code__5__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_name__5__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_codes_all__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly sector_name_all__NAICS_: FieldRef<"PercentageTable", 'String'>
    readonly climateaction100: FieldRef<"PercentageTable", 'String'>
    readonly emails: FieldRef<"PercentageTable", 'String'>
    readonly full_text: FieldRef<"PercentageTable", 'String'>
    readonly Source_link: FieldRef<"PercentageTable", 'String'>
    readonly pr_site: FieldRef<"PercentageTable", 'String'>
    readonly release_date: FieldRef<"PercentageTable", 'String'>
    readonly source: FieldRef<"PercentageTable", 'String'>
    readonly ticker: FieldRef<"PercentageTable", 'String'>
    readonly title: FieldRef<"PercentageTable", 'String'>
    readonly ArticleTargetYear: FieldRef<"PercentageTable", 'String'>
    readonly PressReleaseFullCleanstep1: FieldRef<"PercentageTable", 'String'>
    readonly PressReleaseFullClean: FieldRef<"PercentageTable", 'String'>
    readonly Source_Date: FieldRef<"PercentageTable", 'String'>
    readonly Annual_Report_Date: FieldRef<"PercentageTable", 'String'>
    readonly PressReleaseYear: FieldRef<"PercentageTable", 'String'>
    readonly PressReleaseMonth: FieldRef<"PercentageTable", 'String'>
    readonly Target_sentence: FieldRef<"PercentageTable", 'String'>
    readonly SentenceTargetYear: FieldRef<"PercentageTable", 'String'>
    readonly Targetyear_s_: FieldRef<"PercentageTable", 'String'>
    readonly sentence_carbon: FieldRef<"PercentageTable", 'String'>
    readonly sentence_gender: FieldRef<"PercentageTable", 'String'>
    readonly sentence_renewables: FieldRef<"PercentageTable", 'String'>
    readonly sentence_suppliers: FieldRef<"PercentageTable", 'String'>
    readonly sentence_water: FieldRef<"PercentageTable", 'String'>
    readonly sentence_waste: FieldRef<"PercentageTable", 'String'>
    readonly sentence_other: FieldRef<"PercentageTable", 'String'>
    readonly id: FieldRef<"PercentageTable", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PercentageTable findUnique
   */
  export type PercentageTableFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * Filter, which PercentageTable to fetch.
     */
    where: PercentageTableWhereUniqueInput
  }

  /**
   * PercentageTable findUniqueOrThrow
   */
  export type PercentageTableFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * Filter, which PercentageTable to fetch.
     */
    where: PercentageTableWhereUniqueInput
  }

  /**
   * PercentageTable findFirst
   */
  export type PercentageTableFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * Filter, which PercentageTable to fetch.
     */
    where?: PercentageTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PercentageTables to fetch.
     */
    orderBy?: PercentageTableOrderByWithRelationInput | PercentageTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PercentageTables.
     */
    cursor?: PercentageTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PercentageTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PercentageTables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PercentageTables.
     */
    distinct?: PercentageTableScalarFieldEnum | PercentageTableScalarFieldEnum[]
  }

  /**
   * PercentageTable findFirstOrThrow
   */
  export type PercentageTableFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * Filter, which PercentageTable to fetch.
     */
    where?: PercentageTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PercentageTables to fetch.
     */
    orderBy?: PercentageTableOrderByWithRelationInput | PercentageTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PercentageTables.
     */
    cursor?: PercentageTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PercentageTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PercentageTables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PercentageTables.
     */
    distinct?: PercentageTableScalarFieldEnum | PercentageTableScalarFieldEnum[]
  }

  /**
   * PercentageTable findMany
   */
  export type PercentageTableFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * Filter, which PercentageTables to fetch.
     */
    where?: PercentageTableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PercentageTables to fetch.
     */
    orderBy?: PercentageTableOrderByWithRelationInput | PercentageTableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PercentageTables.
     */
    cursor?: PercentageTableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PercentageTables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PercentageTables.
     */
    skip?: number
    distinct?: PercentageTableScalarFieldEnum | PercentageTableScalarFieldEnum[]
  }

  /**
   * PercentageTable create
   */
  export type PercentageTableCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * The data needed to create a PercentageTable.
     */
    data: XOR<PercentageTableCreateInput, PercentageTableUncheckedCreateInput>
  }

  /**
   * PercentageTable createMany
   */
  export type PercentageTableCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PercentageTables.
     */
    data: PercentageTableCreateManyInput | PercentageTableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PercentageTable update
   */
  export type PercentageTableUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * The data needed to update a PercentageTable.
     */
    data: XOR<PercentageTableUpdateInput, PercentageTableUncheckedUpdateInput>
    /**
     * Choose, which PercentageTable to update.
     */
    where: PercentageTableWhereUniqueInput
  }

  /**
   * PercentageTable updateMany
   */
  export type PercentageTableUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PercentageTables.
     */
    data: XOR<PercentageTableUpdateManyMutationInput, PercentageTableUncheckedUpdateManyInput>
    /**
     * Filter which PercentageTables to update
     */
    where?: PercentageTableWhereInput
    /**
     * Limit how many PercentageTables to update.
     */
    limit?: number
  }

  /**
   * PercentageTable upsert
   */
  export type PercentageTableUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * The filter to search for the PercentageTable to update in case it exists.
     */
    where: PercentageTableWhereUniqueInput
    /**
     * In case the PercentageTable found by the `where` argument doesn't exist, create a new PercentageTable with this data.
     */
    create: XOR<PercentageTableCreateInput, PercentageTableUncheckedCreateInput>
    /**
     * In case the PercentageTable was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PercentageTableUpdateInput, PercentageTableUncheckedUpdateInput>
  }

  /**
   * PercentageTable delete
   */
  export type PercentageTableDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
    /**
     * Filter which PercentageTable to delete.
     */
    where: PercentageTableWhereUniqueInput
  }

  /**
   * PercentageTable deleteMany
   */
  export type PercentageTableDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PercentageTables to delete
     */
    where?: PercentageTableWhereInput
    /**
     * Limit how many PercentageTables to delete.
     */
    limit?: number
  }

  /**
   * PercentageTable without action
   */
  export type PercentageTableDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PercentageTable
     */
    select?: PercentageTableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PercentageTable
     */
    omit?: PercentageTableOmit<ExtArgs> | null
  }


  /**
   * Model RoadmapCarbon
   */

  export type AggregateRoadmapCarbon = {
    _count: RoadmapCarbonCountAggregateOutputType | null
    _avg: RoadmapCarbonAvgAggregateOutputType | null
    _sum: RoadmapCarbonSumAggregateOutputType | null
    _min: RoadmapCarbonMinAggregateOutputType | null
    _max: RoadmapCarbonMaxAggregateOutputType | null
  }

  export type RoadmapCarbonAvgAggregateOutputType = {
    sector_code__1__NAICS_: number | null
    Targetyear_s__4: number | null
    Targetyear_s__5: number | null
    Targetyear_s__6: number | null
    id: number | null
  }

  export type RoadmapCarbonSumAggregateOutputType = {
    sector_code__1__NAICS_: bigint | null
    Targetyear_s__4: number | null
    Targetyear_s__5: number | null
    Targetyear_s__6: number | null
    id: number | null
  }

  export type RoadmapCarbonMinAggregateOutputType = {
    Company: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Company_Main_Website_URL: string | null
    Company_Source_site_URL: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    S_P500member: string | null
    Russell_1000_member: string | null
    Source_link_1: string | null
    Source_date_1: string | null
    Source_sentence_1: string | null
    Targetyear_s__1: string | null
    Source_link_2: string | null
    Source_date_2: string | null
    Source_sentence_2: string | null
    Targetyear_s__2: string | null
    Source_link_3: string | null
    Source_date_3: string | null
    Source_sentence_3: string | null
    Targetyear_s__3: string | null
    Source_link_4: string | null
    Source_date_4: string | null
    Source_sentence_4: string | null
    Targetyear_s__4: number | null
    Source_link_5: string | null
    Source_date_5: string | null
    Source_sentence_5: string | null
    Targetyear_s__5: number | null
    Source_link_6: string | null
    Source_date_6: string | null
    Source_sentence_6: string | null
    Targetyear_s__6: number | null
    id: number | null
  }

  export type RoadmapCarbonMaxAggregateOutputType = {
    Company: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Company_Main_Website_URL: string | null
    Company_Source_site_URL: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    S_P500member: string | null
    Russell_1000_member: string | null
    Source_link_1: string | null
    Source_date_1: string | null
    Source_sentence_1: string | null
    Targetyear_s__1: string | null
    Source_link_2: string | null
    Source_date_2: string | null
    Source_sentence_2: string | null
    Targetyear_s__2: string | null
    Source_link_3: string | null
    Source_date_3: string | null
    Source_sentence_3: string | null
    Targetyear_s__3: string | null
    Source_link_4: string | null
    Source_date_4: string | null
    Source_sentence_4: string | null
    Targetyear_s__4: number | null
    Source_link_5: string | null
    Source_date_5: string | null
    Source_sentence_5: string | null
    Targetyear_s__5: number | null
    Source_link_6: string | null
    Source_date_6: string | null
    Source_sentence_6: string | null
    Targetyear_s__6: number | null
    id: number | null
  }

  export type RoadmapCarbonCountAggregateOutputType = {
    Company: number
    Ticker_s_: number
    PR_Agency: number
    Company_Main_Website_URL: number
    Company_Source_site_URL: number
    Country: number
    sector_code__1__NAICS_: number
    sector_name__1__NAICS_: number
    sector_code__2__NAICS_: number
    sector_name__2__NAICS_: number
    sector_code__3__NAICS_: number
    sector_name__3__NAICS_: number
    sector_code__4__NAICS_: number
    sector_name__4__NAICS_: number
    sector_code__5__NAICS_: number
    sector_name__5__NAICS_: number
    S_P500member: number
    Russell_1000_member: number
    Source_link_1: number
    Source_date_1: number
    Source_sentence_1: number
    Targetyear_s__1: number
    Source_link_2: number
    Source_date_2: number
    Source_sentence_2: number
    Targetyear_s__2: number
    Source_link_3: number
    Source_date_3: number
    Source_sentence_3: number
    Targetyear_s__3: number
    Source_link_4: number
    Source_date_4: number
    Source_sentence_4: number
    Targetyear_s__4: number
    Source_link_5: number
    Source_date_5: number
    Source_sentence_5: number
    Targetyear_s__5: number
    Source_link_6: number
    Source_date_6: number
    Source_sentence_6: number
    Targetyear_s__6: number
    id: number
    _all: number
  }


  export type RoadmapCarbonAvgAggregateInputType = {
    sector_code__1__NAICS_?: true
    Targetyear_s__4?: true
    Targetyear_s__5?: true
    Targetyear_s__6?: true
    id?: true
  }

  export type RoadmapCarbonSumAggregateInputType = {
    sector_code__1__NAICS_?: true
    Targetyear_s__4?: true
    Targetyear_s__5?: true
    Targetyear_s__6?: true
    id?: true
  }

  export type RoadmapCarbonMinAggregateInputType = {
    Company?: true
    Ticker_s_?: true
    PR_Agency?: true
    Company_Main_Website_URL?: true
    Company_Source_site_URL?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    S_P500member?: true
    Russell_1000_member?: true
    Source_link_1?: true
    Source_date_1?: true
    Source_sentence_1?: true
    Targetyear_s__1?: true
    Source_link_2?: true
    Source_date_2?: true
    Source_sentence_2?: true
    Targetyear_s__2?: true
    Source_link_3?: true
    Source_date_3?: true
    Source_sentence_3?: true
    Targetyear_s__3?: true
    Source_link_4?: true
    Source_date_4?: true
    Source_sentence_4?: true
    Targetyear_s__4?: true
    Source_link_5?: true
    Source_date_5?: true
    Source_sentence_5?: true
    Targetyear_s__5?: true
    Source_link_6?: true
    Source_date_6?: true
    Source_sentence_6?: true
    Targetyear_s__6?: true
    id?: true
  }

  export type RoadmapCarbonMaxAggregateInputType = {
    Company?: true
    Ticker_s_?: true
    PR_Agency?: true
    Company_Main_Website_URL?: true
    Company_Source_site_URL?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    S_P500member?: true
    Russell_1000_member?: true
    Source_link_1?: true
    Source_date_1?: true
    Source_sentence_1?: true
    Targetyear_s__1?: true
    Source_link_2?: true
    Source_date_2?: true
    Source_sentence_2?: true
    Targetyear_s__2?: true
    Source_link_3?: true
    Source_date_3?: true
    Source_sentence_3?: true
    Targetyear_s__3?: true
    Source_link_4?: true
    Source_date_4?: true
    Source_sentence_4?: true
    Targetyear_s__4?: true
    Source_link_5?: true
    Source_date_5?: true
    Source_sentence_5?: true
    Targetyear_s__5?: true
    Source_link_6?: true
    Source_date_6?: true
    Source_sentence_6?: true
    Targetyear_s__6?: true
    id?: true
  }

  export type RoadmapCarbonCountAggregateInputType = {
    Company?: true
    Ticker_s_?: true
    PR_Agency?: true
    Company_Main_Website_URL?: true
    Company_Source_site_URL?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    S_P500member?: true
    Russell_1000_member?: true
    Source_link_1?: true
    Source_date_1?: true
    Source_sentence_1?: true
    Targetyear_s__1?: true
    Source_link_2?: true
    Source_date_2?: true
    Source_sentence_2?: true
    Targetyear_s__2?: true
    Source_link_3?: true
    Source_date_3?: true
    Source_sentence_3?: true
    Targetyear_s__3?: true
    Source_link_4?: true
    Source_date_4?: true
    Source_sentence_4?: true
    Targetyear_s__4?: true
    Source_link_5?: true
    Source_date_5?: true
    Source_sentence_5?: true
    Targetyear_s__5?: true
    Source_link_6?: true
    Source_date_6?: true
    Source_sentence_6?: true
    Targetyear_s__6?: true
    id?: true
    _all?: true
  }

  export type RoadmapCarbonAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoadmapCarbon to aggregate.
     */
    where?: RoadmapCarbonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoadmapCarbons to fetch.
     */
    orderBy?: RoadmapCarbonOrderByWithRelationInput | RoadmapCarbonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoadmapCarbonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoadmapCarbons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoadmapCarbons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RoadmapCarbons
    **/
    _count?: true | RoadmapCarbonCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoadmapCarbonAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoadmapCarbonSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoadmapCarbonMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoadmapCarbonMaxAggregateInputType
  }

  export type GetRoadmapCarbonAggregateType<T extends RoadmapCarbonAggregateArgs> = {
        [P in keyof T & keyof AggregateRoadmapCarbon]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoadmapCarbon[P]>
      : GetScalarType<T[P], AggregateRoadmapCarbon[P]>
  }




  export type RoadmapCarbonGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoadmapCarbonWhereInput
    orderBy?: RoadmapCarbonOrderByWithAggregationInput | RoadmapCarbonOrderByWithAggregationInput[]
    by: RoadmapCarbonScalarFieldEnum[] | RoadmapCarbonScalarFieldEnum
    having?: RoadmapCarbonScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoadmapCarbonCountAggregateInputType | true
    _avg?: RoadmapCarbonAvgAggregateInputType
    _sum?: RoadmapCarbonSumAggregateInputType
    _min?: RoadmapCarbonMinAggregateInputType
    _max?: RoadmapCarbonMaxAggregateInputType
  }

  export type RoadmapCarbonGroupByOutputType = {
    Company: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Company_Main_Website_URL: string | null
    Company_Source_site_URL: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    S_P500member: string | null
    Russell_1000_member: string | null
    Source_link_1: string | null
    Source_date_1: string | null
    Source_sentence_1: string | null
    Targetyear_s__1: string | null
    Source_link_2: string | null
    Source_date_2: string | null
    Source_sentence_2: string | null
    Targetyear_s__2: string | null
    Source_link_3: string | null
    Source_date_3: string | null
    Source_sentence_3: string | null
    Targetyear_s__3: string | null
    Source_link_4: string | null
    Source_date_4: string | null
    Source_sentence_4: string | null
    Targetyear_s__4: number | null
    Source_link_5: string | null
    Source_date_5: string | null
    Source_sentence_5: string | null
    Targetyear_s__5: number | null
    Source_link_6: string | null
    Source_date_6: string | null
    Source_sentence_6: string | null
    Targetyear_s__6: number | null
    id: number
    _count: RoadmapCarbonCountAggregateOutputType | null
    _avg: RoadmapCarbonAvgAggregateOutputType | null
    _sum: RoadmapCarbonSumAggregateOutputType | null
    _min: RoadmapCarbonMinAggregateOutputType | null
    _max: RoadmapCarbonMaxAggregateOutputType | null
  }

  type GetRoadmapCarbonGroupByPayload<T extends RoadmapCarbonGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoadmapCarbonGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoadmapCarbonGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoadmapCarbonGroupByOutputType[P]>
            : GetScalarType<T[P], RoadmapCarbonGroupByOutputType[P]>
        }
      >
    >


  export type RoadmapCarbonSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Company?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Company_Main_Website_URL?: boolean
    Company_Source_site_URL?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    S_P500member?: boolean
    Russell_1000_member?: boolean
    Source_link_1?: boolean
    Source_date_1?: boolean
    Source_sentence_1?: boolean
    Targetyear_s__1?: boolean
    Source_link_2?: boolean
    Source_date_2?: boolean
    Source_sentence_2?: boolean
    Targetyear_s__2?: boolean
    Source_link_3?: boolean
    Source_date_3?: boolean
    Source_sentence_3?: boolean
    Targetyear_s__3?: boolean
    Source_link_4?: boolean
    Source_date_4?: boolean
    Source_sentence_4?: boolean
    Targetyear_s__4?: boolean
    Source_link_5?: boolean
    Source_date_5?: boolean
    Source_sentence_5?: boolean
    Targetyear_s__5?: boolean
    Source_link_6?: boolean
    Source_date_6?: boolean
    Source_sentence_6?: boolean
    Targetyear_s__6?: boolean
    id?: boolean
  }, ExtArgs["result"]["roadmapCarbon"]>



  export type RoadmapCarbonSelectScalar = {
    Company?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Company_Main_Website_URL?: boolean
    Company_Source_site_URL?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    S_P500member?: boolean
    Russell_1000_member?: boolean
    Source_link_1?: boolean
    Source_date_1?: boolean
    Source_sentence_1?: boolean
    Targetyear_s__1?: boolean
    Source_link_2?: boolean
    Source_date_2?: boolean
    Source_sentence_2?: boolean
    Targetyear_s__2?: boolean
    Source_link_3?: boolean
    Source_date_3?: boolean
    Source_sentence_3?: boolean
    Targetyear_s__3?: boolean
    Source_link_4?: boolean
    Source_date_4?: boolean
    Source_sentence_4?: boolean
    Targetyear_s__4?: boolean
    Source_link_5?: boolean
    Source_date_5?: boolean
    Source_sentence_5?: boolean
    Targetyear_s__5?: boolean
    Source_link_6?: boolean
    Source_date_6?: boolean
    Source_sentence_6?: boolean
    Targetyear_s__6?: boolean
    id?: boolean
  }

  export type RoadmapCarbonOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Company" | "Ticker_s_" | "PR_Agency" | "Company_Main_Website_URL" | "Company_Source_site_URL" | "Country" | "sector_code__1__NAICS_" | "sector_name__1__NAICS_" | "sector_code__2__NAICS_" | "sector_name__2__NAICS_" | "sector_code__3__NAICS_" | "sector_name__3__NAICS_" | "sector_code__4__NAICS_" | "sector_name__4__NAICS_" | "sector_code__5__NAICS_" | "sector_name__5__NAICS_" | "S_P500member" | "Russell_1000_member" | "Source_link_1" | "Source_date_1" | "Source_sentence_1" | "Targetyear_s__1" | "Source_link_2" | "Source_date_2" | "Source_sentence_2" | "Targetyear_s__2" | "Source_link_3" | "Source_date_3" | "Source_sentence_3" | "Targetyear_s__3" | "Source_link_4" | "Source_date_4" | "Source_sentence_4" | "Targetyear_s__4" | "Source_link_5" | "Source_date_5" | "Source_sentence_5" | "Targetyear_s__5" | "Source_link_6" | "Source_date_6" | "Source_sentence_6" | "Targetyear_s__6" | "id", ExtArgs["result"]["roadmapCarbon"]>

  export type $RoadmapCarbonPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RoadmapCarbon"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Company: string | null
      Ticker_s_: string | null
      PR_Agency: string | null
      Company_Main_Website_URL: string | null
      Company_Source_site_URL: string | null
      Country: string | null
      sector_code__1__NAICS_: bigint | null
      sector_name__1__NAICS_: string | null
      sector_code__2__NAICS_: string | null
      sector_name__2__NAICS_: string | null
      sector_code__3__NAICS_: string | null
      sector_name__3__NAICS_: string | null
      sector_code__4__NAICS_: string | null
      sector_name__4__NAICS_: string | null
      sector_code__5__NAICS_: string | null
      sector_name__5__NAICS_: string | null
      S_P500member: string | null
      Russell_1000_member: string | null
      Source_link_1: string | null
      Source_date_1: string | null
      Source_sentence_1: string | null
      Targetyear_s__1: string | null
      Source_link_2: string | null
      Source_date_2: string | null
      Source_sentence_2: string | null
      Targetyear_s__2: string | null
      Source_link_3: string | null
      Source_date_3: string | null
      Source_sentence_3: string | null
      Targetyear_s__3: string | null
      Source_link_4: string | null
      Source_date_4: string | null
      Source_sentence_4: string | null
      Targetyear_s__4: number | null
      Source_link_5: string | null
      Source_date_5: string | null
      Source_sentence_5: string | null
      Targetyear_s__5: number | null
      Source_link_6: string | null
      Source_date_6: string | null
      Source_sentence_6: string | null
      Targetyear_s__6: number | null
      id: number
    }, ExtArgs["result"]["roadmapCarbon"]>
    composites: {}
  }

  type RoadmapCarbonGetPayload<S extends boolean | null | undefined | RoadmapCarbonDefaultArgs> = $Result.GetResult<Prisma.$RoadmapCarbonPayload, S>

  type RoadmapCarbonCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<RoadmapCarbonFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RoadmapCarbonCountAggregateInputType | true
    }

  export interface RoadmapCarbonDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RoadmapCarbon'], meta: { name: 'RoadmapCarbon' } }
    /**
     * Find zero or one RoadmapCarbon that matches the filter.
     * @param {RoadmapCarbonFindUniqueArgs} args - Arguments to find a RoadmapCarbon
     * @example
     * // Get one RoadmapCarbon
     * const roadmapCarbon = await prisma.roadmapCarbon.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoadmapCarbonFindUniqueArgs>(args: SelectSubset<T, RoadmapCarbonFindUniqueArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one RoadmapCarbon that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {RoadmapCarbonFindUniqueOrThrowArgs} args - Arguments to find a RoadmapCarbon
     * @example
     * // Get one RoadmapCarbon
     * const roadmapCarbon = await prisma.roadmapCarbon.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoadmapCarbonFindUniqueOrThrowArgs>(args: SelectSubset<T, RoadmapCarbonFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoadmapCarbon that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoadmapCarbonFindFirstArgs} args - Arguments to find a RoadmapCarbon
     * @example
     * // Get one RoadmapCarbon
     * const roadmapCarbon = await prisma.roadmapCarbon.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoadmapCarbonFindFirstArgs>(args?: SelectSubset<T, RoadmapCarbonFindFirstArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first RoadmapCarbon that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoadmapCarbonFindFirstOrThrowArgs} args - Arguments to find a RoadmapCarbon
     * @example
     * // Get one RoadmapCarbon
     * const roadmapCarbon = await prisma.roadmapCarbon.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoadmapCarbonFindFirstOrThrowArgs>(args?: SelectSubset<T, RoadmapCarbonFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more RoadmapCarbons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoadmapCarbonFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RoadmapCarbons
     * const roadmapCarbons = await prisma.roadmapCarbon.findMany()
     * 
     * // Get first 10 RoadmapCarbons
     * const roadmapCarbons = await prisma.roadmapCarbon.findMany({ take: 10 })
     * 
     * // Only select the `Company`
     * const roadmapCarbonWithCompanyOnly = await prisma.roadmapCarbon.findMany({ select: { Company: true } })
     * 
     */
    findMany<T extends RoadmapCarbonFindManyArgs>(args?: SelectSubset<T, RoadmapCarbonFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a RoadmapCarbon.
     * @param {RoadmapCarbonCreateArgs} args - Arguments to create a RoadmapCarbon.
     * @example
     * // Create one RoadmapCarbon
     * const RoadmapCarbon = await prisma.roadmapCarbon.create({
     *   data: {
     *     // ... data to create a RoadmapCarbon
     *   }
     * })
     * 
     */
    create<T extends RoadmapCarbonCreateArgs>(args: SelectSubset<T, RoadmapCarbonCreateArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many RoadmapCarbons.
     * @param {RoadmapCarbonCreateManyArgs} args - Arguments to create many RoadmapCarbons.
     * @example
     * // Create many RoadmapCarbons
     * const roadmapCarbon = await prisma.roadmapCarbon.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoadmapCarbonCreateManyArgs>(args?: SelectSubset<T, RoadmapCarbonCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RoadmapCarbon.
     * @param {RoadmapCarbonDeleteArgs} args - Arguments to delete one RoadmapCarbon.
     * @example
     * // Delete one RoadmapCarbon
     * const RoadmapCarbon = await prisma.roadmapCarbon.delete({
     *   where: {
     *     // ... filter to delete one RoadmapCarbon
     *   }
     * })
     * 
     */
    delete<T extends RoadmapCarbonDeleteArgs>(args: SelectSubset<T, RoadmapCarbonDeleteArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one RoadmapCarbon.
     * @param {RoadmapCarbonUpdateArgs} args - Arguments to update one RoadmapCarbon.
     * @example
     * // Update one RoadmapCarbon
     * const roadmapCarbon = await prisma.roadmapCarbon.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoadmapCarbonUpdateArgs>(args: SelectSubset<T, RoadmapCarbonUpdateArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more RoadmapCarbons.
     * @param {RoadmapCarbonDeleteManyArgs} args - Arguments to filter RoadmapCarbons to delete.
     * @example
     * // Delete a few RoadmapCarbons
     * const { count } = await prisma.roadmapCarbon.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoadmapCarbonDeleteManyArgs>(args?: SelectSubset<T, RoadmapCarbonDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RoadmapCarbons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoadmapCarbonUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RoadmapCarbons
     * const roadmapCarbon = await prisma.roadmapCarbon.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoadmapCarbonUpdateManyArgs>(args: SelectSubset<T, RoadmapCarbonUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RoadmapCarbon.
     * @param {RoadmapCarbonUpsertArgs} args - Arguments to update or create a RoadmapCarbon.
     * @example
     * // Update or create a RoadmapCarbon
     * const roadmapCarbon = await prisma.roadmapCarbon.upsert({
     *   create: {
     *     // ... data to create a RoadmapCarbon
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RoadmapCarbon we want to update
     *   }
     * })
     */
    upsert<T extends RoadmapCarbonUpsertArgs>(args: SelectSubset<T, RoadmapCarbonUpsertArgs<ExtArgs>>): Prisma__RoadmapCarbonClient<$Result.GetResult<Prisma.$RoadmapCarbonPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of RoadmapCarbons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoadmapCarbonCountArgs} args - Arguments to filter RoadmapCarbons to count.
     * @example
     * // Count the number of RoadmapCarbons
     * const count = await prisma.roadmapCarbon.count({
     *   where: {
     *     // ... the filter for the RoadmapCarbons we want to count
     *   }
     * })
    **/
    count<T extends RoadmapCarbonCountArgs>(
      args?: Subset<T, RoadmapCarbonCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoadmapCarbonCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RoadmapCarbon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoadmapCarbonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoadmapCarbonAggregateArgs>(args: Subset<T, RoadmapCarbonAggregateArgs>): Prisma.PrismaPromise<GetRoadmapCarbonAggregateType<T>>

    /**
     * Group by RoadmapCarbon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoadmapCarbonGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoadmapCarbonGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoadmapCarbonGroupByArgs['orderBy'] }
        : { orderBy?: RoadmapCarbonGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoadmapCarbonGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoadmapCarbonGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RoadmapCarbon model
   */
  readonly fields: RoadmapCarbonFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RoadmapCarbon.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoadmapCarbonClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RoadmapCarbon model
   */
  interface RoadmapCarbonFieldRefs {
    readonly Company: FieldRef<"RoadmapCarbon", 'String'>
    readonly Ticker_s_: FieldRef<"RoadmapCarbon", 'String'>
    readonly PR_Agency: FieldRef<"RoadmapCarbon", 'String'>
    readonly Company_Main_Website_URL: FieldRef<"RoadmapCarbon", 'String'>
    readonly Company_Source_site_URL: FieldRef<"RoadmapCarbon", 'String'>
    readonly Country: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_code__1__NAICS_: FieldRef<"RoadmapCarbon", 'BigInt'>
    readonly sector_name__1__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_code__2__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_name__2__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_code__3__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_name__3__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_code__4__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_name__4__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_code__5__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly sector_name__5__NAICS_: FieldRef<"RoadmapCarbon", 'String'>
    readonly S_P500member: FieldRef<"RoadmapCarbon", 'String'>
    readonly Russell_1000_member: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_link_1: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_date_1: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_sentence_1: FieldRef<"RoadmapCarbon", 'String'>
    readonly Targetyear_s__1: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_link_2: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_date_2: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_sentence_2: FieldRef<"RoadmapCarbon", 'String'>
    readonly Targetyear_s__2: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_link_3: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_date_3: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_sentence_3: FieldRef<"RoadmapCarbon", 'String'>
    readonly Targetyear_s__3: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_link_4: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_date_4: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_sentence_4: FieldRef<"RoadmapCarbon", 'String'>
    readonly Targetyear_s__4: FieldRef<"RoadmapCarbon", 'Float'>
    readonly Source_link_5: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_date_5: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_sentence_5: FieldRef<"RoadmapCarbon", 'String'>
    readonly Targetyear_s__5: FieldRef<"RoadmapCarbon", 'Float'>
    readonly Source_link_6: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_date_6: FieldRef<"RoadmapCarbon", 'String'>
    readonly Source_sentence_6: FieldRef<"RoadmapCarbon", 'String'>
    readonly Targetyear_s__6: FieldRef<"RoadmapCarbon", 'Float'>
    readonly id: FieldRef<"RoadmapCarbon", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * RoadmapCarbon findUnique
   */
  export type RoadmapCarbonFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * Filter, which RoadmapCarbon to fetch.
     */
    where: RoadmapCarbonWhereUniqueInput
  }

  /**
   * RoadmapCarbon findUniqueOrThrow
   */
  export type RoadmapCarbonFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * Filter, which RoadmapCarbon to fetch.
     */
    where: RoadmapCarbonWhereUniqueInput
  }

  /**
   * RoadmapCarbon findFirst
   */
  export type RoadmapCarbonFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * Filter, which RoadmapCarbon to fetch.
     */
    where?: RoadmapCarbonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoadmapCarbons to fetch.
     */
    orderBy?: RoadmapCarbonOrderByWithRelationInput | RoadmapCarbonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoadmapCarbons.
     */
    cursor?: RoadmapCarbonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoadmapCarbons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoadmapCarbons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoadmapCarbons.
     */
    distinct?: RoadmapCarbonScalarFieldEnum | RoadmapCarbonScalarFieldEnum[]
  }

  /**
   * RoadmapCarbon findFirstOrThrow
   */
  export type RoadmapCarbonFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * Filter, which RoadmapCarbon to fetch.
     */
    where?: RoadmapCarbonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoadmapCarbons to fetch.
     */
    orderBy?: RoadmapCarbonOrderByWithRelationInput | RoadmapCarbonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RoadmapCarbons.
     */
    cursor?: RoadmapCarbonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoadmapCarbons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoadmapCarbons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RoadmapCarbons.
     */
    distinct?: RoadmapCarbonScalarFieldEnum | RoadmapCarbonScalarFieldEnum[]
  }

  /**
   * RoadmapCarbon findMany
   */
  export type RoadmapCarbonFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * Filter, which RoadmapCarbons to fetch.
     */
    where?: RoadmapCarbonWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RoadmapCarbons to fetch.
     */
    orderBy?: RoadmapCarbonOrderByWithRelationInput | RoadmapCarbonOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RoadmapCarbons.
     */
    cursor?: RoadmapCarbonWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RoadmapCarbons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RoadmapCarbons.
     */
    skip?: number
    distinct?: RoadmapCarbonScalarFieldEnum | RoadmapCarbonScalarFieldEnum[]
  }

  /**
   * RoadmapCarbon create
   */
  export type RoadmapCarbonCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * The data needed to create a RoadmapCarbon.
     */
    data?: XOR<RoadmapCarbonCreateInput, RoadmapCarbonUncheckedCreateInput>
  }

  /**
   * RoadmapCarbon createMany
   */
  export type RoadmapCarbonCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RoadmapCarbons.
     */
    data: RoadmapCarbonCreateManyInput | RoadmapCarbonCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RoadmapCarbon update
   */
  export type RoadmapCarbonUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * The data needed to update a RoadmapCarbon.
     */
    data: XOR<RoadmapCarbonUpdateInput, RoadmapCarbonUncheckedUpdateInput>
    /**
     * Choose, which RoadmapCarbon to update.
     */
    where: RoadmapCarbonWhereUniqueInput
  }

  /**
   * RoadmapCarbon updateMany
   */
  export type RoadmapCarbonUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RoadmapCarbons.
     */
    data: XOR<RoadmapCarbonUpdateManyMutationInput, RoadmapCarbonUncheckedUpdateManyInput>
    /**
     * Filter which RoadmapCarbons to update
     */
    where?: RoadmapCarbonWhereInput
    /**
     * Limit how many RoadmapCarbons to update.
     */
    limit?: number
  }

  /**
   * RoadmapCarbon upsert
   */
  export type RoadmapCarbonUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * The filter to search for the RoadmapCarbon to update in case it exists.
     */
    where: RoadmapCarbonWhereUniqueInput
    /**
     * In case the RoadmapCarbon found by the `where` argument doesn't exist, create a new RoadmapCarbon with this data.
     */
    create: XOR<RoadmapCarbonCreateInput, RoadmapCarbonUncheckedCreateInput>
    /**
     * In case the RoadmapCarbon was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoadmapCarbonUpdateInput, RoadmapCarbonUncheckedUpdateInput>
  }

  /**
   * RoadmapCarbon delete
   */
  export type RoadmapCarbonDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
    /**
     * Filter which RoadmapCarbon to delete.
     */
    where: RoadmapCarbonWhereUniqueInput
  }

  /**
   * RoadmapCarbon deleteMany
   */
  export type RoadmapCarbonDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RoadmapCarbons to delete
     */
    where?: RoadmapCarbonWhereInput
    /**
     * Limit how many RoadmapCarbons to delete.
     */
    limit?: number
  }

  /**
   * RoadmapCarbon without action
   */
  export type RoadmapCarbonDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoadmapCarbon
     */
    select?: RoadmapCarbonSelect<ExtArgs> | null
    /**
     * Omit specific fields from the RoadmapCarbon
     */
    omit?: RoadmapCarbonOmit<ExtArgs> | null
  }


  /**
   * Model SentenceAll
   */

  export type AggregateSentenceAll = {
    _count: SentenceAllCountAggregateOutputType | null
    _avg: SentenceAllAvgAggregateOutputType | null
    _sum: SentenceAllSumAggregateOutputType | null
    _min: SentenceAllMinAggregateOutputType | null
    _max: SentenceAllMaxAggregateOutputType | null
  }

  export type SentenceAllAvgAggregateOutputType = {
    sentence_carbon: number | null
    sentence_renewables: number | null
    sentence_suppliers: number | null
    sentence_gender: number | null
    sentence_other: number | null
    sentence_waste: number | null
    sentence_water: number | null
    id: number | null
  }

  export type SentenceAllSumAggregateOutputType = {
    sentence_carbon: bigint | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    sentence_other: bigint | null
    sentence_waste: bigint | null
    sentence_water: bigint | null
    id: number | null
  }

  export type SentenceAllMinAggregateOutputType = {
    release_date: string | null
    Targetyear_s_: string | null
    pr_site: string | null
    ArticleTargetYear: string | null
    sentence_carbon: bigint | null
    full_text: string | null
    PressReleaseMonth: string | null
    PressReleaseFullClean: string | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    Company: string | null
    Annual_Report_Date: string | null
    title: string | null
    emails: string | null
    sentence_other: bigint | null
    Source_link: string | null
    Source_Date: string | null
    PressReleaseFullCleanstep1: string | null
    sentence_waste: bigint | null
    source: string | null
    sentence_water: bigint | null
    PressReleaseYear: string | null
    ticker: string | null
    SentenceTargetYear: string | null
    Target_sentence: string | null
    upload_date: string | null
    id: number | null
    PageURL: string | null
    DocURL: string | null
    DocTitle: string | null
    DocName: string | null
    Target_Sentence_Page: string | null
  }

  export type SentenceAllMaxAggregateOutputType = {
    release_date: string | null
    Targetyear_s_: string | null
    pr_site: string | null
    ArticleTargetYear: string | null
    sentence_carbon: bigint | null
    full_text: string | null
    PressReleaseMonth: string | null
    PressReleaseFullClean: string | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    Company: string | null
    Annual_Report_Date: string | null
    title: string | null
    emails: string | null
    sentence_other: bigint | null
    Source_link: string | null
    Source_Date: string | null
    PressReleaseFullCleanstep1: string | null
    sentence_waste: bigint | null
    source: string | null
    sentence_water: bigint | null
    PressReleaseYear: string | null
    ticker: string | null
    SentenceTargetYear: string | null
    Target_sentence: string | null
    upload_date: string | null
    id: number | null
    PageURL: string | null
    DocURL: string | null
    DocTitle: string | null
    DocName: string | null
    Target_Sentence_Page: string | null
  }

  export type SentenceAllCountAggregateOutputType = {
    release_date: number
    Targetyear_s_: number
    pr_site: number
    ArticleTargetYear: number
    sentence_carbon: number
    full_text: number
    PressReleaseMonth: number
    PressReleaseFullClean: number
    sentence_renewables: number
    sentence_suppliers: number
    sentence_gender: number
    Company: number
    Annual_Report_Date: number
    title: number
    emails: number
    sentence_other: number
    Source_link: number
    Source_Date: number
    PressReleaseFullCleanstep1: number
    sentence_waste: number
    source: number
    sentence_water: number
    PressReleaseYear: number
    ticker: number
    SentenceTargetYear: number
    Target_sentence: number
    upload_date: number
    id: number
    PageURL: number
    DocURL: number
    DocTitle: number
    DocName: number
    Target_Sentence_Page: number
    _all: number
  }


  export type SentenceAllAvgAggregateInputType = {
    sentence_carbon?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    sentence_other?: true
    sentence_waste?: true
    sentence_water?: true
    id?: true
  }

  export type SentenceAllSumAggregateInputType = {
    sentence_carbon?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    sentence_other?: true
    sentence_waste?: true
    sentence_water?: true
    id?: true
  }

  export type SentenceAllMinAggregateInputType = {
    release_date?: true
    Targetyear_s_?: true
    pr_site?: true
    ArticleTargetYear?: true
    sentence_carbon?: true
    full_text?: true
    PressReleaseMonth?: true
    PressReleaseFullClean?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    Company?: true
    Annual_Report_Date?: true
    title?: true
    emails?: true
    sentence_other?: true
    Source_link?: true
    Source_Date?: true
    PressReleaseFullCleanstep1?: true
    sentence_waste?: true
    source?: true
    sentence_water?: true
    PressReleaseYear?: true
    ticker?: true
    SentenceTargetYear?: true
    Target_sentence?: true
    upload_date?: true
    id?: true
    PageURL?: true
    DocURL?: true
    DocTitle?: true
    DocName?: true
    Target_Sentence_Page?: true
  }

  export type SentenceAllMaxAggregateInputType = {
    release_date?: true
    Targetyear_s_?: true
    pr_site?: true
    ArticleTargetYear?: true
    sentence_carbon?: true
    full_text?: true
    PressReleaseMonth?: true
    PressReleaseFullClean?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    Company?: true
    Annual_Report_Date?: true
    title?: true
    emails?: true
    sentence_other?: true
    Source_link?: true
    Source_Date?: true
    PressReleaseFullCleanstep1?: true
    sentence_waste?: true
    source?: true
    sentence_water?: true
    PressReleaseYear?: true
    ticker?: true
    SentenceTargetYear?: true
    Target_sentence?: true
    upload_date?: true
    id?: true
    PageURL?: true
    DocURL?: true
    DocTitle?: true
    DocName?: true
    Target_Sentence_Page?: true
  }

  export type SentenceAllCountAggregateInputType = {
    release_date?: true
    Targetyear_s_?: true
    pr_site?: true
    ArticleTargetYear?: true
    sentence_carbon?: true
    full_text?: true
    PressReleaseMonth?: true
    PressReleaseFullClean?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    Company?: true
    Annual_Report_Date?: true
    title?: true
    emails?: true
    sentence_other?: true
    Source_link?: true
    Source_Date?: true
    PressReleaseFullCleanstep1?: true
    sentence_waste?: true
    source?: true
    sentence_water?: true
    PressReleaseYear?: true
    ticker?: true
    SentenceTargetYear?: true
    Target_sentence?: true
    upload_date?: true
    id?: true
    PageURL?: true
    DocURL?: true
    DocTitle?: true
    DocName?: true
    Target_Sentence_Page?: true
    _all?: true
  }

  export type SentenceAllAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SentenceAll to aggregate.
     */
    where?: SentenceAllWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentenceAlls to fetch.
     */
    orderBy?: SentenceAllOrderByWithRelationInput | SentenceAllOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SentenceAllWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentenceAlls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentenceAlls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SentenceAlls
    **/
    _count?: true | SentenceAllCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SentenceAllAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SentenceAllSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SentenceAllMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SentenceAllMaxAggregateInputType
  }

  export type GetSentenceAllAggregateType<T extends SentenceAllAggregateArgs> = {
        [P in keyof T & keyof AggregateSentenceAll]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSentenceAll[P]>
      : GetScalarType<T[P], AggregateSentenceAll[P]>
  }




  export type SentenceAllGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SentenceAllWhereInput
    orderBy?: SentenceAllOrderByWithAggregationInput | SentenceAllOrderByWithAggregationInput[]
    by: SentenceAllScalarFieldEnum[] | SentenceAllScalarFieldEnum
    having?: SentenceAllScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SentenceAllCountAggregateInputType | true
    _avg?: SentenceAllAvgAggregateInputType
    _sum?: SentenceAllSumAggregateInputType
    _min?: SentenceAllMinAggregateInputType
    _max?: SentenceAllMaxAggregateInputType
  }

  export type SentenceAllGroupByOutputType = {
    release_date: string | null
    Targetyear_s_: string | null
    pr_site: string | null
    ArticleTargetYear: string | null
    sentence_carbon: bigint | null
    full_text: string | null
    PressReleaseMonth: string | null
    PressReleaseFullClean: string | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    Company: string | null
    Annual_Report_Date: string | null
    title: string | null
    emails: string | null
    sentence_other: bigint | null
    Source_link: string | null
    Source_Date: string | null
    PressReleaseFullCleanstep1: string | null
    sentence_waste: bigint | null
    source: string | null
    sentence_water: bigint | null
    PressReleaseYear: string | null
    ticker: string | null
    SentenceTargetYear: string | null
    Target_sentence: string | null
    upload_date: string | null
    id: number
    PageURL: string | null
    DocURL: string | null
    DocTitle: string | null
    DocName: string | null
    Target_Sentence_Page: string | null
    _count: SentenceAllCountAggregateOutputType | null
    _avg: SentenceAllAvgAggregateOutputType | null
    _sum: SentenceAllSumAggregateOutputType | null
    _min: SentenceAllMinAggregateOutputType | null
    _max: SentenceAllMaxAggregateOutputType | null
  }

  type GetSentenceAllGroupByPayload<T extends SentenceAllGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SentenceAllGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SentenceAllGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SentenceAllGroupByOutputType[P]>
            : GetScalarType<T[P], SentenceAllGroupByOutputType[P]>
        }
      >
    >


  export type SentenceAllSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    release_date?: boolean
    Targetyear_s_?: boolean
    pr_site?: boolean
    ArticleTargetYear?: boolean
    sentence_carbon?: boolean
    full_text?: boolean
    PressReleaseMonth?: boolean
    PressReleaseFullClean?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_gender?: boolean
    Company?: boolean
    Annual_Report_Date?: boolean
    title?: boolean
    emails?: boolean
    sentence_other?: boolean
    Source_link?: boolean
    Source_Date?: boolean
    PressReleaseFullCleanstep1?: boolean
    sentence_waste?: boolean
    source?: boolean
    sentence_water?: boolean
    PressReleaseYear?: boolean
    ticker?: boolean
    SentenceTargetYear?: boolean
    Target_sentence?: boolean
    upload_date?: boolean
    id?: boolean
    PageURL?: boolean
    DocURL?: boolean
    DocTitle?: boolean
    DocName?: boolean
    Target_Sentence_Page?: boolean
  }, ExtArgs["result"]["sentenceAll"]>



  export type SentenceAllSelectScalar = {
    release_date?: boolean
    Targetyear_s_?: boolean
    pr_site?: boolean
    ArticleTargetYear?: boolean
    sentence_carbon?: boolean
    full_text?: boolean
    PressReleaseMonth?: boolean
    PressReleaseFullClean?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_gender?: boolean
    Company?: boolean
    Annual_Report_Date?: boolean
    title?: boolean
    emails?: boolean
    sentence_other?: boolean
    Source_link?: boolean
    Source_Date?: boolean
    PressReleaseFullCleanstep1?: boolean
    sentence_waste?: boolean
    source?: boolean
    sentence_water?: boolean
    PressReleaseYear?: boolean
    ticker?: boolean
    SentenceTargetYear?: boolean
    Target_sentence?: boolean
    upload_date?: boolean
    id?: boolean
    PageURL?: boolean
    DocURL?: boolean
    DocTitle?: boolean
    DocName?: boolean
    Target_Sentence_Page?: boolean
  }

  export type SentenceAllOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"release_date" | "Targetyear_s_" | "pr_site" | "ArticleTargetYear" | "sentence_carbon" | "full_text" | "PressReleaseMonth" | "PressReleaseFullClean" | "sentence_renewables" | "sentence_suppliers" | "sentence_gender" | "Company" | "Annual_Report_Date" | "title" | "emails" | "sentence_other" | "Source_link" | "Source_Date" | "PressReleaseFullCleanstep1" | "sentence_waste" | "source" | "sentence_water" | "PressReleaseYear" | "ticker" | "SentenceTargetYear" | "Target_sentence" | "upload_date" | "id" | "PageURL" | "DocURL" | "DocTitle" | "DocName" | "Target_Sentence_Page", ExtArgs["result"]["sentenceAll"]>

  export type $SentenceAllPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SentenceAll"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      release_date: string | null
      Targetyear_s_: string | null
      pr_site: string | null
      ArticleTargetYear: string | null
      sentence_carbon: bigint | null
      full_text: string | null
      PressReleaseMonth: string | null
      PressReleaseFullClean: string | null
      sentence_renewables: bigint | null
      sentence_suppliers: bigint | null
      sentence_gender: bigint | null
      Company: string | null
      Annual_Report_Date: string | null
      title: string | null
      emails: string | null
      sentence_other: bigint | null
      Source_link: string | null
      Source_Date: string | null
      PressReleaseFullCleanstep1: string | null
      sentence_waste: bigint | null
      source: string | null
      sentence_water: bigint | null
      PressReleaseYear: string | null
      ticker: string | null
      SentenceTargetYear: string | null
      Target_sentence: string | null
      upload_date: string | null
      id: number
      PageURL: string | null
      DocURL: string | null
      DocTitle: string | null
      DocName: string | null
      Target_Sentence_Page: string | null
    }, ExtArgs["result"]["sentenceAll"]>
    composites: {}
  }

  type SentenceAllGetPayload<S extends boolean | null | undefined | SentenceAllDefaultArgs> = $Result.GetResult<Prisma.$SentenceAllPayload, S>

  type SentenceAllCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SentenceAllFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SentenceAllCountAggregateInputType | true
    }

  export interface SentenceAllDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SentenceAll'], meta: { name: 'SentenceAll' } }
    /**
     * Find zero or one SentenceAll that matches the filter.
     * @param {SentenceAllFindUniqueArgs} args - Arguments to find a SentenceAll
     * @example
     * // Get one SentenceAll
     * const sentenceAll = await prisma.sentenceAll.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SentenceAllFindUniqueArgs>(args: SelectSubset<T, SentenceAllFindUniqueArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one SentenceAll that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SentenceAllFindUniqueOrThrowArgs} args - Arguments to find a SentenceAll
     * @example
     * // Get one SentenceAll
     * const sentenceAll = await prisma.sentenceAll.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SentenceAllFindUniqueOrThrowArgs>(args: SelectSubset<T, SentenceAllFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SentenceAll that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceAllFindFirstArgs} args - Arguments to find a SentenceAll
     * @example
     * // Get one SentenceAll
     * const sentenceAll = await prisma.sentenceAll.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SentenceAllFindFirstArgs>(args?: SelectSubset<T, SentenceAllFindFirstArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first SentenceAll that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceAllFindFirstOrThrowArgs} args - Arguments to find a SentenceAll
     * @example
     * // Get one SentenceAll
     * const sentenceAll = await prisma.sentenceAll.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SentenceAllFindFirstOrThrowArgs>(args?: SelectSubset<T, SentenceAllFindFirstOrThrowArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more SentenceAlls that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceAllFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SentenceAlls
     * const sentenceAlls = await prisma.sentenceAll.findMany()
     * 
     * // Get first 10 SentenceAlls
     * const sentenceAlls = await prisma.sentenceAll.findMany({ take: 10 })
     * 
     * // Only select the `release_date`
     * const sentenceAllWithRelease_dateOnly = await prisma.sentenceAll.findMany({ select: { release_date: true } })
     * 
     */
    findMany<T extends SentenceAllFindManyArgs>(args?: SelectSubset<T, SentenceAllFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a SentenceAll.
     * @param {SentenceAllCreateArgs} args - Arguments to create a SentenceAll.
     * @example
     * // Create one SentenceAll
     * const SentenceAll = await prisma.sentenceAll.create({
     *   data: {
     *     // ... data to create a SentenceAll
     *   }
     * })
     * 
     */
    create<T extends SentenceAllCreateArgs>(args: SelectSubset<T, SentenceAllCreateArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many SentenceAlls.
     * @param {SentenceAllCreateManyArgs} args - Arguments to create many SentenceAlls.
     * @example
     * // Create many SentenceAlls
     * const sentenceAll = await prisma.sentenceAll.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SentenceAllCreateManyArgs>(args?: SelectSubset<T, SentenceAllCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SentenceAll.
     * @param {SentenceAllDeleteArgs} args - Arguments to delete one SentenceAll.
     * @example
     * // Delete one SentenceAll
     * const SentenceAll = await prisma.sentenceAll.delete({
     *   where: {
     *     // ... filter to delete one SentenceAll
     *   }
     * })
     * 
     */
    delete<T extends SentenceAllDeleteArgs>(args: SelectSubset<T, SentenceAllDeleteArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one SentenceAll.
     * @param {SentenceAllUpdateArgs} args - Arguments to update one SentenceAll.
     * @example
     * // Update one SentenceAll
     * const sentenceAll = await prisma.sentenceAll.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SentenceAllUpdateArgs>(args: SelectSubset<T, SentenceAllUpdateArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more SentenceAlls.
     * @param {SentenceAllDeleteManyArgs} args - Arguments to filter SentenceAlls to delete.
     * @example
     * // Delete a few SentenceAlls
     * const { count } = await prisma.sentenceAll.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SentenceAllDeleteManyArgs>(args?: SelectSubset<T, SentenceAllDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SentenceAlls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceAllUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SentenceAlls
     * const sentenceAll = await prisma.sentenceAll.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SentenceAllUpdateManyArgs>(args: SelectSubset<T, SentenceAllUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SentenceAll.
     * @param {SentenceAllUpsertArgs} args - Arguments to update or create a SentenceAll.
     * @example
     * // Update or create a SentenceAll
     * const sentenceAll = await prisma.sentenceAll.upsert({
     *   create: {
     *     // ... data to create a SentenceAll
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SentenceAll we want to update
     *   }
     * })
     */
    upsert<T extends SentenceAllUpsertArgs>(args: SelectSubset<T, SentenceAllUpsertArgs<ExtArgs>>): Prisma__SentenceAllClient<$Result.GetResult<Prisma.$SentenceAllPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of SentenceAlls.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceAllCountArgs} args - Arguments to filter SentenceAlls to count.
     * @example
     * // Count the number of SentenceAlls
     * const count = await prisma.sentenceAll.count({
     *   where: {
     *     // ... the filter for the SentenceAlls we want to count
     *   }
     * })
    **/
    count<T extends SentenceAllCountArgs>(
      args?: Subset<T, SentenceAllCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SentenceAllCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SentenceAll.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceAllAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SentenceAllAggregateArgs>(args: Subset<T, SentenceAllAggregateArgs>): Prisma.PrismaPromise<GetSentenceAllAggregateType<T>>

    /**
     * Group by SentenceAll.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceAllGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SentenceAllGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SentenceAllGroupByArgs['orderBy'] }
        : { orderBy?: SentenceAllGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SentenceAllGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSentenceAllGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SentenceAll model
   */
  readonly fields: SentenceAllFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SentenceAll.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SentenceAllClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SentenceAll model
   */
  interface SentenceAllFieldRefs {
    readonly release_date: FieldRef<"SentenceAll", 'String'>
    readonly Targetyear_s_: FieldRef<"SentenceAll", 'String'>
    readonly pr_site: FieldRef<"SentenceAll", 'String'>
    readonly ArticleTargetYear: FieldRef<"SentenceAll", 'String'>
    readonly sentence_carbon: FieldRef<"SentenceAll", 'BigInt'>
    readonly full_text: FieldRef<"SentenceAll", 'String'>
    readonly PressReleaseMonth: FieldRef<"SentenceAll", 'String'>
    readonly PressReleaseFullClean: FieldRef<"SentenceAll", 'String'>
    readonly sentence_renewables: FieldRef<"SentenceAll", 'BigInt'>
    readonly sentence_suppliers: FieldRef<"SentenceAll", 'BigInt'>
    readonly sentence_gender: FieldRef<"SentenceAll", 'BigInt'>
    readonly Company: FieldRef<"SentenceAll", 'String'>
    readonly Annual_Report_Date: FieldRef<"SentenceAll", 'String'>
    readonly title: FieldRef<"SentenceAll", 'String'>
    readonly emails: FieldRef<"SentenceAll", 'String'>
    readonly sentence_other: FieldRef<"SentenceAll", 'BigInt'>
    readonly Source_link: FieldRef<"SentenceAll", 'String'>
    readonly Source_Date: FieldRef<"SentenceAll", 'String'>
    readonly PressReleaseFullCleanstep1: FieldRef<"SentenceAll", 'String'>
    readonly sentence_waste: FieldRef<"SentenceAll", 'BigInt'>
    readonly source: FieldRef<"SentenceAll", 'String'>
    readonly sentence_water: FieldRef<"SentenceAll", 'BigInt'>
    readonly PressReleaseYear: FieldRef<"SentenceAll", 'String'>
    readonly ticker: FieldRef<"SentenceAll", 'String'>
    readonly SentenceTargetYear: FieldRef<"SentenceAll", 'String'>
    readonly Target_sentence: FieldRef<"SentenceAll", 'String'>
    readonly upload_date: FieldRef<"SentenceAll", 'String'>
    readonly id: FieldRef<"SentenceAll", 'Int'>
    readonly PageURL: FieldRef<"SentenceAll", 'String'>
    readonly DocURL: FieldRef<"SentenceAll", 'String'>
    readonly DocTitle: FieldRef<"SentenceAll", 'String'>
    readonly DocName: FieldRef<"SentenceAll", 'String'>
    readonly Target_Sentence_Page: FieldRef<"SentenceAll", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SentenceAll findUnique
   */
  export type SentenceAllFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * Filter, which SentenceAll to fetch.
     */
    where: SentenceAllWhereUniqueInput
  }

  /**
   * SentenceAll findUniqueOrThrow
   */
  export type SentenceAllFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * Filter, which SentenceAll to fetch.
     */
    where: SentenceAllWhereUniqueInput
  }

  /**
   * SentenceAll findFirst
   */
  export type SentenceAllFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * Filter, which SentenceAll to fetch.
     */
    where?: SentenceAllWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentenceAlls to fetch.
     */
    orderBy?: SentenceAllOrderByWithRelationInput | SentenceAllOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SentenceAlls.
     */
    cursor?: SentenceAllWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentenceAlls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentenceAlls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SentenceAlls.
     */
    distinct?: SentenceAllScalarFieldEnum | SentenceAllScalarFieldEnum[]
  }

  /**
   * SentenceAll findFirstOrThrow
   */
  export type SentenceAllFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * Filter, which SentenceAll to fetch.
     */
    where?: SentenceAllWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentenceAlls to fetch.
     */
    orderBy?: SentenceAllOrderByWithRelationInput | SentenceAllOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SentenceAlls.
     */
    cursor?: SentenceAllWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentenceAlls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentenceAlls.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SentenceAlls.
     */
    distinct?: SentenceAllScalarFieldEnum | SentenceAllScalarFieldEnum[]
  }

  /**
   * SentenceAll findMany
   */
  export type SentenceAllFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * Filter, which SentenceAlls to fetch.
     */
    where?: SentenceAllWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SentenceAlls to fetch.
     */
    orderBy?: SentenceAllOrderByWithRelationInput | SentenceAllOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SentenceAlls.
     */
    cursor?: SentenceAllWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SentenceAlls from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SentenceAlls.
     */
    skip?: number
    distinct?: SentenceAllScalarFieldEnum | SentenceAllScalarFieldEnum[]
  }

  /**
   * SentenceAll create
   */
  export type SentenceAllCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * The data needed to create a SentenceAll.
     */
    data?: XOR<SentenceAllCreateInput, SentenceAllUncheckedCreateInput>
  }

  /**
   * SentenceAll createMany
   */
  export type SentenceAllCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SentenceAlls.
     */
    data: SentenceAllCreateManyInput | SentenceAllCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SentenceAll update
   */
  export type SentenceAllUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * The data needed to update a SentenceAll.
     */
    data: XOR<SentenceAllUpdateInput, SentenceAllUncheckedUpdateInput>
    /**
     * Choose, which SentenceAll to update.
     */
    where: SentenceAllWhereUniqueInput
  }

  /**
   * SentenceAll updateMany
   */
  export type SentenceAllUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SentenceAlls.
     */
    data: XOR<SentenceAllUpdateManyMutationInput, SentenceAllUncheckedUpdateManyInput>
    /**
     * Filter which SentenceAlls to update
     */
    where?: SentenceAllWhereInput
    /**
     * Limit how many SentenceAlls to update.
     */
    limit?: number
  }

  /**
   * SentenceAll upsert
   */
  export type SentenceAllUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * The filter to search for the SentenceAll to update in case it exists.
     */
    where: SentenceAllWhereUniqueInput
    /**
     * In case the SentenceAll found by the `where` argument doesn't exist, create a new SentenceAll with this data.
     */
    create: XOR<SentenceAllCreateInput, SentenceAllUncheckedCreateInput>
    /**
     * In case the SentenceAll was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SentenceAllUpdateInput, SentenceAllUncheckedUpdateInput>
  }

  /**
   * SentenceAll delete
   */
  export type SentenceAllDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
    /**
     * Filter which SentenceAll to delete.
     */
    where: SentenceAllWhereUniqueInput
  }

  /**
   * SentenceAll deleteMany
   */
  export type SentenceAllDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SentenceAlls to delete
     */
    where?: SentenceAllWhereInput
    /**
     * Limit how many SentenceAlls to delete.
     */
    limit?: number
  }

  /**
   * SentenceAll without action
   */
  export type SentenceAllDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SentenceAll
     */
    select?: SentenceAllSelect<ExtArgs> | null
    /**
     * Omit specific fields from the SentenceAll
     */
    omit?: SentenceAllOmit<ExtArgs> | null
  }


  /**
   * Model TargetSentence
   */

  export type AggregateTargetSentence = {
    _count: TargetSentenceCountAggregateOutputType | null
    _avg: TargetSentenceAvgAggregateOutputType | null
    _sum: TargetSentenceSumAggregateOutputType | null
    _min: TargetSentenceMinAggregateOutputType | null
    _max: TargetSentenceMaxAggregateOutputType | null
  }

  export type TargetSentenceAvgAggregateOutputType = {
    sector_code__1__NAICS_: number | null
    PressReleaseYear: number | null
    PressReleaseMonth: number | null
    id: number | null
  }

  export type TargetSentenceSumAggregateOutputType = {
    sector_code__1__NAICS_: bigint | null
    PressReleaseYear: bigint | null
    PressReleaseMonth: bigint | null
    id: number | null
  }

  export type TargetSentenceMinAggregateOutputType = {
    Company: string | null
    companylist: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Main_Website_URL: string | null
    Company_press_release_site_URL: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    S_P500member: string | null
    Russell_1000_member: string | null
    emails: string | null
    full_text: string | null
    Source_link: string | null
    pr_site: string | null
    release_date: string | null
    source: string | null
    ticker: string | null
    title: string | null
    ArticleTargetYear: string | null
    PressReleaseFullCleanstep1: string | null
    PressReleaseFullClean: string | null
    Source_date: string | null
    PressReleaseYear: bigint | null
    PressReleaseMonth: bigint | null
    Target_sentence: string | null
    SentenceTargetYear: string | null
    Targetyear_s_: string | null
    sentence_carbon: boolean | null
    sentence_gender: boolean | null
    sentence_renewables: boolean | null
    sentence_suppliers: boolean | null
    sentence_water: boolean | null
    Primarysource: boolean | null
    id: number | null
  }

  export type TargetSentenceMaxAggregateOutputType = {
    Company: string | null
    companylist: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Main_Website_URL: string | null
    Company_press_release_site_URL: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    S_P500member: string | null
    Russell_1000_member: string | null
    emails: string | null
    full_text: string | null
    Source_link: string | null
    pr_site: string | null
    release_date: string | null
    source: string | null
    ticker: string | null
    title: string | null
    ArticleTargetYear: string | null
    PressReleaseFullCleanstep1: string | null
    PressReleaseFullClean: string | null
    Source_date: string | null
    PressReleaseYear: bigint | null
    PressReleaseMonth: bigint | null
    Target_sentence: string | null
    SentenceTargetYear: string | null
    Targetyear_s_: string | null
    sentence_carbon: boolean | null
    sentence_gender: boolean | null
    sentence_renewables: boolean | null
    sentence_suppliers: boolean | null
    sentence_water: boolean | null
    Primarysource: boolean | null
    id: number | null
  }

  export type TargetSentenceCountAggregateOutputType = {
    Company: number
    companylist: number
    Ticker_s_: number
    PR_Agency: number
    Example_2020_company_PR_agency_press_release_URL: number
    Company_Main_Website_URL: number
    Company_press_release_site_URL: number
    Country: number
    sector_code__1__NAICS_: number
    sector_name__1__NAICS_: number
    sector_code__2__NAICS_: number
    sector_name__2__NAICS_: number
    sector_code__3__NAICS_: number
    sector_name__3__NAICS_: number
    sector_code__4__NAICS_: number
    sector_name__4__NAICS_: number
    sector_code__5__NAICS_: number
    sector_name__5__NAICS_: number
    S_P500member: number
    Russell_1000_member: number
    emails: number
    full_text: number
    Source_link: number
    pr_site: number
    release_date: number
    source: number
    ticker: number
    title: number
    ArticleTargetYear: number
    PressReleaseFullCleanstep1: number
    PressReleaseFullClean: number
    Source_date: number
    PressReleaseYear: number
    PressReleaseMonth: number
    Target_sentence: number
    SentenceTargetYear: number
    Targetyear_s_: number
    sentence_carbon: number
    sentence_gender: number
    sentence_renewables: number
    sentence_suppliers: number
    sentence_water: number
    Primarysource: number
    id: number
    _all: number
  }


  export type TargetSentenceAvgAggregateInputType = {
    sector_code__1__NAICS_?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    id?: true
  }

  export type TargetSentenceSumAggregateInputType = {
    sector_code__1__NAICS_?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    id?: true
  }

  export type TargetSentenceMinAggregateInputType = {
    Company?: true
    companylist?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Main_Website_URL?: true
    Company_press_release_site_URL?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    S_P500member?: true
    Russell_1000_member?: true
    emails?: true
    full_text?: true
    Source_link?: true
    pr_site?: true
    release_date?: true
    source?: true
    ticker?: true
    title?: true
    ArticleTargetYear?: true
    PressReleaseFullCleanstep1?: true
    PressReleaseFullClean?: true
    Source_date?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    Target_sentence?: true
    SentenceTargetYear?: true
    Targetyear_s_?: true
    sentence_carbon?: true
    sentence_gender?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_water?: true
    Primarysource?: true
    id?: true
  }

  export type TargetSentenceMaxAggregateInputType = {
    Company?: true
    companylist?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Main_Website_URL?: true
    Company_press_release_site_URL?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    S_P500member?: true
    Russell_1000_member?: true
    emails?: true
    full_text?: true
    Source_link?: true
    pr_site?: true
    release_date?: true
    source?: true
    ticker?: true
    title?: true
    ArticleTargetYear?: true
    PressReleaseFullCleanstep1?: true
    PressReleaseFullClean?: true
    Source_date?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    Target_sentence?: true
    SentenceTargetYear?: true
    Targetyear_s_?: true
    sentence_carbon?: true
    sentence_gender?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_water?: true
    Primarysource?: true
    id?: true
  }

  export type TargetSentenceCountAggregateInputType = {
    Company?: true
    companylist?: true
    Ticker_s_?: true
    PR_Agency?: true
    Example_2020_company_PR_agency_press_release_URL?: true
    Company_Main_Website_URL?: true
    Company_press_release_site_URL?: true
    Country?: true
    sector_code__1__NAICS_?: true
    sector_name__1__NAICS_?: true
    sector_code__2__NAICS_?: true
    sector_name__2__NAICS_?: true
    sector_code__3__NAICS_?: true
    sector_name__3__NAICS_?: true
    sector_code__4__NAICS_?: true
    sector_name__4__NAICS_?: true
    sector_code__5__NAICS_?: true
    sector_name__5__NAICS_?: true
    S_P500member?: true
    Russell_1000_member?: true
    emails?: true
    full_text?: true
    Source_link?: true
    pr_site?: true
    release_date?: true
    source?: true
    ticker?: true
    title?: true
    ArticleTargetYear?: true
    PressReleaseFullCleanstep1?: true
    PressReleaseFullClean?: true
    Source_date?: true
    PressReleaseYear?: true
    PressReleaseMonth?: true
    Target_sentence?: true
    SentenceTargetYear?: true
    Targetyear_s_?: true
    sentence_carbon?: true
    sentence_gender?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_water?: true
    Primarysource?: true
    id?: true
    _all?: true
  }

  export type TargetSentenceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TargetSentence to aggregate.
     */
    where?: TargetSentenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TargetSentences to fetch.
     */
    orderBy?: TargetSentenceOrderByWithRelationInput | TargetSentenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TargetSentenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TargetSentences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TargetSentences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TargetSentences
    **/
    _count?: true | TargetSentenceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TargetSentenceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TargetSentenceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TargetSentenceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TargetSentenceMaxAggregateInputType
  }

  export type GetTargetSentenceAggregateType<T extends TargetSentenceAggregateArgs> = {
        [P in keyof T & keyof AggregateTargetSentence]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTargetSentence[P]>
      : GetScalarType<T[P], AggregateTargetSentence[P]>
  }




  export type TargetSentenceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TargetSentenceWhereInput
    orderBy?: TargetSentenceOrderByWithAggregationInput | TargetSentenceOrderByWithAggregationInput[]
    by: TargetSentenceScalarFieldEnum[] | TargetSentenceScalarFieldEnum
    having?: TargetSentenceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TargetSentenceCountAggregateInputType | true
    _avg?: TargetSentenceAvgAggregateInputType
    _sum?: TargetSentenceSumAggregateInputType
    _min?: TargetSentenceMinAggregateInputType
    _max?: TargetSentenceMaxAggregateInputType
  }

  export type TargetSentenceGroupByOutputType = {
    Company: string | null
    companylist: string | null
    Ticker_s_: string | null
    PR_Agency: string | null
    Example_2020_company_PR_agency_press_release_URL: string | null
    Company_Main_Website_URL: string | null
    Company_press_release_site_URL: string | null
    Country: string | null
    sector_code__1__NAICS_: bigint | null
    sector_name__1__NAICS_: string | null
    sector_code__2__NAICS_: string | null
    sector_name__2__NAICS_: string | null
    sector_code__3__NAICS_: string | null
    sector_name__3__NAICS_: string | null
    sector_code__4__NAICS_: string | null
    sector_name__4__NAICS_: string | null
    sector_code__5__NAICS_: string | null
    sector_name__5__NAICS_: string | null
    S_P500member: string | null
    Russell_1000_member: string | null
    emails: string | null
    full_text: string | null
    Source_link: string | null
    pr_site: string | null
    release_date: string | null
    source: string | null
    ticker: string | null
    title: string | null
    ArticleTargetYear: string | null
    PressReleaseFullCleanstep1: string | null
    PressReleaseFullClean: string | null
    Source_date: string | null
    PressReleaseYear: bigint | null
    PressReleaseMonth: bigint | null
    Target_sentence: string | null
    SentenceTargetYear: string | null
    Targetyear_s_: string | null
    sentence_carbon: boolean | null
    sentence_gender: boolean | null
    sentence_renewables: boolean | null
    sentence_suppliers: boolean | null
    sentence_water: boolean | null
    Primarysource: boolean | null
    id: number
    _count: TargetSentenceCountAggregateOutputType | null
    _avg: TargetSentenceAvgAggregateOutputType | null
    _sum: TargetSentenceSumAggregateOutputType | null
    _min: TargetSentenceMinAggregateOutputType | null
    _max: TargetSentenceMaxAggregateOutputType | null
  }

  type GetTargetSentenceGroupByPayload<T extends TargetSentenceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TargetSentenceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TargetSentenceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TargetSentenceGroupByOutputType[P]>
            : GetScalarType<T[P], TargetSentenceGroupByOutputType[P]>
        }
      >
    >


  export type TargetSentenceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Company?: boolean
    companylist?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Main_Website_URL?: boolean
    Company_press_release_site_URL?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    S_P500member?: boolean
    Russell_1000_member?: boolean
    emails?: boolean
    full_text?: boolean
    Source_link?: boolean
    pr_site?: boolean
    release_date?: boolean
    source?: boolean
    ticker?: boolean
    title?: boolean
    ArticleTargetYear?: boolean
    PressReleaseFullCleanstep1?: boolean
    PressReleaseFullClean?: boolean
    Source_date?: boolean
    PressReleaseYear?: boolean
    PressReleaseMonth?: boolean
    Target_sentence?: boolean
    SentenceTargetYear?: boolean
    Targetyear_s_?: boolean
    sentence_carbon?: boolean
    sentence_gender?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_water?: boolean
    Primarysource?: boolean
    id?: boolean
  }, ExtArgs["result"]["targetSentence"]>



  export type TargetSentenceSelectScalar = {
    Company?: boolean
    companylist?: boolean
    Ticker_s_?: boolean
    PR_Agency?: boolean
    Example_2020_company_PR_agency_press_release_URL?: boolean
    Company_Main_Website_URL?: boolean
    Company_press_release_site_URL?: boolean
    Country?: boolean
    sector_code__1__NAICS_?: boolean
    sector_name__1__NAICS_?: boolean
    sector_code__2__NAICS_?: boolean
    sector_name__2__NAICS_?: boolean
    sector_code__3__NAICS_?: boolean
    sector_name__3__NAICS_?: boolean
    sector_code__4__NAICS_?: boolean
    sector_name__4__NAICS_?: boolean
    sector_code__5__NAICS_?: boolean
    sector_name__5__NAICS_?: boolean
    S_P500member?: boolean
    Russell_1000_member?: boolean
    emails?: boolean
    full_text?: boolean
    Source_link?: boolean
    pr_site?: boolean
    release_date?: boolean
    source?: boolean
    ticker?: boolean
    title?: boolean
    ArticleTargetYear?: boolean
    PressReleaseFullCleanstep1?: boolean
    PressReleaseFullClean?: boolean
    Source_date?: boolean
    PressReleaseYear?: boolean
    PressReleaseMonth?: boolean
    Target_sentence?: boolean
    SentenceTargetYear?: boolean
    Targetyear_s_?: boolean
    sentence_carbon?: boolean
    sentence_gender?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_water?: boolean
    Primarysource?: boolean
    id?: boolean
  }

  export type TargetSentenceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"Company" | "companylist" | "Ticker_s_" | "PR_Agency" | "Example_2020_company_PR_agency_press_release_URL" | "Company_Main_Website_URL" | "Company_press_release_site_URL" | "Country" | "sector_code__1__NAICS_" | "sector_name__1__NAICS_" | "sector_code__2__NAICS_" | "sector_name__2__NAICS_" | "sector_code__3__NAICS_" | "sector_name__3__NAICS_" | "sector_code__4__NAICS_" | "sector_name__4__NAICS_" | "sector_code__5__NAICS_" | "sector_name__5__NAICS_" | "S_P500member" | "Russell_1000_member" | "emails" | "full_text" | "Source_link" | "pr_site" | "release_date" | "source" | "ticker" | "title" | "ArticleTargetYear" | "PressReleaseFullCleanstep1" | "PressReleaseFullClean" | "Source_date" | "PressReleaseYear" | "PressReleaseMonth" | "Target_sentence" | "SentenceTargetYear" | "Targetyear_s_" | "sentence_carbon" | "sentence_gender" | "sentence_renewables" | "sentence_suppliers" | "sentence_water" | "Primarysource" | "id", ExtArgs["result"]["targetSentence"]>

  export type $TargetSentencePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TargetSentence"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Company: string | null
      companylist: string | null
      Ticker_s_: string | null
      PR_Agency: string | null
      Example_2020_company_PR_agency_press_release_URL: string | null
      Company_Main_Website_URL: string | null
      Company_press_release_site_URL: string | null
      Country: string | null
      sector_code__1__NAICS_: bigint | null
      sector_name__1__NAICS_: string | null
      sector_code__2__NAICS_: string | null
      sector_name__2__NAICS_: string | null
      sector_code__3__NAICS_: string | null
      sector_name__3__NAICS_: string | null
      sector_code__4__NAICS_: string | null
      sector_name__4__NAICS_: string | null
      sector_code__5__NAICS_: string | null
      sector_name__5__NAICS_: string | null
      S_P500member: string | null
      Russell_1000_member: string | null
      emails: string | null
      full_text: string | null
      Source_link: string | null
      pr_site: string | null
      release_date: string | null
      source: string | null
      ticker: string | null
      title: string | null
      ArticleTargetYear: string | null
      PressReleaseFullCleanstep1: string | null
      PressReleaseFullClean: string | null
      Source_date: string | null
      PressReleaseYear: bigint | null
      PressReleaseMonth: bigint | null
      Target_sentence: string | null
      SentenceTargetYear: string | null
      Targetyear_s_: string | null
      sentence_carbon: boolean | null
      sentence_gender: boolean | null
      sentence_renewables: boolean | null
      sentence_suppliers: boolean | null
      sentence_water: boolean | null
      Primarysource: boolean | null
      id: number
    }, ExtArgs["result"]["targetSentence"]>
    composites: {}
  }

  type TargetSentenceGetPayload<S extends boolean | null | undefined | TargetSentenceDefaultArgs> = $Result.GetResult<Prisma.$TargetSentencePayload, S>

  type TargetSentenceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TargetSentenceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TargetSentenceCountAggregateInputType | true
    }

  export interface TargetSentenceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TargetSentence'], meta: { name: 'TargetSentence' } }
    /**
     * Find zero or one TargetSentence that matches the filter.
     * @param {TargetSentenceFindUniqueArgs} args - Arguments to find a TargetSentence
     * @example
     * // Get one TargetSentence
     * const targetSentence = await prisma.targetSentence.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TargetSentenceFindUniqueArgs>(args: SelectSubset<T, TargetSentenceFindUniqueArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TargetSentence that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TargetSentenceFindUniqueOrThrowArgs} args - Arguments to find a TargetSentence
     * @example
     * // Get one TargetSentence
     * const targetSentence = await prisma.targetSentence.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TargetSentenceFindUniqueOrThrowArgs>(args: SelectSubset<T, TargetSentenceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TargetSentence that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TargetSentenceFindFirstArgs} args - Arguments to find a TargetSentence
     * @example
     * // Get one TargetSentence
     * const targetSentence = await prisma.targetSentence.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TargetSentenceFindFirstArgs>(args?: SelectSubset<T, TargetSentenceFindFirstArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TargetSentence that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TargetSentenceFindFirstOrThrowArgs} args - Arguments to find a TargetSentence
     * @example
     * // Get one TargetSentence
     * const targetSentence = await prisma.targetSentence.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TargetSentenceFindFirstOrThrowArgs>(args?: SelectSubset<T, TargetSentenceFindFirstOrThrowArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TargetSentences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TargetSentenceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TargetSentences
     * const targetSentences = await prisma.targetSentence.findMany()
     * 
     * // Get first 10 TargetSentences
     * const targetSentences = await prisma.targetSentence.findMany({ take: 10 })
     * 
     * // Only select the `Company`
     * const targetSentenceWithCompanyOnly = await prisma.targetSentence.findMany({ select: { Company: true } })
     * 
     */
    findMany<T extends TargetSentenceFindManyArgs>(args?: SelectSubset<T, TargetSentenceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TargetSentence.
     * @param {TargetSentenceCreateArgs} args - Arguments to create a TargetSentence.
     * @example
     * // Create one TargetSentence
     * const TargetSentence = await prisma.targetSentence.create({
     *   data: {
     *     // ... data to create a TargetSentence
     *   }
     * })
     * 
     */
    create<T extends TargetSentenceCreateArgs>(args: SelectSubset<T, TargetSentenceCreateArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TargetSentences.
     * @param {TargetSentenceCreateManyArgs} args - Arguments to create many TargetSentences.
     * @example
     * // Create many TargetSentences
     * const targetSentence = await prisma.targetSentence.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TargetSentenceCreateManyArgs>(args?: SelectSubset<T, TargetSentenceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TargetSentence.
     * @param {TargetSentenceDeleteArgs} args - Arguments to delete one TargetSentence.
     * @example
     * // Delete one TargetSentence
     * const TargetSentence = await prisma.targetSentence.delete({
     *   where: {
     *     // ... filter to delete one TargetSentence
     *   }
     * })
     * 
     */
    delete<T extends TargetSentenceDeleteArgs>(args: SelectSubset<T, TargetSentenceDeleteArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TargetSentence.
     * @param {TargetSentenceUpdateArgs} args - Arguments to update one TargetSentence.
     * @example
     * // Update one TargetSentence
     * const targetSentence = await prisma.targetSentence.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TargetSentenceUpdateArgs>(args: SelectSubset<T, TargetSentenceUpdateArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TargetSentences.
     * @param {TargetSentenceDeleteManyArgs} args - Arguments to filter TargetSentences to delete.
     * @example
     * // Delete a few TargetSentences
     * const { count } = await prisma.targetSentence.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TargetSentenceDeleteManyArgs>(args?: SelectSubset<T, TargetSentenceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TargetSentences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TargetSentenceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TargetSentences
     * const targetSentence = await prisma.targetSentence.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TargetSentenceUpdateManyArgs>(args: SelectSubset<T, TargetSentenceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TargetSentence.
     * @param {TargetSentenceUpsertArgs} args - Arguments to update or create a TargetSentence.
     * @example
     * // Update or create a TargetSentence
     * const targetSentence = await prisma.targetSentence.upsert({
     *   create: {
     *     // ... data to create a TargetSentence
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TargetSentence we want to update
     *   }
     * })
     */
    upsert<T extends TargetSentenceUpsertArgs>(args: SelectSubset<T, TargetSentenceUpsertArgs<ExtArgs>>): Prisma__TargetSentenceClient<$Result.GetResult<Prisma.$TargetSentencePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TargetSentences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TargetSentenceCountArgs} args - Arguments to filter TargetSentences to count.
     * @example
     * // Count the number of TargetSentences
     * const count = await prisma.targetSentence.count({
     *   where: {
     *     // ... the filter for the TargetSentences we want to count
     *   }
     * })
    **/
    count<T extends TargetSentenceCountArgs>(
      args?: Subset<T, TargetSentenceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TargetSentenceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TargetSentence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TargetSentenceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TargetSentenceAggregateArgs>(args: Subset<T, TargetSentenceAggregateArgs>): Prisma.PrismaPromise<GetTargetSentenceAggregateType<T>>

    /**
     * Group by TargetSentence.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TargetSentenceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TargetSentenceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TargetSentenceGroupByArgs['orderBy'] }
        : { orderBy?: TargetSentenceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TargetSentenceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTargetSentenceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TargetSentence model
   */
  readonly fields: TargetSentenceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TargetSentence.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TargetSentenceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TargetSentence model
   */
  interface TargetSentenceFieldRefs {
    readonly Company: FieldRef<"TargetSentence", 'String'>
    readonly companylist: FieldRef<"TargetSentence", 'String'>
    readonly Ticker_s_: FieldRef<"TargetSentence", 'String'>
    readonly PR_Agency: FieldRef<"TargetSentence", 'String'>
    readonly Example_2020_company_PR_agency_press_release_URL: FieldRef<"TargetSentence", 'String'>
    readonly Company_Main_Website_URL: FieldRef<"TargetSentence", 'String'>
    readonly Company_press_release_site_URL: FieldRef<"TargetSentence", 'String'>
    readonly Country: FieldRef<"TargetSentence", 'String'>
    readonly sector_code__1__NAICS_: FieldRef<"TargetSentence", 'BigInt'>
    readonly sector_name__1__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_code__2__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_name__2__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_code__3__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_name__3__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_code__4__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_name__4__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_code__5__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly sector_name__5__NAICS_: FieldRef<"TargetSentence", 'String'>
    readonly S_P500member: FieldRef<"TargetSentence", 'String'>
    readonly Russell_1000_member: FieldRef<"TargetSentence", 'String'>
    readonly emails: FieldRef<"TargetSentence", 'String'>
    readonly full_text: FieldRef<"TargetSentence", 'String'>
    readonly Source_link: FieldRef<"TargetSentence", 'String'>
    readonly pr_site: FieldRef<"TargetSentence", 'String'>
    readonly release_date: FieldRef<"TargetSentence", 'String'>
    readonly source: FieldRef<"TargetSentence", 'String'>
    readonly ticker: FieldRef<"TargetSentence", 'String'>
    readonly title: FieldRef<"TargetSentence", 'String'>
    readonly ArticleTargetYear: FieldRef<"TargetSentence", 'String'>
    readonly PressReleaseFullCleanstep1: FieldRef<"TargetSentence", 'String'>
    readonly PressReleaseFullClean: FieldRef<"TargetSentence", 'String'>
    readonly Source_date: FieldRef<"TargetSentence", 'String'>
    readonly PressReleaseYear: FieldRef<"TargetSentence", 'BigInt'>
    readonly PressReleaseMonth: FieldRef<"TargetSentence", 'BigInt'>
    readonly Target_sentence: FieldRef<"TargetSentence", 'String'>
    readonly SentenceTargetYear: FieldRef<"TargetSentence", 'String'>
    readonly Targetyear_s_: FieldRef<"TargetSentence", 'String'>
    readonly sentence_carbon: FieldRef<"TargetSentence", 'Boolean'>
    readonly sentence_gender: FieldRef<"TargetSentence", 'Boolean'>
    readonly sentence_renewables: FieldRef<"TargetSentence", 'Boolean'>
    readonly sentence_suppliers: FieldRef<"TargetSentence", 'Boolean'>
    readonly sentence_water: FieldRef<"TargetSentence", 'Boolean'>
    readonly Primarysource: FieldRef<"TargetSentence", 'Boolean'>
    readonly id: FieldRef<"TargetSentence", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TargetSentence findUnique
   */
  export type TargetSentenceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * Filter, which TargetSentence to fetch.
     */
    where: TargetSentenceWhereUniqueInput
  }

  /**
   * TargetSentence findUniqueOrThrow
   */
  export type TargetSentenceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * Filter, which TargetSentence to fetch.
     */
    where: TargetSentenceWhereUniqueInput
  }

  /**
   * TargetSentence findFirst
   */
  export type TargetSentenceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * Filter, which TargetSentence to fetch.
     */
    where?: TargetSentenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TargetSentences to fetch.
     */
    orderBy?: TargetSentenceOrderByWithRelationInput | TargetSentenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TargetSentences.
     */
    cursor?: TargetSentenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TargetSentences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TargetSentences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TargetSentences.
     */
    distinct?: TargetSentenceScalarFieldEnum | TargetSentenceScalarFieldEnum[]
  }

  /**
   * TargetSentence findFirstOrThrow
   */
  export type TargetSentenceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * Filter, which TargetSentence to fetch.
     */
    where?: TargetSentenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TargetSentences to fetch.
     */
    orderBy?: TargetSentenceOrderByWithRelationInput | TargetSentenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TargetSentences.
     */
    cursor?: TargetSentenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TargetSentences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TargetSentences.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TargetSentences.
     */
    distinct?: TargetSentenceScalarFieldEnum | TargetSentenceScalarFieldEnum[]
  }

  /**
   * TargetSentence findMany
   */
  export type TargetSentenceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * Filter, which TargetSentences to fetch.
     */
    where?: TargetSentenceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TargetSentences to fetch.
     */
    orderBy?: TargetSentenceOrderByWithRelationInput | TargetSentenceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TargetSentences.
     */
    cursor?: TargetSentenceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TargetSentences from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TargetSentences.
     */
    skip?: number
    distinct?: TargetSentenceScalarFieldEnum | TargetSentenceScalarFieldEnum[]
  }

  /**
   * TargetSentence create
   */
  export type TargetSentenceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * The data needed to create a TargetSentence.
     */
    data?: XOR<TargetSentenceCreateInput, TargetSentenceUncheckedCreateInput>
  }

  /**
   * TargetSentence createMany
   */
  export type TargetSentenceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TargetSentences.
     */
    data: TargetSentenceCreateManyInput | TargetSentenceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TargetSentence update
   */
  export type TargetSentenceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * The data needed to update a TargetSentence.
     */
    data: XOR<TargetSentenceUpdateInput, TargetSentenceUncheckedUpdateInput>
    /**
     * Choose, which TargetSentence to update.
     */
    where: TargetSentenceWhereUniqueInput
  }

  /**
   * TargetSentence updateMany
   */
  export type TargetSentenceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TargetSentences.
     */
    data: XOR<TargetSentenceUpdateManyMutationInput, TargetSentenceUncheckedUpdateManyInput>
    /**
     * Filter which TargetSentences to update
     */
    where?: TargetSentenceWhereInput
    /**
     * Limit how many TargetSentences to update.
     */
    limit?: number
  }

  /**
   * TargetSentence upsert
   */
  export type TargetSentenceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * The filter to search for the TargetSentence to update in case it exists.
     */
    where: TargetSentenceWhereUniqueInput
    /**
     * In case the TargetSentence found by the `where` argument doesn't exist, create a new TargetSentence with this data.
     */
    create: XOR<TargetSentenceCreateInput, TargetSentenceUncheckedCreateInput>
    /**
     * In case the TargetSentence was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TargetSentenceUpdateInput, TargetSentenceUncheckedUpdateInput>
  }

  /**
   * TargetSentence delete
   */
  export type TargetSentenceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
    /**
     * Filter which TargetSentence to delete.
     */
    where: TargetSentenceWhereUniqueInput
  }

  /**
   * TargetSentence deleteMany
   */
  export type TargetSentenceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TargetSentences to delete
     */
    where?: TargetSentenceWhereInput
    /**
     * Limit how many TargetSentences to delete.
     */
    limit?: number
  }

  /**
   * TargetSentence without action
   */
  export type TargetSentenceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TargetSentence
     */
    select?: TargetSentenceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TargetSentence
     */
    omit?: TargetSentenceOmit<ExtArgs> | null
  }


  /**
   * Model Testable
   */

  export type AggregateTestable = {
    _count: TestableCountAggregateOutputType | null
    _avg: TestableAvgAggregateOutputType | null
    _sum: TestableSumAggregateOutputType | null
    _min: TestableMinAggregateOutputType | null
    _max: TestableMaxAggregateOutputType | null
  }

  export type TestableAvgAggregateOutputType = {
    firstname: number | null
    surname: number | null
    city: number | null
    country: number | null
    id: number | null
  }

  export type TestableSumAggregateOutputType = {
    firstname: number | null
    surname: number | null
    city: number | null
    country: number | null
    id: number | null
  }

  export type TestableMinAggregateOutputType = {
    firstname: number | null
    surname: number | null
    city: number | null
    country: number | null
    id: number | null
  }

  export type TestableMaxAggregateOutputType = {
    firstname: number | null
    surname: number | null
    city: number | null
    country: number | null
    id: number | null
  }

  export type TestableCountAggregateOutputType = {
    firstname: number
    surname: number
    city: number
    country: number
    id: number
    _all: number
  }


  export type TestableAvgAggregateInputType = {
    firstname?: true
    surname?: true
    city?: true
    country?: true
    id?: true
  }

  export type TestableSumAggregateInputType = {
    firstname?: true
    surname?: true
    city?: true
    country?: true
    id?: true
  }

  export type TestableMinAggregateInputType = {
    firstname?: true
    surname?: true
    city?: true
    country?: true
    id?: true
  }

  export type TestableMaxAggregateInputType = {
    firstname?: true
    surname?: true
    city?: true
    country?: true
    id?: true
  }

  export type TestableCountAggregateInputType = {
    firstname?: true
    surname?: true
    city?: true
    country?: true
    id?: true
    _all?: true
  }

  export type TestableAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Testable to aggregate.
     */
    where?: TestableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Testables to fetch.
     */
    orderBy?: TestableOrderByWithRelationInput | TestableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TestableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Testables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Testables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Testables
    **/
    _count?: true | TestableCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TestableAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TestableSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TestableMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TestableMaxAggregateInputType
  }

  export type GetTestableAggregateType<T extends TestableAggregateArgs> = {
        [P in keyof T & keyof AggregateTestable]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTestable[P]>
      : GetScalarType<T[P], AggregateTestable[P]>
  }




  export type TestableGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TestableWhereInput
    orderBy?: TestableOrderByWithAggregationInput | TestableOrderByWithAggregationInput[]
    by: TestableScalarFieldEnum[] | TestableScalarFieldEnum
    having?: TestableScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TestableCountAggregateInputType | true
    _avg?: TestableAvgAggregateInputType
    _sum?: TestableSumAggregateInputType
    _min?: TestableMinAggregateInputType
    _max?: TestableMaxAggregateInputType
  }

  export type TestableGroupByOutputType = {
    firstname: number
    surname: number
    city: number
    country: number
    id: number
    _count: TestableCountAggregateOutputType | null
    _avg: TestableAvgAggregateOutputType | null
    _sum: TestableSumAggregateOutputType | null
    _min: TestableMinAggregateOutputType | null
    _max: TestableMaxAggregateOutputType | null
  }

  type GetTestableGroupByPayload<T extends TestableGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TestableGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TestableGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TestableGroupByOutputType[P]>
            : GetScalarType<T[P], TestableGroupByOutputType[P]>
        }
      >
    >


  export type TestableSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    firstname?: boolean
    surname?: boolean
    city?: boolean
    country?: boolean
    id?: boolean
  }, ExtArgs["result"]["testable"]>



  export type TestableSelectScalar = {
    firstname?: boolean
    surname?: boolean
    city?: boolean
    country?: boolean
    id?: boolean
  }

  export type TestableOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"firstname" | "surname" | "city" | "country" | "id", ExtArgs["result"]["testable"]>

  export type $TestablePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Testable"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      firstname: number
      surname: number
      city: number
      country: number
      id: number
    }, ExtArgs["result"]["testable"]>
    composites: {}
  }

  type TestableGetPayload<S extends boolean | null | undefined | TestableDefaultArgs> = $Result.GetResult<Prisma.$TestablePayload, S>

  type TestableCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TestableFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TestableCountAggregateInputType | true
    }

  export interface TestableDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Testable'], meta: { name: 'Testable' } }
    /**
     * Find zero or one Testable that matches the filter.
     * @param {TestableFindUniqueArgs} args - Arguments to find a Testable
     * @example
     * // Get one Testable
     * const testable = await prisma.testable.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TestableFindUniqueArgs>(args: SelectSubset<T, TestableFindUniqueArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Testable that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TestableFindUniqueOrThrowArgs} args - Arguments to find a Testable
     * @example
     * // Get one Testable
     * const testable = await prisma.testable.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TestableFindUniqueOrThrowArgs>(args: SelectSubset<T, TestableFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Testable that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestableFindFirstArgs} args - Arguments to find a Testable
     * @example
     * // Get one Testable
     * const testable = await prisma.testable.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TestableFindFirstArgs>(args?: SelectSubset<T, TestableFindFirstArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Testable that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestableFindFirstOrThrowArgs} args - Arguments to find a Testable
     * @example
     * // Get one Testable
     * const testable = await prisma.testable.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TestableFindFirstOrThrowArgs>(args?: SelectSubset<T, TestableFindFirstOrThrowArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Testables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestableFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Testables
     * const testables = await prisma.testable.findMany()
     * 
     * // Get first 10 Testables
     * const testables = await prisma.testable.findMany({ take: 10 })
     * 
     * // Only select the `firstname`
     * const testableWithFirstnameOnly = await prisma.testable.findMany({ select: { firstname: true } })
     * 
     */
    findMany<T extends TestableFindManyArgs>(args?: SelectSubset<T, TestableFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Testable.
     * @param {TestableCreateArgs} args - Arguments to create a Testable.
     * @example
     * // Create one Testable
     * const Testable = await prisma.testable.create({
     *   data: {
     *     // ... data to create a Testable
     *   }
     * })
     * 
     */
    create<T extends TestableCreateArgs>(args: SelectSubset<T, TestableCreateArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Testables.
     * @param {TestableCreateManyArgs} args - Arguments to create many Testables.
     * @example
     * // Create many Testables
     * const testable = await prisma.testable.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TestableCreateManyArgs>(args?: SelectSubset<T, TestableCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Testable.
     * @param {TestableDeleteArgs} args - Arguments to delete one Testable.
     * @example
     * // Delete one Testable
     * const Testable = await prisma.testable.delete({
     *   where: {
     *     // ... filter to delete one Testable
     *   }
     * })
     * 
     */
    delete<T extends TestableDeleteArgs>(args: SelectSubset<T, TestableDeleteArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Testable.
     * @param {TestableUpdateArgs} args - Arguments to update one Testable.
     * @example
     * // Update one Testable
     * const testable = await prisma.testable.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TestableUpdateArgs>(args: SelectSubset<T, TestableUpdateArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Testables.
     * @param {TestableDeleteManyArgs} args - Arguments to filter Testables to delete.
     * @example
     * // Delete a few Testables
     * const { count } = await prisma.testable.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TestableDeleteManyArgs>(args?: SelectSubset<T, TestableDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Testables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestableUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Testables
     * const testable = await prisma.testable.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TestableUpdateManyArgs>(args: SelectSubset<T, TestableUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Testable.
     * @param {TestableUpsertArgs} args - Arguments to update or create a Testable.
     * @example
     * // Update or create a Testable
     * const testable = await prisma.testable.upsert({
     *   create: {
     *     // ... data to create a Testable
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Testable we want to update
     *   }
     * })
     */
    upsert<T extends TestableUpsertArgs>(args: SelectSubset<T, TestableUpsertArgs<ExtArgs>>): Prisma__TestableClient<$Result.GetResult<Prisma.$TestablePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Testables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestableCountArgs} args - Arguments to filter Testables to count.
     * @example
     * // Count the number of Testables
     * const count = await prisma.testable.count({
     *   where: {
     *     // ... the filter for the Testables we want to count
     *   }
     * })
    **/
    count<T extends TestableCountArgs>(
      args?: Subset<T, TestableCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TestableCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Testable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestableAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TestableAggregateArgs>(args: Subset<T, TestableAggregateArgs>): Prisma.PrismaPromise<GetTestableAggregateType<T>>

    /**
     * Group by Testable.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TestableGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TestableGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TestableGroupByArgs['orderBy'] }
        : { orderBy?: TestableGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TestableGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTestableGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Testable model
   */
  readonly fields: TestableFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Testable.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TestableClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Testable model
   */
  interface TestableFieldRefs {
    readonly firstname: FieldRef<"Testable", 'Int'>
    readonly surname: FieldRef<"Testable", 'Int'>
    readonly city: FieldRef<"Testable", 'Int'>
    readonly country: FieldRef<"Testable", 'Int'>
    readonly id: FieldRef<"Testable", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Testable findUnique
   */
  export type TestableFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * Filter, which Testable to fetch.
     */
    where: TestableWhereUniqueInput
  }

  /**
   * Testable findUniqueOrThrow
   */
  export type TestableFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * Filter, which Testable to fetch.
     */
    where: TestableWhereUniqueInput
  }

  /**
   * Testable findFirst
   */
  export type TestableFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * Filter, which Testable to fetch.
     */
    where?: TestableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Testables to fetch.
     */
    orderBy?: TestableOrderByWithRelationInput | TestableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Testables.
     */
    cursor?: TestableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Testables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Testables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Testables.
     */
    distinct?: TestableScalarFieldEnum | TestableScalarFieldEnum[]
  }

  /**
   * Testable findFirstOrThrow
   */
  export type TestableFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * Filter, which Testable to fetch.
     */
    where?: TestableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Testables to fetch.
     */
    orderBy?: TestableOrderByWithRelationInput | TestableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Testables.
     */
    cursor?: TestableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Testables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Testables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Testables.
     */
    distinct?: TestableScalarFieldEnum | TestableScalarFieldEnum[]
  }

  /**
   * Testable findMany
   */
  export type TestableFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * Filter, which Testables to fetch.
     */
    where?: TestableWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Testables to fetch.
     */
    orderBy?: TestableOrderByWithRelationInput | TestableOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Testables.
     */
    cursor?: TestableWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Testables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Testables.
     */
    skip?: number
    distinct?: TestableScalarFieldEnum | TestableScalarFieldEnum[]
  }

  /**
   * Testable create
   */
  export type TestableCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * The data needed to create a Testable.
     */
    data: XOR<TestableCreateInput, TestableUncheckedCreateInput>
  }

  /**
   * Testable createMany
   */
  export type TestableCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Testables.
     */
    data: TestableCreateManyInput | TestableCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Testable update
   */
  export type TestableUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * The data needed to update a Testable.
     */
    data: XOR<TestableUpdateInput, TestableUncheckedUpdateInput>
    /**
     * Choose, which Testable to update.
     */
    where: TestableWhereUniqueInput
  }

  /**
   * Testable updateMany
   */
  export type TestableUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Testables.
     */
    data: XOR<TestableUpdateManyMutationInput, TestableUncheckedUpdateManyInput>
    /**
     * Filter which Testables to update
     */
    where?: TestableWhereInput
    /**
     * Limit how many Testables to update.
     */
    limit?: number
  }

  /**
   * Testable upsert
   */
  export type TestableUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * The filter to search for the Testable to update in case it exists.
     */
    where: TestableWhereUniqueInput
    /**
     * In case the Testable found by the `where` argument doesn't exist, create a new Testable with this data.
     */
    create: XOR<TestableCreateInput, TestableUncheckedCreateInput>
    /**
     * In case the Testable was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TestableUpdateInput, TestableUncheckedUpdateInput>
  }

  /**
   * Testable delete
   */
  export type TestableDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
    /**
     * Filter which Testable to delete.
     */
    where: TestableWhereUniqueInput
  }

  /**
   * Testable deleteMany
   */
  export type TestableDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Testables to delete
     */
    where?: TestableWhereInput
    /**
     * Limit how many Testables to delete.
     */
    limit?: number
  }

  /**
   * Testable without action
   */
  export type TestableDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Testable
     */
    select?: TestableSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Testable
     */
    omit?: TestableOmit<ExtArgs> | null
  }


  /**
   * Model wp_actionscheduler_actions
   */

  export type AggregateWp_actionscheduler_actions = {
    _count: Wp_actionscheduler_actionsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_actionsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_actionsSumAggregateOutputType | null
    _min: Wp_actionscheduler_actionsMinAggregateOutputType | null
    _max: Wp_actionscheduler_actionsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_actionsAvgAggregateOutputType = {
    action_id: number | null
    group_id: number | null
    attempts: number | null
    claim_id: number | null
  }

  export type Wp_actionscheduler_actionsSumAggregateOutputType = {
    action_id: bigint | null
    group_id: bigint | null
    attempts: number | null
    claim_id: bigint | null
  }

  export type Wp_actionscheduler_actionsMinAggregateOutputType = {
    action_id: bigint | null
    hook: string | null
    status: string | null
    scheduled_date_gmt: Date | null
    scheduled_date_local: Date | null
    args: string | null
    schedule: string | null
    group_id: bigint | null
    attempts: number | null
    last_attempt_gmt: Date | null
    last_attempt_local: Date | null
    claim_id: bigint | null
    extended_args: string | null
  }

  export type Wp_actionscheduler_actionsMaxAggregateOutputType = {
    action_id: bigint | null
    hook: string | null
    status: string | null
    scheduled_date_gmt: Date | null
    scheduled_date_local: Date | null
    args: string | null
    schedule: string | null
    group_id: bigint | null
    attempts: number | null
    last_attempt_gmt: Date | null
    last_attempt_local: Date | null
    claim_id: bigint | null
    extended_args: string | null
  }

  export type Wp_actionscheduler_actionsCountAggregateOutputType = {
    action_id: number
    hook: number
    status: number
    scheduled_date_gmt: number
    scheduled_date_local: number
    args: number
    schedule: number
    group_id: number
    attempts: number
    last_attempt_gmt: number
    last_attempt_local: number
    claim_id: number
    extended_args: number
    _all: number
  }


  export type Wp_actionscheduler_actionsAvgAggregateInputType = {
    action_id?: true
    group_id?: true
    attempts?: true
    claim_id?: true
  }

  export type Wp_actionscheduler_actionsSumAggregateInputType = {
    action_id?: true
    group_id?: true
    attempts?: true
    claim_id?: true
  }

  export type Wp_actionscheduler_actionsMinAggregateInputType = {
    action_id?: true
    hook?: true
    status?: true
    scheduled_date_gmt?: true
    scheduled_date_local?: true
    args?: true
    schedule?: true
    group_id?: true
    attempts?: true
    last_attempt_gmt?: true
    last_attempt_local?: true
    claim_id?: true
    extended_args?: true
  }

  export type Wp_actionscheduler_actionsMaxAggregateInputType = {
    action_id?: true
    hook?: true
    status?: true
    scheduled_date_gmt?: true
    scheduled_date_local?: true
    args?: true
    schedule?: true
    group_id?: true
    attempts?: true
    last_attempt_gmt?: true
    last_attempt_local?: true
    claim_id?: true
    extended_args?: true
  }

  export type Wp_actionscheduler_actionsCountAggregateInputType = {
    action_id?: true
    hook?: true
    status?: true
    scheduled_date_gmt?: true
    scheduled_date_local?: true
    args?: true
    schedule?: true
    group_id?: true
    attempts?: true
    last_attempt_gmt?: true
    last_attempt_local?: true
    claim_id?: true
    extended_args?: true
    _all?: true
  }

  export type Wp_actionscheduler_actionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_actions to aggregate.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_actions
    **/
    _count?: true | Wp_actionscheduler_actionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_actionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_actionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_actionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_actionsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_actionsAggregateType<T extends Wp_actionscheduler_actionsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_actions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_actions[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_actions[P]>
  }




  export type wp_actionscheduler_actionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_actionsWhereInput
    orderBy?: wp_actionscheduler_actionsOrderByWithAggregationInput | wp_actionscheduler_actionsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_actionsScalarFieldEnum[] | Wp_actionscheduler_actionsScalarFieldEnum
    having?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_actionsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_actionsAvgAggregateInputType
    _sum?: Wp_actionscheduler_actionsSumAggregateInputType
    _min?: Wp_actionscheduler_actionsMinAggregateInputType
    _max?: Wp_actionscheduler_actionsMaxAggregateInputType
  }

  export type Wp_actionscheduler_actionsGroupByOutputType = {
    action_id: bigint
    hook: string
    status: string
    scheduled_date_gmt: Date
    scheduled_date_local: Date
    args: string | null
    schedule: string | null
    group_id: bigint
    attempts: number
    last_attempt_gmt: Date
    last_attempt_local: Date
    claim_id: bigint
    extended_args: string | null
    _count: Wp_actionscheduler_actionsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_actionsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_actionsSumAggregateOutputType | null
    _min: Wp_actionscheduler_actionsMinAggregateOutputType | null
    _max: Wp_actionscheduler_actionsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_actionsGroupByPayload<T extends wp_actionscheduler_actionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_actionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_actionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_actionsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_actionsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_actionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    action_id?: boolean
    hook?: boolean
    status?: boolean
    scheduled_date_gmt?: boolean
    scheduled_date_local?: boolean
    args?: boolean
    schedule?: boolean
    group_id?: boolean
    attempts?: boolean
    last_attempt_gmt?: boolean
    last_attempt_local?: boolean
    claim_id?: boolean
    extended_args?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_actions"]>



  export type wp_actionscheduler_actionsSelectScalar = {
    action_id?: boolean
    hook?: boolean
    status?: boolean
    scheduled_date_gmt?: boolean
    scheduled_date_local?: boolean
    args?: boolean
    schedule?: boolean
    group_id?: boolean
    attempts?: boolean
    last_attempt_gmt?: boolean
    last_attempt_local?: boolean
    claim_id?: boolean
    extended_args?: boolean
  }

  export type wp_actionscheduler_actionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"action_id" | "hook" | "status" | "scheduled_date_gmt" | "scheduled_date_local" | "args" | "schedule" | "group_id" | "attempts" | "last_attempt_gmt" | "last_attempt_local" | "claim_id" | "extended_args", ExtArgs["result"]["wp_actionscheduler_actions"]>

  export type $wp_actionscheduler_actionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_actions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      action_id: bigint
      hook: string
      status: string
      scheduled_date_gmt: Date
      scheduled_date_local: Date
      args: string | null
      schedule: string | null
      group_id: bigint
      attempts: number
      last_attempt_gmt: Date
      last_attempt_local: Date
      claim_id: bigint
      extended_args: string | null
    }, ExtArgs["result"]["wp_actionscheduler_actions"]>
    composites: {}
  }

  type wp_actionscheduler_actionsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_actionsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload, S>

  type wp_actionscheduler_actionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_actionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_actionsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_actionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_actions'], meta: { name: 'wp_actionscheduler_actions' } }
    /**
     * Find zero or one Wp_actionscheduler_actions that matches the filter.
     * @param {wp_actionscheduler_actionsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_actionsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_actionsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_actions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_actionsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_actionsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_actionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_actions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_actionsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_actions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_actionsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_actions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany({ take: 10 })
     * 
     * // Only select the `action_id`
     * const wp_actionscheduler_actionsWithAction_idOnly = await prisma.wp_actionscheduler_actions.findMany({ select: { action_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_actionsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsCreateArgs} args - Arguments to create a Wp_actionscheduler_actions.
     * @example
     * // Create one Wp_actionscheduler_actions
     * const Wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_actions
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_actionsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_actionsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_actions.
     * @example
     * // Create many Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_actionsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_actions.
     * @example
     * // Delete one Wp_actionscheduler_actions
     * const Wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_actions
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_actionsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_actionsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsUpdateArgs} args - Arguments to update one Wp_actionscheduler_actions.
     * @example
     * // Update one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_actionsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_actionsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_actions to delete.
     * @example
     * // Delete a few Wp_actionscheduler_actions
     * const { count } = await prisma.wp_actionscheduler_actions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_actionsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_actionsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_actionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_actions.
     * @example
     * // Update or create a Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_actions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_actions we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_actionsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_actionsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsCountArgs} args - Arguments to filter Wp_actionscheduler_actions to count.
     * @example
     * // Count the number of Wp_actionscheduler_actions
     * const count = await prisma.wp_actionscheduler_actions.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_actions we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_actionsCountArgs>(
      args?: Subset<T, wp_actionscheduler_actionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_actionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_actionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_actionsAggregateArgs>(args: Subset<T, Wp_actionscheduler_actionsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_actionsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_actionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_actionsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_actionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_actionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_actionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_actions model
   */
  readonly fields: wp_actionscheduler_actionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_actions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_actionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_actions model
   */
  interface wp_actionscheduler_actionsFieldRefs {
    readonly action_id: FieldRef<"wp_actionscheduler_actions", 'BigInt'>
    readonly hook: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly status: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly scheduled_date_gmt: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly scheduled_date_local: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly args: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly schedule: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly group_id: FieldRef<"wp_actionscheduler_actions", 'BigInt'>
    readonly attempts: FieldRef<"wp_actionscheduler_actions", 'Int'>
    readonly last_attempt_gmt: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly last_attempt_local: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly claim_id: FieldRef<"wp_actionscheduler_actions", 'BigInt'>
    readonly extended_args: FieldRef<"wp_actionscheduler_actions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_actions findUnique
   */
  export type wp_actionscheduler_actionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions findUniqueOrThrow
   */
  export type wp_actionscheduler_actionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions findFirst
   */
  export type wp_actionscheduler_actionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_actions.
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_actions.
     */
    distinct?: Wp_actionscheduler_actionsScalarFieldEnum | Wp_actionscheduler_actionsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_actions findFirstOrThrow
   */
  export type wp_actionscheduler_actionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_actions.
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_actions.
     */
    distinct?: Wp_actionscheduler_actionsScalarFieldEnum | Wp_actionscheduler_actionsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_actions findMany
   */
  export type wp_actionscheduler_actionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_actions.
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    distinct?: Wp_actionscheduler_actionsScalarFieldEnum | Wp_actionscheduler_actionsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_actions create
   */
  export type wp_actionscheduler_actionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_actions.
     */
    data: XOR<wp_actionscheduler_actionsCreateInput, wp_actionscheduler_actionsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_actions createMany
   */
  export type wp_actionscheduler_actionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_actions.
     */
    data: wp_actionscheduler_actionsCreateManyInput | wp_actionscheduler_actionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_actions update
   */
  export type wp_actionscheduler_actionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_actions.
     */
    data: XOR<wp_actionscheduler_actionsUpdateInput, wp_actionscheduler_actionsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_actions to update.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions updateMany
   */
  export type wp_actionscheduler_actionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_actions.
     */
    data: XOR<wp_actionscheduler_actionsUpdateManyMutationInput, wp_actionscheduler_actionsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_actions to update
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * Limit how many wp_actionscheduler_actions to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_actions upsert
   */
  export type wp_actionscheduler_actionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_actions to update in case it exists.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_actions found by the `where` argument doesn't exist, create a new wp_actionscheduler_actions with this data.
     */
    create: XOR<wp_actionscheduler_actionsCreateInput, wp_actionscheduler_actionsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_actions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_actionsUpdateInput, wp_actionscheduler_actionsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_actions delete
   */
  export type wp_actionscheduler_actionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_actions to delete.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions deleteMany
   */
  export type wp_actionscheduler_actionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_actions to delete
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * Limit how many wp_actionscheduler_actions to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_actions without action
   */
  export type wp_actionscheduler_actionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
  }


  /**
   * Model wp_actionscheduler_claims
   */

  export type AggregateWp_actionscheduler_claims = {
    _count: Wp_actionscheduler_claimsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_claimsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_claimsSumAggregateOutputType | null
    _min: Wp_actionscheduler_claimsMinAggregateOutputType | null
    _max: Wp_actionscheduler_claimsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_claimsAvgAggregateOutputType = {
    claim_id: number | null
  }

  export type Wp_actionscheduler_claimsSumAggregateOutputType = {
    claim_id: bigint | null
  }

  export type Wp_actionscheduler_claimsMinAggregateOutputType = {
    claim_id: bigint | null
    date_created_gmt: Date | null
  }

  export type Wp_actionscheduler_claimsMaxAggregateOutputType = {
    claim_id: bigint | null
    date_created_gmt: Date | null
  }

  export type Wp_actionscheduler_claimsCountAggregateOutputType = {
    claim_id: number
    date_created_gmt: number
    _all: number
  }


  export type Wp_actionscheduler_claimsAvgAggregateInputType = {
    claim_id?: true
  }

  export type Wp_actionscheduler_claimsSumAggregateInputType = {
    claim_id?: true
  }

  export type Wp_actionscheduler_claimsMinAggregateInputType = {
    claim_id?: true
    date_created_gmt?: true
  }

  export type Wp_actionscheduler_claimsMaxAggregateInputType = {
    claim_id?: true
    date_created_gmt?: true
  }

  export type Wp_actionscheduler_claimsCountAggregateInputType = {
    claim_id?: true
    date_created_gmt?: true
    _all?: true
  }

  export type Wp_actionscheduler_claimsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_claims to aggregate.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_claims
    **/
    _count?: true | Wp_actionscheduler_claimsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_claimsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_claimsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_claimsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_claimsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_claimsAggregateType<T extends Wp_actionscheduler_claimsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_claims]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_claims[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_claims[P]>
  }




  export type wp_actionscheduler_claimsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_claimsWhereInput
    orderBy?: wp_actionscheduler_claimsOrderByWithAggregationInput | wp_actionscheduler_claimsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_claimsScalarFieldEnum[] | Wp_actionscheduler_claimsScalarFieldEnum
    having?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_claimsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_claimsAvgAggregateInputType
    _sum?: Wp_actionscheduler_claimsSumAggregateInputType
    _min?: Wp_actionscheduler_claimsMinAggregateInputType
    _max?: Wp_actionscheduler_claimsMaxAggregateInputType
  }

  export type Wp_actionscheduler_claimsGroupByOutputType = {
    claim_id: bigint
    date_created_gmt: Date
    _count: Wp_actionscheduler_claimsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_claimsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_claimsSumAggregateOutputType | null
    _min: Wp_actionscheduler_claimsMinAggregateOutputType | null
    _max: Wp_actionscheduler_claimsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_claimsGroupByPayload<T extends wp_actionscheduler_claimsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_claimsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_claimsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_claimsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_claimsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_claimsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    claim_id?: boolean
    date_created_gmt?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_claims"]>



  export type wp_actionscheduler_claimsSelectScalar = {
    claim_id?: boolean
    date_created_gmt?: boolean
  }

  export type wp_actionscheduler_claimsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"claim_id" | "date_created_gmt", ExtArgs["result"]["wp_actionscheduler_claims"]>

  export type $wp_actionscheduler_claimsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_claims"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      claim_id: bigint
      date_created_gmt: Date
    }, ExtArgs["result"]["wp_actionscheduler_claims"]>
    composites: {}
  }

  type wp_actionscheduler_claimsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_claimsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload, S>

  type wp_actionscheduler_claimsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_claimsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_claimsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_claimsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_claims'], meta: { name: 'wp_actionscheduler_claims' } }
    /**
     * Find zero or one Wp_actionscheduler_claims that matches the filter.
     * @param {wp_actionscheduler_claimsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_claimsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_claimsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_claims that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_claimsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_claimsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_claimsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_claimsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_claims that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_claimsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findMany({ take: 10 })
     * 
     * // Only select the `claim_id`
     * const wp_actionscheduler_claimsWithClaim_idOnly = await prisma.wp_actionscheduler_claims.findMany({ select: { claim_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_claimsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsCreateArgs} args - Arguments to create a Wp_actionscheduler_claims.
     * @example
     * // Create one Wp_actionscheduler_claims
     * const Wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_claims
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_claimsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_claimsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_claims.
     * @example
     * // Create many Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_claimsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_claims.
     * @example
     * // Delete one Wp_actionscheduler_claims
     * const Wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_claims
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_claimsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_claimsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsUpdateArgs} args - Arguments to update one Wp_actionscheduler_claims.
     * @example
     * // Update one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_claimsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_claimsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_claims to delete.
     * @example
     * // Delete a few Wp_actionscheduler_claims
     * const { count } = await prisma.wp_actionscheduler_claims.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_claimsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_claimsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_claimsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_claims.
     * @example
     * // Update or create a Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_claims
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_claims we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_claimsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_claimsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsCountArgs} args - Arguments to filter Wp_actionscheduler_claims to count.
     * @example
     * // Count the number of Wp_actionscheduler_claims
     * const count = await prisma.wp_actionscheduler_claims.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_claims we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_claimsCountArgs>(
      args?: Subset<T, wp_actionscheduler_claimsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_claimsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_claimsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_claimsAggregateArgs>(args: Subset<T, Wp_actionscheduler_claimsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_claimsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_claimsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_claimsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_claimsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_claimsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_claimsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_claims model
   */
  readonly fields: wp_actionscheduler_claimsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_claims.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_claimsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_claims model
   */
  interface wp_actionscheduler_claimsFieldRefs {
    readonly claim_id: FieldRef<"wp_actionscheduler_claims", 'BigInt'>
    readonly date_created_gmt: FieldRef<"wp_actionscheduler_claims", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_claims findUnique
   */
  export type wp_actionscheduler_claimsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims findUniqueOrThrow
   */
  export type wp_actionscheduler_claimsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims findFirst
   */
  export type wp_actionscheduler_claimsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_claims.
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_claims.
     */
    distinct?: Wp_actionscheduler_claimsScalarFieldEnum | Wp_actionscheduler_claimsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_claims findFirstOrThrow
   */
  export type wp_actionscheduler_claimsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_claims.
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_claims.
     */
    distinct?: Wp_actionscheduler_claimsScalarFieldEnum | Wp_actionscheduler_claimsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_claims findMany
   */
  export type wp_actionscheduler_claimsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_claims.
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    distinct?: Wp_actionscheduler_claimsScalarFieldEnum | Wp_actionscheduler_claimsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_claims create
   */
  export type wp_actionscheduler_claimsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_claims.
     */
    data?: XOR<wp_actionscheduler_claimsCreateInput, wp_actionscheduler_claimsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_claims createMany
   */
  export type wp_actionscheduler_claimsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_claims.
     */
    data: wp_actionscheduler_claimsCreateManyInput | wp_actionscheduler_claimsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_claims update
   */
  export type wp_actionscheduler_claimsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_claims.
     */
    data: XOR<wp_actionscheduler_claimsUpdateInput, wp_actionscheduler_claimsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_claims to update.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims updateMany
   */
  export type wp_actionscheduler_claimsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_claims.
     */
    data: XOR<wp_actionscheduler_claimsUpdateManyMutationInput, wp_actionscheduler_claimsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_claims to update
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * Limit how many wp_actionscheduler_claims to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_claims upsert
   */
  export type wp_actionscheduler_claimsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_claims to update in case it exists.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_claims found by the `where` argument doesn't exist, create a new wp_actionscheduler_claims with this data.
     */
    create: XOR<wp_actionscheduler_claimsCreateInput, wp_actionscheduler_claimsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_claims was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_claimsUpdateInput, wp_actionscheduler_claimsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_claims delete
   */
  export type wp_actionscheduler_claimsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_claims to delete.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims deleteMany
   */
  export type wp_actionscheduler_claimsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_claims to delete
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * Limit how many wp_actionscheduler_claims to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_claims without action
   */
  export type wp_actionscheduler_claimsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
  }


  /**
   * Model wp_actionscheduler_groups
   */

  export type AggregateWp_actionscheduler_groups = {
    _count: Wp_actionscheduler_groupsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_groupsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_groupsSumAggregateOutputType | null
    _min: Wp_actionscheduler_groupsMinAggregateOutputType | null
    _max: Wp_actionscheduler_groupsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_groupsAvgAggregateOutputType = {
    group_id: number | null
  }

  export type Wp_actionscheduler_groupsSumAggregateOutputType = {
    group_id: bigint | null
  }

  export type Wp_actionscheduler_groupsMinAggregateOutputType = {
    group_id: bigint | null
    slug: string | null
  }

  export type Wp_actionscheduler_groupsMaxAggregateOutputType = {
    group_id: bigint | null
    slug: string | null
  }

  export type Wp_actionscheduler_groupsCountAggregateOutputType = {
    group_id: number
    slug: number
    _all: number
  }


  export type Wp_actionscheduler_groupsAvgAggregateInputType = {
    group_id?: true
  }

  export type Wp_actionscheduler_groupsSumAggregateInputType = {
    group_id?: true
  }

  export type Wp_actionscheduler_groupsMinAggregateInputType = {
    group_id?: true
    slug?: true
  }

  export type Wp_actionscheduler_groupsMaxAggregateInputType = {
    group_id?: true
    slug?: true
  }

  export type Wp_actionscheduler_groupsCountAggregateInputType = {
    group_id?: true
    slug?: true
    _all?: true
  }

  export type Wp_actionscheduler_groupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_groups to aggregate.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_groups
    **/
    _count?: true | Wp_actionscheduler_groupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_groupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_groupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_groupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_groupsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_groupsAggregateType<T extends Wp_actionscheduler_groupsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_groups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_groups[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_groups[P]>
  }




  export type wp_actionscheduler_groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_groupsWhereInput
    orderBy?: wp_actionscheduler_groupsOrderByWithAggregationInput | wp_actionscheduler_groupsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_groupsScalarFieldEnum[] | Wp_actionscheduler_groupsScalarFieldEnum
    having?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_groupsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_groupsAvgAggregateInputType
    _sum?: Wp_actionscheduler_groupsSumAggregateInputType
    _min?: Wp_actionscheduler_groupsMinAggregateInputType
    _max?: Wp_actionscheduler_groupsMaxAggregateInputType
  }

  export type Wp_actionscheduler_groupsGroupByOutputType = {
    group_id: bigint
    slug: string
    _count: Wp_actionscheduler_groupsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_groupsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_groupsSumAggregateOutputType | null
    _min: Wp_actionscheduler_groupsMinAggregateOutputType | null
    _max: Wp_actionscheduler_groupsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_groupsGroupByPayload<T extends wp_actionscheduler_groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_groupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_groupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_groupsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_groupsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    slug?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_groups"]>



  export type wp_actionscheduler_groupsSelectScalar = {
    group_id?: boolean
    slug?: boolean
  }

  export type wp_actionscheduler_groupsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"group_id" | "slug", ExtArgs["result"]["wp_actionscheduler_groups"]>

  export type $wp_actionscheduler_groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_groups"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      group_id: bigint
      slug: string
    }, ExtArgs["result"]["wp_actionscheduler_groups"]>
    composites: {}
  }

  type wp_actionscheduler_groupsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_groupsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload, S>

  type wp_actionscheduler_groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_groupsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_groups'], meta: { name: 'wp_actionscheduler_groups' } }
    /**
     * Find zero or one Wp_actionscheduler_groups that matches the filter.
     * @param {wp_actionscheduler_groupsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_groupsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_groupsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_groups that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_groupsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_groupsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_groupsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_groupsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findMany({ take: 10 })
     * 
     * // Only select the `group_id`
     * const wp_actionscheduler_groupsWithGroup_idOnly = await prisma.wp_actionscheduler_groups.findMany({ select: { group_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_groupsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsCreateArgs} args - Arguments to create a Wp_actionscheduler_groups.
     * @example
     * // Create one Wp_actionscheduler_groups
     * const Wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_groups
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_groupsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_groupsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_groups.
     * @example
     * // Create many Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_groupsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_groups.
     * @example
     * // Delete one Wp_actionscheduler_groups
     * const Wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_groups
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_groupsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_groupsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsUpdateArgs} args - Arguments to update one Wp_actionscheduler_groups.
     * @example
     * // Update one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_groupsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_groupsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_groups to delete.
     * @example
     * // Delete a few Wp_actionscheduler_groups
     * const { count } = await prisma.wp_actionscheduler_groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_groupsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_groupsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_groups.
     * @example
     * // Update or create a Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_groups we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_groupsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_groupsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsCountArgs} args - Arguments to filter Wp_actionscheduler_groups to count.
     * @example
     * // Count the number of Wp_actionscheduler_groups
     * const count = await prisma.wp_actionscheduler_groups.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_groups we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_groupsCountArgs>(
      args?: Subset<T, wp_actionscheduler_groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_groupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_groupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_groupsAggregateArgs>(args: Subset<T, Wp_actionscheduler_groupsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_groupsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_groupsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_groupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_groups model
   */
  readonly fields: wp_actionscheduler_groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_groups model
   */
  interface wp_actionscheduler_groupsFieldRefs {
    readonly group_id: FieldRef<"wp_actionscheduler_groups", 'BigInt'>
    readonly slug: FieldRef<"wp_actionscheduler_groups", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_groups findUnique
   */
  export type wp_actionscheduler_groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups findUniqueOrThrow
   */
  export type wp_actionscheduler_groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups findFirst
   */
  export type wp_actionscheduler_groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_groups.
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_groups.
     */
    distinct?: Wp_actionscheduler_groupsScalarFieldEnum | Wp_actionscheduler_groupsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_groups findFirstOrThrow
   */
  export type wp_actionscheduler_groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_groups.
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_groups.
     */
    distinct?: Wp_actionscheduler_groupsScalarFieldEnum | Wp_actionscheduler_groupsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_groups findMany
   */
  export type wp_actionscheduler_groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_groups.
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    distinct?: Wp_actionscheduler_groupsScalarFieldEnum | Wp_actionscheduler_groupsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_groups create
   */
  export type wp_actionscheduler_groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_groups.
     */
    data: XOR<wp_actionscheduler_groupsCreateInput, wp_actionscheduler_groupsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_groups createMany
   */
  export type wp_actionscheduler_groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_groups.
     */
    data: wp_actionscheduler_groupsCreateManyInput | wp_actionscheduler_groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_groups update
   */
  export type wp_actionscheduler_groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_groups.
     */
    data: XOR<wp_actionscheduler_groupsUpdateInput, wp_actionscheduler_groupsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_groups to update.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups updateMany
   */
  export type wp_actionscheduler_groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_groups.
     */
    data: XOR<wp_actionscheduler_groupsUpdateManyMutationInput, wp_actionscheduler_groupsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_groups to update
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * Limit how many wp_actionscheduler_groups to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_groups upsert
   */
  export type wp_actionscheduler_groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_groups to update in case it exists.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_groups found by the `where` argument doesn't exist, create a new wp_actionscheduler_groups with this data.
     */
    create: XOR<wp_actionscheduler_groupsCreateInput, wp_actionscheduler_groupsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_groupsUpdateInput, wp_actionscheduler_groupsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_groups delete
   */
  export type wp_actionscheduler_groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_groups to delete.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups deleteMany
   */
  export type wp_actionscheduler_groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_groups to delete
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * Limit how many wp_actionscheduler_groups to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_groups without action
   */
  export type wp_actionscheduler_groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
  }


  /**
   * Model wp_actionscheduler_logs
   */

  export type AggregateWp_actionscheduler_logs = {
    _count: Wp_actionscheduler_logsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_logsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_logsSumAggregateOutputType | null
    _min: Wp_actionscheduler_logsMinAggregateOutputType | null
    _max: Wp_actionscheduler_logsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_logsAvgAggregateOutputType = {
    log_id: number | null
    action_id: number | null
  }

  export type Wp_actionscheduler_logsSumAggregateOutputType = {
    log_id: bigint | null
    action_id: bigint | null
  }

  export type Wp_actionscheduler_logsMinAggregateOutputType = {
    log_id: bigint | null
    action_id: bigint | null
    message: string | null
    log_date_gmt: Date | null
    log_date_local: Date | null
  }

  export type Wp_actionscheduler_logsMaxAggregateOutputType = {
    log_id: bigint | null
    action_id: bigint | null
    message: string | null
    log_date_gmt: Date | null
    log_date_local: Date | null
  }

  export type Wp_actionscheduler_logsCountAggregateOutputType = {
    log_id: number
    action_id: number
    message: number
    log_date_gmt: number
    log_date_local: number
    _all: number
  }


  export type Wp_actionscheduler_logsAvgAggregateInputType = {
    log_id?: true
    action_id?: true
  }

  export type Wp_actionscheduler_logsSumAggregateInputType = {
    log_id?: true
    action_id?: true
  }

  export type Wp_actionscheduler_logsMinAggregateInputType = {
    log_id?: true
    action_id?: true
    message?: true
    log_date_gmt?: true
    log_date_local?: true
  }

  export type Wp_actionscheduler_logsMaxAggregateInputType = {
    log_id?: true
    action_id?: true
    message?: true
    log_date_gmt?: true
    log_date_local?: true
  }

  export type Wp_actionscheduler_logsCountAggregateInputType = {
    log_id?: true
    action_id?: true
    message?: true
    log_date_gmt?: true
    log_date_local?: true
    _all?: true
  }

  export type Wp_actionscheduler_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_logs to aggregate.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_logs
    **/
    _count?: true | Wp_actionscheduler_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_logsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_logsAggregateType<T extends Wp_actionscheduler_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_logs[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_logs[P]>
  }




  export type wp_actionscheduler_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_logsWhereInput
    orderBy?: wp_actionscheduler_logsOrderByWithAggregationInput | wp_actionscheduler_logsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_logsScalarFieldEnum[] | Wp_actionscheduler_logsScalarFieldEnum
    having?: wp_actionscheduler_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_logsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_logsAvgAggregateInputType
    _sum?: Wp_actionscheduler_logsSumAggregateInputType
    _min?: Wp_actionscheduler_logsMinAggregateInputType
    _max?: Wp_actionscheduler_logsMaxAggregateInputType
  }

  export type Wp_actionscheduler_logsGroupByOutputType = {
    log_id: bigint
    action_id: bigint
    message: string
    log_date_gmt: Date
    log_date_local: Date
    _count: Wp_actionscheduler_logsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_logsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_logsSumAggregateOutputType | null
    _min: Wp_actionscheduler_logsMinAggregateOutputType | null
    _max: Wp_actionscheduler_logsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_logsGroupByPayload<T extends wp_actionscheduler_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_logsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    log_id?: boolean
    action_id?: boolean
    message?: boolean
    log_date_gmt?: boolean
    log_date_local?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_logs"]>



  export type wp_actionscheduler_logsSelectScalar = {
    log_id?: boolean
    action_id?: boolean
    message?: boolean
    log_date_gmt?: boolean
    log_date_local?: boolean
  }

  export type wp_actionscheduler_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"log_id" | "action_id" | "message" | "log_date_gmt" | "log_date_local", ExtArgs["result"]["wp_actionscheduler_logs"]>

  export type $wp_actionscheduler_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      log_id: bigint
      action_id: bigint
      message: string
      log_date_gmt: Date
      log_date_local: Date
    }, ExtArgs["result"]["wp_actionscheduler_logs"]>
    composites: {}
  }

  type wp_actionscheduler_logsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_logsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_logsPayload, S>

  type wp_actionscheduler_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_logsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_logs'], meta: { name: 'wp_actionscheduler_logs' } }
    /**
     * Find zero or one Wp_actionscheduler_logs that matches the filter.
     * @param {wp_actionscheduler_logsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_logsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_logsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_logsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_logsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_logsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findMany({ take: 10 })
     * 
     * // Only select the `log_id`
     * const wp_actionscheduler_logsWithLog_idOnly = await prisma.wp_actionscheduler_logs.findMany({ select: { log_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_logsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsCreateArgs} args - Arguments to create a Wp_actionscheduler_logs.
     * @example
     * // Create one Wp_actionscheduler_logs
     * const Wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_logs
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_logsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_logsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_logs.
     * @example
     * // Create many Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_logsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_logs.
     * @example
     * // Delete one Wp_actionscheduler_logs
     * const Wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_logs
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_logsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_logsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsUpdateArgs} args - Arguments to update one Wp_actionscheduler_logs.
     * @example
     * // Update one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_logsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_logsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_logs to delete.
     * @example
     * // Delete a few Wp_actionscheduler_logs
     * const { count } = await prisma.wp_actionscheduler_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_logsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_logsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_logs.
     * @example
     * // Update or create a Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_logs we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_logsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_logsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsCountArgs} args - Arguments to filter Wp_actionscheduler_logs to count.
     * @example
     * // Count the number of Wp_actionscheduler_logs
     * const count = await prisma.wp_actionscheduler_logs.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_logs we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_logsCountArgs>(
      args?: Subset<T, wp_actionscheduler_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_logsAggregateArgs>(args: Subset<T, Wp_actionscheduler_logsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_logsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_logsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_logs model
   */
  readonly fields: wp_actionscheduler_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_logs model
   */
  interface wp_actionscheduler_logsFieldRefs {
    readonly log_id: FieldRef<"wp_actionscheduler_logs", 'BigInt'>
    readonly action_id: FieldRef<"wp_actionscheduler_logs", 'BigInt'>
    readonly message: FieldRef<"wp_actionscheduler_logs", 'String'>
    readonly log_date_gmt: FieldRef<"wp_actionscheduler_logs", 'DateTime'>
    readonly log_date_local: FieldRef<"wp_actionscheduler_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_logs findUnique
   */
  export type wp_actionscheduler_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs findUniqueOrThrow
   */
  export type wp_actionscheduler_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs findFirst
   */
  export type wp_actionscheduler_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_logs.
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_logs.
     */
    distinct?: Wp_actionscheduler_logsScalarFieldEnum | Wp_actionscheduler_logsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_logs findFirstOrThrow
   */
  export type wp_actionscheduler_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_logs.
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_logs.
     */
    distinct?: Wp_actionscheduler_logsScalarFieldEnum | Wp_actionscheduler_logsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_logs findMany
   */
  export type wp_actionscheduler_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_logs.
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    distinct?: Wp_actionscheduler_logsScalarFieldEnum | Wp_actionscheduler_logsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_logs create
   */
  export type wp_actionscheduler_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_logs.
     */
    data: XOR<wp_actionscheduler_logsCreateInput, wp_actionscheduler_logsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_logs createMany
   */
  export type wp_actionscheduler_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_logs.
     */
    data: wp_actionscheduler_logsCreateManyInput | wp_actionscheduler_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_logs update
   */
  export type wp_actionscheduler_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_logs.
     */
    data: XOR<wp_actionscheduler_logsUpdateInput, wp_actionscheduler_logsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_logs to update.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs updateMany
   */
  export type wp_actionscheduler_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_logs.
     */
    data: XOR<wp_actionscheduler_logsUpdateManyMutationInput, wp_actionscheduler_logsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_logs to update
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * Limit how many wp_actionscheduler_logs to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_logs upsert
   */
  export type wp_actionscheduler_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_logs to update in case it exists.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_logs found by the `where` argument doesn't exist, create a new wp_actionscheduler_logs with this data.
     */
    create: XOR<wp_actionscheduler_logsCreateInput, wp_actionscheduler_logsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_logsUpdateInput, wp_actionscheduler_logsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_logs delete
   */
  export type wp_actionscheduler_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_logs to delete.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs deleteMany
   */
  export type wp_actionscheduler_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_logs to delete
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * Limit how many wp_actionscheduler_logs to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_logs without action
   */
  export type wp_actionscheduler_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
  }


  /**
   * Model wp_aioseo_notifications
   */

  export type AggregateWp_aioseo_notifications = {
    _count: Wp_aioseo_notificationsCountAggregateOutputType | null
    _avg: Wp_aioseo_notificationsAvgAggregateOutputType | null
    _sum: Wp_aioseo_notificationsSumAggregateOutputType | null
    _min: Wp_aioseo_notificationsMinAggregateOutputType | null
    _max: Wp_aioseo_notificationsMaxAggregateOutputType | null
  }

  export type Wp_aioseo_notificationsAvgAggregateOutputType = {
    id: number | null
    notification_id: number | null
  }

  export type Wp_aioseo_notificationsSumAggregateOutputType = {
    id: bigint | null
    notification_id: bigint | null
  }

  export type Wp_aioseo_notificationsMinAggregateOutputType = {
    id: bigint | null
    slug: string | null
    title: string | null
    content: string | null
    type: string | null
    level: string | null
    notification_id: bigint | null
    notification_name: string | null
    start: Date | null
    end: Date | null
    button1_label: string | null
    button1_action: string | null
    button2_label: string | null
    button2_action: string | null
    dismissed: boolean | null
    created: Date | null
    updated: Date | null
  }

  export type Wp_aioseo_notificationsMaxAggregateOutputType = {
    id: bigint | null
    slug: string | null
    title: string | null
    content: string | null
    type: string | null
    level: string | null
    notification_id: bigint | null
    notification_name: string | null
    start: Date | null
    end: Date | null
    button1_label: string | null
    button1_action: string | null
    button2_label: string | null
    button2_action: string | null
    dismissed: boolean | null
    created: Date | null
    updated: Date | null
  }

  export type Wp_aioseo_notificationsCountAggregateOutputType = {
    id: number
    slug: number
    title: number
    content: number
    type: number
    level: number
    notification_id: number
    notification_name: number
    start: number
    end: number
    button1_label: number
    button1_action: number
    button2_label: number
    button2_action: number
    dismissed: number
    created: number
    updated: number
    _all: number
  }


  export type Wp_aioseo_notificationsAvgAggregateInputType = {
    id?: true
    notification_id?: true
  }

  export type Wp_aioseo_notificationsSumAggregateInputType = {
    id?: true
    notification_id?: true
  }

  export type Wp_aioseo_notificationsMinAggregateInputType = {
    id?: true
    slug?: true
    title?: true
    content?: true
    type?: true
    level?: true
    notification_id?: true
    notification_name?: true
    start?: true
    end?: true
    button1_label?: true
    button1_action?: true
    button2_label?: true
    button2_action?: true
    dismissed?: true
    created?: true
    updated?: true
  }

  export type Wp_aioseo_notificationsMaxAggregateInputType = {
    id?: true
    slug?: true
    title?: true
    content?: true
    type?: true
    level?: true
    notification_id?: true
    notification_name?: true
    start?: true
    end?: true
    button1_label?: true
    button1_action?: true
    button2_label?: true
    button2_action?: true
    dismissed?: true
    created?: true
    updated?: true
  }

  export type Wp_aioseo_notificationsCountAggregateInputType = {
    id?: true
    slug?: true
    title?: true
    content?: true
    type?: true
    level?: true
    notification_id?: true
    notification_name?: true
    start?: true
    end?: true
    button1_label?: true
    button1_action?: true
    button2_label?: true
    button2_action?: true
    dismissed?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Wp_aioseo_notificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_aioseo_notifications to aggregate.
     */
    where?: wp_aioseo_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_notifications to fetch.
     */
    orderBy?: wp_aioseo_notificationsOrderByWithRelationInput | wp_aioseo_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_aioseo_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_aioseo_notifications
    **/
    _count?: true | Wp_aioseo_notificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_aioseo_notificationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_aioseo_notificationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_aioseo_notificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_aioseo_notificationsMaxAggregateInputType
  }

  export type GetWp_aioseo_notificationsAggregateType<T extends Wp_aioseo_notificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_aioseo_notifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_aioseo_notifications[P]>
      : GetScalarType<T[P], AggregateWp_aioseo_notifications[P]>
  }




  export type wp_aioseo_notificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_aioseo_notificationsWhereInput
    orderBy?: wp_aioseo_notificationsOrderByWithAggregationInput | wp_aioseo_notificationsOrderByWithAggregationInput[]
    by: Wp_aioseo_notificationsScalarFieldEnum[] | Wp_aioseo_notificationsScalarFieldEnum
    having?: wp_aioseo_notificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_aioseo_notificationsCountAggregateInputType | true
    _avg?: Wp_aioseo_notificationsAvgAggregateInputType
    _sum?: Wp_aioseo_notificationsSumAggregateInputType
    _min?: Wp_aioseo_notificationsMinAggregateInputType
    _max?: Wp_aioseo_notificationsMaxAggregateInputType
  }

  export type Wp_aioseo_notificationsGroupByOutputType = {
    id: bigint
    slug: string
    title: string
    content: string
    type: string
    level: string
    notification_id: bigint | null
    notification_name: string | null
    start: Date | null
    end: Date | null
    button1_label: string | null
    button1_action: string | null
    button2_label: string | null
    button2_action: string | null
    dismissed: boolean
    created: Date
    updated: Date
    _count: Wp_aioseo_notificationsCountAggregateOutputType | null
    _avg: Wp_aioseo_notificationsAvgAggregateOutputType | null
    _sum: Wp_aioseo_notificationsSumAggregateOutputType | null
    _min: Wp_aioseo_notificationsMinAggregateOutputType | null
    _max: Wp_aioseo_notificationsMaxAggregateOutputType | null
  }

  type GetWp_aioseo_notificationsGroupByPayload<T extends wp_aioseo_notificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_aioseo_notificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_aioseo_notificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_aioseo_notificationsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_aioseo_notificationsGroupByOutputType[P]>
        }
      >
    >


  export type wp_aioseo_notificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    title?: boolean
    content?: boolean
    type?: boolean
    level?: boolean
    notification_id?: boolean
    notification_name?: boolean
    start?: boolean
    end?: boolean
    button1_label?: boolean
    button1_action?: boolean
    button2_label?: boolean
    button2_action?: boolean
    dismissed?: boolean
    created?: boolean
    updated?: boolean
  }, ExtArgs["result"]["wp_aioseo_notifications"]>



  export type wp_aioseo_notificationsSelectScalar = {
    id?: boolean
    slug?: boolean
    title?: boolean
    content?: boolean
    type?: boolean
    level?: boolean
    notification_id?: boolean
    notification_name?: boolean
    start?: boolean
    end?: boolean
    button1_label?: boolean
    button1_action?: boolean
    button2_label?: boolean
    button2_action?: boolean
    dismissed?: boolean
    created?: boolean
    updated?: boolean
  }

  export type wp_aioseo_notificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "slug" | "title" | "content" | "type" | "level" | "notification_id" | "notification_name" | "start" | "end" | "button1_label" | "button1_action" | "button2_label" | "button2_action" | "dismissed" | "created" | "updated", ExtArgs["result"]["wp_aioseo_notifications"]>

  export type $wp_aioseo_notificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_aioseo_notifications"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      slug: string
      title: string
      content: string
      type: string
      level: string
      notification_id: bigint | null
      notification_name: string | null
      start: Date | null
      end: Date | null
      button1_label: string | null
      button1_action: string | null
      button2_label: string | null
      button2_action: string | null
      dismissed: boolean
      created: Date
      updated: Date
    }, ExtArgs["result"]["wp_aioseo_notifications"]>
    composites: {}
  }

  type wp_aioseo_notificationsGetPayload<S extends boolean | null | undefined | wp_aioseo_notificationsDefaultArgs> = $Result.GetResult<Prisma.$wp_aioseo_notificationsPayload, S>

  type wp_aioseo_notificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_aioseo_notificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_aioseo_notificationsCountAggregateInputType | true
    }

  export interface wp_aioseo_notificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_aioseo_notifications'], meta: { name: 'wp_aioseo_notifications' } }
    /**
     * Find zero or one Wp_aioseo_notifications that matches the filter.
     * @param {wp_aioseo_notificationsFindUniqueArgs} args - Arguments to find a Wp_aioseo_notifications
     * @example
     * // Get one Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_aioseo_notificationsFindUniqueArgs>(args: SelectSubset<T, wp_aioseo_notificationsFindUniqueArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_aioseo_notifications that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_aioseo_notificationsFindUniqueOrThrowArgs} args - Arguments to find a Wp_aioseo_notifications
     * @example
     * // Get one Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_aioseo_notificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_aioseo_notificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_aioseo_notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_notificationsFindFirstArgs} args - Arguments to find a Wp_aioseo_notifications
     * @example
     * // Get one Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_aioseo_notificationsFindFirstArgs>(args?: SelectSubset<T, wp_aioseo_notificationsFindFirstArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_aioseo_notifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_notificationsFindFirstOrThrowArgs} args - Arguments to find a Wp_aioseo_notifications
     * @example
     * // Get one Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_aioseo_notificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_aioseo_notificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_aioseo_notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_notificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.findMany()
     * 
     * // Get first 10 Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_aioseo_notificationsWithIdOnly = await prisma.wp_aioseo_notifications.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_aioseo_notificationsFindManyArgs>(args?: SelectSubset<T, wp_aioseo_notificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_aioseo_notifications.
     * @param {wp_aioseo_notificationsCreateArgs} args - Arguments to create a Wp_aioseo_notifications.
     * @example
     * // Create one Wp_aioseo_notifications
     * const Wp_aioseo_notifications = await prisma.wp_aioseo_notifications.create({
     *   data: {
     *     // ... data to create a Wp_aioseo_notifications
     *   }
     * })
     * 
     */
    create<T extends wp_aioseo_notificationsCreateArgs>(args: SelectSubset<T, wp_aioseo_notificationsCreateArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_aioseo_notifications.
     * @param {wp_aioseo_notificationsCreateManyArgs} args - Arguments to create many Wp_aioseo_notifications.
     * @example
     * // Create many Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_aioseo_notificationsCreateManyArgs>(args?: SelectSubset<T, wp_aioseo_notificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_aioseo_notifications.
     * @param {wp_aioseo_notificationsDeleteArgs} args - Arguments to delete one Wp_aioseo_notifications.
     * @example
     * // Delete one Wp_aioseo_notifications
     * const Wp_aioseo_notifications = await prisma.wp_aioseo_notifications.delete({
     *   where: {
     *     // ... filter to delete one Wp_aioseo_notifications
     *   }
     * })
     * 
     */
    delete<T extends wp_aioseo_notificationsDeleteArgs>(args: SelectSubset<T, wp_aioseo_notificationsDeleteArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_aioseo_notifications.
     * @param {wp_aioseo_notificationsUpdateArgs} args - Arguments to update one Wp_aioseo_notifications.
     * @example
     * // Update one Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_aioseo_notificationsUpdateArgs>(args: SelectSubset<T, wp_aioseo_notificationsUpdateArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_aioseo_notifications.
     * @param {wp_aioseo_notificationsDeleteManyArgs} args - Arguments to filter Wp_aioseo_notifications to delete.
     * @example
     * // Delete a few Wp_aioseo_notifications
     * const { count } = await prisma.wp_aioseo_notifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_aioseo_notificationsDeleteManyArgs>(args?: SelectSubset<T, wp_aioseo_notificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_aioseo_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_notificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_aioseo_notificationsUpdateManyArgs>(args: SelectSubset<T, wp_aioseo_notificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_aioseo_notifications.
     * @param {wp_aioseo_notificationsUpsertArgs} args - Arguments to update or create a Wp_aioseo_notifications.
     * @example
     * // Update or create a Wp_aioseo_notifications
     * const wp_aioseo_notifications = await prisma.wp_aioseo_notifications.upsert({
     *   create: {
     *     // ... data to create a Wp_aioseo_notifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_aioseo_notifications we want to update
     *   }
     * })
     */
    upsert<T extends wp_aioseo_notificationsUpsertArgs>(args: SelectSubset<T, wp_aioseo_notificationsUpsertArgs<ExtArgs>>): Prisma__wp_aioseo_notificationsClient<$Result.GetResult<Prisma.$wp_aioseo_notificationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_aioseo_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_notificationsCountArgs} args - Arguments to filter Wp_aioseo_notifications to count.
     * @example
     * // Count the number of Wp_aioseo_notifications
     * const count = await prisma.wp_aioseo_notifications.count({
     *   where: {
     *     // ... the filter for the Wp_aioseo_notifications we want to count
     *   }
     * })
    **/
    count<T extends wp_aioseo_notificationsCountArgs>(
      args?: Subset<T, wp_aioseo_notificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_aioseo_notificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_aioseo_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_aioseo_notificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_aioseo_notificationsAggregateArgs>(args: Subset<T, Wp_aioseo_notificationsAggregateArgs>): Prisma.PrismaPromise<GetWp_aioseo_notificationsAggregateType<T>>

    /**
     * Group by Wp_aioseo_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_notificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_aioseo_notificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_aioseo_notificationsGroupByArgs['orderBy'] }
        : { orderBy?: wp_aioseo_notificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_aioseo_notificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_aioseo_notificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_aioseo_notifications model
   */
  readonly fields: wp_aioseo_notificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_aioseo_notifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_aioseo_notificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_aioseo_notifications model
   */
  interface wp_aioseo_notificationsFieldRefs {
    readonly id: FieldRef<"wp_aioseo_notifications", 'BigInt'>
    readonly slug: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly title: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly content: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly type: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly level: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly notification_id: FieldRef<"wp_aioseo_notifications", 'BigInt'>
    readonly notification_name: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly start: FieldRef<"wp_aioseo_notifications", 'DateTime'>
    readonly end: FieldRef<"wp_aioseo_notifications", 'DateTime'>
    readonly button1_label: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly button1_action: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly button2_label: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly button2_action: FieldRef<"wp_aioseo_notifications", 'String'>
    readonly dismissed: FieldRef<"wp_aioseo_notifications", 'Boolean'>
    readonly created: FieldRef<"wp_aioseo_notifications", 'DateTime'>
    readonly updated: FieldRef<"wp_aioseo_notifications", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_aioseo_notifications findUnique
   */
  export type wp_aioseo_notificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_notifications to fetch.
     */
    where: wp_aioseo_notificationsWhereUniqueInput
  }

  /**
   * wp_aioseo_notifications findUniqueOrThrow
   */
  export type wp_aioseo_notificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_notifications to fetch.
     */
    where: wp_aioseo_notificationsWhereUniqueInput
  }

  /**
   * wp_aioseo_notifications findFirst
   */
  export type wp_aioseo_notificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_notifications to fetch.
     */
    where?: wp_aioseo_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_notifications to fetch.
     */
    orderBy?: wp_aioseo_notificationsOrderByWithRelationInput | wp_aioseo_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_aioseo_notifications.
     */
    cursor?: wp_aioseo_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_aioseo_notifications.
     */
    distinct?: Wp_aioseo_notificationsScalarFieldEnum | Wp_aioseo_notificationsScalarFieldEnum[]
  }

  /**
   * wp_aioseo_notifications findFirstOrThrow
   */
  export type wp_aioseo_notificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_notifications to fetch.
     */
    where?: wp_aioseo_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_notifications to fetch.
     */
    orderBy?: wp_aioseo_notificationsOrderByWithRelationInput | wp_aioseo_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_aioseo_notifications.
     */
    cursor?: wp_aioseo_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_aioseo_notifications.
     */
    distinct?: Wp_aioseo_notificationsScalarFieldEnum | Wp_aioseo_notificationsScalarFieldEnum[]
  }

  /**
   * wp_aioseo_notifications findMany
   */
  export type wp_aioseo_notificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_notifications to fetch.
     */
    where?: wp_aioseo_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_notifications to fetch.
     */
    orderBy?: wp_aioseo_notificationsOrderByWithRelationInput | wp_aioseo_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_aioseo_notifications.
     */
    cursor?: wp_aioseo_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_notifications.
     */
    skip?: number
    distinct?: Wp_aioseo_notificationsScalarFieldEnum | Wp_aioseo_notificationsScalarFieldEnum[]
  }

  /**
   * wp_aioseo_notifications create
   */
  export type wp_aioseo_notificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_aioseo_notifications.
     */
    data: XOR<wp_aioseo_notificationsCreateInput, wp_aioseo_notificationsUncheckedCreateInput>
  }

  /**
   * wp_aioseo_notifications createMany
   */
  export type wp_aioseo_notificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_aioseo_notifications.
     */
    data: wp_aioseo_notificationsCreateManyInput | wp_aioseo_notificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_aioseo_notifications update
   */
  export type wp_aioseo_notificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_aioseo_notifications.
     */
    data: XOR<wp_aioseo_notificationsUpdateInput, wp_aioseo_notificationsUncheckedUpdateInput>
    /**
     * Choose, which wp_aioseo_notifications to update.
     */
    where: wp_aioseo_notificationsWhereUniqueInput
  }

  /**
   * wp_aioseo_notifications updateMany
   */
  export type wp_aioseo_notificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_aioseo_notifications.
     */
    data: XOR<wp_aioseo_notificationsUpdateManyMutationInput, wp_aioseo_notificationsUncheckedUpdateManyInput>
    /**
     * Filter which wp_aioseo_notifications to update
     */
    where?: wp_aioseo_notificationsWhereInput
    /**
     * Limit how many wp_aioseo_notifications to update.
     */
    limit?: number
  }

  /**
   * wp_aioseo_notifications upsert
   */
  export type wp_aioseo_notificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_aioseo_notifications to update in case it exists.
     */
    where: wp_aioseo_notificationsWhereUniqueInput
    /**
     * In case the wp_aioseo_notifications found by the `where` argument doesn't exist, create a new wp_aioseo_notifications with this data.
     */
    create: XOR<wp_aioseo_notificationsCreateInput, wp_aioseo_notificationsUncheckedCreateInput>
    /**
     * In case the wp_aioseo_notifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_aioseo_notificationsUpdateInput, wp_aioseo_notificationsUncheckedUpdateInput>
  }

  /**
   * wp_aioseo_notifications delete
   */
  export type wp_aioseo_notificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
    /**
     * Filter which wp_aioseo_notifications to delete.
     */
    where: wp_aioseo_notificationsWhereUniqueInput
  }

  /**
   * wp_aioseo_notifications deleteMany
   */
  export type wp_aioseo_notificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_aioseo_notifications to delete
     */
    where?: wp_aioseo_notificationsWhereInput
    /**
     * Limit how many wp_aioseo_notifications to delete.
     */
    limit?: number
  }

  /**
   * wp_aioseo_notifications without action
   */
  export type wp_aioseo_notificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_notifications
     */
    select?: wp_aioseo_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_notifications
     */
    omit?: wp_aioseo_notificationsOmit<ExtArgs> | null
  }


  /**
   * Model wp_aioseo_posts
   */

  export type AggregateWp_aioseo_posts = {
    _count: Wp_aioseo_postsCountAggregateOutputType | null
    _avg: Wp_aioseo_postsAvgAggregateOutputType | null
    _sum: Wp_aioseo_postsSumAggregateOutputType | null
    _min: Wp_aioseo_postsMinAggregateOutputType | null
    _max: Wp_aioseo_postsMaxAggregateOutputType | null
  }

  export type Wp_aioseo_postsAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    og_custom_image_width: number | null
    og_custom_image_height: number | null
    seo_score: number | null
    robots_max_snippet: number | null
    robots_max_videopreview: number | null
  }

  export type Wp_aioseo_postsSumAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    og_custom_image_width: number | null
    og_custom_image_height: number | null
    seo_score: number | null
    robots_max_snippet: number | null
    robots_max_videopreview: number | null
  }

  export type Wp_aioseo_postsMinAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    title: string | null
    description: string | null
    keywords: string | null
    keyphrases: string | null
    page_analysis: string | null
    canonical_url: string | null
    og_title: string | null
    og_description: string | null
    og_object_type: string | null
    og_image_type: string | null
    og_image_custom_url: string | null
    og_image_custom_fields: string | null
    og_custom_image_width: number | null
    og_custom_image_height: number | null
    og_video: string | null
    og_custom_url: string | null
    og_article_section: string | null
    og_article_tags: string | null
    twitter_use_og: boolean | null
    twitter_card: string | null
    twitter_image_type: string | null
    twitter_image_custom_url: string | null
    twitter_image_custom_fields: string | null
    twitter_title: string | null
    twitter_description: string | null
    seo_score: number | null
    schema_type: string | null
    schema_type_options: string | null
    pillar_content: boolean | null
    robots_default: boolean | null
    robots_noindex: boolean | null
    robots_noarchive: boolean | null
    robots_nosnippet: boolean | null
    robots_nofollow: boolean | null
    robots_noimageindex: boolean | null
    robots_noodp: boolean | null
    robots_notranslate: boolean | null
    robots_max_snippet: number | null
    robots_max_videopreview: number | null
    robots_max_imagepreview: string | null
    tabs: string | null
    images: string | null
    image_scan_date: Date | null
    priority: string | null
    frequency: string | null
    videos: string | null
    video_thumbnail: string | null
    video_scan_date: Date | null
    local_seo: string | null
    created: Date | null
    updated: Date | null
  }

  export type Wp_aioseo_postsMaxAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    title: string | null
    description: string | null
    keywords: string | null
    keyphrases: string | null
    page_analysis: string | null
    canonical_url: string | null
    og_title: string | null
    og_description: string | null
    og_object_type: string | null
    og_image_type: string | null
    og_image_custom_url: string | null
    og_image_custom_fields: string | null
    og_custom_image_width: number | null
    og_custom_image_height: number | null
    og_video: string | null
    og_custom_url: string | null
    og_article_section: string | null
    og_article_tags: string | null
    twitter_use_og: boolean | null
    twitter_card: string | null
    twitter_image_type: string | null
    twitter_image_custom_url: string | null
    twitter_image_custom_fields: string | null
    twitter_title: string | null
    twitter_description: string | null
    seo_score: number | null
    schema_type: string | null
    schema_type_options: string | null
    pillar_content: boolean | null
    robots_default: boolean | null
    robots_noindex: boolean | null
    robots_noarchive: boolean | null
    robots_nosnippet: boolean | null
    robots_nofollow: boolean | null
    robots_noimageindex: boolean | null
    robots_noodp: boolean | null
    robots_notranslate: boolean | null
    robots_max_snippet: number | null
    robots_max_videopreview: number | null
    robots_max_imagepreview: string | null
    tabs: string | null
    images: string | null
    image_scan_date: Date | null
    priority: string | null
    frequency: string | null
    videos: string | null
    video_thumbnail: string | null
    video_scan_date: Date | null
    local_seo: string | null
    created: Date | null
    updated: Date | null
  }

  export type Wp_aioseo_postsCountAggregateOutputType = {
    id: number
    post_id: number
    title: number
    description: number
    keywords: number
    keyphrases: number
    page_analysis: number
    canonical_url: number
    og_title: number
    og_description: number
    og_object_type: number
    og_image_type: number
    og_image_custom_url: number
    og_image_custom_fields: number
    og_custom_image_width: number
    og_custom_image_height: number
    og_video: number
    og_custom_url: number
    og_article_section: number
    og_article_tags: number
    twitter_use_og: number
    twitter_card: number
    twitter_image_type: number
    twitter_image_custom_url: number
    twitter_image_custom_fields: number
    twitter_title: number
    twitter_description: number
    seo_score: number
    schema_type: number
    schema_type_options: number
    pillar_content: number
    robots_default: number
    robots_noindex: number
    robots_noarchive: number
    robots_nosnippet: number
    robots_nofollow: number
    robots_noimageindex: number
    robots_noodp: number
    robots_notranslate: number
    robots_max_snippet: number
    robots_max_videopreview: number
    robots_max_imagepreview: number
    tabs: number
    images: number
    image_scan_date: number
    priority: number
    frequency: number
    videos: number
    video_thumbnail: number
    video_scan_date: number
    local_seo: number
    created: number
    updated: number
    _all: number
  }


  export type Wp_aioseo_postsAvgAggregateInputType = {
    id?: true
    post_id?: true
    og_custom_image_width?: true
    og_custom_image_height?: true
    seo_score?: true
    robots_max_snippet?: true
    robots_max_videopreview?: true
  }

  export type Wp_aioseo_postsSumAggregateInputType = {
    id?: true
    post_id?: true
    og_custom_image_width?: true
    og_custom_image_height?: true
    seo_score?: true
    robots_max_snippet?: true
    robots_max_videopreview?: true
  }

  export type Wp_aioseo_postsMinAggregateInputType = {
    id?: true
    post_id?: true
    title?: true
    description?: true
    keywords?: true
    keyphrases?: true
    page_analysis?: true
    canonical_url?: true
    og_title?: true
    og_description?: true
    og_object_type?: true
    og_image_type?: true
    og_image_custom_url?: true
    og_image_custom_fields?: true
    og_custom_image_width?: true
    og_custom_image_height?: true
    og_video?: true
    og_custom_url?: true
    og_article_section?: true
    og_article_tags?: true
    twitter_use_og?: true
    twitter_card?: true
    twitter_image_type?: true
    twitter_image_custom_url?: true
    twitter_image_custom_fields?: true
    twitter_title?: true
    twitter_description?: true
    seo_score?: true
    schema_type?: true
    schema_type_options?: true
    pillar_content?: true
    robots_default?: true
    robots_noindex?: true
    robots_noarchive?: true
    robots_nosnippet?: true
    robots_nofollow?: true
    robots_noimageindex?: true
    robots_noodp?: true
    robots_notranslate?: true
    robots_max_snippet?: true
    robots_max_videopreview?: true
    robots_max_imagepreview?: true
    tabs?: true
    images?: true
    image_scan_date?: true
    priority?: true
    frequency?: true
    videos?: true
    video_thumbnail?: true
    video_scan_date?: true
    local_seo?: true
    created?: true
    updated?: true
  }

  export type Wp_aioseo_postsMaxAggregateInputType = {
    id?: true
    post_id?: true
    title?: true
    description?: true
    keywords?: true
    keyphrases?: true
    page_analysis?: true
    canonical_url?: true
    og_title?: true
    og_description?: true
    og_object_type?: true
    og_image_type?: true
    og_image_custom_url?: true
    og_image_custom_fields?: true
    og_custom_image_width?: true
    og_custom_image_height?: true
    og_video?: true
    og_custom_url?: true
    og_article_section?: true
    og_article_tags?: true
    twitter_use_og?: true
    twitter_card?: true
    twitter_image_type?: true
    twitter_image_custom_url?: true
    twitter_image_custom_fields?: true
    twitter_title?: true
    twitter_description?: true
    seo_score?: true
    schema_type?: true
    schema_type_options?: true
    pillar_content?: true
    robots_default?: true
    robots_noindex?: true
    robots_noarchive?: true
    robots_nosnippet?: true
    robots_nofollow?: true
    robots_noimageindex?: true
    robots_noodp?: true
    robots_notranslate?: true
    robots_max_snippet?: true
    robots_max_videopreview?: true
    robots_max_imagepreview?: true
    tabs?: true
    images?: true
    image_scan_date?: true
    priority?: true
    frequency?: true
    videos?: true
    video_thumbnail?: true
    video_scan_date?: true
    local_seo?: true
    created?: true
    updated?: true
  }

  export type Wp_aioseo_postsCountAggregateInputType = {
    id?: true
    post_id?: true
    title?: true
    description?: true
    keywords?: true
    keyphrases?: true
    page_analysis?: true
    canonical_url?: true
    og_title?: true
    og_description?: true
    og_object_type?: true
    og_image_type?: true
    og_image_custom_url?: true
    og_image_custom_fields?: true
    og_custom_image_width?: true
    og_custom_image_height?: true
    og_video?: true
    og_custom_url?: true
    og_article_section?: true
    og_article_tags?: true
    twitter_use_og?: true
    twitter_card?: true
    twitter_image_type?: true
    twitter_image_custom_url?: true
    twitter_image_custom_fields?: true
    twitter_title?: true
    twitter_description?: true
    seo_score?: true
    schema_type?: true
    schema_type_options?: true
    pillar_content?: true
    robots_default?: true
    robots_noindex?: true
    robots_noarchive?: true
    robots_nosnippet?: true
    robots_nofollow?: true
    robots_noimageindex?: true
    robots_noodp?: true
    robots_notranslate?: true
    robots_max_snippet?: true
    robots_max_videopreview?: true
    robots_max_imagepreview?: true
    tabs?: true
    images?: true
    image_scan_date?: true
    priority?: true
    frequency?: true
    videos?: true
    video_thumbnail?: true
    video_scan_date?: true
    local_seo?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Wp_aioseo_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_aioseo_posts to aggregate.
     */
    where?: wp_aioseo_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_posts to fetch.
     */
    orderBy?: wp_aioseo_postsOrderByWithRelationInput | wp_aioseo_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_aioseo_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_aioseo_posts
    **/
    _count?: true | Wp_aioseo_postsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_aioseo_postsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_aioseo_postsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_aioseo_postsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_aioseo_postsMaxAggregateInputType
  }

  export type GetWp_aioseo_postsAggregateType<T extends Wp_aioseo_postsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_aioseo_posts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_aioseo_posts[P]>
      : GetScalarType<T[P], AggregateWp_aioseo_posts[P]>
  }




  export type wp_aioseo_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_aioseo_postsWhereInput
    orderBy?: wp_aioseo_postsOrderByWithAggregationInput | wp_aioseo_postsOrderByWithAggregationInput[]
    by: Wp_aioseo_postsScalarFieldEnum[] | Wp_aioseo_postsScalarFieldEnum
    having?: wp_aioseo_postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_aioseo_postsCountAggregateInputType | true
    _avg?: Wp_aioseo_postsAvgAggregateInputType
    _sum?: Wp_aioseo_postsSumAggregateInputType
    _min?: Wp_aioseo_postsMinAggregateInputType
    _max?: Wp_aioseo_postsMaxAggregateInputType
  }

  export type Wp_aioseo_postsGroupByOutputType = {
    id: bigint
    post_id: bigint
    title: string | null
    description: string | null
    keywords: string | null
    keyphrases: string | null
    page_analysis: string | null
    canonical_url: string | null
    og_title: string | null
    og_description: string | null
    og_object_type: string | null
    og_image_type: string | null
    og_image_custom_url: string | null
    og_image_custom_fields: string | null
    og_custom_image_width: number | null
    og_custom_image_height: number | null
    og_video: string | null
    og_custom_url: string | null
    og_article_section: string | null
    og_article_tags: string | null
    twitter_use_og: boolean | null
    twitter_card: string | null
    twitter_image_type: string | null
    twitter_image_custom_url: string | null
    twitter_image_custom_fields: string | null
    twitter_title: string | null
    twitter_description: string | null
    seo_score: number
    schema_type: string | null
    schema_type_options: string | null
    pillar_content: boolean | null
    robots_default: boolean
    robots_noindex: boolean
    robots_noarchive: boolean
    robots_nosnippet: boolean
    robots_nofollow: boolean
    robots_noimageindex: boolean
    robots_noodp: boolean
    robots_notranslate: boolean
    robots_max_snippet: number | null
    robots_max_videopreview: number | null
    robots_max_imagepreview: string | null
    tabs: string | null
    images: string | null
    image_scan_date: Date | null
    priority: string | null
    frequency: string | null
    videos: string | null
    video_thumbnail: string | null
    video_scan_date: Date | null
    local_seo: string | null
    created: Date
    updated: Date
    _count: Wp_aioseo_postsCountAggregateOutputType | null
    _avg: Wp_aioseo_postsAvgAggregateOutputType | null
    _sum: Wp_aioseo_postsSumAggregateOutputType | null
    _min: Wp_aioseo_postsMinAggregateOutputType | null
    _max: Wp_aioseo_postsMaxAggregateOutputType | null
  }

  type GetWp_aioseo_postsGroupByPayload<T extends wp_aioseo_postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_aioseo_postsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_aioseo_postsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_aioseo_postsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_aioseo_postsGroupByOutputType[P]>
        }
      >
    >


  export type wp_aioseo_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    post_id?: boolean
    title?: boolean
    description?: boolean
    keywords?: boolean
    keyphrases?: boolean
    page_analysis?: boolean
    canonical_url?: boolean
    og_title?: boolean
    og_description?: boolean
    og_object_type?: boolean
    og_image_type?: boolean
    og_image_custom_url?: boolean
    og_image_custom_fields?: boolean
    og_custom_image_width?: boolean
    og_custom_image_height?: boolean
    og_video?: boolean
    og_custom_url?: boolean
    og_article_section?: boolean
    og_article_tags?: boolean
    twitter_use_og?: boolean
    twitter_card?: boolean
    twitter_image_type?: boolean
    twitter_image_custom_url?: boolean
    twitter_image_custom_fields?: boolean
    twitter_title?: boolean
    twitter_description?: boolean
    seo_score?: boolean
    schema_type?: boolean
    schema_type_options?: boolean
    pillar_content?: boolean
    robots_default?: boolean
    robots_noindex?: boolean
    robots_noarchive?: boolean
    robots_nosnippet?: boolean
    robots_nofollow?: boolean
    robots_noimageindex?: boolean
    robots_noodp?: boolean
    robots_notranslate?: boolean
    robots_max_snippet?: boolean
    robots_max_videopreview?: boolean
    robots_max_imagepreview?: boolean
    tabs?: boolean
    images?: boolean
    image_scan_date?: boolean
    priority?: boolean
    frequency?: boolean
    videos?: boolean
    video_thumbnail?: boolean
    video_scan_date?: boolean
    local_seo?: boolean
    created?: boolean
    updated?: boolean
  }, ExtArgs["result"]["wp_aioseo_posts"]>



  export type wp_aioseo_postsSelectScalar = {
    id?: boolean
    post_id?: boolean
    title?: boolean
    description?: boolean
    keywords?: boolean
    keyphrases?: boolean
    page_analysis?: boolean
    canonical_url?: boolean
    og_title?: boolean
    og_description?: boolean
    og_object_type?: boolean
    og_image_type?: boolean
    og_image_custom_url?: boolean
    og_image_custom_fields?: boolean
    og_custom_image_width?: boolean
    og_custom_image_height?: boolean
    og_video?: boolean
    og_custom_url?: boolean
    og_article_section?: boolean
    og_article_tags?: boolean
    twitter_use_og?: boolean
    twitter_card?: boolean
    twitter_image_type?: boolean
    twitter_image_custom_url?: boolean
    twitter_image_custom_fields?: boolean
    twitter_title?: boolean
    twitter_description?: boolean
    seo_score?: boolean
    schema_type?: boolean
    schema_type_options?: boolean
    pillar_content?: boolean
    robots_default?: boolean
    robots_noindex?: boolean
    robots_noarchive?: boolean
    robots_nosnippet?: boolean
    robots_nofollow?: boolean
    robots_noimageindex?: boolean
    robots_noodp?: boolean
    robots_notranslate?: boolean
    robots_max_snippet?: boolean
    robots_max_videopreview?: boolean
    robots_max_imagepreview?: boolean
    tabs?: boolean
    images?: boolean
    image_scan_date?: boolean
    priority?: boolean
    frequency?: boolean
    videos?: boolean
    video_thumbnail?: boolean
    video_scan_date?: boolean
    local_seo?: boolean
    created?: boolean
    updated?: boolean
  }

  export type wp_aioseo_postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "post_id" | "title" | "description" | "keywords" | "keyphrases" | "page_analysis" | "canonical_url" | "og_title" | "og_description" | "og_object_type" | "og_image_type" | "og_image_custom_url" | "og_image_custom_fields" | "og_custom_image_width" | "og_custom_image_height" | "og_video" | "og_custom_url" | "og_article_section" | "og_article_tags" | "twitter_use_og" | "twitter_card" | "twitter_image_type" | "twitter_image_custom_url" | "twitter_image_custom_fields" | "twitter_title" | "twitter_description" | "seo_score" | "schema_type" | "schema_type_options" | "pillar_content" | "robots_default" | "robots_noindex" | "robots_noarchive" | "robots_nosnippet" | "robots_nofollow" | "robots_noimageindex" | "robots_noodp" | "robots_notranslate" | "robots_max_snippet" | "robots_max_videopreview" | "robots_max_imagepreview" | "tabs" | "images" | "image_scan_date" | "priority" | "frequency" | "videos" | "video_thumbnail" | "video_scan_date" | "local_seo" | "created" | "updated", ExtArgs["result"]["wp_aioseo_posts"]>

  export type $wp_aioseo_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_aioseo_posts"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      post_id: bigint
      title: string | null
      description: string | null
      keywords: string | null
      keyphrases: string | null
      page_analysis: string | null
      canonical_url: string | null
      og_title: string | null
      og_description: string | null
      og_object_type: string | null
      og_image_type: string | null
      og_image_custom_url: string | null
      og_image_custom_fields: string | null
      og_custom_image_width: number | null
      og_custom_image_height: number | null
      og_video: string | null
      og_custom_url: string | null
      og_article_section: string | null
      og_article_tags: string | null
      twitter_use_og: boolean | null
      twitter_card: string | null
      twitter_image_type: string | null
      twitter_image_custom_url: string | null
      twitter_image_custom_fields: string | null
      twitter_title: string | null
      twitter_description: string | null
      seo_score: number
      schema_type: string | null
      schema_type_options: string | null
      pillar_content: boolean | null
      robots_default: boolean
      robots_noindex: boolean
      robots_noarchive: boolean
      robots_nosnippet: boolean
      robots_nofollow: boolean
      robots_noimageindex: boolean
      robots_noodp: boolean
      robots_notranslate: boolean
      robots_max_snippet: number | null
      robots_max_videopreview: number | null
      robots_max_imagepreview: string | null
      tabs: string | null
      images: string | null
      image_scan_date: Date | null
      priority: string | null
      frequency: string | null
      videos: string | null
      video_thumbnail: string | null
      video_scan_date: Date | null
      local_seo: string | null
      created: Date
      updated: Date
    }, ExtArgs["result"]["wp_aioseo_posts"]>
    composites: {}
  }

  type wp_aioseo_postsGetPayload<S extends boolean | null | undefined | wp_aioseo_postsDefaultArgs> = $Result.GetResult<Prisma.$wp_aioseo_postsPayload, S>

  type wp_aioseo_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_aioseo_postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_aioseo_postsCountAggregateInputType | true
    }

  export interface wp_aioseo_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_aioseo_posts'], meta: { name: 'wp_aioseo_posts' } }
    /**
     * Find zero or one Wp_aioseo_posts that matches the filter.
     * @param {wp_aioseo_postsFindUniqueArgs} args - Arguments to find a Wp_aioseo_posts
     * @example
     * // Get one Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_aioseo_postsFindUniqueArgs>(args: SelectSubset<T, wp_aioseo_postsFindUniqueArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_aioseo_posts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_aioseo_postsFindUniqueOrThrowArgs} args - Arguments to find a Wp_aioseo_posts
     * @example
     * // Get one Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_aioseo_postsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_aioseo_postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_aioseo_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_postsFindFirstArgs} args - Arguments to find a Wp_aioseo_posts
     * @example
     * // Get one Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_aioseo_postsFindFirstArgs>(args?: SelectSubset<T, wp_aioseo_postsFindFirstArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_aioseo_posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_postsFindFirstOrThrowArgs} args - Arguments to find a Wp_aioseo_posts
     * @example
     * // Get one Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_aioseo_postsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_aioseo_postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_aioseo_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.findMany()
     * 
     * // Get first 10 Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_aioseo_postsWithIdOnly = await prisma.wp_aioseo_posts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_aioseo_postsFindManyArgs>(args?: SelectSubset<T, wp_aioseo_postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_aioseo_posts.
     * @param {wp_aioseo_postsCreateArgs} args - Arguments to create a Wp_aioseo_posts.
     * @example
     * // Create one Wp_aioseo_posts
     * const Wp_aioseo_posts = await prisma.wp_aioseo_posts.create({
     *   data: {
     *     // ... data to create a Wp_aioseo_posts
     *   }
     * })
     * 
     */
    create<T extends wp_aioseo_postsCreateArgs>(args: SelectSubset<T, wp_aioseo_postsCreateArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_aioseo_posts.
     * @param {wp_aioseo_postsCreateManyArgs} args - Arguments to create many Wp_aioseo_posts.
     * @example
     * // Create many Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_aioseo_postsCreateManyArgs>(args?: SelectSubset<T, wp_aioseo_postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_aioseo_posts.
     * @param {wp_aioseo_postsDeleteArgs} args - Arguments to delete one Wp_aioseo_posts.
     * @example
     * // Delete one Wp_aioseo_posts
     * const Wp_aioseo_posts = await prisma.wp_aioseo_posts.delete({
     *   where: {
     *     // ... filter to delete one Wp_aioseo_posts
     *   }
     * })
     * 
     */
    delete<T extends wp_aioseo_postsDeleteArgs>(args: SelectSubset<T, wp_aioseo_postsDeleteArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_aioseo_posts.
     * @param {wp_aioseo_postsUpdateArgs} args - Arguments to update one Wp_aioseo_posts.
     * @example
     * // Update one Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_aioseo_postsUpdateArgs>(args: SelectSubset<T, wp_aioseo_postsUpdateArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_aioseo_posts.
     * @param {wp_aioseo_postsDeleteManyArgs} args - Arguments to filter Wp_aioseo_posts to delete.
     * @example
     * // Delete a few Wp_aioseo_posts
     * const { count } = await prisma.wp_aioseo_posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_aioseo_postsDeleteManyArgs>(args?: SelectSubset<T, wp_aioseo_postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_aioseo_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_aioseo_postsUpdateManyArgs>(args: SelectSubset<T, wp_aioseo_postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_aioseo_posts.
     * @param {wp_aioseo_postsUpsertArgs} args - Arguments to update or create a Wp_aioseo_posts.
     * @example
     * // Update or create a Wp_aioseo_posts
     * const wp_aioseo_posts = await prisma.wp_aioseo_posts.upsert({
     *   create: {
     *     // ... data to create a Wp_aioseo_posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_aioseo_posts we want to update
     *   }
     * })
     */
    upsert<T extends wp_aioseo_postsUpsertArgs>(args: SelectSubset<T, wp_aioseo_postsUpsertArgs<ExtArgs>>): Prisma__wp_aioseo_postsClient<$Result.GetResult<Prisma.$wp_aioseo_postsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_aioseo_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_postsCountArgs} args - Arguments to filter Wp_aioseo_posts to count.
     * @example
     * // Count the number of Wp_aioseo_posts
     * const count = await prisma.wp_aioseo_posts.count({
     *   where: {
     *     // ... the filter for the Wp_aioseo_posts we want to count
     *   }
     * })
    **/
    count<T extends wp_aioseo_postsCountArgs>(
      args?: Subset<T, wp_aioseo_postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_aioseo_postsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_aioseo_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_aioseo_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_aioseo_postsAggregateArgs>(args: Subset<T, Wp_aioseo_postsAggregateArgs>): Prisma.PrismaPromise<GetWp_aioseo_postsAggregateType<T>>

    /**
     * Group by Wp_aioseo_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_aioseo_postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_aioseo_postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_aioseo_postsGroupByArgs['orderBy'] }
        : { orderBy?: wp_aioseo_postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_aioseo_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_aioseo_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_aioseo_posts model
   */
  readonly fields: wp_aioseo_postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_aioseo_posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_aioseo_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_aioseo_posts model
   */
  interface wp_aioseo_postsFieldRefs {
    readonly id: FieldRef<"wp_aioseo_posts", 'BigInt'>
    readonly post_id: FieldRef<"wp_aioseo_posts", 'BigInt'>
    readonly title: FieldRef<"wp_aioseo_posts", 'String'>
    readonly description: FieldRef<"wp_aioseo_posts", 'String'>
    readonly keywords: FieldRef<"wp_aioseo_posts", 'String'>
    readonly keyphrases: FieldRef<"wp_aioseo_posts", 'String'>
    readonly page_analysis: FieldRef<"wp_aioseo_posts", 'String'>
    readonly canonical_url: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_title: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_description: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_object_type: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_image_type: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_image_custom_url: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_image_custom_fields: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_custom_image_width: FieldRef<"wp_aioseo_posts", 'Int'>
    readonly og_custom_image_height: FieldRef<"wp_aioseo_posts", 'Int'>
    readonly og_video: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_custom_url: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_article_section: FieldRef<"wp_aioseo_posts", 'String'>
    readonly og_article_tags: FieldRef<"wp_aioseo_posts", 'String'>
    readonly twitter_use_og: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly twitter_card: FieldRef<"wp_aioseo_posts", 'String'>
    readonly twitter_image_type: FieldRef<"wp_aioseo_posts", 'String'>
    readonly twitter_image_custom_url: FieldRef<"wp_aioseo_posts", 'String'>
    readonly twitter_image_custom_fields: FieldRef<"wp_aioseo_posts", 'String'>
    readonly twitter_title: FieldRef<"wp_aioseo_posts", 'String'>
    readonly twitter_description: FieldRef<"wp_aioseo_posts", 'String'>
    readonly seo_score: FieldRef<"wp_aioseo_posts", 'Int'>
    readonly schema_type: FieldRef<"wp_aioseo_posts", 'String'>
    readonly schema_type_options: FieldRef<"wp_aioseo_posts", 'String'>
    readonly pillar_content: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_default: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_noindex: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_noarchive: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_nosnippet: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_nofollow: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_noimageindex: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_noodp: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_notranslate: FieldRef<"wp_aioseo_posts", 'Boolean'>
    readonly robots_max_snippet: FieldRef<"wp_aioseo_posts", 'Int'>
    readonly robots_max_videopreview: FieldRef<"wp_aioseo_posts", 'Int'>
    readonly robots_max_imagepreview: FieldRef<"wp_aioseo_posts", 'String'>
    readonly tabs: FieldRef<"wp_aioseo_posts", 'String'>
    readonly images: FieldRef<"wp_aioseo_posts", 'String'>
    readonly image_scan_date: FieldRef<"wp_aioseo_posts", 'DateTime'>
    readonly priority: FieldRef<"wp_aioseo_posts", 'String'>
    readonly frequency: FieldRef<"wp_aioseo_posts", 'String'>
    readonly videos: FieldRef<"wp_aioseo_posts", 'String'>
    readonly video_thumbnail: FieldRef<"wp_aioseo_posts", 'String'>
    readonly video_scan_date: FieldRef<"wp_aioseo_posts", 'DateTime'>
    readonly local_seo: FieldRef<"wp_aioseo_posts", 'String'>
    readonly created: FieldRef<"wp_aioseo_posts", 'DateTime'>
    readonly updated: FieldRef<"wp_aioseo_posts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_aioseo_posts findUnique
   */
  export type wp_aioseo_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_posts to fetch.
     */
    where: wp_aioseo_postsWhereUniqueInput
  }

  /**
   * wp_aioseo_posts findUniqueOrThrow
   */
  export type wp_aioseo_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_posts to fetch.
     */
    where: wp_aioseo_postsWhereUniqueInput
  }

  /**
   * wp_aioseo_posts findFirst
   */
  export type wp_aioseo_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_posts to fetch.
     */
    where?: wp_aioseo_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_posts to fetch.
     */
    orderBy?: wp_aioseo_postsOrderByWithRelationInput | wp_aioseo_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_aioseo_posts.
     */
    cursor?: wp_aioseo_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_aioseo_posts.
     */
    distinct?: Wp_aioseo_postsScalarFieldEnum | Wp_aioseo_postsScalarFieldEnum[]
  }

  /**
   * wp_aioseo_posts findFirstOrThrow
   */
  export type wp_aioseo_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_posts to fetch.
     */
    where?: wp_aioseo_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_posts to fetch.
     */
    orderBy?: wp_aioseo_postsOrderByWithRelationInput | wp_aioseo_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_aioseo_posts.
     */
    cursor?: wp_aioseo_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_aioseo_posts.
     */
    distinct?: Wp_aioseo_postsScalarFieldEnum | Wp_aioseo_postsScalarFieldEnum[]
  }

  /**
   * wp_aioseo_posts findMany
   */
  export type wp_aioseo_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_aioseo_posts to fetch.
     */
    where?: wp_aioseo_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_aioseo_posts to fetch.
     */
    orderBy?: wp_aioseo_postsOrderByWithRelationInput | wp_aioseo_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_aioseo_posts.
     */
    cursor?: wp_aioseo_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_aioseo_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_aioseo_posts.
     */
    skip?: number
    distinct?: Wp_aioseo_postsScalarFieldEnum | Wp_aioseo_postsScalarFieldEnum[]
  }

  /**
   * wp_aioseo_posts create
   */
  export type wp_aioseo_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_aioseo_posts.
     */
    data: XOR<wp_aioseo_postsCreateInput, wp_aioseo_postsUncheckedCreateInput>
  }

  /**
   * wp_aioseo_posts createMany
   */
  export type wp_aioseo_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_aioseo_posts.
     */
    data: wp_aioseo_postsCreateManyInput | wp_aioseo_postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_aioseo_posts update
   */
  export type wp_aioseo_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_aioseo_posts.
     */
    data: XOR<wp_aioseo_postsUpdateInput, wp_aioseo_postsUncheckedUpdateInput>
    /**
     * Choose, which wp_aioseo_posts to update.
     */
    where: wp_aioseo_postsWhereUniqueInput
  }

  /**
   * wp_aioseo_posts updateMany
   */
  export type wp_aioseo_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_aioseo_posts.
     */
    data: XOR<wp_aioseo_postsUpdateManyMutationInput, wp_aioseo_postsUncheckedUpdateManyInput>
    /**
     * Filter which wp_aioseo_posts to update
     */
    where?: wp_aioseo_postsWhereInput
    /**
     * Limit how many wp_aioseo_posts to update.
     */
    limit?: number
  }

  /**
   * wp_aioseo_posts upsert
   */
  export type wp_aioseo_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_aioseo_posts to update in case it exists.
     */
    where: wp_aioseo_postsWhereUniqueInput
    /**
     * In case the wp_aioseo_posts found by the `where` argument doesn't exist, create a new wp_aioseo_posts with this data.
     */
    create: XOR<wp_aioseo_postsCreateInput, wp_aioseo_postsUncheckedCreateInput>
    /**
     * In case the wp_aioseo_posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_aioseo_postsUpdateInput, wp_aioseo_postsUncheckedUpdateInput>
  }

  /**
   * wp_aioseo_posts delete
   */
  export type wp_aioseo_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
    /**
     * Filter which wp_aioseo_posts to delete.
     */
    where: wp_aioseo_postsWhereUniqueInput
  }

  /**
   * wp_aioseo_posts deleteMany
   */
  export type wp_aioseo_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_aioseo_posts to delete
     */
    where?: wp_aioseo_postsWhereInput
    /**
     * Limit how many wp_aioseo_posts to delete.
     */
    limit?: number
  }

  /**
   * wp_aioseo_posts without action
   */
  export type wp_aioseo_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_aioseo_posts
     */
    select?: wp_aioseo_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_aioseo_posts
     */
    omit?: wp_aioseo_postsOmit<ExtArgs> | null
  }


  /**
   * Model wp_commentmeta
   */

  export type AggregateWp_commentmeta = {
    _count: Wp_commentmetaCountAggregateOutputType | null
    _avg: Wp_commentmetaAvgAggregateOutputType | null
    _sum: Wp_commentmetaSumAggregateOutputType | null
    _min: Wp_commentmetaMinAggregateOutputType | null
    _max: Wp_commentmetaMaxAggregateOutputType | null
  }

  export type Wp_commentmetaAvgAggregateOutputType = {
    meta_id: number | null
    comment_id: number | null
  }

  export type Wp_commentmetaSumAggregateOutputType = {
    meta_id: bigint | null
    comment_id: bigint | null
  }

  export type Wp_commentmetaMinAggregateOutputType = {
    meta_id: bigint | null
    comment_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_commentmetaMaxAggregateOutputType = {
    meta_id: bigint | null
    comment_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_commentmetaCountAggregateOutputType = {
    meta_id: number
    comment_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_commentmetaAvgAggregateInputType = {
    meta_id?: true
    comment_id?: true
  }

  export type Wp_commentmetaSumAggregateInputType = {
    meta_id?: true
    comment_id?: true
  }

  export type Wp_commentmetaMinAggregateInputType = {
    meta_id?: true
    comment_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_commentmetaMaxAggregateInputType = {
    meta_id?: true
    comment_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_commentmetaCountAggregateInputType = {
    meta_id?: true
    comment_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_commentmetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_commentmeta to aggregate.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_commentmetas
    **/
    _count?: true | Wp_commentmetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_commentmetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_commentmetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_commentmetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_commentmetaMaxAggregateInputType
  }

  export type GetWp_commentmetaAggregateType<T extends Wp_commentmetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_commentmeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_commentmeta[P]>
      : GetScalarType<T[P], AggregateWp_commentmeta[P]>
  }




  export type wp_commentmetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_commentmetaWhereInput
    orderBy?: wp_commentmetaOrderByWithAggregationInput | wp_commentmetaOrderByWithAggregationInput[]
    by: Wp_commentmetaScalarFieldEnum[] | Wp_commentmetaScalarFieldEnum
    having?: wp_commentmetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_commentmetaCountAggregateInputType | true
    _avg?: Wp_commentmetaAvgAggregateInputType
    _sum?: Wp_commentmetaSumAggregateInputType
    _min?: Wp_commentmetaMinAggregateInputType
    _max?: Wp_commentmetaMaxAggregateInputType
  }

  export type Wp_commentmetaGroupByOutputType = {
    meta_id: bigint
    comment_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_commentmetaCountAggregateOutputType | null
    _avg: Wp_commentmetaAvgAggregateOutputType | null
    _sum: Wp_commentmetaSumAggregateOutputType | null
    _min: Wp_commentmetaMinAggregateOutputType | null
    _max: Wp_commentmetaMaxAggregateOutputType | null
  }

  type GetWp_commentmetaGroupByPayload<T extends wp_commentmetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_commentmetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_commentmetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_commentmetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_commentmetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_commentmetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    meta_id?: boolean
    comment_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_commentmeta"]>



  export type wp_commentmetaSelectScalar = {
    meta_id?: boolean
    comment_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_commentmetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"meta_id" | "comment_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_commentmeta"]>

  export type $wp_commentmetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_commentmeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      meta_id: bigint
      comment_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_commentmeta"]>
    composites: {}
  }

  type wp_commentmetaGetPayload<S extends boolean | null | undefined | wp_commentmetaDefaultArgs> = $Result.GetResult<Prisma.$wp_commentmetaPayload, S>

  type wp_commentmetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_commentmetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_commentmetaCountAggregateInputType | true
    }

  export interface wp_commentmetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_commentmeta'], meta: { name: 'wp_commentmeta' } }
    /**
     * Find zero or one Wp_commentmeta that matches the filter.
     * @param {wp_commentmetaFindUniqueArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_commentmetaFindUniqueArgs>(args: SelectSubset<T, wp_commentmetaFindUniqueArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_commentmeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_commentmetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_commentmetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_commentmetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_commentmeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaFindFirstArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_commentmetaFindFirstArgs>(args?: SelectSubset<T, wp_commentmetaFindFirstArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_commentmeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaFindFirstOrThrowArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_commentmetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_commentmetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_commentmetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_commentmetas
     * const wp_commentmetas = await prisma.wp_commentmeta.findMany()
     * 
     * // Get first 10 Wp_commentmetas
     * const wp_commentmetas = await prisma.wp_commentmeta.findMany({ take: 10 })
     * 
     * // Only select the `meta_id`
     * const wp_commentmetaWithMeta_idOnly = await prisma.wp_commentmeta.findMany({ select: { meta_id: true } })
     * 
     */
    findMany<T extends wp_commentmetaFindManyArgs>(args?: SelectSubset<T, wp_commentmetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_commentmeta.
     * @param {wp_commentmetaCreateArgs} args - Arguments to create a Wp_commentmeta.
     * @example
     * // Create one Wp_commentmeta
     * const Wp_commentmeta = await prisma.wp_commentmeta.create({
     *   data: {
     *     // ... data to create a Wp_commentmeta
     *   }
     * })
     * 
     */
    create<T extends wp_commentmetaCreateArgs>(args: SelectSubset<T, wp_commentmetaCreateArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_commentmetas.
     * @param {wp_commentmetaCreateManyArgs} args - Arguments to create many Wp_commentmetas.
     * @example
     * // Create many Wp_commentmetas
     * const wp_commentmeta = await prisma.wp_commentmeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_commentmetaCreateManyArgs>(args?: SelectSubset<T, wp_commentmetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_commentmeta.
     * @param {wp_commentmetaDeleteArgs} args - Arguments to delete one Wp_commentmeta.
     * @example
     * // Delete one Wp_commentmeta
     * const Wp_commentmeta = await prisma.wp_commentmeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_commentmeta
     *   }
     * })
     * 
     */
    delete<T extends wp_commentmetaDeleteArgs>(args: SelectSubset<T, wp_commentmetaDeleteArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_commentmeta.
     * @param {wp_commentmetaUpdateArgs} args - Arguments to update one Wp_commentmeta.
     * @example
     * // Update one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_commentmetaUpdateArgs>(args: SelectSubset<T, wp_commentmetaUpdateArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_commentmetas.
     * @param {wp_commentmetaDeleteManyArgs} args - Arguments to filter Wp_commentmetas to delete.
     * @example
     * // Delete a few Wp_commentmetas
     * const { count } = await prisma.wp_commentmeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_commentmetaDeleteManyArgs>(args?: SelectSubset<T, wp_commentmetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_commentmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_commentmetas
     * const wp_commentmeta = await prisma.wp_commentmeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_commentmetaUpdateManyArgs>(args: SelectSubset<T, wp_commentmetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_commentmeta.
     * @param {wp_commentmetaUpsertArgs} args - Arguments to update or create a Wp_commentmeta.
     * @example
     * // Update or create a Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.upsert({
     *   create: {
     *     // ... data to create a Wp_commentmeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_commentmeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_commentmetaUpsertArgs>(args: SelectSubset<T, wp_commentmetaUpsertArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_commentmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaCountArgs} args - Arguments to filter Wp_commentmetas to count.
     * @example
     * // Count the number of Wp_commentmetas
     * const count = await prisma.wp_commentmeta.count({
     *   where: {
     *     // ... the filter for the Wp_commentmetas we want to count
     *   }
     * })
    **/
    count<T extends wp_commentmetaCountArgs>(
      args?: Subset<T, wp_commentmetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_commentmetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_commentmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_commentmetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_commentmetaAggregateArgs>(args: Subset<T, Wp_commentmetaAggregateArgs>): Prisma.PrismaPromise<GetWp_commentmetaAggregateType<T>>

    /**
     * Group by Wp_commentmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_commentmetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_commentmetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_commentmetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_commentmetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_commentmetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_commentmeta model
   */
  readonly fields: wp_commentmetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_commentmeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_commentmetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_commentmeta model
   */
  interface wp_commentmetaFieldRefs {
    readonly meta_id: FieldRef<"wp_commentmeta", 'BigInt'>
    readonly comment_id: FieldRef<"wp_commentmeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_commentmeta", 'String'>
    readonly meta_value: FieldRef<"wp_commentmeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_commentmeta findUnique
   */
  export type wp_commentmetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta findUniqueOrThrow
   */
  export type wp_commentmetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta findFirst
   */
  export type wp_commentmetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_commentmetas.
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_commentmetas.
     */
    distinct?: Wp_commentmetaScalarFieldEnum | Wp_commentmetaScalarFieldEnum[]
  }

  /**
   * wp_commentmeta findFirstOrThrow
   */
  export type wp_commentmetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_commentmetas.
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_commentmetas.
     */
    distinct?: Wp_commentmetaScalarFieldEnum | Wp_commentmetaScalarFieldEnum[]
  }

  /**
   * wp_commentmeta findMany
   */
  export type wp_commentmetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmetas to fetch.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_commentmetas.
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    distinct?: Wp_commentmetaScalarFieldEnum | Wp_commentmetaScalarFieldEnum[]
  }

  /**
   * wp_commentmeta create
   */
  export type wp_commentmetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_commentmeta.
     */
    data?: XOR<wp_commentmetaCreateInput, wp_commentmetaUncheckedCreateInput>
  }

  /**
   * wp_commentmeta createMany
   */
  export type wp_commentmetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_commentmetas.
     */
    data: wp_commentmetaCreateManyInput | wp_commentmetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_commentmeta update
   */
  export type wp_commentmetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_commentmeta.
     */
    data: XOR<wp_commentmetaUpdateInput, wp_commentmetaUncheckedUpdateInput>
    /**
     * Choose, which wp_commentmeta to update.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta updateMany
   */
  export type wp_commentmetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_commentmetas.
     */
    data: XOR<wp_commentmetaUpdateManyMutationInput, wp_commentmetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_commentmetas to update
     */
    where?: wp_commentmetaWhereInput
    /**
     * Limit how many wp_commentmetas to update.
     */
    limit?: number
  }

  /**
   * wp_commentmeta upsert
   */
  export type wp_commentmetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_commentmeta to update in case it exists.
     */
    where: wp_commentmetaWhereUniqueInput
    /**
     * In case the wp_commentmeta found by the `where` argument doesn't exist, create a new wp_commentmeta with this data.
     */
    create: XOR<wp_commentmetaCreateInput, wp_commentmetaUncheckedCreateInput>
    /**
     * In case the wp_commentmeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_commentmetaUpdateInput, wp_commentmetaUncheckedUpdateInput>
  }

  /**
   * wp_commentmeta delete
   */
  export type wp_commentmetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter which wp_commentmeta to delete.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta deleteMany
   */
  export type wp_commentmetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_commentmetas to delete
     */
    where?: wp_commentmetaWhereInput
    /**
     * Limit how many wp_commentmetas to delete.
     */
    limit?: number
  }

  /**
   * wp_commentmeta without action
   */
  export type wp_commentmetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_comments
   */

  export type AggregateWp_comments = {
    _count: Wp_commentsCountAggregateOutputType | null
    _avg: Wp_commentsAvgAggregateOutputType | null
    _sum: Wp_commentsSumAggregateOutputType | null
    _min: Wp_commentsMinAggregateOutputType | null
    _max: Wp_commentsMaxAggregateOutputType | null
  }

  export type Wp_commentsAvgAggregateOutputType = {
    comment_ID: number | null
    comment_post_ID: number | null
    comment_karma: number | null
    comment_parent: number | null
    user_id: number | null
  }

  export type Wp_commentsSumAggregateOutputType = {
    comment_ID: bigint | null
    comment_post_ID: bigint | null
    comment_karma: number | null
    comment_parent: bigint | null
    user_id: bigint | null
  }

  export type Wp_commentsMinAggregateOutputType = {
    comment_ID: bigint | null
    comment_post_ID: bigint | null
    comment_author: string | null
    comment_author_email: string | null
    comment_author_url: string | null
    comment_author_IP: string | null
    comment_date: Date | null
    comment_date_gmt: Date | null
    comment_content: string | null
    comment_karma: number | null
    comment_approved: string | null
    comment_agent: string | null
    comment_type: string | null
    comment_parent: bigint | null
    user_id: bigint | null
  }

  export type Wp_commentsMaxAggregateOutputType = {
    comment_ID: bigint | null
    comment_post_ID: bigint | null
    comment_author: string | null
    comment_author_email: string | null
    comment_author_url: string | null
    comment_author_IP: string | null
    comment_date: Date | null
    comment_date_gmt: Date | null
    comment_content: string | null
    comment_karma: number | null
    comment_approved: string | null
    comment_agent: string | null
    comment_type: string | null
    comment_parent: bigint | null
    user_id: bigint | null
  }

  export type Wp_commentsCountAggregateOutputType = {
    comment_ID: number
    comment_post_ID: number
    comment_author: number
    comment_author_email: number
    comment_author_url: number
    comment_author_IP: number
    comment_date: number
    comment_date_gmt: number
    comment_content: number
    comment_karma: number
    comment_approved: number
    comment_agent: number
    comment_type: number
    comment_parent: number
    user_id: number
    _all: number
  }


  export type Wp_commentsAvgAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_karma?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsSumAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_karma?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsMinAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_author?: true
    comment_author_email?: true
    comment_author_url?: true
    comment_author_IP?: true
    comment_date?: true
    comment_date_gmt?: true
    comment_content?: true
    comment_karma?: true
    comment_approved?: true
    comment_agent?: true
    comment_type?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsMaxAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_author?: true
    comment_author_email?: true
    comment_author_url?: true
    comment_author_IP?: true
    comment_date?: true
    comment_date_gmt?: true
    comment_content?: true
    comment_karma?: true
    comment_approved?: true
    comment_agent?: true
    comment_type?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsCountAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_author?: true
    comment_author_email?: true
    comment_author_url?: true
    comment_author_IP?: true
    comment_date?: true
    comment_date_gmt?: true
    comment_content?: true
    comment_karma?: true
    comment_approved?: true
    comment_agent?: true
    comment_type?: true
    comment_parent?: true
    user_id?: true
    _all?: true
  }

  export type Wp_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_comments to aggregate.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_comments
    **/
    _count?: true | Wp_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_commentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_commentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_commentsMaxAggregateInputType
  }

  export type GetWp_commentsAggregateType<T extends Wp_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_comments[P]>
      : GetScalarType<T[P], AggregateWp_comments[P]>
  }




  export type wp_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_commentsWhereInput
    orderBy?: wp_commentsOrderByWithAggregationInput | wp_commentsOrderByWithAggregationInput[]
    by: Wp_commentsScalarFieldEnum[] | Wp_commentsScalarFieldEnum
    having?: wp_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_commentsCountAggregateInputType | true
    _avg?: Wp_commentsAvgAggregateInputType
    _sum?: Wp_commentsSumAggregateInputType
    _min?: Wp_commentsMinAggregateInputType
    _max?: Wp_commentsMaxAggregateInputType
  }

  export type Wp_commentsGroupByOutputType = {
    comment_ID: bigint
    comment_post_ID: bigint
    comment_author: string
    comment_author_email: string
    comment_author_url: string
    comment_author_IP: string
    comment_date: Date
    comment_date_gmt: Date
    comment_content: string
    comment_karma: number
    comment_approved: string
    comment_agent: string
    comment_type: string
    comment_parent: bigint
    user_id: bigint
    _count: Wp_commentsCountAggregateOutputType | null
    _avg: Wp_commentsAvgAggregateOutputType | null
    _sum: Wp_commentsSumAggregateOutputType | null
    _min: Wp_commentsMinAggregateOutputType | null
    _max: Wp_commentsMaxAggregateOutputType | null
  }

  type GetWp_commentsGroupByPayload<T extends wp_commentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_commentsGroupByOutputType[P]>
        }
      >
    >


  export type wp_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    comment_ID?: boolean
    comment_post_ID?: boolean
    comment_author?: boolean
    comment_author_email?: boolean
    comment_author_url?: boolean
    comment_author_IP?: boolean
    comment_date?: boolean
    comment_date_gmt?: boolean
    comment_content?: boolean
    comment_karma?: boolean
    comment_approved?: boolean
    comment_agent?: boolean
    comment_type?: boolean
    comment_parent?: boolean
    user_id?: boolean
  }, ExtArgs["result"]["wp_comments"]>



  export type wp_commentsSelectScalar = {
    comment_ID?: boolean
    comment_post_ID?: boolean
    comment_author?: boolean
    comment_author_email?: boolean
    comment_author_url?: boolean
    comment_author_IP?: boolean
    comment_date?: boolean
    comment_date_gmt?: boolean
    comment_content?: boolean
    comment_karma?: boolean
    comment_approved?: boolean
    comment_agent?: boolean
    comment_type?: boolean
    comment_parent?: boolean
    user_id?: boolean
  }

  export type wp_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"comment_ID" | "comment_post_ID" | "comment_author" | "comment_author_email" | "comment_author_url" | "comment_author_IP" | "comment_date" | "comment_date_gmt" | "comment_content" | "comment_karma" | "comment_approved" | "comment_agent" | "comment_type" | "comment_parent" | "user_id", ExtArgs["result"]["wp_comments"]>

  export type $wp_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_comments"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      comment_ID: bigint
      comment_post_ID: bigint
      comment_author: string
      comment_author_email: string
      comment_author_url: string
      comment_author_IP: string
      comment_date: Date
      comment_date_gmt: Date
      comment_content: string
      comment_karma: number
      comment_approved: string
      comment_agent: string
      comment_type: string
      comment_parent: bigint
      user_id: bigint
    }, ExtArgs["result"]["wp_comments"]>
    composites: {}
  }

  type wp_commentsGetPayload<S extends boolean | null | undefined | wp_commentsDefaultArgs> = $Result.GetResult<Prisma.$wp_commentsPayload, S>

  type wp_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_commentsCountAggregateInputType | true
    }

  export interface wp_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_comments'], meta: { name: 'wp_comments' } }
    /**
     * Find zero or one Wp_comments that matches the filter.
     * @param {wp_commentsFindUniqueArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_commentsFindUniqueArgs>(args: SelectSubset<T, wp_commentsFindUniqueArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_comments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_commentsFindUniqueOrThrowArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsFindFirstArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_commentsFindFirstArgs>(args?: SelectSubset<T, wp_commentsFindFirstArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsFindFirstOrThrowArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_comments
     * const wp_comments = await prisma.wp_comments.findMany()
     * 
     * // Get first 10 Wp_comments
     * const wp_comments = await prisma.wp_comments.findMany({ take: 10 })
     * 
     * // Only select the `comment_ID`
     * const wp_commentsWithComment_IDOnly = await prisma.wp_comments.findMany({ select: { comment_ID: true } })
     * 
     */
    findMany<T extends wp_commentsFindManyArgs>(args?: SelectSubset<T, wp_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_comments.
     * @param {wp_commentsCreateArgs} args - Arguments to create a Wp_comments.
     * @example
     * // Create one Wp_comments
     * const Wp_comments = await prisma.wp_comments.create({
     *   data: {
     *     // ... data to create a Wp_comments
     *   }
     * })
     * 
     */
    create<T extends wp_commentsCreateArgs>(args: SelectSubset<T, wp_commentsCreateArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_comments.
     * @param {wp_commentsCreateManyArgs} args - Arguments to create many Wp_comments.
     * @example
     * // Create many Wp_comments
     * const wp_comments = await prisma.wp_comments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_commentsCreateManyArgs>(args?: SelectSubset<T, wp_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_comments.
     * @param {wp_commentsDeleteArgs} args - Arguments to delete one Wp_comments.
     * @example
     * // Delete one Wp_comments
     * const Wp_comments = await prisma.wp_comments.delete({
     *   where: {
     *     // ... filter to delete one Wp_comments
     *   }
     * })
     * 
     */
    delete<T extends wp_commentsDeleteArgs>(args: SelectSubset<T, wp_commentsDeleteArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_comments.
     * @param {wp_commentsUpdateArgs} args - Arguments to update one Wp_comments.
     * @example
     * // Update one Wp_comments
     * const wp_comments = await prisma.wp_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_commentsUpdateArgs>(args: SelectSubset<T, wp_commentsUpdateArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_comments.
     * @param {wp_commentsDeleteManyArgs} args - Arguments to filter Wp_comments to delete.
     * @example
     * // Delete a few Wp_comments
     * const { count } = await prisma.wp_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_commentsDeleteManyArgs>(args?: SelectSubset<T, wp_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_comments
     * const wp_comments = await prisma.wp_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_commentsUpdateManyArgs>(args: SelectSubset<T, wp_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_comments.
     * @param {wp_commentsUpsertArgs} args - Arguments to update or create a Wp_comments.
     * @example
     * // Update or create a Wp_comments
     * const wp_comments = await prisma.wp_comments.upsert({
     *   create: {
     *     // ... data to create a Wp_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_comments we want to update
     *   }
     * })
     */
    upsert<T extends wp_commentsUpsertArgs>(args: SelectSubset<T, wp_commentsUpsertArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsCountArgs} args - Arguments to filter Wp_comments to count.
     * @example
     * // Count the number of Wp_comments
     * const count = await prisma.wp_comments.count({
     *   where: {
     *     // ... the filter for the Wp_comments we want to count
     *   }
     * })
    **/
    count<T extends wp_commentsCountArgs>(
      args?: Subset<T, wp_commentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_commentsAggregateArgs>(args: Subset<T, Wp_commentsAggregateArgs>): Prisma.PrismaPromise<GetWp_commentsAggregateType<T>>

    /**
     * Group by Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_commentsGroupByArgs['orderBy'] }
        : { orderBy?: wp_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_comments model
   */
  readonly fields: wp_commentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_comments model
   */
  interface wp_commentsFieldRefs {
    readonly comment_ID: FieldRef<"wp_comments", 'BigInt'>
    readonly comment_post_ID: FieldRef<"wp_comments", 'BigInt'>
    readonly comment_author: FieldRef<"wp_comments", 'String'>
    readonly comment_author_email: FieldRef<"wp_comments", 'String'>
    readonly comment_author_url: FieldRef<"wp_comments", 'String'>
    readonly comment_author_IP: FieldRef<"wp_comments", 'String'>
    readonly comment_date: FieldRef<"wp_comments", 'DateTime'>
    readonly comment_date_gmt: FieldRef<"wp_comments", 'DateTime'>
    readonly comment_content: FieldRef<"wp_comments", 'String'>
    readonly comment_karma: FieldRef<"wp_comments", 'Int'>
    readonly comment_approved: FieldRef<"wp_comments", 'String'>
    readonly comment_agent: FieldRef<"wp_comments", 'String'>
    readonly comment_type: FieldRef<"wp_comments", 'String'>
    readonly comment_parent: FieldRef<"wp_comments", 'BigInt'>
    readonly user_id: FieldRef<"wp_comments", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_comments findUnique
   */
  export type wp_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments findUniqueOrThrow
   */
  export type wp_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments findFirst
   */
  export type wp_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_comments.
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_comments.
     */
    distinct?: Wp_commentsScalarFieldEnum | Wp_commentsScalarFieldEnum[]
  }

  /**
   * wp_comments findFirstOrThrow
   */
  export type wp_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_comments.
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_comments.
     */
    distinct?: Wp_commentsScalarFieldEnum | Wp_commentsScalarFieldEnum[]
  }

  /**
   * wp_comments findMany
   */
  export type wp_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_comments.
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    distinct?: Wp_commentsScalarFieldEnum | Wp_commentsScalarFieldEnum[]
  }

  /**
   * wp_comments create
   */
  export type wp_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_comments.
     */
    data: XOR<wp_commentsCreateInput, wp_commentsUncheckedCreateInput>
  }

  /**
   * wp_comments createMany
   */
  export type wp_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_comments.
     */
    data: wp_commentsCreateManyInput | wp_commentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_comments update
   */
  export type wp_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_comments.
     */
    data: XOR<wp_commentsUpdateInput, wp_commentsUncheckedUpdateInput>
    /**
     * Choose, which wp_comments to update.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments updateMany
   */
  export type wp_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_comments.
     */
    data: XOR<wp_commentsUpdateManyMutationInput, wp_commentsUncheckedUpdateManyInput>
    /**
     * Filter which wp_comments to update
     */
    where?: wp_commentsWhereInput
    /**
     * Limit how many wp_comments to update.
     */
    limit?: number
  }

  /**
   * wp_comments upsert
   */
  export type wp_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_comments to update in case it exists.
     */
    where: wp_commentsWhereUniqueInput
    /**
     * In case the wp_comments found by the `where` argument doesn't exist, create a new wp_comments with this data.
     */
    create: XOR<wp_commentsCreateInput, wp_commentsUncheckedCreateInput>
    /**
     * In case the wp_comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_commentsUpdateInput, wp_commentsUncheckedUpdateInput>
  }

  /**
   * wp_comments delete
   */
  export type wp_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter which wp_comments to delete.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments deleteMany
   */
  export type wp_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_comments to delete
     */
    where?: wp_commentsWhereInput
    /**
     * Limit how many wp_comments to delete.
     */
    limit?: number
  }

  /**
   * wp_comments without action
   */
  export type wp_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
  }


  /**
   * Model wp_links
   */

  export type AggregateWp_links = {
    _count: Wp_linksCountAggregateOutputType | null
    _avg: Wp_linksAvgAggregateOutputType | null
    _sum: Wp_linksSumAggregateOutputType | null
    _min: Wp_linksMinAggregateOutputType | null
    _max: Wp_linksMaxAggregateOutputType | null
  }

  export type Wp_linksAvgAggregateOutputType = {
    link_id: number | null
    link_owner: number | null
    link_rating: number | null
  }

  export type Wp_linksSumAggregateOutputType = {
    link_id: bigint | null
    link_owner: bigint | null
    link_rating: number | null
  }

  export type Wp_linksMinAggregateOutputType = {
    link_id: bigint | null
    link_url: string | null
    link_name: string | null
    link_image: string | null
    link_target: string | null
    link_description: string | null
    link_visible: string | null
    link_owner: bigint | null
    link_rating: number | null
    link_updated: Date | null
    link_rel: string | null
    link_notes: string | null
    link_rss: string | null
  }

  export type Wp_linksMaxAggregateOutputType = {
    link_id: bigint | null
    link_url: string | null
    link_name: string | null
    link_image: string | null
    link_target: string | null
    link_description: string | null
    link_visible: string | null
    link_owner: bigint | null
    link_rating: number | null
    link_updated: Date | null
    link_rel: string | null
    link_notes: string | null
    link_rss: string | null
  }

  export type Wp_linksCountAggregateOutputType = {
    link_id: number
    link_url: number
    link_name: number
    link_image: number
    link_target: number
    link_description: number
    link_visible: number
    link_owner: number
    link_rating: number
    link_updated: number
    link_rel: number
    link_notes: number
    link_rss: number
    _all: number
  }


  export type Wp_linksAvgAggregateInputType = {
    link_id?: true
    link_owner?: true
    link_rating?: true
  }

  export type Wp_linksSumAggregateInputType = {
    link_id?: true
    link_owner?: true
    link_rating?: true
  }

  export type Wp_linksMinAggregateInputType = {
    link_id?: true
    link_url?: true
    link_name?: true
    link_image?: true
    link_target?: true
    link_description?: true
    link_visible?: true
    link_owner?: true
    link_rating?: true
    link_updated?: true
    link_rel?: true
    link_notes?: true
    link_rss?: true
  }

  export type Wp_linksMaxAggregateInputType = {
    link_id?: true
    link_url?: true
    link_name?: true
    link_image?: true
    link_target?: true
    link_description?: true
    link_visible?: true
    link_owner?: true
    link_rating?: true
    link_updated?: true
    link_rel?: true
    link_notes?: true
    link_rss?: true
  }

  export type Wp_linksCountAggregateInputType = {
    link_id?: true
    link_url?: true
    link_name?: true
    link_image?: true
    link_target?: true
    link_description?: true
    link_visible?: true
    link_owner?: true
    link_rating?: true
    link_updated?: true
    link_rel?: true
    link_notes?: true
    link_rss?: true
    _all?: true
  }

  export type Wp_linksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_links to aggregate.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_links
    **/
    _count?: true | Wp_linksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_linksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_linksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_linksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_linksMaxAggregateInputType
  }

  export type GetWp_linksAggregateType<T extends Wp_linksAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_links]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_links[P]>
      : GetScalarType<T[P], AggregateWp_links[P]>
  }




  export type wp_linksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_linksWhereInput
    orderBy?: wp_linksOrderByWithAggregationInput | wp_linksOrderByWithAggregationInput[]
    by: Wp_linksScalarFieldEnum[] | Wp_linksScalarFieldEnum
    having?: wp_linksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_linksCountAggregateInputType | true
    _avg?: Wp_linksAvgAggregateInputType
    _sum?: Wp_linksSumAggregateInputType
    _min?: Wp_linksMinAggregateInputType
    _max?: Wp_linksMaxAggregateInputType
  }

  export type Wp_linksGroupByOutputType = {
    link_id: bigint
    link_url: string
    link_name: string
    link_image: string
    link_target: string
    link_description: string
    link_visible: string
    link_owner: bigint
    link_rating: number
    link_updated: Date
    link_rel: string
    link_notes: string
    link_rss: string
    _count: Wp_linksCountAggregateOutputType | null
    _avg: Wp_linksAvgAggregateOutputType | null
    _sum: Wp_linksSumAggregateOutputType | null
    _min: Wp_linksMinAggregateOutputType | null
    _max: Wp_linksMaxAggregateOutputType | null
  }

  type GetWp_linksGroupByPayload<T extends wp_linksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_linksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_linksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_linksGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_linksGroupByOutputType[P]>
        }
      >
    >


  export type wp_linksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    link_id?: boolean
    link_url?: boolean
    link_name?: boolean
    link_image?: boolean
    link_target?: boolean
    link_description?: boolean
    link_visible?: boolean
    link_owner?: boolean
    link_rating?: boolean
    link_updated?: boolean
    link_rel?: boolean
    link_notes?: boolean
    link_rss?: boolean
  }, ExtArgs["result"]["wp_links"]>



  export type wp_linksSelectScalar = {
    link_id?: boolean
    link_url?: boolean
    link_name?: boolean
    link_image?: boolean
    link_target?: boolean
    link_description?: boolean
    link_visible?: boolean
    link_owner?: boolean
    link_rating?: boolean
    link_updated?: boolean
    link_rel?: boolean
    link_notes?: boolean
    link_rss?: boolean
  }

  export type wp_linksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"link_id" | "link_url" | "link_name" | "link_image" | "link_target" | "link_description" | "link_visible" | "link_owner" | "link_rating" | "link_updated" | "link_rel" | "link_notes" | "link_rss", ExtArgs["result"]["wp_links"]>

  export type $wp_linksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_links"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      link_id: bigint
      link_url: string
      link_name: string
      link_image: string
      link_target: string
      link_description: string
      link_visible: string
      link_owner: bigint
      link_rating: number
      link_updated: Date
      link_rel: string
      link_notes: string
      link_rss: string
    }, ExtArgs["result"]["wp_links"]>
    composites: {}
  }

  type wp_linksGetPayload<S extends boolean | null | undefined | wp_linksDefaultArgs> = $Result.GetResult<Prisma.$wp_linksPayload, S>

  type wp_linksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_linksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_linksCountAggregateInputType | true
    }

  export interface wp_linksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_links'], meta: { name: 'wp_links' } }
    /**
     * Find zero or one Wp_links that matches the filter.
     * @param {wp_linksFindUniqueArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_linksFindUniqueArgs>(args: SelectSubset<T, wp_linksFindUniqueArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_links that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_linksFindUniqueOrThrowArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_linksFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_linksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_links that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksFindFirstArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_linksFindFirstArgs>(args?: SelectSubset<T, wp_linksFindFirstArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_links that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksFindFirstOrThrowArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_linksFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_linksFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_links that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_links
     * const wp_links = await prisma.wp_links.findMany()
     * 
     * // Get first 10 Wp_links
     * const wp_links = await prisma.wp_links.findMany({ take: 10 })
     * 
     * // Only select the `link_id`
     * const wp_linksWithLink_idOnly = await prisma.wp_links.findMany({ select: { link_id: true } })
     * 
     */
    findMany<T extends wp_linksFindManyArgs>(args?: SelectSubset<T, wp_linksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_links.
     * @param {wp_linksCreateArgs} args - Arguments to create a Wp_links.
     * @example
     * // Create one Wp_links
     * const Wp_links = await prisma.wp_links.create({
     *   data: {
     *     // ... data to create a Wp_links
     *   }
     * })
     * 
     */
    create<T extends wp_linksCreateArgs>(args: SelectSubset<T, wp_linksCreateArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_links.
     * @param {wp_linksCreateManyArgs} args - Arguments to create many Wp_links.
     * @example
     * // Create many Wp_links
     * const wp_links = await prisma.wp_links.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_linksCreateManyArgs>(args?: SelectSubset<T, wp_linksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_links.
     * @param {wp_linksDeleteArgs} args - Arguments to delete one Wp_links.
     * @example
     * // Delete one Wp_links
     * const Wp_links = await prisma.wp_links.delete({
     *   where: {
     *     // ... filter to delete one Wp_links
     *   }
     * })
     * 
     */
    delete<T extends wp_linksDeleteArgs>(args: SelectSubset<T, wp_linksDeleteArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_links.
     * @param {wp_linksUpdateArgs} args - Arguments to update one Wp_links.
     * @example
     * // Update one Wp_links
     * const wp_links = await prisma.wp_links.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_linksUpdateArgs>(args: SelectSubset<T, wp_linksUpdateArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_links.
     * @param {wp_linksDeleteManyArgs} args - Arguments to filter Wp_links to delete.
     * @example
     * // Delete a few Wp_links
     * const { count } = await prisma.wp_links.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_linksDeleteManyArgs>(args?: SelectSubset<T, wp_linksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_links
     * const wp_links = await prisma.wp_links.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_linksUpdateManyArgs>(args: SelectSubset<T, wp_linksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_links.
     * @param {wp_linksUpsertArgs} args - Arguments to update or create a Wp_links.
     * @example
     * // Update or create a Wp_links
     * const wp_links = await prisma.wp_links.upsert({
     *   create: {
     *     // ... data to create a Wp_links
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_links we want to update
     *   }
     * })
     */
    upsert<T extends wp_linksUpsertArgs>(args: SelectSubset<T, wp_linksUpsertArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksCountArgs} args - Arguments to filter Wp_links to count.
     * @example
     * // Count the number of Wp_links
     * const count = await prisma.wp_links.count({
     *   where: {
     *     // ... the filter for the Wp_links we want to count
     *   }
     * })
    **/
    count<T extends wp_linksCountArgs>(
      args?: Subset<T, wp_linksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_linksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_linksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_linksAggregateArgs>(args: Subset<T, Wp_linksAggregateArgs>): Prisma.PrismaPromise<GetWp_linksAggregateType<T>>

    /**
     * Group by Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_linksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_linksGroupByArgs['orderBy'] }
        : { orderBy?: wp_linksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_linksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_linksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_links model
   */
  readonly fields: wp_linksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_links.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_linksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_links model
   */
  interface wp_linksFieldRefs {
    readonly link_id: FieldRef<"wp_links", 'BigInt'>
    readonly link_url: FieldRef<"wp_links", 'String'>
    readonly link_name: FieldRef<"wp_links", 'String'>
    readonly link_image: FieldRef<"wp_links", 'String'>
    readonly link_target: FieldRef<"wp_links", 'String'>
    readonly link_description: FieldRef<"wp_links", 'String'>
    readonly link_visible: FieldRef<"wp_links", 'String'>
    readonly link_owner: FieldRef<"wp_links", 'BigInt'>
    readonly link_rating: FieldRef<"wp_links", 'Int'>
    readonly link_updated: FieldRef<"wp_links", 'DateTime'>
    readonly link_rel: FieldRef<"wp_links", 'String'>
    readonly link_notes: FieldRef<"wp_links", 'String'>
    readonly link_rss: FieldRef<"wp_links", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_links findUnique
   */
  export type wp_linksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links findUniqueOrThrow
   */
  export type wp_linksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links findFirst
   */
  export type wp_linksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_links.
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_links.
     */
    distinct?: Wp_linksScalarFieldEnum | Wp_linksScalarFieldEnum[]
  }

  /**
   * wp_links findFirstOrThrow
   */
  export type wp_linksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_links.
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_links.
     */
    distinct?: Wp_linksScalarFieldEnum | Wp_linksScalarFieldEnum[]
  }

  /**
   * wp_links findMany
   */
  export type wp_linksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_links.
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    distinct?: Wp_linksScalarFieldEnum | Wp_linksScalarFieldEnum[]
  }

  /**
   * wp_links create
   */
  export type wp_linksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_links.
     */
    data: XOR<wp_linksCreateInput, wp_linksUncheckedCreateInput>
  }

  /**
   * wp_links createMany
   */
  export type wp_linksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_links.
     */
    data: wp_linksCreateManyInput | wp_linksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_links update
   */
  export type wp_linksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_links.
     */
    data: XOR<wp_linksUpdateInput, wp_linksUncheckedUpdateInput>
    /**
     * Choose, which wp_links to update.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links updateMany
   */
  export type wp_linksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_links.
     */
    data: XOR<wp_linksUpdateManyMutationInput, wp_linksUncheckedUpdateManyInput>
    /**
     * Filter which wp_links to update
     */
    where?: wp_linksWhereInput
    /**
     * Limit how many wp_links to update.
     */
    limit?: number
  }

  /**
   * wp_links upsert
   */
  export type wp_linksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_links to update in case it exists.
     */
    where: wp_linksWhereUniqueInput
    /**
     * In case the wp_links found by the `where` argument doesn't exist, create a new wp_links with this data.
     */
    create: XOR<wp_linksCreateInput, wp_linksUncheckedCreateInput>
    /**
     * In case the wp_links was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_linksUpdateInput, wp_linksUncheckedUpdateInput>
  }

  /**
   * wp_links delete
   */
  export type wp_linksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter which wp_links to delete.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links deleteMany
   */
  export type wp_linksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_links to delete
     */
    where?: wp_linksWhereInput
    /**
     * Limit how many wp_links to delete.
     */
    limit?: number
  }

  /**
   * wp_links without action
   */
  export type wp_linksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
  }


  /**
   * Model wp_nextend2_image_storage
   */

  export type AggregateWp_nextend2_image_storage = {
    _count: Wp_nextend2_image_storageCountAggregateOutputType | null
    _avg: Wp_nextend2_image_storageAvgAggregateOutputType | null
    _sum: Wp_nextend2_image_storageSumAggregateOutputType | null
    _min: Wp_nextend2_image_storageMinAggregateOutputType | null
    _max: Wp_nextend2_image_storageMaxAggregateOutputType | null
  }

  export type Wp_nextend2_image_storageAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_nextend2_image_storageSumAggregateOutputType = {
    id: number | null
  }

  export type Wp_nextend2_image_storageMinAggregateOutputType = {
    id: number | null
    hash: string | null
    image: string | null
    value: string | null
  }

  export type Wp_nextend2_image_storageMaxAggregateOutputType = {
    id: number | null
    hash: string | null
    image: string | null
    value: string | null
  }

  export type Wp_nextend2_image_storageCountAggregateOutputType = {
    id: number
    hash: number
    image: number
    value: number
    _all: number
  }


  export type Wp_nextend2_image_storageAvgAggregateInputType = {
    id?: true
  }

  export type Wp_nextend2_image_storageSumAggregateInputType = {
    id?: true
  }

  export type Wp_nextend2_image_storageMinAggregateInputType = {
    id?: true
    hash?: true
    image?: true
    value?: true
  }

  export type Wp_nextend2_image_storageMaxAggregateInputType = {
    id?: true
    hash?: true
    image?: true
    value?: true
  }

  export type Wp_nextend2_image_storageCountAggregateInputType = {
    id?: true
    hash?: true
    image?: true
    value?: true
    _all?: true
  }

  export type Wp_nextend2_image_storageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_image_storage to aggregate.
     */
    where?: wp_nextend2_image_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_image_storages to fetch.
     */
    orderBy?: wp_nextend2_image_storageOrderByWithRelationInput | wp_nextend2_image_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_nextend2_image_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_image_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_image_storages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_nextend2_image_storages
    **/
    _count?: true | Wp_nextend2_image_storageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_nextend2_image_storageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_nextend2_image_storageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_nextend2_image_storageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_nextend2_image_storageMaxAggregateInputType
  }

  export type GetWp_nextend2_image_storageAggregateType<T extends Wp_nextend2_image_storageAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_nextend2_image_storage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_nextend2_image_storage[P]>
      : GetScalarType<T[P], AggregateWp_nextend2_image_storage[P]>
  }




  export type wp_nextend2_image_storageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_nextend2_image_storageWhereInput
    orderBy?: wp_nextend2_image_storageOrderByWithAggregationInput | wp_nextend2_image_storageOrderByWithAggregationInput[]
    by: Wp_nextend2_image_storageScalarFieldEnum[] | Wp_nextend2_image_storageScalarFieldEnum
    having?: wp_nextend2_image_storageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_nextend2_image_storageCountAggregateInputType | true
    _avg?: Wp_nextend2_image_storageAvgAggregateInputType
    _sum?: Wp_nextend2_image_storageSumAggregateInputType
    _min?: Wp_nextend2_image_storageMinAggregateInputType
    _max?: Wp_nextend2_image_storageMaxAggregateInputType
  }

  export type Wp_nextend2_image_storageGroupByOutputType = {
    id: number
    hash: string
    image: string
    value: string
    _count: Wp_nextend2_image_storageCountAggregateOutputType | null
    _avg: Wp_nextend2_image_storageAvgAggregateOutputType | null
    _sum: Wp_nextend2_image_storageSumAggregateOutputType | null
    _min: Wp_nextend2_image_storageMinAggregateOutputType | null
    _max: Wp_nextend2_image_storageMaxAggregateOutputType | null
  }

  type GetWp_nextend2_image_storageGroupByPayload<T extends wp_nextend2_image_storageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_nextend2_image_storageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_nextend2_image_storageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_nextend2_image_storageGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_nextend2_image_storageGroupByOutputType[P]>
        }
      >
    >


  export type wp_nextend2_image_storageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hash?: boolean
    image?: boolean
    value?: boolean
  }, ExtArgs["result"]["wp_nextend2_image_storage"]>



  export type wp_nextend2_image_storageSelectScalar = {
    id?: boolean
    hash?: boolean
    image?: boolean
    value?: boolean
  }

  export type wp_nextend2_image_storageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "hash" | "image" | "value", ExtArgs["result"]["wp_nextend2_image_storage"]>

  export type $wp_nextend2_image_storagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_nextend2_image_storage"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      hash: string
      image: string
      value: string
    }, ExtArgs["result"]["wp_nextend2_image_storage"]>
    composites: {}
  }

  type wp_nextend2_image_storageGetPayload<S extends boolean | null | undefined | wp_nextend2_image_storageDefaultArgs> = $Result.GetResult<Prisma.$wp_nextend2_image_storagePayload, S>

  type wp_nextend2_image_storageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_nextend2_image_storageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_nextend2_image_storageCountAggregateInputType | true
    }

  export interface wp_nextend2_image_storageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_nextend2_image_storage'], meta: { name: 'wp_nextend2_image_storage' } }
    /**
     * Find zero or one Wp_nextend2_image_storage that matches the filter.
     * @param {wp_nextend2_image_storageFindUniqueArgs} args - Arguments to find a Wp_nextend2_image_storage
     * @example
     * // Get one Wp_nextend2_image_storage
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_nextend2_image_storageFindUniqueArgs>(args: SelectSubset<T, wp_nextend2_image_storageFindUniqueArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_nextend2_image_storage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_nextend2_image_storageFindUniqueOrThrowArgs} args - Arguments to find a Wp_nextend2_image_storage
     * @example
     * // Get one Wp_nextend2_image_storage
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_nextend2_image_storageFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_nextend2_image_storageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_image_storage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_image_storageFindFirstArgs} args - Arguments to find a Wp_nextend2_image_storage
     * @example
     * // Get one Wp_nextend2_image_storage
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_nextend2_image_storageFindFirstArgs>(args?: SelectSubset<T, wp_nextend2_image_storageFindFirstArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_image_storage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_image_storageFindFirstOrThrowArgs} args - Arguments to find a Wp_nextend2_image_storage
     * @example
     * // Get one Wp_nextend2_image_storage
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_nextend2_image_storageFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_nextend2_image_storageFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_nextend2_image_storages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_image_storageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_nextend2_image_storages
     * const wp_nextend2_image_storages = await prisma.wp_nextend2_image_storage.findMany()
     * 
     * // Get first 10 Wp_nextend2_image_storages
     * const wp_nextend2_image_storages = await prisma.wp_nextend2_image_storage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_nextend2_image_storageWithIdOnly = await prisma.wp_nextend2_image_storage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_nextend2_image_storageFindManyArgs>(args?: SelectSubset<T, wp_nextend2_image_storageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_nextend2_image_storage.
     * @param {wp_nextend2_image_storageCreateArgs} args - Arguments to create a Wp_nextend2_image_storage.
     * @example
     * // Create one Wp_nextend2_image_storage
     * const Wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.create({
     *   data: {
     *     // ... data to create a Wp_nextend2_image_storage
     *   }
     * })
     * 
     */
    create<T extends wp_nextend2_image_storageCreateArgs>(args: SelectSubset<T, wp_nextend2_image_storageCreateArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_nextend2_image_storages.
     * @param {wp_nextend2_image_storageCreateManyArgs} args - Arguments to create many Wp_nextend2_image_storages.
     * @example
     * // Create many Wp_nextend2_image_storages
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_nextend2_image_storageCreateManyArgs>(args?: SelectSubset<T, wp_nextend2_image_storageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_nextend2_image_storage.
     * @param {wp_nextend2_image_storageDeleteArgs} args - Arguments to delete one Wp_nextend2_image_storage.
     * @example
     * // Delete one Wp_nextend2_image_storage
     * const Wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.delete({
     *   where: {
     *     // ... filter to delete one Wp_nextend2_image_storage
     *   }
     * })
     * 
     */
    delete<T extends wp_nextend2_image_storageDeleteArgs>(args: SelectSubset<T, wp_nextend2_image_storageDeleteArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_nextend2_image_storage.
     * @param {wp_nextend2_image_storageUpdateArgs} args - Arguments to update one Wp_nextend2_image_storage.
     * @example
     * // Update one Wp_nextend2_image_storage
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_nextend2_image_storageUpdateArgs>(args: SelectSubset<T, wp_nextend2_image_storageUpdateArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_nextend2_image_storages.
     * @param {wp_nextend2_image_storageDeleteManyArgs} args - Arguments to filter Wp_nextend2_image_storages to delete.
     * @example
     * // Delete a few Wp_nextend2_image_storages
     * const { count } = await prisma.wp_nextend2_image_storage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_nextend2_image_storageDeleteManyArgs>(args?: SelectSubset<T, wp_nextend2_image_storageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_nextend2_image_storages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_image_storageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_nextend2_image_storages
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_nextend2_image_storageUpdateManyArgs>(args: SelectSubset<T, wp_nextend2_image_storageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_nextend2_image_storage.
     * @param {wp_nextend2_image_storageUpsertArgs} args - Arguments to update or create a Wp_nextend2_image_storage.
     * @example
     * // Update or create a Wp_nextend2_image_storage
     * const wp_nextend2_image_storage = await prisma.wp_nextend2_image_storage.upsert({
     *   create: {
     *     // ... data to create a Wp_nextend2_image_storage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_nextend2_image_storage we want to update
     *   }
     * })
     */
    upsert<T extends wp_nextend2_image_storageUpsertArgs>(args: SelectSubset<T, wp_nextend2_image_storageUpsertArgs<ExtArgs>>): Prisma__wp_nextend2_image_storageClient<$Result.GetResult<Prisma.$wp_nextend2_image_storagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_nextend2_image_storages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_image_storageCountArgs} args - Arguments to filter Wp_nextend2_image_storages to count.
     * @example
     * // Count the number of Wp_nextend2_image_storages
     * const count = await prisma.wp_nextend2_image_storage.count({
     *   where: {
     *     // ... the filter for the Wp_nextend2_image_storages we want to count
     *   }
     * })
    **/
    count<T extends wp_nextend2_image_storageCountArgs>(
      args?: Subset<T, wp_nextend2_image_storageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_nextend2_image_storageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_nextend2_image_storage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_nextend2_image_storageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_nextend2_image_storageAggregateArgs>(args: Subset<T, Wp_nextend2_image_storageAggregateArgs>): Prisma.PrismaPromise<GetWp_nextend2_image_storageAggregateType<T>>

    /**
     * Group by Wp_nextend2_image_storage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_image_storageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_nextend2_image_storageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_nextend2_image_storageGroupByArgs['orderBy'] }
        : { orderBy?: wp_nextend2_image_storageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_nextend2_image_storageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_nextend2_image_storageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_nextend2_image_storage model
   */
  readonly fields: wp_nextend2_image_storageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_nextend2_image_storage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_nextend2_image_storageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_nextend2_image_storage model
   */
  interface wp_nextend2_image_storageFieldRefs {
    readonly id: FieldRef<"wp_nextend2_image_storage", 'Int'>
    readonly hash: FieldRef<"wp_nextend2_image_storage", 'String'>
    readonly image: FieldRef<"wp_nextend2_image_storage", 'String'>
    readonly value: FieldRef<"wp_nextend2_image_storage", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_nextend2_image_storage findUnique
   */
  export type wp_nextend2_image_storageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_image_storage to fetch.
     */
    where: wp_nextend2_image_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_image_storage findUniqueOrThrow
   */
  export type wp_nextend2_image_storageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_image_storage to fetch.
     */
    where: wp_nextend2_image_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_image_storage findFirst
   */
  export type wp_nextend2_image_storageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_image_storage to fetch.
     */
    where?: wp_nextend2_image_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_image_storages to fetch.
     */
    orderBy?: wp_nextend2_image_storageOrderByWithRelationInput | wp_nextend2_image_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_image_storages.
     */
    cursor?: wp_nextend2_image_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_image_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_image_storages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_image_storages.
     */
    distinct?: Wp_nextend2_image_storageScalarFieldEnum | Wp_nextend2_image_storageScalarFieldEnum[]
  }

  /**
   * wp_nextend2_image_storage findFirstOrThrow
   */
  export type wp_nextend2_image_storageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_image_storage to fetch.
     */
    where?: wp_nextend2_image_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_image_storages to fetch.
     */
    orderBy?: wp_nextend2_image_storageOrderByWithRelationInput | wp_nextend2_image_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_image_storages.
     */
    cursor?: wp_nextend2_image_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_image_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_image_storages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_image_storages.
     */
    distinct?: Wp_nextend2_image_storageScalarFieldEnum | Wp_nextend2_image_storageScalarFieldEnum[]
  }

  /**
   * wp_nextend2_image_storage findMany
   */
  export type wp_nextend2_image_storageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_image_storages to fetch.
     */
    where?: wp_nextend2_image_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_image_storages to fetch.
     */
    orderBy?: wp_nextend2_image_storageOrderByWithRelationInput | wp_nextend2_image_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_nextend2_image_storages.
     */
    cursor?: wp_nextend2_image_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_image_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_image_storages.
     */
    skip?: number
    distinct?: Wp_nextend2_image_storageScalarFieldEnum | Wp_nextend2_image_storageScalarFieldEnum[]
  }

  /**
   * wp_nextend2_image_storage create
   */
  export type wp_nextend2_image_storageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_nextend2_image_storage.
     */
    data: XOR<wp_nextend2_image_storageCreateInput, wp_nextend2_image_storageUncheckedCreateInput>
  }

  /**
   * wp_nextend2_image_storage createMany
   */
  export type wp_nextend2_image_storageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_nextend2_image_storages.
     */
    data: wp_nextend2_image_storageCreateManyInput | wp_nextend2_image_storageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_nextend2_image_storage update
   */
  export type wp_nextend2_image_storageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_nextend2_image_storage.
     */
    data: XOR<wp_nextend2_image_storageUpdateInput, wp_nextend2_image_storageUncheckedUpdateInput>
    /**
     * Choose, which wp_nextend2_image_storage to update.
     */
    where: wp_nextend2_image_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_image_storage updateMany
   */
  export type wp_nextend2_image_storageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_nextend2_image_storages.
     */
    data: XOR<wp_nextend2_image_storageUpdateManyMutationInput, wp_nextend2_image_storageUncheckedUpdateManyInput>
    /**
     * Filter which wp_nextend2_image_storages to update
     */
    where?: wp_nextend2_image_storageWhereInput
    /**
     * Limit how many wp_nextend2_image_storages to update.
     */
    limit?: number
  }

  /**
   * wp_nextend2_image_storage upsert
   */
  export type wp_nextend2_image_storageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_nextend2_image_storage to update in case it exists.
     */
    where: wp_nextend2_image_storageWhereUniqueInput
    /**
     * In case the wp_nextend2_image_storage found by the `where` argument doesn't exist, create a new wp_nextend2_image_storage with this data.
     */
    create: XOR<wp_nextend2_image_storageCreateInput, wp_nextend2_image_storageUncheckedCreateInput>
    /**
     * In case the wp_nextend2_image_storage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_nextend2_image_storageUpdateInput, wp_nextend2_image_storageUncheckedUpdateInput>
  }

  /**
   * wp_nextend2_image_storage delete
   */
  export type wp_nextend2_image_storageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
    /**
     * Filter which wp_nextend2_image_storage to delete.
     */
    where: wp_nextend2_image_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_image_storage deleteMany
   */
  export type wp_nextend2_image_storageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_image_storages to delete
     */
    where?: wp_nextend2_image_storageWhereInput
    /**
     * Limit how many wp_nextend2_image_storages to delete.
     */
    limit?: number
  }

  /**
   * wp_nextend2_image_storage without action
   */
  export type wp_nextend2_image_storageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_image_storage
     */
    select?: wp_nextend2_image_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_image_storage
     */
    omit?: wp_nextend2_image_storageOmit<ExtArgs> | null
  }


  /**
   * Model wp_nextend2_section_storage
   */

  export type AggregateWp_nextend2_section_storage = {
    _count: Wp_nextend2_section_storageCountAggregateOutputType | null
    _avg: Wp_nextend2_section_storageAvgAggregateOutputType | null
    _sum: Wp_nextend2_section_storageSumAggregateOutputType | null
    _min: Wp_nextend2_section_storageMinAggregateOutputType | null
    _max: Wp_nextend2_section_storageMaxAggregateOutputType | null
  }

  export type Wp_nextend2_section_storageAvgAggregateOutputType = {
    id: number | null
    system: number | null
    editable: number | null
  }

  export type Wp_nextend2_section_storageSumAggregateOutputType = {
    id: number | null
    system: number | null
    editable: number | null
  }

  export type Wp_nextend2_section_storageMinAggregateOutputType = {
    id: number | null
    application: string | null
    section: string | null
    referencekey: string | null
    value: string | null
    system: number | null
    editable: number | null
  }

  export type Wp_nextend2_section_storageMaxAggregateOutputType = {
    id: number | null
    application: string | null
    section: string | null
    referencekey: string | null
    value: string | null
    system: number | null
    editable: number | null
  }

  export type Wp_nextend2_section_storageCountAggregateOutputType = {
    id: number
    application: number
    section: number
    referencekey: number
    value: number
    system: number
    editable: number
    _all: number
  }


  export type Wp_nextend2_section_storageAvgAggregateInputType = {
    id?: true
    system?: true
    editable?: true
  }

  export type Wp_nextend2_section_storageSumAggregateInputType = {
    id?: true
    system?: true
    editable?: true
  }

  export type Wp_nextend2_section_storageMinAggregateInputType = {
    id?: true
    application?: true
    section?: true
    referencekey?: true
    value?: true
    system?: true
    editable?: true
  }

  export type Wp_nextend2_section_storageMaxAggregateInputType = {
    id?: true
    application?: true
    section?: true
    referencekey?: true
    value?: true
    system?: true
    editable?: true
  }

  export type Wp_nextend2_section_storageCountAggregateInputType = {
    id?: true
    application?: true
    section?: true
    referencekey?: true
    value?: true
    system?: true
    editable?: true
    _all?: true
  }

  export type Wp_nextend2_section_storageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_section_storage to aggregate.
     */
    where?: wp_nextend2_section_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_section_storages to fetch.
     */
    orderBy?: wp_nextend2_section_storageOrderByWithRelationInput | wp_nextend2_section_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_nextend2_section_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_section_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_section_storages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_nextend2_section_storages
    **/
    _count?: true | Wp_nextend2_section_storageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_nextend2_section_storageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_nextend2_section_storageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_nextend2_section_storageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_nextend2_section_storageMaxAggregateInputType
  }

  export type GetWp_nextend2_section_storageAggregateType<T extends Wp_nextend2_section_storageAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_nextend2_section_storage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_nextend2_section_storage[P]>
      : GetScalarType<T[P], AggregateWp_nextend2_section_storage[P]>
  }




  export type wp_nextend2_section_storageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_nextend2_section_storageWhereInput
    orderBy?: wp_nextend2_section_storageOrderByWithAggregationInput | wp_nextend2_section_storageOrderByWithAggregationInput[]
    by: Wp_nextend2_section_storageScalarFieldEnum[] | Wp_nextend2_section_storageScalarFieldEnum
    having?: wp_nextend2_section_storageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_nextend2_section_storageCountAggregateInputType | true
    _avg?: Wp_nextend2_section_storageAvgAggregateInputType
    _sum?: Wp_nextend2_section_storageSumAggregateInputType
    _min?: Wp_nextend2_section_storageMinAggregateInputType
    _max?: Wp_nextend2_section_storageMaxAggregateInputType
  }

  export type Wp_nextend2_section_storageGroupByOutputType = {
    id: number
    application: string
    section: string
    referencekey: string
    value: string
    system: number
    editable: number
    _count: Wp_nextend2_section_storageCountAggregateOutputType | null
    _avg: Wp_nextend2_section_storageAvgAggregateOutputType | null
    _sum: Wp_nextend2_section_storageSumAggregateOutputType | null
    _min: Wp_nextend2_section_storageMinAggregateOutputType | null
    _max: Wp_nextend2_section_storageMaxAggregateOutputType | null
  }

  type GetWp_nextend2_section_storageGroupByPayload<T extends wp_nextend2_section_storageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_nextend2_section_storageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_nextend2_section_storageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_nextend2_section_storageGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_nextend2_section_storageGroupByOutputType[P]>
        }
      >
    >


  export type wp_nextend2_section_storageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    application?: boolean
    section?: boolean
    referencekey?: boolean
    value?: boolean
    system?: boolean
    editable?: boolean
  }, ExtArgs["result"]["wp_nextend2_section_storage"]>



  export type wp_nextend2_section_storageSelectScalar = {
    id?: boolean
    application?: boolean
    section?: boolean
    referencekey?: boolean
    value?: boolean
    system?: boolean
    editable?: boolean
  }

  export type wp_nextend2_section_storageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "application" | "section" | "referencekey" | "value" | "system" | "editable", ExtArgs["result"]["wp_nextend2_section_storage"]>

  export type $wp_nextend2_section_storagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_nextend2_section_storage"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      application: string
      section: string
      referencekey: string
      value: string
      system: number
      editable: number
    }, ExtArgs["result"]["wp_nextend2_section_storage"]>
    composites: {}
  }

  type wp_nextend2_section_storageGetPayload<S extends boolean | null | undefined | wp_nextend2_section_storageDefaultArgs> = $Result.GetResult<Prisma.$wp_nextend2_section_storagePayload, S>

  type wp_nextend2_section_storageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_nextend2_section_storageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_nextend2_section_storageCountAggregateInputType | true
    }

  export interface wp_nextend2_section_storageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_nextend2_section_storage'], meta: { name: 'wp_nextend2_section_storage' } }
    /**
     * Find zero or one Wp_nextend2_section_storage that matches the filter.
     * @param {wp_nextend2_section_storageFindUniqueArgs} args - Arguments to find a Wp_nextend2_section_storage
     * @example
     * // Get one Wp_nextend2_section_storage
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_nextend2_section_storageFindUniqueArgs>(args: SelectSubset<T, wp_nextend2_section_storageFindUniqueArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_nextend2_section_storage that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_nextend2_section_storageFindUniqueOrThrowArgs} args - Arguments to find a Wp_nextend2_section_storage
     * @example
     * // Get one Wp_nextend2_section_storage
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_nextend2_section_storageFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_nextend2_section_storageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_section_storage that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_section_storageFindFirstArgs} args - Arguments to find a Wp_nextend2_section_storage
     * @example
     * // Get one Wp_nextend2_section_storage
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_nextend2_section_storageFindFirstArgs>(args?: SelectSubset<T, wp_nextend2_section_storageFindFirstArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_section_storage that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_section_storageFindFirstOrThrowArgs} args - Arguments to find a Wp_nextend2_section_storage
     * @example
     * // Get one Wp_nextend2_section_storage
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_nextend2_section_storageFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_nextend2_section_storageFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_nextend2_section_storages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_section_storageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_nextend2_section_storages
     * const wp_nextend2_section_storages = await prisma.wp_nextend2_section_storage.findMany()
     * 
     * // Get first 10 Wp_nextend2_section_storages
     * const wp_nextend2_section_storages = await prisma.wp_nextend2_section_storage.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_nextend2_section_storageWithIdOnly = await prisma.wp_nextend2_section_storage.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_nextend2_section_storageFindManyArgs>(args?: SelectSubset<T, wp_nextend2_section_storageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_nextend2_section_storage.
     * @param {wp_nextend2_section_storageCreateArgs} args - Arguments to create a Wp_nextend2_section_storage.
     * @example
     * // Create one Wp_nextend2_section_storage
     * const Wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.create({
     *   data: {
     *     // ... data to create a Wp_nextend2_section_storage
     *   }
     * })
     * 
     */
    create<T extends wp_nextend2_section_storageCreateArgs>(args: SelectSubset<T, wp_nextend2_section_storageCreateArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_nextend2_section_storages.
     * @param {wp_nextend2_section_storageCreateManyArgs} args - Arguments to create many Wp_nextend2_section_storages.
     * @example
     * // Create many Wp_nextend2_section_storages
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_nextend2_section_storageCreateManyArgs>(args?: SelectSubset<T, wp_nextend2_section_storageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_nextend2_section_storage.
     * @param {wp_nextend2_section_storageDeleteArgs} args - Arguments to delete one Wp_nextend2_section_storage.
     * @example
     * // Delete one Wp_nextend2_section_storage
     * const Wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.delete({
     *   where: {
     *     // ... filter to delete one Wp_nextend2_section_storage
     *   }
     * })
     * 
     */
    delete<T extends wp_nextend2_section_storageDeleteArgs>(args: SelectSubset<T, wp_nextend2_section_storageDeleteArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_nextend2_section_storage.
     * @param {wp_nextend2_section_storageUpdateArgs} args - Arguments to update one Wp_nextend2_section_storage.
     * @example
     * // Update one Wp_nextend2_section_storage
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_nextend2_section_storageUpdateArgs>(args: SelectSubset<T, wp_nextend2_section_storageUpdateArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_nextend2_section_storages.
     * @param {wp_nextend2_section_storageDeleteManyArgs} args - Arguments to filter Wp_nextend2_section_storages to delete.
     * @example
     * // Delete a few Wp_nextend2_section_storages
     * const { count } = await prisma.wp_nextend2_section_storage.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_nextend2_section_storageDeleteManyArgs>(args?: SelectSubset<T, wp_nextend2_section_storageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_nextend2_section_storages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_section_storageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_nextend2_section_storages
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_nextend2_section_storageUpdateManyArgs>(args: SelectSubset<T, wp_nextend2_section_storageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_nextend2_section_storage.
     * @param {wp_nextend2_section_storageUpsertArgs} args - Arguments to update or create a Wp_nextend2_section_storage.
     * @example
     * // Update or create a Wp_nextend2_section_storage
     * const wp_nextend2_section_storage = await prisma.wp_nextend2_section_storage.upsert({
     *   create: {
     *     // ... data to create a Wp_nextend2_section_storage
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_nextend2_section_storage we want to update
     *   }
     * })
     */
    upsert<T extends wp_nextend2_section_storageUpsertArgs>(args: SelectSubset<T, wp_nextend2_section_storageUpsertArgs<ExtArgs>>): Prisma__wp_nextend2_section_storageClient<$Result.GetResult<Prisma.$wp_nextend2_section_storagePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_nextend2_section_storages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_section_storageCountArgs} args - Arguments to filter Wp_nextend2_section_storages to count.
     * @example
     * // Count the number of Wp_nextend2_section_storages
     * const count = await prisma.wp_nextend2_section_storage.count({
     *   where: {
     *     // ... the filter for the Wp_nextend2_section_storages we want to count
     *   }
     * })
    **/
    count<T extends wp_nextend2_section_storageCountArgs>(
      args?: Subset<T, wp_nextend2_section_storageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_nextend2_section_storageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_nextend2_section_storage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_nextend2_section_storageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_nextend2_section_storageAggregateArgs>(args: Subset<T, Wp_nextend2_section_storageAggregateArgs>): Prisma.PrismaPromise<GetWp_nextend2_section_storageAggregateType<T>>

    /**
     * Group by Wp_nextend2_section_storage.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_section_storageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_nextend2_section_storageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_nextend2_section_storageGroupByArgs['orderBy'] }
        : { orderBy?: wp_nextend2_section_storageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_nextend2_section_storageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_nextend2_section_storageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_nextend2_section_storage model
   */
  readonly fields: wp_nextend2_section_storageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_nextend2_section_storage.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_nextend2_section_storageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_nextend2_section_storage model
   */
  interface wp_nextend2_section_storageFieldRefs {
    readonly id: FieldRef<"wp_nextend2_section_storage", 'Int'>
    readonly application: FieldRef<"wp_nextend2_section_storage", 'String'>
    readonly section: FieldRef<"wp_nextend2_section_storage", 'String'>
    readonly referencekey: FieldRef<"wp_nextend2_section_storage", 'String'>
    readonly value: FieldRef<"wp_nextend2_section_storage", 'String'>
    readonly system: FieldRef<"wp_nextend2_section_storage", 'Int'>
    readonly editable: FieldRef<"wp_nextend2_section_storage", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_nextend2_section_storage findUnique
   */
  export type wp_nextend2_section_storageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_section_storage to fetch.
     */
    where: wp_nextend2_section_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_section_storage findUniqueOrThrow
   */
  export type wp_nextend2_section_storageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_section_storage to fetch.
     */
    where: wp_nextend2_section_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_section_storage findFirst
   */
  export type wp_nextend2_section_storageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_section_storage to fetch.
     */
    where?: wp_nextend2_section_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_section_storages to fetch.
     */
    orderBy?: wp_nextend2_section_storageOrderByWithRelationInput | wp_nextend2_section_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_section_storages.
     */
    cursor?: wp_nextend2_section_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_section_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_section_storages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_section_storages.
     */
    distinct?: Wp_nextend2_section_storageScalarFieldEnum | Wp_nextend2_section_storageScalarFieldEnum[]
  }

  /**
   * wp_nextend2_section_storage findFirstOrThrow
   */
  export type wp_nextend2_section_storageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_section_storage to fetch.
     */
    where?: wp_nextend2_section_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_section_storages to fetch.
     */
    orderBy?: wp_nextend2_section_storageOrderByWithRelationInput | wp_nextend2_section_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_section_storages.
     */
    cursor?: wp_nextend2_section_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_section_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_section_storages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_section_storages.
     */
    distinct?: Wp_nextend2_section_storageScalarFieldEnum | Wp_nextend2_section_storageScalarFieldEnum[]
  }

  /**
   * wp_nextend2_section_storage findMany
   */
  export type wp_nextend2_section_storageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_section_storages to fetch.
     */
    where?: wp_nextend2_section_storageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_section_storages to fetch.
     */
    orderBy?: wp_nextend2_section_storageOrderByWithRelationInput | wp_nextend2_section_storageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_nextend2_section_storages.
     */
    cursor?: wp_nextend2_section_storageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_section_storages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_section_storages.
     */
    skip?: number
    distinct?: Wp_nextend2_section_storageScalarFieldEnum | Wp_nextend2_section_storageScalarFieldEnum[]
  }

  /**
   * wp_nextend2_section_storage create
   */
  export type wp_nextend2_section_storageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_nextend2_section_storage.
     */
    data: XOR<wp_nextend2_section_storageCreateInput, wp_nextend2_section_storageUncheckedCreateInput>
  }

  /**
   * wp_nextend2_section_storage createMany
   */
  export type wp_nextend2_section_storageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_nextend2_section_storages.
     */
    data: wp_nextend2_section_storageCreateManyInput | wp_nextend2_section_storageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_nextend2_section_storage update
   */
  export type wp_nextend2_section_storageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_nextend2_section_storage.
     */
    data: XOR<wp_nextend2_section_storageUpdateInput, wp_nextend2_section_storageUncheckedUpdateInput>
    /**
     * Choose, which wp_nextend2_section_storage to update.
     */
    where: wp_nextend2_section_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_section_storage updateMany
   */
  export type wp_nextend2_section_storageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_nextend2_section_storages.
     */
    data: XOR<wp_nextend2_section_storageUpdateManyMutationInput, wp_nextend2_section_storageUncheckedUpdateManyInput>
    /**
     * Filter which wp_nextend2_section_storages to update
     */
    where?: wp_nextend2_section_storageWhereInput
    /**
     * Limit how many wp_nextend2_section_storages to update.
     */
    limit?: number
  }

  /**
   * wp_nextend2_section_storage upsert
   */
  export type wp_nextend2_section_storageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_nextend2_section_storage to update in case it exists.
     */
    where: wp_nextend2_section_storageWhereUniqueInput
    /**
     * In case the wp_nextend2_section_storage found by the `where` argument doesn't exist, create a new wp_nextend2_section_storage with this data.
     */
    create: XOR<wp_nextend2_section_storageCreateInput, wp_nextend2_section_storageUncheckedCreateInput>
    /**
     * In case the wp_nextend2_section_storage was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_nextend2_section_storageUpdateInput, wp_nextend2_section_storageUncheckedUpdateInput>
  }

  /**
   * wp_nextend2_section_storage delete
   */
  export type wp_nextend2_section_storageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
    /**
     * Filter which wp_nextend2_section_storage to delete.
     */
    where: wp_nextend2_section_storageWhereUniqueInput
  }

  /**
   * wp_nextend2_section_storage deleteMany
   */
  export type wp_nextend2_section_storageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_section_storages to delete
     */
    where?: wp_nextend2_section_storageWhereInput
    /**
     * Limit how many wp_nextend2_section_storages to delete.
     */
    limit?: number
  }

  /**
   * wp_nextend2_section_storage without action
   */
  export type wp_nextend2_section_storageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_section_storage
     */
    select?: wp_nextend2_section_storageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_section_storage
     */
    omit?: wp_nextend2_section_storageOmit<ExtArgs> | null
  }


  /**
   * Model wp_nextend2_smartslider3_generators
   */

  export type AggregateWp_nextend2_smartslider3_generators = {
    _count: Wp_nextend2_smartslider3_generatorsCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_generatorsAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_generatorsSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_generatorsMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_generatorsMaxAggregateOutputType | null
  }

  export type Wp_nextend2_smartslider3_generatorsAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_nextend2_smartslider3_generatorsSumAggregateOutputType = {
    id: number | null
  }

  export type Wp_nextend2_smartslider3_generatorsMinAggregateOutputType = {
    id: number | null
    group: string | null
    type: string | null
    params: string | null
  }

  export type Wp_nextend2_smartslider3_generatorsMaxAggregateOutputType = {
    id: number | null
    group: string | null
    type: string | null
    params: string | null
  }

  export type Wp_nextend2_smartslider3_generatorsCountAggregateOutputType = {
    id: number
    group: number
    type: number
    params: number
    _all: number
  }


  export type Wp_nextend2_smartslider3_generatorsAvgAggregateInputType = {
    id?: true
  }

  export type Wp_nextend2_smartslider3_generatorsSumAggregateInputType = {
    id?: true
  }

  export type Wp_nextend2_smartslider3_generatorsMinAggregateInputType = {
    id?: true
    group?: true
    type?: true
    params?: true
  }

  export type Wp_nextend2_smartslider3_generatorsMaxAggregateInputType = {
    id?: true
    group?: true
    type?: true
    params?: true
  }

  export type Wp_nextend2_smartslider3_generatorsCountAggregateInputType = {
    id?: true
    group?: true
    type?: true
    params?: true
    _all?: true
  }

  export type Wp_nextend2_smartslider3_generatorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_generators to aggregate.
     */
    where?: wp_nextend2_smartslider3_generatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_generators to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_generatorsOrderByWithRelationInput | wp_nextend2_smartslider3_generatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_nextend2_smartslider3_generatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_generators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_nextend2_smartslider3_generators
    **/
    _count?: true | Wp_nextend2_smartslider3_generatorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_nextend2_smartslider3_generatorsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_nextend2_smartslider3_generatorsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_nextend2_smartslider3_generatorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_nextend2_smartslider3_generatorsMaxAggregateInputType
  }

  export type GetWp_nextend2_smartslider3_generatorsAggregateType<T extends Wp_nextend2_smartslider3_generatorsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_nextend2_smartslider3_generators]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_generators[P]>
      : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_generators[P]>
  }




  export type wp_nextend2_smartslider3_generatorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_nextend2_smartslider3_generatorsWhereInput
    orderBy?: wp_nextend2_smartslider3_generatorsOrderByWithAggregationInput | wp_nextend2_smartslider3_generatorsOrderByWithAggregationInput[]
    by: Wp_nextend2_smartslider3_generatorsScalarFieldEnum[] | Wp_nextend2_smartslider3_generatorsScalarFieldEnum
    having?: wp_nextend2_smartslider3_generatorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_nextend2_smartslider3_generatorsCountAggregateInputType | true
    _avg?: Wp_nextend2_smartslider3_generatorsAvgAggregateInputType
    _sum?: Wp_nextend2_smartslider3_generatorsSumAggregateInputType
    _min?: Wp_nextend2_smartslider3_generatorsMinAggregateInputType
    _max?: Wp_nextend2_smartslider3_generatorsMaxAggregateInputType
  }

  export type Wp_nextend2_smartslider3_generatorsGroupByOutputType = {
    id: number
    group: string
    type: string
    params: string
    _count: Wp_nextend2_smartslider3_generatorsCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_generatorsAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_generatorsSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_generatorsMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_generatorsMaxAggregateOutputType | null
  }

  type GetWp_nextend2_smartslider3_generatorsGroupByPayload<T extends wp_nextend2_smartslider3_generatorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_nextend2_smartslider3_generatorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_nextend2_smartslider3_generatorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_nextend2_smartslider3_generatorsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_nextend2_smartslider3_generatorsGroupByOutputType[P]>
        }
      >
    >


  export type wp_nextend2_smartslider3_generatorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group?: boolean
    type?: boolean
    params?: boolean
  }, ExtArgs["result"]["wp_nextend2_smartslider3_generators"]>



  export type wp_nextend2_smartslider3_generatorsSelectScalar = {
    id?: boolean
    group?: boolean
    type?: boolean
    params?: boolean
  }

  export type wp_nextend2_smartslider3_generatorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "group" | "type" | "params", ExtArgs["result"]["wp_nextend2_smartslider3_generators"]>

  export type $wp_nextend2_smartslider3_generatorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_nextend2_smartslider3_generators"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      group: string
      type: string
      params: string
    }, ExtArgs["result"]["wp_nextend2_smartslider3_generators"]>
    composites: {}
  }

  type wp_nextend2_smartslider3_generatorsGetPayload<S extends boolean | null | undefined | wp_nextend2_smartslider3_generatorsDefaultArgs> = $Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload, S>

  type wp_nextend2_smartslider3_generatorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_nextend2_smartslider3_generatorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_nextend2_smartslider3_generatorsCountAggregateInputType | true
    }

  export interface wp_nextend2_smartslider3_generatorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_nextend2_smartslider3_generators'], meta: { name: 'wp_nextend2_smartslider3_generators' } }
    /**
     * Find zero or one Wp_nextend2_smartslider3_generators that matches the filter.
     * @param {wp_nextend2_smartslider3_generatorsFindUniqueArgs} args - Arguments to find a Wp_nextend2_smartslider3_generators
     * @example
     * // Get one Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_nextend2_smartslider3_generatorsFindUniqueArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_generatorsFindUniqueArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_nextend2_smartslider3_generators that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_nextend2_smartslider3_generatorsFindUniqueOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_generators
     * @example
     * // Get one Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_nextend2_smartslider3_generatorsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_generatorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_generators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_generatorsFindFirstArgs} args - Arguments to find a Wp_nextend2_smartslider3_generators
     * @example
     * // Get one Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_nextend2_smartslider3_generatorsFindFirstArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_generatorsFindFirstArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_generators that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_generatorsFindFirstOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_generators
     * @example
     * // Get one Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_nextend2_smartslider3_generatorsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_generatorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_nextend2_smartslider3_generators that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_generatorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.findMany()
     * 
     * // Get first 10 Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_nextend2_smartslider3_generatorsWithIdOnly = await prisma.wp_nextend2_smartslider3_generators.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_nextend2_smartslider3_generatorsFindManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_generatorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_nextend2_smartslider3_generators.
     * @param {wp_nextend2_smartslider3_generatorsCreateArgs} args - Arguments to create a Wp_nextend2_smartslider3_generators.
     * @example
     * // Create one Wp_nextend2_smartslider3_generators
     * const Wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.create({
     *   data: {
     *     // ... data to create a Wp_nextend2_smartslider3_generators
     *   }
     * })
     * 
     */
    create<T extends wp_nextend2_smartslider3_generatorsCreateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_generatorsCreateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_nextend2_smartslider3_generators.
     * @param {wp_nextend2_smartslider3_generatorsCreateManyArgs} args - Arguments to create many Wp_nextend2_smartslider3_generators.
     * @example
     * // Create many Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_nextend2_smartslider3_generatorsCreateManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_generatorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_nextend2_smartslider3_generators.
     * @param {wp_nextend2_smartslider3_generatorsDeleteArgs} args - Arguments to delete one Wp_nextend2_smartslider3_generators.
     * @example
     * // Delete one Wp_nextend2_smartslider3_generators
     * const Wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.delete({
     *   where: {
     *     // ... filter to delete one Wp_nextend2_smartslider3_generators
     *   }
     * })
     * 
     */
    delete<T extends wp_nextend2_smartslider3_generatorsDeleteArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_generatorsDeleteArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_nextend2_smartslider3_generators.
     * @param {wp_nextend2_smartslider3_generatorsUpdateArgs} args - Arguments to update one Wp_nextend2_smartslider3_generators.
     * @example
     * // Update one Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_nextend2_smartslider3_generatorsUpdateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_generatorsUpdateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_nextend2_smartslider3_generators.
     * @param {wp_nextend2_smartslider3_generatorsDeleteManyArgs} args - Arguments to filter Wp_nextend2_smartslider3_generators to delete.
     * @example
     * // Delete a few Wp_nextend2_smartslider3_generators
     * const { count } = await prisma.wp_nextend2_smartslider3_generators.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_nextend2_smartslider3_generatorsDeleteManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_generatorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_nextend2_smartslider3_generators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_generatorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_nextend2_smartslider3_generatorsUpdateManyArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_generatorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_nextend2_smartslider3_generators.
     * @param {wp_nextend2_smartslider3_generatorsUpsertArgs} args - Arguments to update or create a Wp_nextend2_smartslider3_generators.
     * @example
     * // Update or create a Wp_nextend2_smartslider3_generators
     * const wp_nextend2_smartslider3_generators = await prisma.wp_nextend2_smartslider3_generators.upsert({
     *   create: {
     *     // ... data to create a Wp_nextend2_smartslider3_generators
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_generators we want to update
     *   }
     * })
     */
    upsert<T extends wp_nextend2_smartslider3_generatorsUpsertArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_generatorsUpsertArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_generatorsClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_generatorsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_nextend2_smartslider3_generators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_generatorsCountArgs} args - Arguments to filter Wp_nextend2_smartslider3_generators to count.
     * @example
     * // Count the number of Wp_nextend2_smartslider3_generators
     * const count = await prisma.wp_nextend2_smartslider3_generators.count({
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_generators we want to count
     *   }
     * })
    **/
    count<T extends wp_nextend2_smartslider3_generatorsCountArgs>(
      args?: Subset<T, wp_nextend2_smartslider3_generatorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_nextend2_smartslider3_generatorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_nextend2_smartslider3_generators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_nextend2_smartslider3_generatorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_nextend2_smartslider3_generatorsAggregateArgs>(args: Subset<T, Wp_nextend2_smartslider3_generatorsAggregateArgs>): Prisma.PrismaPromise<GetWp_nextend2_smartslider3_generatorsAggregateType<T>>

    /**
     * Group by Wp_nextend2_smartslider3_generators.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_generatorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_nextend2_smartslider3_generatorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_nextend2_smartslider3_generatorsGroupByArgs['orderBy'] }
        : { orderBy?: wp_nextend2_smartslider3_generatorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_nextend2_smartslider3_generatorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_nextend2_smartslider3_generatorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_nextend2_smartslider3_generators model
   */
  readonly fields: wp_nextend2_smartslider3_generatorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_nextend2_smartslider3_generators.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_nextend2_smartslider3_generatorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_nextend2_smartslider3_generators model
   */
  interface wp_nextend2_smartslider3_generatorsFieldRefs {
    readonly id: FieldRef<"wp_nextend2_smartslider3_generators", 'Int'>
    readonly group: FieldRef<"wp_nextend2_smartslider3_generators", 'String'>
    readonly type: FieldRef<"wp_nextend2_smartslider3_generators", 'String'>
    readonly params: FieldRef<"wp_nextend2_smartslider3_generators", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_nextend2_smartslider3_generators findUnique
   */
  export type wp_nextend2_smartslider3_generatorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_generators to fetch.
     */
    where: wp_nextend2_smartslider3_generatorsWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_generators findUniqueOrThrow
   */
  export type wp_nextend2_smartslider3_generatorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_generators to fetch.
     */
    where: wp_nextend2_smartslider3_generatorsWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_generators findFirst
   */
  export type wp_nextend2_smartslider3_generatorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_generators to fetch.
     */
    where?: wp_nextend2_smartslider3_generatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_generators to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_generatorsOrderByWithRelationInput | wp_nextend2_smartslider3_generatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_generators.
     */
    cursor?: wp_nextend2_smartslider3_generatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_generators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_generators.
     */
    distinct?: Wp_nextend2_smartslider3_generatorsScalarFieldEnum | Wp_nextend2_smartslider3_generatorsScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_generators findFirstOrThrow
   */
  export type wp_nextend2_smartslider3_generatorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_generators to fetch.
     */
    where?: wp_nextend2_smartslider3_generatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_generators to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_generatorsOrderByWithRelationInput | wp_nextend2_smartslider3_generatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_generators.
     */
    cursor?: wp_nextend2_smartslider3_generatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_generators.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_generators.
     */
    distinct?: Wp_nextend2_smartslider3_generatorsScalarFieldEnum | Wp_nextend2_smartslider3_generatorsScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_generators findMany
   */
  export type wp_nextend2_smartslider3_generatorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_generators to fetch.
     */
    where?: wp_nextend2_smartslider3_generatorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_generators to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_generatorsOrderByWithRelationInput | wp_nextend2_smartslider3_generatorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_nextend2_smartslider3_generators.
     */
    cursor?: wp_nextend2_smartslider3_generatorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_generators from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_generators.
     */
    skip?: number
    distinct?: Wp_nextend2_smartslider3_generatorsScalarFieldEnum | Wp_nextend2_smartslider3_generatorsScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_generators create
   */
  export type wp_nextend2_smartslider3_generatorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_nextend2_smartslider3_generators.
     */
    data: XOR<wp_nextend2_smartslider3_generatorsCreateInput, wp_nextend2_smartslider3_generatorsUncheckedCreateInput>
  }

  /**
   * wp_nextend2_smartslider3_generators createMany
   */
  export type wp_nextend2_smartslider3_generatorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_nextend2_smartslider3_generators.
     */
    data: wp_nextend2_smartslider3_generatorsCreateManyInput | wp_nextend2_smartslider3_generatorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_nextend2_smartslider3_generators update
   */
  export type wp_nextend2_smartslider3_generatorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_nextend2_smartslider3_generators.
     */
    data: XOR<wp_nextend2_smartslider3_generatorsUpdateInput, wp_nextend2_smartslider3_generatorsUncheckedUpdateInput>
    /**
     * Choose, which wp_nextend2_smartslider3_generators to update.
     */
    where: wp_nextend2_smartslider3_generatorsWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_generators updateMany
   */
  export type wp_nextend2_smartslider3_generatorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_nextend2_smartslider3_generators.
     */
    data: XOR<wp_nextend2_smartslider3_generatorsUpdateManyMutationInput, wp_nextend2_smartslider3_generatorsUncheckedUpdateManyInput>
    /**
     * Filter which wp_nextend2_smartslider3_generators to update
     */
    where?: wp_nextend2_smartslider3_generatorsWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_generators to update.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_generators upsert
   */
  export type wp_nextend2_smartslider3_generatorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_nextend2_smartslider3_generators to update in case it exists.
     */
    where: wp_nextend2_smartslider3_generatorsWhereUniqueInput
    /**
     * In case the wp_nextend2_smartslider3_generators found by the `where` argument doesn't exist, create a new wp_nextend2_smartslider3_generators with this data.
     */
    create: XOR<wp_nextend2_smartslider3_generatorsCreateInput, wp_nextend2_smartslider3_generatorsUncheckedCreateInput>
    /**
     * In case the wp_nextend2_smartslider3_generators was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_nextend2_smartslider3_generatorsUpdateInput, wp_nextend2_smartslider3_generatorsUncheckedUpdateInput>
  }

  /**
   * wp_nextend2_smartslider3_generators delete
   */
  export type wp_nextend2_smartslider3_generatorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
    /**
     * Filter which wp_nextend2_smartslider3_generators to delete.
     */
    where: wp_nextend2_smartslider3_generatorsWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_generators deleteMany
   */
  export type wp_nextend2_smartslider3_generatorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_generators to delete
     */
    where?: wp_nextend2_smartslider3_generatorsWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_generators to delete.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_generators without action
   */
  export type wp_nextend2_smartslider3_generatorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_generators
     */
    select?: wp_nextend2_smartslider3_generatorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_generators
     */
    omit?: wp_nextend2_smartslider3_generatorsOmit<ExtArgs> | null
  }


  /**
   * Model wp_nextend2_smartslider3_sliders
   */

  export type AggregateWp_nextend2_smartslider3_sliders = {
    _count: Wp_nextend2_smartslider3_slidersCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_slidersAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_slidersSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_slidersMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_slidersMaxAggregateOutputType | null
  }

  export type Wp_nextend2_smartslider3_slidersAvgAggregateOutputType = {
    id: number | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_slidersSumAggregateOutputType = {
    id: number | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_slidersMinAggregateOutputType = {
    id: number | null
    alias: string | null
    title: string | null
    type: string | null
    params: string | null
    status: string | null
    time: Date | null
    thumbnail: string | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_slidersMaxAggregateOutputType = {
    id: number | null
    alias: string | null
    title: string | null
    type: string | null
    params: string | null
    status: string | null
    time: Date | null
    thumbnail: string | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_slidersCountAggregateOutputType = {
    id: number
    alias: number
    title: number
    type: number
    params: number
    status: number
    time: number
    thumbnail: number
    ordering: number
    _all: number
  }


  export type Wp_nextend2_smartslider3_slidersAvgAggregateInputType = {
    id?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_slidersSumAggregateInputType = {
    id?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_slidersMinAggregateInputType = {
    id?: true
    alias?: true
    title?: true
    type?: true
    params?: true
    status?: true
    time?: true
    thumbnail?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_slidersMaxAggregateInputType = {
    id?: true
    alias?: true
    title?: true
    type?: true
    params?: true
    status?: true
    time?: true
    thumbnail?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_slidersCountAggregateInputType = {
    id?: true
    alias?: true
    title?: true
    type?: true
    params?: true
    status?: true
    time?: true
    thumbnail?: true
    ordering?: true
    _all?: true
  }

  export type Wp_nextend2_smartslider3_slidersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_sliders to aggregate.
     */
    where?: wp_nextend2_smartslider3_slidersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidersOrderByWithRelationInput | wp_nextend2_smartslider3_slidersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_nextend2_smartslider3_slidersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_nextend2_smartslider3_sliders
    **/
    _count?: true | Wp_nextend2_smartslider3_slidersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_nextend2_smartslider3_slidersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_nextend2_smartslider3_slidersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_nextend2_smartslider3_slidersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_nextend2_smartslider3_slidersMaxAggregateInputType
  }

  export type GetWp_nextend2_smartslider3_slidersAggregateType<T extends Wp_nextend2_smartslider3_slidersAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_nextend2_smartslider3_sliders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_sliders[P]>
      : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_sliders[P]>
  }




  export type wp_nextend2_smartslider3_slidersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_nextend2_smartslider3_slidersWhereInput
    orderBy?: wp_nextend2_smartslider3_slidersOrderByWithAggregationInput | wp_nextend2_smartslider3_slidersOrderByWithAggregationInput[]
    by: Wp_nextend2_smartslider3_slidersScalarFieldEnum[] | Wp_nextend2_smartslider3_slidersScalarFieldEnum
    having?: wp_nextend2_smartslider3_slidersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_nextend2_smartslider3_slidersCountAggregateInputType | true
    _avg?: Wp_nextend2_smartslider3_slidersAvgAggregateInputType
    _sum?: Wp_nextend2_smartslider3_slidersSumAggregateInputType
    _min?: Wp_nextend2_smartslider3_slidersMinAggregateInputType
    _max?: Wp_nextend2_smartslider3_slidersMaxAggregateInputType
  }

  export type Wp_nextend2_smartslider3_slidersGroupByOutputType = {
    id: number
    alias: string | null
    title: string
    type: string
    params: string
    status: string
    time: Date
    thumbnail: string
    ordering: number
    _count: Wp_nextend2_smartslider3_slidersCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_slidersAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_slidersSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_slidersMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_slidersMaxAggregateOutputType | null
  }

  type GetWp_nextend2_smartslider3_slidersGroupByPayload<T extends wp_nextend2_smartslider3_slidersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_nextend2_smartslider3_slidersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_nextend2_smartslider3_slidersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_nextend2_smartslider3_slidersGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_nextend2_smartslider3_slidersGroupByOutputType[P]>
        }
      >
    >


  export type wp_nextend2_smartslider3_slidersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alias?: boolean
    title?: boolean
    type?: boolean
    params?: boolean
    status?: boolean
    time?: boolean
    thumbnail?: boolean
    ordering?: boolean
  }, ExtArgs["result"]["wp_nextend2_smartslider3_sliders"]>



  export type wp_nextend2_smartslider3_slidersSelectScalar = {
    id?: boolean
    alias?: boolean
    title?: boolean
    type?: boolean
    params?: boolean
    status?: boolean
    time?: boolean
    thumbnail?: boolean
    ordering?: boolean
  }

  export type wp_nextend2_smartslider3_slidersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "alias" | "title" | "type" | "params" | "status" | "time" | "thumbnail" | "ordering", ExtArgs["result"]["wp_nextend2_smartslider3_sliders"]>

  export type $wp_nextend2_smartslider3_slidersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_nextend2_smartslider3_sliders"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      alias: string | null
      title: string
      type: string
      params: string
      status: string
      time: Date
      thumbnail: string
      ordering: number
    }, ExtArgs["result"]["wp_nextend2_smartslider3_sliders"]>
    composites: {}
  }

  type wp_nextend2_smartslider3_slidersGetPayload<S extends boolean | null | undefined | wp_nextend2_smartslider3_slidersDefaultArgs> = $Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload, S>

  type wp_nextend2_smartslider3_slidersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_nextend2_smartslider3_slidersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_nextend2_smartslider3_slidersCountAggregateInputType | true
    }

  export interface wp_nextend2_smartslider3_slidersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_nextend2_smartslider3_sliders'], meta: { name: 'wp_nextend2_smartslider3_sliders' } }
    /**
     * Find zero or one Wp_nextend2_smartslider3_sliders that matches the filter.
     * @param {wp_nextend2_smartslider3_slidersFindUniqueArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_nextend2_smartslider3_slidersFindUniqueArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidersFindUniqueArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_nextend2_smartslider3_sliders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_nextend2_smartslider3_slidersFindUniqueOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_nextend2_smartslider3_slidersFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_sliders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidersFindFirstArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_nextend2_smartslider3_slidersFindFirstArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidersFindFirstArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_sliders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidersFindFirstOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_nextend2_smartslider3_slidersFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidersFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_nextend2_smartslider3_sliders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.findMany()
     * 
     * // Get first 10 Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_nextend2_smartslider3_slidersWithIdOnly = await prisma.wp_nextend2_smartslider3_sliders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_nextend2_smartslider3_slidersFindManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_nextend2_smartslider3_sliders.
     * @param {wp_nextend2_smartslider3_slidersCreateArgs} args - Arguments to create a Wp_nextend2_smartslider3_sliders.
     * @example
     * // Create one Wp_nextend2_smartslider3_sliders
     * const Wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.create({
     *   data: {
     *     // ... data to create a Wp_nextend2_smartslider3_sliders
     *   }
     * })
     * 
     */
    create<T extends wp_nextend2_smartslider3_slidersCreateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidersCreateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_nextend2_smartslider3_sliders.
     * @param {wp_nextend2_smartslider3_slidersCreateManyArgs} args - Arguments to create many Wp_nextend2_smartslider3_sliders.
     * @example
     * // Create many Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_nextend2_smartslider3_slidersCreateManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_nextend2_smartslider3_sliders.
     * @param {wp_nextend2_smartslider3_slidersDeleteArgs} args - Arguments to delete one Wp_nextend2_smartslider3_sliders.
     * @example
     * // Delete one Wp_nextend2_smartslider3_sliders
     * const Wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.delete({
     *   where: {
     *     // ... filter to delete one Wp_nextend2_smartslider3_sliders
     *   }
     * })
     * 
     */
    delete<T extends wp_nextend2_smartslider3_slidersDeleteArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidersDeleteArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_nextend2_smartslider3_sliders.
     * @param {wp_nextend2_smartslider3_slidersUpdateArgs} args - Arguments to update one Wp_nextend2_smartslider3_sliders.
     * @example
     * // Update one Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_nextend2_smartslider3_slidersUpdateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidersUpdateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_nextend2_smartslider3_sliders.
     * @param {wp_nextend2_smartslider3_slidersDeleteManyArgs} args - Arguments to filter Wp_nextend2_smartslider3_sliders to delete.
     * @example
     * // Delete a few Wp_nextend2_smartslider3_sliders
     * const { count } = await prisma.wp_nextend2_smartslider3_sliders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_nextend2_smartslider3_slidersDeleteManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_nextend2_smartslider3_sliders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_nextend2_smartslider3_slidersUpdateManyArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_nextend2_smartslider3_sliders.
     * @param {wp_nextend2_smartslider3_slidersUpsertArgs} args - Arguments to update or create a Wp_nextend2_smartslider3_sliders.
     * @example
     * // Update or create a Wp_nextend2_smartslider3_sliders
     * const wp_nextend2_smartslider3_sliders = await prisma.wp_nextend2_smartslider3_sliders.upsert({
     *   create: {
     *     // ... data to create a Wp_nextend2_smartslider3_sliders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_sliders we want to update
     *   }
     * })
     */
    upsert<T extends wp_nextend2_smartslider3_slidersUpsertArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidersUpsertArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidersClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_nextend2_smartslider3_sliders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidersCountArgs} args - Arguments to filter Wp_nextend2_smartslider3_sliders to count.
     * @example
     * // Count the number of Wp_nextend2_smartslider3_sliders
     * const count = await prisma.wp_nextend2_smartslider3_sliders.count({
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_sliders we want to count
     *   }
     * })
    **/
    count<T extends wp_nextend2_smartslider3_slidersCountArgs>(
      args?: Subset<T, wp_nextend2_smartslider3_slidersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_nextend2_smartslider3_slidersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_nextend2_smartslider3_sliders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_nextend2_smartslider3_slidersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_nextend2_smartslider3_slidersAggregateArgs>(args: Subset<T, Wp_nextend2_smartslider3_slidersAggregateArgs>): Prisma.PrismaPromise<GetWp_nextend2_smartslider3_slidersAggregateType<T>>

    /**
     * Group by Wp_nextend2_smartslider3_sliders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_nextend2_smartslider3_slidersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_nextend2_smartslider3_slidersGroupByArgs['orderBy'] }
        : { orderBy?: wp_nextend2_smartslider3_slidersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_nextend2_smartslider3_slidersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_nextend2_smartslider3_slidersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_nextend2_smartslider3_sliders model
   */
  readonly fields: wp_nextend2_smartslider3_slidersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_nextend2_smartslider3_sliders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_nextend2_smartslider3_slidersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_nextend2_smartslider3_sliders model
   */
  interface wp_nextend2_smartslider3_slidersFieldRefs {
    readonly id: FieldRef<"wp_nextend2_smartslider3_sliders", 'Int'>
    readonly alias: FieldRef<"wp_nextend2_smartslider3_sliders", 'String'>
    readonly title: FieldRef<"wp_nextend2_smartslider3_sliders", 'String'>
    readonly type: FieldRef<"wp_nextend2_smartslider3_sliders", 'String'>
    readonly params: FieldRef<"wp_nextend2_smartslider3_sliders", 'String'>
    readonly status: FieldRef<"wp_nextend2_smartslider3_sliders", 'String'>
    readonly time: FieldRef<"wp_nextend2_smartslider3_sliders", 'DateTime'>
    readonly thumbnail: FieldRef<"wp_nextend2_smartslider3_sliders", 'String'>
    readonly ordering: FieldRef<"wp_nextend2_smartslider3_sliders", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_nextend2_smartslider3_sliders findUnique
   */
  export type wp_nextend2_smartslider3_slidersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders to fetch.
     */
    where: wp_nextend2_smartslider3_slidersWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders findUniqueOrThrow
   */
  export type wp_nextend2_smartslider3_slidersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders to fetch.
     */
    where: wp_nextend2_smartslider3_slidersWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders findFirst
   */
  export type wp_nextend2_smartslider3_slidersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders to fetch.
     */
    where?: wp_nextend2_smartslider3_slidersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidersOrderByWithRelationInput | wp_nextend2_smartslider3_slidersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_sliders.
     */
    cursor?: wp_nextend2_smartslider3_slidersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_sliders.
     */
    distinct?: Wp_nextend2_smartslider3_slidersScalarFieldEnum | Wp_nextend2_smartslider3_slidersScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_sliders findFirstOrThrow
   */
  export type wp_nextend2_smartslider3_slidersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders to fetch.
     */
    where?: wp_nextend2_smartslider3_slidersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidersOrderByWithRelationInput | wp_nextend2_smartslider3_slidersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_sliders.
     */
    cursor?: wp_nextend2_smartslider3_slidersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_sliders.
     */
    distinct?: Wp_nextend2_smartslider3_slidersScalarFieldEnum | Wp_nextend2_smartslider3_slidersScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_sliders findMany
   */
  export type wp_nextend2_smartslider3_slidersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders to fetch.
     */
    where?: wp_nextend2_smartslider3_slidersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidersOrderByWithRelationInput | wp_nextend2_smartslider3_slidersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_nextend2_smartslider3_sliders.
     */
    cursor?: wp_nextend2_smartslider3_slidersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders.
     */
    skip?: number
    distinct?: Wp_nextend2_smartslider3_slidersScalarFieldEnum | Wp_nextend2_smartslider3_slidersScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_sliders create
   */
  export type wp_nextend2_smartslider3_slidersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_nextend2_smartslider3_sliders.
     */
    data: XOR<wp_nextend2_smartslider3_slidersCreateInput, wp_nextend2_smartslider3_slidersUncheckedCreateInput>
  }

  /**
   * wp_nextend2_smartslider3_sliders createMany
   */
  export type wp_nextend2_smartslider3_slidersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_nextend2_smartslider3_sliders.
     */
    data: wp_nextend2_smartslider3_slidersCreateManyInput | wp_nextend2_smartslider3_slidersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_nextend2_smartslider3_sliders update
   */
  export type wp_nextend2_smartslider3_slidersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_nextend2_smartslider3_sliders.
     */
    data: XOR<wp_nextend2_smartslider3_slidersUpdateInput, wp_nextend2_smartslider3_slidersUncheckedUpdateInput>
    /**
     * Choose, which wp_nextend2_smartslider3_sliders to update.
     */
    where: wp_nextend2_smartslider3_slidersWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders updateMany
   */
  export type wp_nextend2_smartslider3_slidersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_nextend2_smartslider3_sliders.
     */
    data: XOR<wp_nextend2_smartslider3_slidersUpdateManyMutationInput, wp_nextend2_smartslider3_slidersUncheckedUpdateManyInput>
    /**
     * Filter which wp_nextend2_smartslider3_sliders to update
     */
    where?: wp_nextend2_smartslider3_slidersWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_sliders to update.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_sliders upsert
   */
  export type wp_nextend2_smartslider3_slidersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_nextend2_smartslider3_sliders to update in case it exists.
     */
    where: wp_nextend2_smartslider3_slidersWhereUniqueInput
    /**
     * In case the wp_nextend2_smartslider3_sliders found by the `where` argument doesn't exist, create a new wp_nextend2_smartslider3_sliders with this data.
     */
    create: XOR<wp_nextend2_smartslider3_slidersCreateInput, wp_nextend2_smartslider3_slidersUncheckedCreateInput>
    /**
     * In case the wp_nextend2_smartslider3_sliders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_nextend2_smartslider3_slidersUpdateInput, wp_nextend2_smartslider3_slidersUncheckedUpdateInput>
  }

  /**
   * wp_nextend2_smartslider3_sliders delete
   */
  export type wp_nextend2_smartslider3_slidersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
    /**
     * Filter which wp_nextend2_smartslider3_sliders to delete.
     */
    where: wp_nextend2_smartslider3_slidersWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders deleteMany
   */
  export type wp_nextend2_smartslider3_slidersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_sliders to delete
     */
    where?: wp_nextend2_smartslider3_slidersWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_sliders to delete.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_sliders without action
   */
  export type wp_nextend2_smartslider3_slidersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders
     */
    select?: wp_nextend2_smartslider3_slidersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders
     */
    omit?: wp_nextend2_smartslider3_slidersOmit<ExtArgs> | null
  }


  /**
   * Model wp_nextend2_smartslider3_sliders_xref
   */

  export type AggregateWp_nextend2_smartslider3_sliders_xref = {
    _count: Wp_nextend2_smartslider3_sliders_xrefCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_sliders_xrefAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_sliders_xrefSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_sliders_xrefMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_sliders_xrefMaxAggregateOutputType | null
  }

  export type Wp_nextend2_smartslider3_sliders_xrefAvgAggregateOutputType = {
    group_id: number | null
    slider_id: number | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_sliders_xrefSumAggregateOutputType = {
    group_id: number | null
    slider_id: number | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_sliders_xrefMinAggregateOutputType = {
    group_id: number | null
    slider_id: number | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_sliders_xrefMaxAggregateOutputType = {
    group_id: number | null
    slider_id: number | null
    ordering: number | null
  }

  export type Wp_nextend2_smartslider3_sliders_xrefCountAggregateOutputType = {
    group_id: number
    slider_id: number
    ordering: number
    _all: number
  }


  export type Wp_nextend2_smartslider3_sliders_xrefAvgAggregateInputType = {
    group_id?: true
    slider_id?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_sliders_xrefSumAggregateInputType = {
    group_id?: true
    slider_id?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_sliders_xrefMinAggregateInputType = {
    group_id?: true
    slider_id?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_sliders_xrefMaxAggregateInputType = {
    group_id?: true
    slider_id?: true
    ordering?: true
  }

  export type Wp_nextend2_smartslider3_sliders_xrefCountAggregateInputType = {
    group_id?: true
    slider_id?: true
    ordering?: true
    _all?: true
  }

  export type Wp_nextend2_smartslider3_sliders_xrefAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_sliders_xref to aggregate.
     */
    where?: wp_nextend2_smartslider3_sliders_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders_xrefs to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput | wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_nextend2_smartslider3_sliders_xrefs
    **/
    _count?: true | Wp_nextend2_smartslider3_sliders_xrefCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_nextend2_smartslider3_sliders_xrefAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_nextend2_smartslider3_sliders_xrefSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_nextend2_smartslider3_sliders_xrefMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_nextend2_smartslider3_sliders_xrefMaxAggregateInputType
  }

  export type GetWp_nextend2_smartslider3_sliders_xrefAggregateType<T extends Wp_nextend2_smartslider3_sliders_xrefAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_nextend2_smartslider3_sliders_xref]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_sliders_xref[P]>
      : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_sliders_xref[P]>
  }




  export type wp_nextend2_smartslider3_sliders_xrefGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_nextend2_smartslider3_sliders_xrefWhereInput
    orderBy?: wp_nextend2_smartslider3_sliders_xrefOrderByWithAggregationInput | wp_nextend2_smartslider3_sliders_xrefOrderByWithAggregationInput[]
    by: Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum[] | Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum
    having?: wp_nextend2_smartslider3_sliders_xrefScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_nextend2_smartslider3_sliders_xrefCountAggregateInputType | true
    _avg?: Wp_nextend2_smartslider3_sliders_xrefAvgAggregateInputType
    _sum?: Wp_nextend2_smartslider3_sliders_xrefSumAggregateInputType
    _min?: Wp_nextend2_smartslider3_sliders_xrefMinAggregateInputType
    _max?: Wp_nextend2_smartslider3_sliders_xrefMaxAggregateInputType
  }

  export type Wp_nextend2_smartslider3_sliders_xrefGroupByOutputType = {
    group_id: number
    slider_id: number
    ordering: number
    _count: Wp_nextend2_smartslider3_sliders_xrefCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_sliders_xrefAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_sliders_xrefSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_sliders_xrefMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_sliders_xrefMaxAggregateOutputType | null
  }

  type GetWp_nextend2_smartslider3_sliders_xrefGroupByPayload<T extends wp_nextend2_smartslider3_sliders_xrefGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_nextend2_smartslider3_sliders_xrefGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_nextend2_smartslider3_sliders_xrefGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_nextend2_smartslider3_sliders_xrefGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_nextend2_smartslider3_sliders_xrefGroupByOutputType[P]>
        }
      >
    >


  export type wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    slider_id?: boolean
    ordering?: boolean
  }, ExtArgs["result"]["wp_nextend2_smartslider3_sliders_xref"]>



  export type wp_nextend2_smartslider3_sliders_xrefSelectScalar = {
    group_id?: boolean
    slider_id?: boolean
    ordering?: boolean
  }

  export type wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"group_id" | "slider_id" | "ordering", ExtArgs["result"]["wp_nextend2_smartslider3_sliders_xref"]>

  export type $wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_nextend2_smartslider3_sliders_xref"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      group_id: number
      slider_id: number
      ordering: number
    }, ExtArgs["result"]["wp_nextend2_smartslider3_sliders_xref"]>
    composites: {}
  }

  type wp_nextend2_smartslider3_sliders_xrefGetPayload<S extends boolean | null | undefined | wp_nextend2_smartslider3_sliders_xrefDefaultArgs> = $Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload, S>

  type wp_nextend2_smartslider3_sliders_xrefCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_nextend2_smartslider3_sliders_xrefFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_nextend2_smartslider3_sliders_xrefCountAggregateInputType | true
    }

  export interface wp_nextend2_smartslider3_sliders_xrefDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_nextend2_smartslider3_sliders_xref'], meta: { name: 'wp_nextend2_smartslider3_sliders_xref' } }
    /**
     * Find zero or one Wp_nextend2_smartslider3_sliders_xref that matches the filter.
     * @param {wp_nextend2_smartslider3_sliders_xrefFindUniqueArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders_xref
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders_xref
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_nextend2_smartslider3_sliders_xrefFindUniqueArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefFindUniqueArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_nextend2_smartslider3_sliders_xref that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_nextend2_smartslider3_sliders_xrefFindUniqueOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders_xref
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders_xref
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_nextend2_smartslider3_sliders_xrefFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_sliders_xref that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_sliders_xrefFindFirstArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders_xref
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders_xref
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_nextend2_smartslider3_sliders_xrefFindFirstArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefFindFirstArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_sliders_xref that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_sliders_xrefFindFirstOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_sliders_xref
     * @example
     * // Get one Wp_nextend2_smartslider3_sliders_xref
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_nextend2_smartslider3_sliders_xrefFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_nextend2_smartslider3_sliders_xrefs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_sliders_xrefFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_nextend2_smartslider3_sliders_xrefs
     * const wp_nextend2_smartslider3_sliders_xrefs = await prisma.wp_nextend2_smartslider3_sliders_xref.findMany()
     * 
     * // Get first 10 Wp_nextend2_smartslider3_sliders_xrefs
     * const wp_nextend2_smartslider3_sliders_xrefs = await prisma.wp_nextend2_smartslider3_sliders_xref.findMany({ take: 10 })
     * 
     * // Only select the `group_id`
     * const wp_nextend2_smartslider3_sliders_xrefWithGroup_idOnly = await prisma.wp_nextend2_smartslider3_sliders_xref.findMany({ select: { group_id: true } })
     * 
     */
    findMany<T extends wp_nextend2_smartslider3_sliders_xrefFindManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_nextend2_smartslider3_sliders_xref.
     * @param {wp_nextend2_smartslider3_sliders_xrefCreateArgs} args - Arguments to create a Wp_nextend2_smartslider3_sliders_xref.
     * @example
     * // Create one Wp_nextend2_smartslider3_sliders_xref
     * const Wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.create({
     *   data: {
     *     // ... data to create a Wp_nextend2_smartslider3_sliders_xref
     *   }
     * })
     * 
     */
    create<T extends wp_nextend2_smartslider3_sliders_xrefCreateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefCreateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_nextend2_smartslider3_sliders_xrefs.
     * @param {wp_nextend2_smartslider3_sliders_xrefCreateManyArgs} args - Arguments to create many Wp_nextend2_smartslider3_sliders_xrefs.
     * @example
     * // Create many Wp_nextend2_smartslider3_sliders_xrefs
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_nextend2_smartslider3_sliders_xrefCreateManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_nextend2_smartslider3_sliders_xref.
     * @param {wp_nextend2_smartslider3_sliders_xrefDeleteArgs} args - Arguments to delete one Wp_nextend2_smartslider3_sliders_xref.
     * @example
     * // Delete one Wp_nextend2_smartslider3_sliders_xref
     * const Wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.delete({
     *   where: {
     *     // ... filter to delete one Wp_nextend2_smartslider3_sliders_xref
     *   }
     * })
     * 
     */
    delete<T extends wp_nextend2_smartslider3_sliders_xrefDeleteArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefDeleteArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_nextend2_smartslider3_sliders_xref.
     * @param {wp_nextend2_smartslider3_sliders_xrefUpdateArgs} args - Arguments to update one Wp_nextend2_smartslider3_sliders_xref.
     * @example
     * // Update one Wp_nextend2_smartslider3_sliders_xref
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_nextend2_smartslider3_sliders_xrefUpdateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefUpdateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_nextend2_smartslider3_sliders_xrefs.
     * @param {wp_nextend2_smartslider3_sliders_xrefDeleteManyArgs} args - Arguments to filter Wp_nextend2_smartslider3_sliders_xrefs to delete.
     * @example
     * // Delete a few Wp_nextend2_smartslider3_sliders_xrefs
     * const { count } = await prisma.wp_nextend2_smartslider3_sliders_xref.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_nextend2_smartslider3_sliders_xrefDeleteManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_nextend2_smartslider3_sliders_xrefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_sliders_xrefUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_nextend2_smartslider3_sliders_xrefs
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_nextend2_smartslider3_sliders_xrefUpdateManyArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_nextend2_smartslider3_sliders_xref.
     * @param {wp_nextend2_smartslider3_sliders_xrefUpsertArgs} args - Arguments to update or create a Wp_nextend2_smartslider3_sliders_xref.
     * @example
     * // Update or create a Wp_nextend2_smartslider3_sliders_xref
     * const wp_nextend2_smartslider3_sliders_xref = await prisma.wp_nextend2_smartslider3_sliders_xref.upsert({
     *   create: {
     *     // ... data to create a Wp_nextend2_smartslider3_sliders_xref
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_sliders_xref we want to update
     *   }
     * })
     */
    upsert<T extends wp_nextend2_smartslider3_sliders_xrefUpsertArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_sliders_xrefUpsertArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_sliders_xrefClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_sliders_xrefPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_nextend2_smartslider3_sliders_xrefs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_sliders_xrefCountArgs} args - Arguments to filter Wp_nextend2_smartslider3_sliders_xrefs to count.
     * @example
     * // Count the number of Wp_nextend2_smartslider3_sliders_xrefs
     * const count = await prisma.wp_nextend2_smartslider3_sliders_xref.count({
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_sliders_xrefs we want to count
     *   }
     * })
    **/
    count<T extends wp_nextend2_smartslider3_sliders_xrefCountArgs>(
      args?: Subset<T, wp_nextend2_smartslider3_sliders_xrefCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_nextend2_smartslider3_sliders_xrefCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_nextend2_smartslider3_sliders_xref.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_nextend2_smartslider3_sliders_xrefAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_nextend2_smartslider3_sliders_xrefAggregateArgs>(args: Subset<T, Wp_nextend2_smartslider3_sliders_xrefAggregateArgs>): Prisma.PrismaPromise<GetWp_nextend2_smartslider3_sliders_xrefAggregateType<T>>

    /**
     * Group by Wp_nextend2_smartslider3_sliders_xref.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_sliders_xrefGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_nextend2_smartslider3_sliders_xrefGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_nextend2_smartslider3_sliders_xrefGroupByArgs['orderBy'] }
        : { orderBy?: wp_nextend2_smartslider3_sliders_xrefGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_nextend2_smartslider3_sliders_xrefGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_nextend2_smartslider3_sliders_xrefGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_nextend2_smartslider3_sliders_xref model
   */
  readonly fields: wp_nextend2_smartslider3_sliders_xrefFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_nextend2_smartslider3_sliders_xref.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_nextend2_smartslider3_sliders_xrefClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_nextend2_smartslider3_sliders_xref model
   */
  interface wp_nextend2_smartslider3_sliders_xrefFieldRefs {
    readonly group_id: FieldRef<"wp_nextend2_smartslider3_sliders_xref", 'Int'>
    readonly slider_id: FieldRef<"wp_nextend2_smartslider3_sliders_xref", 'Int'>
    readonly ordering: FieldRef<"wp_nextend2_smartslider3_sliders_xref", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_nextend2_smartslider3_sliders_xref findUnique
   */
  export type wp_nextend2_smartslider3_sliders_xrefFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders_xref to fetch.
     */
    where: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref findUniqueOrThrow
   */
  export type wp_nextend2_smartslider3_sliders_xrefFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders_xref to fetch.
     */
    where: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref findFirst
   */
  export type wp_nextend2_smartslider3_sliders_xrefFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders_xref to fetch.
     */
    where?: wp_nextend2_smartslider3_sliders_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders_xrefs to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput | wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_sliders_xrefs.
     */
    cursor?: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_sliders_xrefs.
     */
    distinct?: Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum | Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref findFirstOrThrow
   */
  export type wp_nextend2_smartslider3_sliders_xrefFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders_xref to fetch.
     */
    where?: wp_nextend2_smartslider3_sliders_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders_xrefs to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput | wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_sliders_xrefs.
     */
    cursor?: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders_xrefs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_sliders_xrefs.
     */
    distinct?: Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum | Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref findMany
   */
  export type wp_nextend2_smartslider3_sliders_xrefFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_sliders_xrefs to fetch.
     */
    where?: wp_nextend2_smartslider3_sliders_xrefWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_sliders_xrefs to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput | wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_nextend2_smartslider3_sliders_xrefs.
     */
    cursor?: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_sliders_xrefs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_sliders_xrefs.
     */
    skip?: number
    distinct?: Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum | Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref create
   */
  export type wp_nextend2_smartslider3_sliders_xrefCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_nextend2_smartslider3_sliders_xref.
     */
    data: XOR<wp_nextend2_smartslider3_sliders_xrefCreateInput, wp_nextend2_smartslider3_sliders_xrefUncheckedCreateInput>
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref createMany
   */
  export type wp_nextend2_smartslider3_sliders_xrefCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_nextend2_smartslider3_sliders_xrefs.
     */
    data: wp_nextend2_smartslider3_sliders_xrefCreateManyInput | wp_nextend2_smartslider3_sliders_xrefCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref update
   */
  export type wp_nextend2_smartslider3_sliders_xrefUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_nextend2_smartslider3_sliders_xref.
     */
    data: XOR<wp_nextend2_smartslider3_sliders_xrefUpdateInput, wp_nextend2_smartslider3_sliders_xrefUncheckedUpdateInput>
    /**
     * Choose, which wp_nextend2_smartslider3_sliders_xref to update.
     */
    where: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref updateMany
   */
  export type wp_nextend2_smartslider3_sliders_xrefUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_nextend2_smartslider3_sliders_xrefs.
     */
    data: XOR<wp_nextend2_smartslider3_sliders_xrefUpdateManyMutationInput, wp_nextend2_smartslider3_sliders_xrefUncheckedUpdateManyInput>
    /**
     * Filter which wp_nextend2_smartslider3_sliders_xrefs to update
     */
    where?: wp_nextend2_smartslider3_sliders_xrefWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_sliders_xrefs to update.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref upsert
   */
  export type wp_nextend2_smartslider3_sliders_xrefUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_nextend2_smartslider3_sliders_xref to update in case it exists.
     */
    where: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
    /**
     * In case the wp_nextend2_smartslider3_sliders_xref found by the `where` argument doesn't exist, create a new wp_nextend2_smartslider3_sliders_xref with this data.
     */
    create: XOR<wp_nextend2_smartslider3_sliders_xrefCreateInput, wp_nextend2_smartslider3_sliders_xrefUncheckedCreateInput>
    /**
     * In case the wp_nextend2_smartslider3_sliders_xref was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_nextend2_smartslider3_sliders_xrefUpdateInput, wp_nextend2_smartslider3_sliders_xrefUncheckedUpdateInput>
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref delete
   */
  export type wp_nextend2_smartslider3_sliders_xrefDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
    /**
     * Filter which wp_nextend2_smartslider3_sliders_xref to delete.
     */
    where: wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref deleteMany
   */
  export type wp_nextend2_smartslider3_sliders_xrefDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_sliders_xrefs to delete
     */
    where?: wp_nextend2_smartslider3_sliders_xrefWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_sliders_xrefs to delete.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_sliders_xref without action
   */
  export type wp_nextend2_smartslider3_sliders_xrefDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_sliders_xref
     */
    select?: wp_nextend2_smartslider3_sliders_xrefSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_sliders_xref
     */
    omit?: wp_nextend2_smartslider3_sliders_xrefOmit<ExtArgs> | null
  }


  /**
   * Model wp_nextend2_smartslider3_slides
   */

  export type AggregateWp_nextend2_smartslider3_slides = {
    _count: Wp_nextend2_smartslider3_slidesCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_slidesAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_slidesSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_slidesMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_slidesMaxAggregateOutputType | null
  }

  export type Wp_nextend2_smartslider3_slidesAvgAggregateOutputType = {
    id: number | null
    slider: number | null
    first: number | null
    ordering: number | null
    generator_id: number | null
  }

  export type Wp_nextend2_smartslider3_slidesSumAggregateOutputType = {
    id: number | null
    slider: number | null
    first: number | null
    ordering: number | null
    generator_id: number | null
  }

  export type Wp_nextend2_smartslider3_slidesMinAggregateOutputType = {
    id: number | null
    title: string | null
    slider: number | null
    publish_up: Date | null
    publish_down: Date | null
    published: boolean | null
    first: number | null
    slide: string | null
    description: string | null
    thumbnail: string | null
    params: string | null
    ordering: number | null
    generator_id: number | null
  }

  export type Wp_nextend2_smartslider3_slidesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    slider: number | null
    publish_up: Date | null
    publish_down: Date | null
    published: boolean | null
    first: number | null
    slide: string | null
    description: string | null
    thumbnail: string | null
    params: string | null
    ordering: number | null
    generator_id: number | null
  }

  export type Wp_nextend2_smartslider3_slidesCountAggregateOutputType = {
    id: number
    title: number
    slider: number
    publish_up: number
    publish_down: number
    published: number
    first: number
    slide: number
    description: number
    thumbnail: number
    params: number
    ordering: number
    generator_id: number
    _all: number
  }


  export type Wp_nextend2_smartslider3_slidesAvgAggregateInputType = {
    id?: true
    slider?: true
    first?: true
    ordering?: true
    generator_id?: true
  }

  export type Wp_nextend2_smartslider3_slidesSumAggregateInputType = {
    id?: true
    slider?: true
    first?: true
    ordering?: true
    generator_id?: true
  }

  export type Wp_nextend2_smartslider3_slidesMinAggregateInputType = {
    id?: true
    title?: true
    slider?: true
    publish_up?: true
    publish_down?: true
    published?: true
    first?: true
    slide?: true
    description?: true
    thumbnail?: true
    params?: true
    ordering?: true
    generator_id?: true
  }

  export type Wp_nextend2_smartslider3_slidesMaxAggregateInputType = {
    id?: true
    title?: true
    slider?: true
    publish_up?: true
    publish_down?: true
    published?: true
    first?: true
    slide?: true
    description?: true
    thumbnail?: true
    params?: true
    ordering?: true
    generator_id?: true
  }

  export type Wp_nextend2_smartslider3_slidesCountAggregateInputType = {
    id?: true
    title?: true
    slider?: true
    publish_up?: true
    publish_down?: true
    published?: true
    first?: true
    slide?: true
    description?: true
    thumbnail?: true
    params?: true
    ordering?: true
    generator_id?: true
    _all?: true
  }

  export type Wp_nextend2_smartslider3_slidesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_slides to aggregate.
     */
    where?: wp_nextend2_smartslider3_slidesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_slides to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidesOrderByWithRelationInput | wp_nextend2_smartslider3_slidesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_nextend2_smartslider3_slidesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_slides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_slides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_nextend2_smartslider3_slides
    **/
    _count?: true | Wp_nextend2_smartslider3_slidesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_nextend2_smartslider3_slidesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_nextend2_smartslider3_slidesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_nextend2_smartslider3_slidesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_nextend2_smartslider3_slidesMaxAggregateInputType
  }

  export type GetWp_nextend2_smartslider3_slidesAggregateType<T extends Wp_nextend2_smartslider3_slidesAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_nextend2_smartslider3_slides]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_slides[P]>
      : GetScalarType<T[P], AggregateWp_nextend2_smartslider3_slides[P]>
  }




  export type wp_nextend2_smartslider3_slidesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_nextend2_smartslider3_slidesWhereInput
    orderBy?: wp_nextend2_smartslider3_slidesOrderByWithAggregationInput | wp_nextend2_smartslider3_slidesOrderByWithAggregationInput[]
    by: Wp_nextend2_smartslider3_slidesScalarFieldEnum[] | Wp_nextend2_smartslider3_slidesScalarFieldEnum
    having?: wp_nextend2_smartslider3_slidesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_nextend2_smartslider3_slidesCountAggregateInputType | true
    _avg?: Wp_nextend2_smartslider3_slidesAvgAggregateInputType
    _sum?: Wp_nextend2_smartslider3_slidesSumAggregateInputType
    _min?: Wp_nextend2_smartslider3_slidesMinAggregateInputType
    _max?: Wp_nextend2_smartslider3_slidesMaxAggregateInputType
  }

  export type Wp_nextend2_smartslider3_slidesGroupByOutputType = {
    id: number
    title: string
    slider: number
    publish_up: Date
    publish_down: Date
    published: boolean
    first: number
    slide: string | null
    description: string
    thumbnail: string
    params: string
    ordering: number
    generator_id: number
    _count: Wp_nextend2_smartslider3_slidesCountAggregateOutputType | null
    _avg: Wp_nextend2_smartslider3_slidesAvgAggregateOutputType | null
    _sum: Wp_nextend2_smartslider3_slidesSumAggregateOutputType | null
    _min: Wp_nextend2_smartslider3_slidesMinAggregateOutputType | null
    _max: Wp_nextend2_smartslider3_slidesMaxAggregateOutputType | null
  }

  type GetWp_nextend2_smartslider3_slidesGroupByPayload<T extends wp_nextend2_smartslider3_slidesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_nextend2_smartslider3_slidesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_nextend2_smartslider3_slidesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_nextend2_smartslider3_slidesGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_nextend2_smartslider3_slidesGroupByOutputType[P]>
        }
      >
    >


  export type wp_nextend2_smartslider3_slidesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slider?: boolean
    publish_up?: boolean
    publish_down?: boolean
    published?: boolean
    first?: boolean
    slide?: boolean
    description?: boolean
    thumbnail?: boolean
    params?: boolean
    ordering?: boolean
    generator_id?: boolean
  }, ExtArgs["result"]["wp_nextend2_smartslider3_slides"]>



  export type wp_nextend2_smartslider3_slidesSelectScalar = {
    id?: boolean
    title?: boolean
    slider?: boolean
    publish_up?: boolean
    publish_down?: boolean
    published?: boolean
    first?: boolean
    slide?: boolean
    description?: boolean
    thumbnail?: boolean
    params?: boolean
    ordering?: boolean
    generator_id?: boolean
  }

  export type wp_nextend2_smartslider3_slidesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "slider" | "publish_up" | "publish_down" | "published" | "first" | "slide" | "description" | "thumbnail" | "params" | "ordering" | "generator_id", ExtArgs["result"]["wp_nextend2_smartslider3_slides"]>

  export type $wp_nextend2_smartslider3_slidesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_nextend2_smartslider3_slides"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      slider: number
      publish_up: Date
      publish_down: Date
      published: boolean
      first: number
      slide: string | null
      description: string
      thumbnail: string
      params: string
      ordering: number
      generator_id: number
    }, ExtArgs["result"]["wp_nextend2_smartslider3_slides"]>
    composites: {}
  }

  type wp_nextend2_smartslider3_slidesGetPayload<S extends boolean | null | undefined | wp_nextend2_smartslider3_slidesDefaultArgs> = $Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload, S>

  type wp_nextend2_smartslider3_slidesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_nextend2_smartslider3_slidesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_nextend2_smartslider3_slidesCountAggregateInputType | true
    }

  export interface wp_nextend2_smartslider3_slidesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_nextend2_smartslider3_slides'], meta: { name: 'wp_nextend2_smartslider3_slides' } }
    /**
     * Find zero or one Wp_nextend2_smartslider3_slides that matches the filter.
     * @param {wp_nextend2_smartslider3_slidesFindUniqueArgs} args - Arguments to find a Wp_nextend2_smartslider3_slides
     * @example
     * // Get one Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_nextend2_smartslider3_slidesFindUniqueArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidesFindUniqueArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_nextend2_smartslider3_slides that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_nextend2_smartslider3_slidesFindUniqueOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_slides
     * @example
     * // Get one Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_nextend2_smartslider3_slidesFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_slides that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidesFindFirstArgs} args - Arguments to find a Wp_nextend2_smartslider3_slides
     * @example
     * // Get one Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_nextend2_smartslider3_slidesFindFirstArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidesFindFirstArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_nextend2_smartslider3_slides that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidesFindFirstOrThrowArgs} args - Arguments to find a Wp_nextend2_smartslider3_slides
     * @example
     * // Get one Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_nextend2_smartslider3_slidesFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidesFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_nextend2_smartslider3_slides that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.findMany()
     * 
     * // Get first 10 Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_nextend2_smartslider3_slidesWithIdOnly = await prisma.wp_nextend2_smartslider3_slides.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_nextend2_smartslider3_slidesFindManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_nextend2_smartslider3_slides.
     * @param {wp_nextend2_smartslider3_slidesCreateArgs} args - Arguments to create a Wp_nextend2_smartslider3_slides.
     * @example
     * // Create one Wp_nextend2_smartslider3_slides
     * const Wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.create({
     *   data: {
     *     // ... data to create a Wp_nextend2_smartslider3_slides
     *   }
     * })
     * 
     */
    create<T extends wp_nextend2_smartslider3_slidesCreateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidesCreateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_nextend2_smartslider3_slides.
     * @param {wp_nextend2_smartslider3_slidesCreateManyArgs} args - Arguments to create many Wp_nextend2_smartslider3_slides.
     * @example
     * // Create many Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_nextend2_smartslider3_slidesCreateManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_nextend2_smartslider3_slides.
     * @param {wp_nextend2_smartslider3_slidesDeleteArgs} args - Arguments to delete one Wp_nextend2_smartslider3_slides.
     * @example
     * // Delete one Wp_nextend2_smartslider3_slides
     * const Wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.delete({
     *   where: {
     *     // ... filter to delete one Wp_nextend2_smartslider3_slides
     *   }
     * })
     * 
     */
    delete<T extends wp_nextend2_smartslider3_slidesDeleteArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidesDeleteArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_nextend2_smartslider3_slides.
     * @param {wp_nextend2_smartslider3_slidesUpdateArgs} args - Arguments to update one Wp_nextend2_smartslider3_slides.
     * @example
     * // Update one Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_nextend2_smartslider3_slidesUpdateArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidesUpdateArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_nextend2_smartslider3_slides.
     * @param {wp_nextend2_smartslider3_slidesDeleteManyArgs} args - Arguments to filter Wp_nextend2_smartslider3_slides to delete.
     * @example
     * // Delete a few Wp_nextend2_smartslider3_slides
     * const { count } = await prisma.wp_nextend2_smartslider3_slides.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_nextend2_smartslider3_slidesDeleteManyArgs>(args?: SelectSubset<T, wp_nextend2_smartslider3_slidesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_nextend2_smartslider3_slides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_nextend2_smartslider3_slidesUpdateManyArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_nextend2_smartslider3_slides.
     * @param {wp_nextend2_smartslider3_slidesUpsertArgs} args - Arguments to update or create a Wp_nextend2_smartslider3_slides.
     * @example
     * // Update or create a Wp_nextend2_smartslider3_slides
     * const wp_nextend2_smartslider3_slides = await prisma.wp_nextend2_smartslider3_slides.upsert({
     *   create: {
     *     // ... data to create a Wp_nextend2_smartslider3_slides
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_slides we want to update
     *   }
     * })
     */
    upsert<T extends wp_nextend2_smartslider3_slidesUpsertArgs>(args: SelectSubset<T, wp_nextend2_smartslider3_slidesUpsertArgs<ExtArgs>>): Prisma__wp_nextend2_smartslider3_slidesClient<$Result.GetResult<Prisma.$wp_nextend2_smartslider3_slidesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_nextend2_smartslider3_slides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidesCountArgs} args - Arguments to filter Wp_nextend2_smartslider3_slides to count.
     * @example
     * // Count the number of Wp_nextend2_smartslider3_slides
     * const count = await prisma.wp_nextend2_smartslider3_slides.count({
     *   where: {
     *     // ... the filter for the Wp_nextend2_smartslider3_slides we want to count
     *   }
     * })
    **/
    count<T extends wp_nextend2_smartslider3_slidesCountArgs>(
      args?: Subset<T, wp_nextend2_smartslider3_slidesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_nextend2_smartslider3_slidesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_nextend2_smartslider3_slides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_nextend2_smartslider3_slidesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_nextend2_smartslider3_slidesAggregateArgs>(args: Subset<T, Wp_nextend2_smartslider3_slidesAggregateArgs>): Prisma.PrismaPromise<GetWp_nextend2_smartslider3_slidesAggregateType<T>>

    /**
     * Group by Wp_nextend2_smartslider3_slides.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_nextend2_smartslider3_slidesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_nextend2_smartslider3_slidesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_nextend2_smartslider3_slidesGroupByArgs['orderBy'] }
        : { orderBy?: wp_nextend2_smartslider3_slidesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_nextend2_smartslider3_slidesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_nextend2_smartslider3_slidesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_nextend2_smartslider3_slides model
   */
  readonly fields: wp_nextend2_smartslider3_slidesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_nextend2_smartslider3_slides.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_nextend2_smartslider3_slidesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_nextend2_smartslider3_slides model
   */
  interface wp_nextend2_smartslider3_slidesFieldRefs {
    readonly id: FieldRef<"wp_nextend2_smartslider3_slides", 'Int'>
    readonly title: FieldRef<"wp_nextend2_smartslider3_slides", 'String'>
    readonly slider: FieldRef<"wp_nextend2_smartslider3_slides", 'Int'>
    readonly publish_up: FieldRef<"wp_nextend2_smartslider3_slides", 'DateTime'>
    readonly publish_down: FieldRef<"wp_nextend2_smartslider3_slides", 'DateTime'>
    readonly published: FieldRef<"wp_nextend2_smartslider3_slides", 'Boolean'>
    readonly first: FieldRef<"wp_nextend2_smartslider3_slides", 'Int'>
    readonly slide: FieldRef<"wp_nextend2_smartslider3_slides", 'String'>
    readonly description: FieldRef<"wp_nextend2_smartslider3_slides", 'String'>
    readonly thumbnail: FieldRef<"wp_nextend2_smartslider3_slides", 'String'>
    readonly params: FieldRef<"wp_nextend2_smartslider3_slides", 'String'>
    readonly ordering: FieldRef<"wp_nextend2_smartslider3_slides", 'Int'>
    readonly generator_id: FieldRef<"wp_nextend2_smartslider3_slides", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_nextend2_smartslider3_slides findUnique
   */
  export type wp_nextend2_smartslider3_slidesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_slides to fetch.
     */
    where: wp_nextend2_smartslider3_slidesWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_slides findUniqueOrThrow
   */
  export type wp_nextend2_smartslider3_slidesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_slides to fetch.
     */
    where: wp_nextend2_smartslider3_slidesWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_slides findFirst
   */
  export type wp_nextend2_smartslider3_slidesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_slides to fetch.
     */
    where?: wp_nextend2_smartslider3_slidesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_slides to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidesOrderByWithRelationInput | wp_nextend2_smartslider3_slidesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_slides.
     */
    cursor?: wp_nextend2_smartslider3_slidesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_slides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_slides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_slides.
     */
    distinct?: Wp_nextend2_smartslider3_slidesScalarFieldEnum | Wp_nextend2_smartslider3_slidesScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_slides findFirstOrThrow
   */
  export type wp_nextend2_smartslider3_slidesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_slides to fetch.
     */
    where?: wp_nextend2_smartslider3_slidesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_slides to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidesOrderByWithRelationInput | wp_nextend2_smartslider3_slidesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_nextend2_smartslider3_slides.
     */
    cursor?: wp_nextend2_smartslider3_slidesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_slides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_slides.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_nextend2_smartslider3_slides.
     */
    distinct?: Wp_nextend2_smartslider3_slidesScalarFieldEnum | Wp_nextend2_smartslider3_slidesScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_slides findMany
   */
  export type wp_nextend2_smartslider3_slidesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * Filter, which wp_nextend2_smartslider3_slides to fetch.
     */
    where?: wp_nextend2_smartslider3_slidesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_nextend2_smartslider3_slides to fetch.
     */
    orderBy?: wp_nextend2_smartslider3_slidesOrderByWithRelationInput | wp_nextend2_smartslider3_slidesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_nextend2_smartslider3_slides.
     */
    cursor?: wp_nextend2_smartslider3_slidesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_nextend2_smartslider3_slides from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_nextend2_smartslider3_slides.
     */
    skip?: number
    distinct?: Wp_nextend2_smartslider3_slidesScalarFieldEnum | Wp_nextend2_smartslider3_slidesScalarFieldEnum[]
  }

  /**
   * wp_nextend2_smartslider3_slides create
   */
  export type wp_nextend2_smartslider3_slidesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_nextend2_smartslider3_slides.
     */
    data: XOR<wp_nextend2_smartslider3_slidesCreateInput, wp_nextend2_smartslider3_slidesUncheckedCreateInput>
  }

  /**
   * wp_nextend2_smartslider3_slides createMany
   */
  export type wp_nextend2_smartslider3_slidesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_nextend2_smartslider3_slides.
     */
    data: wp_nextend2_smartslider3_slidesCreateManyInput | wp_nextend2_smartslider3_slidesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_nextend2_smartslider3_slides update
   */
  export type wp_nextend2_smartslider3_slidesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_nextend2_smartslider3_slides.
     */
    data: XOR<wp_nextend2_smartslider3_slidesUpdateInput, wp_nextend2_smartslider3_slidesUncheckedUpdateInput>
    /**
     * Choose, which wp_nextend2_smartslider3_slides to update.
     */
    where: wp_nextend2_smartslider3_slidesWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_slides updateMany
   */
  export type wp_nextend2_smartslider3_slidesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_nextend2_smartslider3_slides.
     */
    data: XOR<wp_nextend2_smartslider3_slidesUpdateManyMutationInput, wp_nextend2_smartslider3_slidesUncheckedUpdateManyInput>
    /**
     * Filter which wp_nextend2_smartslider3_slides to update
     */
    where?: wp_nextend2_smartslider3_slidesWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_slides to update.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_slides upsert
   */
  export type wp_nextend2_smartslider3_slidesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_nextend2_smartslider3_slides to update in case it exists.
     */
    where: wp_nextend2_smartslider3_slidesWhereUniqueInput
    /**
     * In case the wp_nextend2_smartslider3_slides found by the `where` argument doesn't exist, create a new wp_nextend2_smartslider3_slides with this data.
     */
    create: XOR<wp_nextend2_smartslider3_slidesCreateInput, wp_nextend2_smartslider3_slidesUncheckedCreateInput>
    /**
     * In case the wp_nextend2_smartslider3_slides was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_nextend2_smartslider3_slidesUpdateInput, wp_nextend2_smartslider3_slidesUncheckedUpdateInput>
  }

  /**
   * wp_nextend2_smartslider3_slides delete
   */
  export type wp_nextend2_smartslider3_slidesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
    /**
     * Filter which wp_nextend2_smartslider3_slides to delete.
     */
    where: wp_nextend2_smartslider3_slidesWhereUniqueInput
  }

  /**
   * wp_nextend2_smartslider3_slides deleteMany
   */
  export type wp_nextend2_smartslider3_slidesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_nextend2_smartslider3_slides to delete
     */
    where?: wp_nextend2_smartslider3_slidesWhereInput
    /**
     * Limit how many wp_nextend2_smartslider3_slides to delete.
     */
    limit?: number
  }

  /**
   * wp_nextend2_smartslider3_slides without action
   */
  export type wp_nextend2_smartslider3_slidesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_nextend2_smartslider3_slides
     */
    select?: wp_nextend2_smartslider3_slidesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_nextend2_smartslider3_slides
     */
    omit?: wp_nextend2_smartslider3_slidesOmit<ExtArgs> | null
  }


  /**
   * Model wp_options
   */

  export type AggregateWp_options = {
    _count: Wp_optionsCountAggregateOutputType | null
    _avg: Wp_optionsAvgAggregateOutputType | null
    _sum: Wp_optionsSumAggregateOutputType | null
    _min: Wp_optionsMinAggregateOutputType | null
    _max: Wp_optionsMaxAggregateOutputType | null
  }

  export type Wp_optionsAvgAggregateOutputType = {
    option_id: number | null
  }

  export type Wp_optionsSumAggregateOutputType = {
    option_id: bigint | null
  }

  export type Wp_optionsMinAggregateOutputType = {
    option_id: bigint | null
    option_name: string | null
    option_value: string | null
    autoload: string | null
  }

  export type Wp_optionsMaxAggregateOutputType = {
    option_id: bigint | null
    option_name: string | null
    option_value: string | null
    autoload: string | null
  }

  export type Wp_optionsCountAggregateOutputType = {
    option_id: number
    option_name: number
    option_value: number
    autoload: number
    _all: number
  }


  export type Wp_optionsAvgAggregateInputType = {
    option_id?: true
  }

  export type Wp_optionsSumAggregateInputType = {
    option_id?: true
  }

  export type Wp_optionsMinAggregateInputType = {
    option_id?: true
    option_name?: true
    option_value?: true
    autoload?: true
  }

  export type Wp_optionsMaxAggregateInputType = {
    option_id?: true
    option_name?: true
    option_value?: true
    autoload?: true
  }

  export type Wp_optionsCountAggregateInputType = {
    option_id?: true
    option_name?: true
    option_value?: true
    autoload?: true
    _all?: true
  }

  export type Wp_optionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_options to aggregate.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_options
    **/
    _count?: true | Wp_optionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_optionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_optionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_optionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_optionsMaxAggregateInputType
  }

  export type GetWp_optionsAggregateType<T extends Wp_optionsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_options]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_options[P]>
      : GetScalarType<T[P], AggregateWp_options[P]>
  }




  export type wp_optionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_optionsWhereInput
    orderBy?: wp_optionsOrderByWithAggregationInput | wp_optionsOrderByWithAggregationInput[]
    by: Wp_optionsScalarFieldEnum[] | Wp_optionsScalarFieldEnum
    having?: wp_optionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_optionsCountAggregateInputType | true
    _avg?: Wp_optionsAvgAggregateInputType
    _sum?: Wp_optionsSumAggregateInputType
    _min?: Wp_optionsMinAggregateInputType
    _max?: Wp_optionsMaxAggregateInputType
  }

  export type Wp_optionsGroupByOutputType = {
    option_id: bigint
    option_name: string
    option_value: string
    autoload: string
    _count: Wp_optionsCountAggregateOutputType | null
    _avg: Wp_optionsAvgAggregateOutputType | null
    _sum: Wp_optionsSumAggregateOutputType | null
    _min: Wp_optionsMinAggregateOutputType | null
    _max: Wp_optionsMaxAggregateOutputType | null
  }

  type GetWp_optionsGroupByPayload<T extends wp_optionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_optionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_optionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_optionsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_optionsGroupByOutputType[P]>
        }
      >
    >


  export type wp_optionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    option_id?: boolean
    option_name?: boolean
    option_value?: boolean
    autoload?: boolean
  }, ExtArgs["result"]["wp_options"]>



  export type wp_optionsSelectScalar = {
    option_id?: boolean
    option_name?: boolean
    option_value?: boolean
    autoload?: boolean
  }

  export type wp_optionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"option_id" | "option_name" | "option_value" | "autoload", ExtArgs["result"]["wp_options"]>

  export type $wp_optionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_options"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      option_id: bigint
      option_name: string
      option_value: string
      autoload: string
    }, ExtArgs["result"]["wp_options"]>
    composites: {}
  }

  type wp_optionsGetPayload<S extends boolean | null | undefined | wp_optionsDefaultArgs> = $Result.GetResult<Prisma.$wp_optionsPayload, S>

  type wp_optionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_optionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_optionsCountAggregateInputType | true
    }

  export interface wp_optionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_options'], meta: { name: 'wp_options' } }
    /**
     * Find zero or one Wp_options that matches the filter.
     * @param {wp_optionsFindUniqueArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_optionsFindUniqueArgs>(args: SelectSubset<T, wp_optionsFindUniqueArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_options that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_optionsFindUniqueOrThrowArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_optionsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_optionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsFindFirstArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_optionsFindFirstArgs>(args?: SelectSubset<T, wp_optionsFindFirstArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_options that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsFindFirstOrThrowArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_optionsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_optionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_options
     * const wp_options = await prisma.wp_options.findMany()
     * 
     * // Get first 10 Wp_options
     * const wp_options = await prisma.wp_options.findMany({ take: 10 })
     * 
     * // Only select the `option_id`
     * const wp_optionsWithOption_idOnly = await prisma.wp_options.findMany({ select: { option_id: true } })
     * 
     */
    findMany<T extends wp_optionsFindManyArgs>(args?: SelectSubset<T, wp_optionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_options.
     * @param {wp_optionsCreateArgs} args - Arguments to create a Wp_options.
     * @example
     * // Create one Wp_options
     * const Wp_options = await prisma.wp_options.create({
     *   data: {
     *     // ... data to create a Wp_options
     *   }
     * })
     * 
     */
    create<T extends wp_optionsCreateArgs>(args: SelectSubset<T, wp_optionsCreateArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_options.
     * @param {wp_optionsCreateManyArgs} args - Arguments to create many Wp_options.
     * @example
     * // Create many Wp_options
     * const wp_options = await prisma.wp_options.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_optionsCreateManyArgs>(args?: SelectSubset<T, wp_optionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_options.
     * @param {wp_optionsDeleteArgs} args - Arguments to delete one Wp_options.
     * @example
     * // Delete one Wp_options
     * const Wp_options = await prisma.wp_options.delete({
     *   where: {
     *     // ... filter to delete one Wp_options
     *   }
     * })
     * 
     */
    delete<T extends wp_optionsDeleteArgs>(args: SelectSubset<T, wp_optionsDeleteArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_options.
     * @param {wp_optionsUpdateArgs} args - Arguments to update one Wp_options.
     * @example
     * // Update one Wp_options
     * const wp_options = await prisma.wp_options.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_optionsUpdateArgs>(args: SelectSubset<T, wp_optionsUpdateArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_options.
     * @param {wp_optionsDeleteManyArgs} args - Arguments to filter Wp_options to delete.
     * @example
     * // Delete a few Wp_options
     * const { count } = await prisma.wp_options.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_optionsDeleteManyArgs>(args?: SelectSubset<T, wp_optionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_options
     * const wp_options = await prisma.wp_options.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_optionsUpdateManyArgs>(args: SelectSubset<T, wp_optionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_options.
     * @param {wp_optionsUpsertArgs} args - Arguments to update or create a Wp_options.
     * @example
     * // Update or create a Wp_options
     * const wp_options = await prisma.wp_options.upsert({
     *   create: {
     *     // ... data to create a Wp_options
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_options we want to update
     *   }
     * })
     */
    upsert<T extends wp_optionsUpsertArgs>(args: SelectSubset<T, wp_optionsUpsertArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsCountArgs} args - Arguments to filter Wp_options to count.
     * @example
     * // Count the number of Wp_options
     * const count = await prisma.wp_options.count({
     *   where: {
     *     // ... the filter for the Wp_options we want to count
     *   }
     * })
    **/
    count<T extends wp_optionsCountArgs>(
      args?: Subset<T, wp_optionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_optionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_optionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_optionsAggregateArgs>(args: Subset<T, Wp_optionsAggregateArgs>): Prisma.PrismaPromise<GetWp_optionsAggregateType<T>>

    /**
     * Group by Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_optionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_optionsGroupByArgs['orderBy'] }
        : { orderBy?: wp_optionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_optionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_optionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_options model
   */
  readonly fields: wp_optionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_options.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_optionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_options model
   */
  interface wp_optionsFieldRefs {
    readonly option_id: FieldRef<"wp_options", 'BigInt'>
    readonly option_name: FieldRef<"wp_options", 'String'>
    readonly option_value: FieldRef<"wp_options", 'String'>
    readonly autoload: FieldRef<"wp_options", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_options findUnique
   */
  export type wp_optionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options findUniqueOrThrow
   */
  export type wp_optionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options findFirst
   */
  export type wp_optionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_options.
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_options.
     */
    distinct?: Wp_optionsScalarFieldEnum | Wp_optionsScalarFieldEnum[]
  }

  /**
   * wp_options findFirstOrThrow
   */
  export type wp_optionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_options.
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_options.
     */
    distinct?: Wp_optionsScalarFieldEnum | Wp_optionsScalarFieldEnum[]
  }

  /**
   * wp_options findMany
   */
  export type wp_optionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_options.
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    distinct?: Wp_optionsScalarFieldEnum | Wp_optionsScalarFieldEnum[]
  }

  /**
   * wp_options create
   */
  export type wp_optionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_options.
     */
    data: XOR<wp_optionsCreateInput, wp_optionsUncheckedCreateInput>
  }

  /**
   * wp_options createMany
   */
  export type wp_optionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_options.
     */
    data: wp_optionsCreateManyInput | wp_optionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_options update
   */
  export type wp_optionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_options.
     */
    data: XOR<wp_optionsUpdateInput, wp_optionsUncheckedUpdateInput>
    /**
     * Choose, which wp_options to update.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options updateMany
   */
  export type wp_optionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_options.
     */
    data: XOR<wp_optionsUpdateManyMutationInput, wp_optionsUncheckedUpdateManyInput>
    /**
     * Filter which wp_options to update
     */
    where?: wp_optionsWhereInput
    /**
     * Limit how many wp_options to update.
     */
    limit?: number
  }

  /**
   * wp_options upsert
   */
  export type wp_optionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_options to update in case it exists.
     */
    where: wp_optionsWhereUniqueInput
    /**
     * In case the wp_options found by the `where` argument doesn't exist, create a new wp_options with this data.
     */
    create: XOR<wp_optionsCreateInput, wp_optionsUncheckedCreateInput>
    /**
     * In case the wp_options was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_optionsUpdateInput, wp_optionsUncheckedUpdateInput>
  }

  /**
   * wp_options delete
   */
  export type wp_optionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter which wp_options to delete.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options deleteMany
   */
  export type wp_optionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_options to delete
     */
    where?: wp_optionsWhereInput
    /**
     * Limit how many wp_options to delete.
     */
    limit?: number
  }

  /**
   * wp_options without action
   */
  export type wp_optionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
  }


  /**
   * Model wp_postmeta
   */

  export type AggregateWp_postmeta = {
    _count: Wp_postmetaCountAggregateOutputType | null
    _avg: Wp_postmetaAvgAggregateOutputType | null
    _sum: Wp_postmetaSumAggregateOutputType | null
    _min: Wp_postmetaMinAggregateOutputType | null
    _max: Wp_postmetaMaxAggregateOutputType | null
  }

  export type Wp_postmetaAvgAggregateOutputType = {
    meta_id: number | null
    post_id: number | null
  }

  export type Wp_postmetaSumAggregateOutputType = {
    meta_id: bigint | null
    post_id: bigint | null
  }

  export type Wp_postmetaMinAggregateOutputType = {
    meta_id: bigint | null
    post_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_postmetaMaxAggregateOutputType = {
    meta_id: bigint | null
    post_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_postmetaCountAggregateOutputType = {
    meta_id: number
    post_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_postmetaAvgAggregateInputType = {
    meta_id?: true
    post_id?: true
  }

  export type Wp_postmetaSumAggregateInputType = {
    meta_id?: true
    post_id?: true
  }

  export type Wp_postmetaMinAggregateInputType = {
    meta_id?: true
    post_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_postmetaMaxAggregateInputType = {
    meta_id?: true
    post_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_postmetaCountAggregateInputType = {
    meta_id?: true
    post_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_postmetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_postmeta to aggregate.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_postmetas
    **/
    _count?: true | Wp_postmetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_postmetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_postmetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_postmetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_postmetaMaxAggregateInputType
  }

  export type GetWp_postmetaAggregateType<T extends Wp_postmetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_postmeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_postmeta[P]>
      : GetScalarType<T[P], AggregateWp_postmeta[P]>
  }




  export type wp_postmetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_postmetaWhereInput
    orderBy?: wp_postmetaOrderByWithAggregationInput | wp_postmetaOrderByWithAggregationInput[]
    by: Wp_postmetaScalarFieldEnum[] | Wp_postmetaScalarFieldEnum
    having?: wp_postmetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_postmetaCountAggregateInputType | true
    _avg?: Wp_postmetaAvgAggregateInputType
    _sum?: Wp_postmetaSumAggregateInputType
    _min?: Wp_postmetaMinAggregateInputType
    _max?: Wp_postmetaMaxAggregateInputType
  }

  export type Wp_postmetaGroupByOutputType = {
    meta_id: bigint
    post_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_postmetaCountAggregateOutputType | null
    _avg: Wp_postmetaAvgAggregateOutputType | null
    _sum: Wp_postmetaSumAggregateOutputType | null
    _min: Wp_postmetaMinAggregateOutputType | null
    _max: Wp_postmetaMaxAggregateOutputType | null
  }

  type GetWp_postmetaGroupByPayload<T extends wp_postmetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_postmetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_postmetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_postmetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_postmetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_postmetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    meta_id?: boolean
    post_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_postmeta"]>



  export type wp_postmetaSelectScalar = {
    meta_id?: boolean
    post_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_postmetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"meta_id" | "post_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_postmeta"]>

  export type $wp_postmetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_postmeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      meta_id: bigint
      post_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_postmeta"]>
    composites: {}
  }

  type wp_postmetaGetPayload<S extends boolean | null | undefined | wp_postmetaDefaultArgs> = $Result.GetResult<Prisma.$wp_postmetaPayload, S>

  type wp_postmetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_postmetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_postmetaCountAggregateInputType | true
    }

  export interface wp_postmetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_postmeta'], meta: { name: 'wp_postmeta' } }
    /**
     * Find zero or one Wp_postmeta that matches the filter.
     * @param {wp_postmetaFindUniqueArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_postmetaFindUniqueArgs>(args: SelectSubset<T, wp_postmetaFindUniqueArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_postmeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_postmetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_postmetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_postmetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_postmeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaFindFirstArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_postmetaFindFirstArgs>(args?: SelectSubset<T, wp_postmetaFindFirstArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_postmeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaFindFirstOrThrowArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_postmetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_postmetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_postmetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_postmetas
     * const wp_postmetas = await prisma.wp_postmeta.findMany()
     * 
     * // Get first 10 Wp_postmetas
     * const wp_postmetas = await prisma.wp_postmeta.findMany({ take: 10 })
     * 
     * // Only select the `meta_id`
     * const wp_postmetaWithMeta_idOnly = await prisma.wp_postmeta.findMany({ select: { meta_id: true } })
     * 
     */
    findMany<T extends wp_postmetaFindManyArgs>(args?: SelectSubset<T, wp_postmetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_postmeta.
     * @param {wp_postmetaCreateArgs} args - Arguments to create a Wp_postmeta.
     * @example
     * // Create one Wp_postmeta
     * const Wp_postmeta = await prisma.wp_postmeta.create({
     *   data: {
     *     // ... data to create a Wp_postmeta
     *   }
     * })
     * 
     */
    create<T extends wp_postmetaCreateArgs>(args: SelectSubset<T, wp_postmetaCreateArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_postmetas.
     * @param {wp_postmetaCreateManyArgs} args - Arguments to create many Wp_postmetas.
     * @example
     * // Create many Wp_postmetas
     * const wp_postmeta = await prisma.wp_postmeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_postmetaCreateManyArgs>(args?: SelectSubset<T, wp_postmetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_postmeta.
     * @param {wp_postmetaDeleteArgs} args - Arguments to delete one Wp_postmeta.
     * @example
     * // Delete one Wp_postmeta
     * const Wp_postmeta = await prisma.wp_postmeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_postmeta
     *   }
     * })
     * 
     */
    delete<T extends wp_postmetaDeleteArgs>(args: SelectSubset<T, wp_postmetaDeleteArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_postmeta.
     * @param {wp_postmetaUpdateArgs} args - Arguments to update one Wp_postmeta.
     * @example
     * // Update one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_postmetaUpdateArgs>(args: SelectSubset<T, wp_postmetaUpdateArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_postmetas.
     * @param {wp_postmetaDeleteManyArgs} args - Arguments to filter Wp_postmetas to delete.
     * @example
     * // Delete a few Wp_postmetas
     * const { count } = await prisma.wp_postmeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_postmetaDeleteManyArgs>(args?: SelectSubset<T, wp_postmetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_postmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_postmetas
     * const wp_postmeta = await prisma.wp_postmeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_postmetaUpdateManyArgs>(args: SelectSubset<T, wp_postmetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_postmeta.
     * @param {wp_postmetaUpsertArgs} args - Arguments to update or create a Wp_postmeta.
     * @example
     * // Update or create a Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.upsert({
     *   create: {
     *     // ... data to create a Wp_postmeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_postmeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_postmetaUpsertArgs>(args: SelectSubset<T, wp_postmetaUpsertArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_postmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaCountArgs} args - Arguments to filter Wp_postmetas to count.
     * @example
     * // Count the number of Wp_postmetas
     * const count = await prisma.wp_postmeta.count({
     *   where: {
     *     // ... the filter for the Wp_postmetas we want to count
     *   }
     * })
    **/
    count<T extends wp_postmetaCountArgs>(
      args?: Subset<T, wp_postmetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_postmetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_postmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_postmetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_postmetaAggregateArgs>(args: Subset<T, Wp_postmetaAggregateArgs>): Prisma.PrismaPromise<GetWp_postmetaAggregateType<T>>

    /**
     * Group by Wp_postmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_postmetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_postmetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_postmetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_postmetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_postmetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_postmeta model
   */
  readonly fields: wp_postmetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_postmeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_postmetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_postmeta model
   */
  interface wp_postmetaFieldRefs {
    readonly meta_id: FieldRef<"wp_postmeta", 'BigInt'>
    readonly post_id: FieldRef<"wp_postmeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_postmeta", 'String'>
    readonly meta_value: FieldRef<"wp_postmeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_postmeta findUnique
   */
  export type wp_postmetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta findUniqueOrThrow
   */
  export type wp_postmetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta findFirst
   */
  export type wp_postmetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_postmetas.
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_postmetas.
     */
    distinct?: Wp_postmetaScalarFieldEnum | Wp_postmetaScalarFieldEnum[]
  }

  /**
   * wp_postmeta findFirstOrThrow
   */
  export type wp_postmetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_postmetas.
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_postmetas.
     */
    distinct?: Wp_postmetaScalarFieldEnum | Wp_postmetaScalarFieldEnum[]
  }

  /**
   * wp_postmeta findMany
   */
  export type wp_postmetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmetas to fetch.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_postmetas.
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    distinct?: Wp_postmetaScalarFieldEnum | Wp_postmetaScalarFieldEnum[]
  }

  /**
   * wp_postmeta create
   */
  export type wp_postmetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_postmeta.
     */
    data?: XOR<wp_postmetaCreateInput, wp_postmetaUncheckedCreateInput>
  }

  /**
   * wp_postmeta createMany
   */
  export type wp_postmetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_postmetas.
     */
    data: wp_postmetaCreateManyInput | wp_postmetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_postmeta update
   */
  export type wp_postmetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_postmeta.
     */
    data: XOR<wp_postmetaUpdateInput, wp_postmetaUncheckedUpdateInput>
    /**
     * Choose, which wp_postmeta to update.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta updateMany
   */
  export type wp_postmetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_postmetas.
     */
    data: XOR<wp_postmetaUpdateManyMutationInput, wp_postmetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_postmetas to update
     */
    where?: wp_postmetaWhereInput
    /**
     * Limit how many wp_postmetas to update.
     */
    limit?: number
  }

  /**
   * wp_postmeta upsert
   */
  export type wp_postmetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_postmeta to update in case it exists.
     */
    where: wp_postmetaWhereUniqueInput
    /**
     * In case the wp_postmeta found by the `where` argument doesn't exist, create a new wp_postmeta with this data.
     */
    create: XOR<wp_postmetaCreateInput, wp_postmetaUncheckedCreateInput>
    /**
     * In case the wp_postmeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_postmetaUpdateInput, wp_postmetaUncheckedUpdateInput>
  }

  /**
   * wp_postmeta delete
   */
  export type wp_postmetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter which wp_postmeta to delete.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta deleteMany
   */
  export type wp_postmetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_postmetas to delete
     */
    where?: wp_postmetaWhereInput
    /**
     * Limit how many wp_postmetas to delete.
     */
    limit?: number
  }

  /**
   * wp_postmeta without action
   */
  export type wp_postmetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_posts
   */

  export type AggregateWp_posts = {
    _count: Wp_postsCountAggregateOutputType | null
    _avg: Wp_postsAvgAggregateOutputType | null
    _sum: Wp_postsSumAggregateOutputType | null
    _min: Wp_postsMinAggregateOutputType | null
    _max: Wp_postsMaxAggregateOutputType | null
  }

  export type Wp_postsAvgAggregateOutputType = {
    ID: number | null
    post_author: number | null
    post_parent: number | null
    menu_order: number | null
    comment_count: number | null
  }

  export type Wp_postsSumAggregateOutputType = {
    ID: bigint | null
    post_author: bigint | null
    post_parent: bigint | null
    menu_order: number | null
    comment_count: bigint | null
  }

  export type Wp_postsMinAggregateOutputType = {
    ID: bigint | null
    post_author: bigint | null
    post_date: Date | null
    post_date_gmt: Date | null
    post_content: string | null
    post_title: string | null
    post_excerpt: string | null
    post_status: string | null
    comment_status: string | null
    ping_status: string | null
    post_password: string | null
    post_name: string | null
    to_ping: string | null
    pinged: string | null
    post_modified: Date | null
    post_modified_gmt: Date | null
    post_content_filtered: string | null
    post_parent: bigint | null
    guid: string | null
    menu_order: number | null
    post_type: string | null
    post_mime_type: string | null
    comment_count: bigint | null
  }

  export type Wp_postsMaxAggregateOutputType = {
    ID: bigint | null
    post_author: bigint | null
    post_date: Date | null
    post_date_gmt: Date | null
    post_content: string | null
    post_title: string | null
    post_excerpt: string | null
    post_status: string | null
    comment_status: string | null
    ping_status: string | null
    post_password: string | null
    post_name: string | null
    to_ping: string | null
    pinged: string | null
    post_modified: Date | null
    post_modified_gmt: Date | null
    post_content_filtered: string | null
    post_parent: bigint | null
    guid: string | null
    menu_order: number | null
    post_type: string | null
    post_mime_type: string | null
    comment_count: bigint | null
  }

  export type Wp_postsCountAggregateOutputType = {
    ID: number
    post_author: number
    post_date: number
    post_date_gmt: number
    post_content: number
    post_title: number
    post_excerpt: number
    post_status: number
    comment_status: number
    ping_status: number
    post_password: number
    post_name: number
    to_ping: number
    pinged: number
    post_modified: number
    post_modified_gmt: number
    post_content_filtered: number
    post_parent: number
    guid: number
    menu_order: number
    post_type: number
    post_mime_type: number
    comment_count: number
    _all: number
  }


  export type Wp_postsAvgAggregateInputType = {
    ID?: true
    post_author?: true
    post_parent?: true
    menu_order?: true
    comment_count?: true
  }

  export type Wp_postsSumAggregateInputType = {
    ID?: true
    post_author?: true
    post_parent?: true
    menu_order?: true
    comment_count?: true
  }

  export type Wp_postsMinAggregateInputType = {
    ID?: true
    post_author?: true
    post_date?: true
    post_date_gmt?: true
    post_content?: true
    post_title?: true
    post_excerpt?: true
    post_status?: true
    comment_status?: true
    ping_status?: true
    post_password?: true
    post_name?: true
    to_ping?: true
    pinged?: true
    post_modified?: true
    post_modified_gmt?: true
    post_content_filtered?: true
    post_parent?: true
    guid?: true
    menu_order?: true
    post_type?: true
    post_mime_type?: true
    comment_count?: true
  }

  export type Wp_postsMaxAggregateInputType = {
    ID?: true
    post_author?: true
    post_date?: true
    post_date_gmt?: true
    post_content?: true
    post_title?: true
    post_excerpt?: true
    post_status?: true
    comment_status?: true
    ping_status?: true
    post_password?: true
    post_name?: true
    to_ping?: true
    pinged?: true
    post_modified?: true
    post_modified_gmt?: true
    post_content_filtered?: true
    post_parent?: true
    guid?: true
    menu_order?: true
    post_type?: true
    post_mime_type?: true
    comment_count?: true
  }

  export type Wp_postsCountAggregateInputType = {
    ID?: true
    post_author?: true
    post_date?: true
    post_date_gmt?: true
    post_content?: true
    post_title?: true
    post_excerpt?: true
    post_status?: true
    comment_status?: true
    ping_status?: true
    post_password?: true
    post_name?: true
    to_ping?: true
    pinged?: true
    post_modified?: true
    post_modified_gmt?: true
    post_content_filtered?: true
    post_parent?: true
    guid?: true
    menu_order?: true
    post_type?: true
    post_mime_type?: true
    comment_count?: true
    _all?: true
  }

  export type Wp_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_posts to aggregate.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_posts
    **/
    _count?: true | Wp_postsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_postsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_postsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_postsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_postsMaxAggregateInputType
  }

  export type GetWp_postsAggregateType<T extends Wp_postsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_posts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_posts[P]>
      : GetScalarType<T[P], AggregateWp_posts[P]>
  }




  export type wp_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_postsWhereInput
    orderBy?: wp_postsOrderByWithAggregationInput | wp_postsOrderByWithAggregationInput[]
    by: Wp_postsScalarFieldEnum[] | Wp_postsScalarFieldEnum
    having?: wp_postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_postsCountAggregateInputType | true
    _avg?: Wp_postsAvgAggregateInputType
    _sum?: Wp_postsSumAggregateInputType
    _min?: Wp_postsMinAggregateInputType
    _max?: Wp_postsMaxAggregateInputType
  }

  export type Wp_postsGroupByOutputType = {
    ID: bigint
    post_author: bigint
    post_date: Date
    post_date_gmt: Date
    post_content: string
    post_title: string
    post_excerpt: string
    post_status: string
    comment_status: string
    ping_status: string
    post_password: string
    post_name: string
    to_ping: string
    pinged: string
    post_modified: Date
    post_modified_gmt: Date
    post_content_filtered: string
    post_parent: bigint
    guid: string
    menu_order: number
    post_type: string
    post_mime_type: string
    comment_count: bigint
    _count: Wp_postsCountAggregateOutputType | null
    _avg: Wp_postsAvgAggregateOutputType | null
    _sum: Wp_postsSumAggregateOutputType | null
    _min: Wp_postsMinAggregateOutputType | null
    _max: Wp_postsMaxAggregateOutputType | null
  }

  type GetWp_postsGroupByPayload<T extends wp_postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_postsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_postsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_postsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_postsGroupByOutputType[P]>
        }
      >
    >


  export type wp_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID?: boolean
    post_author?: boolean
    post_date?: boolean
    post_date_gmt?: boolean
    post_content?: boolean
    post_title?: boolean
    post_excerpt?: boolean
    post_status?: boolean
    comment_status?: boolean
    ping_status?: boolean
    post_password?: boolean
    post_name?: boolean
    to_ping?: boolean
    pinged?: boolean
    post_modified?: boolean
    post_modified_gmt?: boolean
    post_content_filtered?: boolean
    post_parent?: boolean
    guid?: boolean
    menu_order?: boolean
    post_type?: boolean
    post_mime_type?: boolean
    comment_count?: boolean
  }, ExtArgs["result"]["wp_posts"]>



  export type wp_postsSelectScalar = {
    ID?: boolean
    post_author?: boolean
    post_date?: boolean
    post_date_gmt?: boolean
    post_content?: boolean
    post_title?: boolean
    post_excerpt?: boolean
    post_status?: boolean
    comment_status?: boolean
    ping_status?: boolean
    post_password?: boolean
    post_name?: boolean
    to_ping?: boolean
    pinged?: boolean
    post_modified?: boolean
    post_modified_gmt?: boolean
    post_content_filtered?: boolean
    post_parent?: boolean
    guid?: boolean
    menu_order?: boolean
    post_type?: boolean
    post_mime_type?: boolean
    comment_count?: boolean
  }

  export type wp_postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ID" | "post_author" | "post_date" | "post_date_gmt" | "post_content" | "post_title" | "post_excerpt" | "post_status" | "comment_status" | "ping_status" | "post_password" | "post_name" | "to_ping" | "pinged" | "post_modified" | "post_modified_gmt" | "post_content_filtered" | "post_parent" | "guid" | "menu_order" | "post_type" | "post_mime_type" | "comment_count", ExtArgs["result"]["wp_posts"]>

  export type $wp_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_posts"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID: bigint
      post_author: bigint
      post_date: Date
      post_date_gmt: Date
      post_content: string
      post_title: string
      post_excerpt: string
      post_status: string
      comment_status: string
      ping_status: string
      post_password: string
      post_name: string
      to_ping: string
      pinged: string
      post_modified: Date
      post_modified_gmt: Date
      post_content_filtered: string
      post_parent: bigint
      guid: string
      menu_order: number
      post_type: string
      post_mime_type: string
      comment_count: bigint
    }, ExtArgs["result"]["wp_posts"]>
    composites: {}
  }

  type wp_postsGetPayload<S extends boolean | null | undefined | wp_postsDefaultArgs> = $Result.GetResult<Prisma.$wp_postsPayload, S>

  type wp_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_postsCountAggregateInputType | true
    }

  export interface wp_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_posts'], meta: { name: 'wp_posts' } }
    /**
     * Find zero or one Wp_posts that matches the filter.
     * @param {wp_postsFindUniqueArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_postsFindUniqueArgs>(args: SelectSubset<T, wp_postsFindUniqueArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_posts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_postsFindUniqueOrThrowArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_postsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsFindFirstArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_postsFindFirstArgs>(args?: SelectSubset<T, wp_postsFindFirstArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsFindFirstOrThrowArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_postsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_posts
     * const wp_posts = await prisma.wp_posts.findMany()
     * 
     * // Get first 10 Wp_posts
     * const wp_posts = await prisma.wp_posts.findMany({ take: 10 })
     * 
     * // Only select the `ID`
     * const wp_postsWithIDOnly = await prisma.wp_posts.findMany({ select: { ID: true } })
     * 
     */
    findMany<T extends wp_postsFindManyArgs>(args?: SelectSubset<T, wp_postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_posts.
     * @param {wp_postsCreateArgs} args - Arguments to create a Wp_posts.
     * @example
     * // Create one Wp_posts
     * const Wp_posts = await prisma.wp_posts.create({
     *   data: {
     *     // ... data to create a Wp_posts
     *   }
     * })
     * 
     */
    create<T extends wp_postsCreateArgs>(args: SelectSubset<T, wp_postsCreateArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_posts.
     * @param {wp_postsCreateManyArgs} args - Arguments to create many Wp_posts.
     * @example
     * // Create many Wp_posts
     * const wp_posts = await prisma.wp_posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_postsCreateManyArgs>(args?: SelectSubset<T, wp_postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_posts.
     * @param {wp_postsDeleteArgs} args - Arguments to delete one Wp_posts.
     * @example
     * // Delete one Wp_posts
     * const Wp_posts = await prisma.wp_posts.delete({
     *   where: {
     *     // ... filter to delete one Wp_posts
     *   }
     * })
     * 
     */
    delete<T extends wp_postsDeleteArgs>(args: SelectSubset<T, wp_postsDeleteArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_posts.
     * @param {wp_postsUpdateArgs} args - Arguments to update one Wp_posts.
     * @example
     * // Update one Wp_posts
     * const wp_posts = await prisma.wp_posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_postsUpdateArgs>(args: SelectSubset<T, wp_postsUpdateArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_posts.
     * @param {wp_postsDeleteManyArgs} args - Arguments to filter Wp_posts to delete.
     * @example
     * // Delete a few Wp_posts
     * const { count } = await prisma.wp_posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_postsDeleteManyArgs>(args?: SelectSubset<T, wp_postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_posts
     * const wp_posts = await prisma.wp_posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_postsUpdateManyArgs>(args: SelectSubset<T, wp_postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_posts.
     * @param {wp_postsUpsertArgs} args - Arguments to update or create a Wp_posts.
     * @example
     * // Update or create a Wp_posts
     * const wp_posts = await prisma.wp_posts.upsert({
     *   create: {
     *     // ... data to create a Wp_posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_posts we want to update
     *   }
     * })
     */
    upsert<T extends wp_postsUpsertArgs>(args: SelectSubset<T, wp_postsUpsertArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsCountArgs} args - Arguments to filter Wp_posts to count.
     * @example
     * // Count the number of Wp_posts
     * const count = await prisma.wp_posts.count({
     *   where: {
     *     // ... the filter for the Wp_posts we want to count
     *   }
     * })
    **/
    count<T extends wp_postsCountArgs>(
      args?: Subset<T, wp_postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_postsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_postsAggregateArgs>(args: Subset<T, Wp_postsAggregateArgs>): Prisma.PrismaPromise<GetWp_postsAggregateType<T>>

    /**
     * Group by Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_postsGroupByArgs['orderBy'] }
        : { orderBy?: wp_postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_posts model
   */
  readonly fields: wp_postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_posts model
   */
  interface wp_postsFieldRefs {
    readonly ID: FieldRef<"wp_posts", 'BigInt'>
    readonly post_author: FieldRef<"wp_posts", 'BigInt'>
    readonly post_date: FieldRef<"wp_posts", 'DateTime'>
    readonly post_date_gmt: FieldRef<"wp_posts", 'DateTime'>
    readonly post_content: FieldRef<"wp_posts", 'String'>
    readonly post_title: FieldRef<"wp_posts", 'String'>
    readonly post_excerpt: FieldRef<"wp_posts", 'String'>
    readonly post_status: FieldRef<"wp_posts", 'String'>
    readonly comment_status: FieldRef<"wp_posts", 'String'>
    readonly ping_status: FieldRef<"wp_posts", 'String'>
    readonly post_password: FieldRef<"wp_posts", 'String'>
    readonly post_name: FieldRef<"wp_posts", 'String'>
    readonly to_ping: FieldRef<"wp_posts", 'String'>
    readonly pinged: FieldRef<"wp_posts", 'String'>
    readonly post_modified: FieldRef<"wp_posts", 'DateTime'>
    readonly post_modified_gmt: FieldRef<"wp_posts", 'DateTime'>
    readonly post_content_filtered: FieldRef<"wp_posts", 'String'>
    readonly post_parent: FieldRef<"wp_posts", 'BigInt'>
    readonly guid: FieldRef<"wp_posts", 'String'>
    readonly menu_order: FieldRef<"wp_posts", 'Int'>
    readonly post_type: FieldRef<"wp_posts", 'String'>
    readonly post_mime_type: FieldRef<"wp_posts", 'String'>
    readonly comment_count: FieldRef<"wp_posts", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_posts findUnique
   */
  export type wp_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts findUniqueOrThrow
   */
  export type wp_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts findFirst
   */
  export type wp_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_posts.
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_posts.
     */
    distinct?: Wp_postsScalarFieldEnum | Wp_postsScalarFieldEnum[]
  }

  /**
   * wp_posts findFirstOrThrow
   */
  export type wp_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_posts.
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_posts.
     */
    distinct?: Wp_postsScalarFieldEnum | Wp_postsScalarFieldEnum[]
  }

  /**
   * wp_posts findMany
   */
  export type wp_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_posts.
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    distinct?: Wp_postsScalarFieldEnum | Wp_postsScalarFieldEnum[]
  }

  /**
   * wp_posts create
   */
  export type wp_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_posts.
     */
    data: XOR<wp_postsCreateInput, wp_postsUncheckedCreateInput>
  }

  /**
   * wp_posts createMany
   */
  export type wp_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_posts.
     */
    data: wp_postsCreateManyInput | wp_postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_posts update
   */
  export type wp_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_posts.
     */
    data: XOR<wp_postsUpdateInput, wp_postsUncheckedUpdateInput>
    /**
     * Choose, which wp_posts to update.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts updateMany
   */
  export type wp_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_posts.
     */
    data: XOR<wp_postsUpdateManyMutationInput, wp_postsUncheckedUpdateManyInput>
    /**
     * Filter which wp_posts to update
     */
    where?: wp_postsWhereInput
    /**
     * Limit how many wp_posts to update.
     */
    limit?: number
  }

  /**
   * wp_posts upsert
   */
  export type wp_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_posts to update in case it exists.
     */
    where: wp_postsWhereUniqueInput
    /**
     * In case the wp_posts found by the `where` argument doesn't exist, create a new wp_posts with this data.
     */
    create: XOR<wp_postsCreateInput, wp_postsUncheckedCreateInput>
    /**
     * In case the wp_posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_postsUpdateInput, wp_postsUncheckedUpdateInput>
  }

  /**
   * wp_posts delete
   */
  export type wp_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter which wp_posts to delete.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts deleteMany
   */
  export type wp_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_posts to delete
     */
    where?: wp_postsWhereInput
    /**
     * Limit how many wp_posts to delete.
     */
    limit?: number
  }

  /**
   * wp_posts without action
   */
  export type wp_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
  }


  /**
   * Model wp_term_relationships
   */

  export type AggregateWp_term_relationships = {
    _count: Wp_term_relationshipsCountAggregateOutputType | null
    _avg: Wp_term_relationshipsAvgAggregateOutputType | null
    _sum: Wp_term_relationshipsSumAggregateOutputType | null
    _min: Wp_term_relationshipsMinAggregateOutputType | null
    _max: Wp_term_relationshipsMaxAggregateOutputType | null
  }

  export type Wp_term_relationshipsAvgAggregateOutputType = {
    object_id: number | null
    term_taxonomy_id: number | null
    term_order: number | null
  }

  export type Wp_term_relationshipsSumAggregateOutputType = {
    object_id: bigint | null
    term_taxonomy_id: bigint | null
    term_order: number | null
  }

  export type Wp_term_relationshipsMinAggregateOutputType = {
    object_id: bigint | null
    term_taxonomy_id: bigint | null
    term_order: number | null
  }

  export type Wp_term_relationshipsMaxAggregateOutputType = {
    object_id: bigint | null
    term_taxonomy_id: bigint | null
    term_order: number | null
  }

  export type Wp_term_relationshipsCountAggregateOutputType = {
    object_id: number
    term_taxonomy_id: number
    term_order: number
    _all: number
  }


  export type Wp_term_relationshipsAvgAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsSumAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsMinAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsMaxAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsCountAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
    _all?: true
  }

  export type Wp_term_relationshipsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_relationships to aggregate.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_term_relationships
    **/
    _count?: true | Wp_term_relationshipsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_term_relationshipsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_term_relationshipsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_term_relationshipsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_term_relationshipsMaxAggregateInputType
  }

  export type GetWp_term_relationshipsAggregateType<T extends Wp_term_relationshipsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_term_relationships]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_term_relationships[P]>
      : GetScalarType<T[P], AggregateWp_term_relationships[P]>
  }




  export type wp_term_relationshipsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_term_relationshipsWhereInput
    orderBy?: wp_term_relationshipsOrderByWithAggregationInput | wp_term_relationshipsOrderByWithAggregationInput[]
    by: Wp_term_relationshipsScalarFieldEnum[] | Wp_term_relationshipsScalarFieldEnum
    having?: wp_term_relationshipsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_term_relationshipsCountAggregateInputType | true
    _avg?: Wp_term_relationshipsAvgAggregateInputType
    _sum?: Wp_term_relationshipsSumAggregateInputType
    _min?: Wp_term_relationshipsMinAggregateInputType
    _max?: Wp_term_relationshipsMaxAggregateInputType
  }

  export type Wp_term_relationshipsGroupByOutputType = {
    object_id: bigint
    term_taxonomy_id: bigint
    term_order: number
    _count: Wp_term_relationshipsCountAggregateOutputType | null
    _avg: Wp_term_relationshipsAvgAggregateOutputType | null
    _sum: Wp_term_relationshipsSumAggregateOutputType | null
    _min: Wp_term_relationshipsMinAggregateOutputType | null
    _max: Wp_term_relationshipsMaxAggregateOutputType | null
  }

  type GetWp_term_relationshipsGroupByPayload<T extends wp_term_relationshipsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_term_relationshipsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_term_relationshipsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_term_relationshipsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_term_relationshipsGroupByOutputType[P]>
        }
      >
    >


  export type wp_term_relationshipsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    object_id?: boolean
    term_taxonomy_id?: boolean
    term_order?: boolean
  }, ExtArgs["result"]["wp_term_relationships"]>



  export type wp_term_relationshipsSelectScalar = {
    object_id?: boolean
    term_taxonomy_id?: boolean
    term_order?: boolean
  }

  export type wp_term_relationshipsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"object_id" | "term_taxonomy_id" | "term_order", ExtArgs["result"]["wp_term_relationships"]>

  export type $wp_term_relationshipsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_term_relationships"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      object_id: bigint
      term_taxonomy_id: bigint
      term_order: number
    }, ExtArgs["result"]["wp_term_relationships"]>
    composites: {}
  }

  type wp_term_relationshipsGetPayload<S extends boolean | null | undefined | wp_term_relationshipsDefaultArgs> = $Result.GetResult<Prisma.$wp_term_relationshipsPayload, S>

  type wp_term_relationshipsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_term_relationshipsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_term_relationshipsCountAggregateInputType | true
    }

  export interface wp_term_relationshipsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_term_relationships'], meta: { name: 'wp_term_relationships' } }
    /**
     * Find zero or one Wp_term_relationships that matches the filter.
     * @param {wp_term_relationshipsFindUniqueArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_term_relationshipsFindUniqueArgs>(args: SelectSubset<T, wp_term_relationshipsFindUniqueArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_term_relationships that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_term_relationshipsFindUniqueOrThrowArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_term_relationshipsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_term_relationshipsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_relationships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsFindFirstArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_term_relationshipsFindFirstArgs>(args?: SelectSubset<T, wp_term_relationshipsFindFirstArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_relationships that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsFindFirstOrThrowArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_term_relationshipsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_term_relationshipsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_term_relationships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findMany()
     * 
     * // Get first 10 Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findMany({ take: 10 })
     * 
     * // Only select the `object_id`
     * const wp_term_relationshipsWithObject_idOnly = await prisma.wp_term_relationships.findMany({ select: { object_id: true } })
     * 
     */
    findMany<T extends wp_term_relationshipsFindManyArgs>(args?: SelectSubset<T, wp_term_relationshipsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_term_relationships.
     * @param {wp_term_relationshipsCreateArgs} args - Arguments to create a Wp_term_relationships.
     * @example
     * // Create one Wp_term_relationships
     * const Wp_term_relationships = await prisma.wp_term_relationships.create({
     *   data: {
     *     // ... data to create a Wp_term_relationships
     *   }
     * })
     * 
     */
    create<T extends wp_term_relationshipsCreateArgs>(args: SelectSubset<T, wp_term_relationshipsCreateArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_term_relationships.
     * @param {wp_term_relationshipsCreateManyArgs} args - Arguments to create many Wp_term_relationships.
     * @example
     * // Create many Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_term_relationshipsCreateManyArgs>(args?: SelectSubset<T, wp_term_relationshipsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_term_relationships.
     * @param {wp_term_relationshipsDeleteArgs} args - Arguments to delete one Wp_term_relationships.
     * @example
     * // Delete one Wp_term_relationships
     * const Wp_term_relationships = await prisma.wp_term_relationships.delete({
     *   where: {
     *     // ... filter to delete one Wp_term_relationships
     *   }
     * })
     * 
     */
    delete<T extends wp_term_relationshipsDeleteArgs>(args: SelectSubset<T, wp_term_relationshipsDeleteArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_term_relationships.
     * @param {wp_term_relationshipsUpdateArgs} args - Arguments to update one Wp_term_relationships.
     * @example
     * // Update one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_term_relationshipsUpdateArgs>(args: SelectSubset<T, wp_term_relationshipsUpdateArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_term_relationships.
     * @param {wp_term_relationshipsDeleteManyArgs} args - Arguments to filter Wp_term_relationships to delete.
     * @example
     * // Delete a few Wp_term_relationships
     * const { count } = await prisma.wp_term_relationships.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_term_relationshipsDeleteManyArgs>(args?: SelectSubset<T, wp_term_relationshipsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_term_relationshipsUpdateManyArgs>(args: SelectSubset<T, wp_term_relationshipsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_term_relationships.
     * @param {wp_term_relationshipsUpsertArgs} args - Arguments to update or create a Wp_term_relationships.
     * @example
     * // Update or create a Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.upsert({
     *   create: {
     *     // ... data to create a Wp_term_relationships
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_term_relationships we want to update
     *   }
     * })
     */
    upsert<T extends wp_term_relationshipsUpsertArgs>(args: SelectSubset<T, wp_term_relationshipsUpsertArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsCountArgs} args - Arguments to filter Wp_term_relationships to count.
     * @example
     * // Count the number of Wp_term_relationships
     * const count = await prisma.wp_term_relationships.count({
     *   where: {
     *     // ... the filter for the Wp_term_relationships we want to count
     *   }
     * })
    **/
    count<T extends wp_term_relationshipsCountArgs>(
      args?: Subset<T, wp_term_relationshipsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_term_relationshipsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_term_relationshipsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_term_relationshipsAggregateArgs>(args: Subset<T, Wp_term_relationshipsAggregateArgs>): Prisma.PrismaPromise<GetWp_term_relationshipsAggregateType<T>>

    /**
     * Group by Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_term_relationshipsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_term_relationshipsGroupByArgs['orderBy'] }
        : { orderBy?: wp_term_relationshipsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_term_relationshipsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_term_relationshipsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_term_relationships model
   */
  readonly fields: wp_term_relationshipsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_term_relationships.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_term_relationshipsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_term_relationships model
   */
  interface wp_term_relationshipsFieldRefs {
    readonly object_id: FieldRef<"wp_term_relationships", 'BigInt'>
    readonly term_taxonomy_id: FieldRef<"wp_term_relationships", 'BigInt'>
    readonly term_order: FieldRef<"wp_term_relationships", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_term_relationships findUnique
   */
  export type wp_term_relationshipsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships findUniqueOrThrow
   */
  export type wp_term_relationshipsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships findFirst
   */
  export type wp_term_relationshipsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_relationships.
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_relationships.
     */
    distinct?: Wp_term_relationshipsScalarFieldEnum | Wp_term_relationshipsScalarFieldEnum[]
  }

  /**
   * wp_term_relationships findFirstOrThrow
   */
  export type wp_term_relationshipsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_relationships.
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_relationships.
     */
    distinct?: Wp_term_relationshipsScalarFieldEnum | Wp_term_relationshipsScalarFieldEnum[]
  }

  /**
   * wp_term_relationships findMany
   */
  export type wp_term_relationshipsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_term_relationships.
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    distinct?: Wp_term_relationshipsScalarFieldEnum | Wp_term_relationshipsScalarFieldEnum[]
  }

  /**
   * wp_term_relationships create
   */
  export type wp_term_relationshipsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_term_relationships.
     */
    data?: XOR<wp_term_relationshipsCreateInput, wp_term_relationshipsUncheckedCreateInput>
  }

  /**
   * wp_term_relationships createMany
   */
  export type wp_term_relationshipsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_term_relationships.
     */
    data: wp_term_relationshipsCreateManyInput | wp_term_relationshipsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_term_relationships update
   */
  export type wp_term_relationshipsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_term_relationships.
     */
    data: XOR<wp_term_relationshipsUpdateInput, wp_term_relationshipsUncheckedUpdateInput>
    /**
     * Choose, which wp_term_relationships to update.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships updateMany
   */
  export type wp_term_relationshipsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_term_relationships.
     */
    data: XOR<wp_term_relationshipsUpdateManyMutationInput, wp_term_relationshipsUncheckedUpdateManyInput>
    /**
     * Filter which wp_term_relationships to update
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * Limit how many wp_term_relationships to update.
     */
    limit?: number
  }

  /**
   * wp_term_relationships upsert
   */
  export type wp_term_relationshipsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_term_relationships to update in case it exists.
     */
    where: wp_term_relationshipsWhereUniqueInput
    /**
     * In case the wp_term_relationships found by the `where` argument doesn't exist, create a new wp_term_relationships with this data.
     */
    create: XOR<wp_term_relationshipsCreateInput, wp_term_relationshipsUncheckedCreateInput>
    /**
     * In case the wp_term_relationships was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_term_relationshipsUpdateInput, wp_term_relationshipsUncheckedUpdateInput>
  }

  /**
   * wp_term_relationships delete
   */
  export type wp_term_relationshipsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter which wp_term_relationships to delete.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships deleteMany
   */
  export type wp_term_relationshipsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_relationships to delete
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * Limit how many wp_term_relationships to delete.
     */
    limit?: number
  }

  /**
   * wp_term_relationships without action
   */
  export type wp_term_relationshipsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
  }


  /**
   * Model wp_term_taxonomy
   */

  export type AggregateWp_term_taxonomy = {
    _count: Wp_term_taxonomyCountAggregateOutputType | null
    _avg: Wp_term_taxonomyAvgAggregateOutputType | null
    _sum: Wp_term_taxonomySumAggregateOutputType | null
    _min: Wp_term_taxonomyMinAggregateOutputType | null
    _max: Wp_term_taxonomyMaxAggregateOutputType | null
  }

  export type Wp_term_taxonomyAvgAggregateOutputType = {
    term_taxonomy_id: number | null
    term_id: number | null
    parent: number | null
    count: number | null
  }

  export type Wp_term_taxonomySumAggregateOutputType = {
    term_taxonomy_id: bigint | null
    term_id: bigint | null
    parent: bigint | null
    count: bigint | null
  }

  export type Wp_term_taxonomyMinAggregateOutputType = {
    term_taxonomy_id: bigint | null
    term_id: bigint | null
    taxonomy: string | null
    description: string | null
    parent: bigint | null
    count: bigint | null
  }

  export type Wp_term_taxonomyMaxAggregateOutputType = {
    term_taxonomy_id: bigint | null
    term_id: bigint | null
    taxonomy: string | null
    description: string | null
    parent: bigint | null
    count: bigint | null
  }

  export type Wp_term_taxonomyCountAggregateOutputType = {
    term_taxonomy_id: number
    term_id: number
    taxonomy: number
    description: number
    parent: number
    count: number
    _all: number
  }


  export type Wp_term_taxonomyAvgAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomySumAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomyMinAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    taxonomy?: true
    description?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomyMaxAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    taxonomy?: true
    description?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomyCountAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    taxonomy?: true
    description?: true
    parent?: true
    count?: true
    _all?: true
  }

  export type Wp_term_taxonomyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_taxonomy to aggregate.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_term_taxonomies
    **/
    _count?: true | Wp_term_taxonomyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_term_taxonomyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_term_taxonomySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_term_taxonomyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_term_taxonomyMaxAggregateInputType
  }

  export type GetWp_term_taxonomyAggregateType<T extends Wp_term_taxonomyAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_term_taxonomy]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_term_taxonomy[P]>
      : GetScalarType<T[P], AggregateWp_term_taxonomy[P]>
  }




  export type wp_term_taxonomyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_term_taxonomyWhereInput
    orderBy?: wp_term_taxonomyOrderByWithAggregationInput | wp_term_taxonomyOrderByWithAggregationInput[]
    by: Wp_term_taxonomyScalarFieldEnum[] | Wp_term_taxonomyScalarFieldEnum
    having?: wp_term_taxonomyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_term_taxonomyCountAggregateInputType | true
    _avg?: Wp_term_taxonomyAvgAggregateInputType
    _sum?: Wp_term_taxonomySumAggregateInputType
    _min?: Wp_term_taxonomyMinAggregateInputType
    _max?: Wp_term_taxonomyMaxAggregateInputType
  }

  export type Wp_term_taxonomyGroupByOutputType = {
    term_taxonomy_id: bigint
    term_id: bigint
    taxonomy: string
    description: string
    parent: bigint
    count: bigint
    _count: Wp_term_taxonomyCountAggregateOutputType | null
    _avg: Wp_term_taxonomyAvgAggregateOutputType | null
    _sum: Wp_term_taxonomySumAggregateOutputType | null
    _min: Wp_term_taxonomyMinAggregateOutputType | null
    _max: Wp_term_taxonomyMaxAggregateOutputType | null
  }

  type GetWp_term_taxonomyGroupByPayload<T extends wp_term_taxonomyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_term_taxonomyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_term_taxonomyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_term_taxonomyGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_term_taxonomyGroupByOutputType[P]>
        }
      >
    >


  export type wp_term_taxonomySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    term_taxonomy_id?: boolean
    term_id?: boolean
    taxonomy?: boolean
    description?: boolean
    parent?: boolean
    count?: boolean
  }, ExtArgs["result"]["wp_term_taxonomy"]>



  export type wp_term_taxonomySelectScalar = {
    term_taxonomy_id?: boolean
    term_id?: boolean
    taxonomy?: boolean
    description?: boolean
    parent?: boolean
    count?: boolean
  }

  export type wp_term_taxonomyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"term_taxonomy_id" | "term_id" | "taxonomy" | "description" | "parent" | "count", ExtArgs["result"]["wp_term_taxonomy"]>

  export type $wp_term_taxonomyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_term_taxonomy"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      term_taxonomy_id: bigint
      term_id: bigint
      taxonomy: string
      description: string
      parent: bigint
      count: bigint
    }, ExtArgs["result"]["wp_term_taxonomy"]>
    composites: {}
  }

  type wp_term_taxonomyGetPayload<S extends boolean | null | undefined | wp_term_taxonomyDefaultArgs> = $Result.GetResult<Prisma.$wp_term_taxonomyPayload, S>

  type wp_term_taxonomyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_term_taxonomyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_term_taxonomyCountAggregateInputType | true
    }

  export interface wp_term_taxonomyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_term_taxonomy'], meta: { name: 'wp_term_taxonomy' } }
    /**
     * Find zero or one Wp_term_taxonomy that matches the filter.
     * @param {wp_term_taxonomyFindUniqueArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_term_taxonomyFindUniqueArgs>(args: SelectSubset<T, wp_term_taxonomyFindUniqueArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_term_taxonomy that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_term_taxonomyFindUniqueOrThrowArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_term_taxonomyFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_term_taxonomyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_taxonomy that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyFindFirstArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_term_taxonomyFindFirstArgs>(args?: SelectSubset<T, wp_term_taxonomyFindFirstArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_taxonomy that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyFindFirstOrThrowArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_term_taxonomyFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_term_taxonomyFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_term_taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_term_taxonomies
     * const wp_term_taxonomies = await prisma.wp_term_taxonomy.findMany()
     * 
     * // Get first 10 Wp_term_taxonomies
     * const wp_term_taxonomies = await prisma.wp_term_taxonomy.findMany({ take: 10 })
     * 
     * // Only select the `term_taxonomy_id`
     * const wp_term_taxonomyWithTerm_taxonomy_idOnly = await prisma.wp_term_taxonomy.findMany({ select: { term_taxonomy_id: true } })
     * 
     */
    findMany<T extends wp_term_taxonomyFindManyArgs>(args?: SelectSubset<T, wp_term_taxonomyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_term_taxonomy.
     * @param {wp_term_taxonomyCreateArgs} args - Arguments to create a Wp_term_taxonomy.
     * @example
     * // Create one Wp_term_taxonomy
     * const Wp_term_taxonomy = await prisma.wp_term_taxonomy.create({
     *   data: {
     *     // ... data to create a Wp_term_taxonomy
     *   }
     * })
     * 
     */
    create<T extends wp_term_taxonomyCreateArgs>(args: SelectSubset<T, wp_term_taxonomyCreateArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_term_taxonomies.
     * @param {wp_term_taxonomyCreateManyArgs} args - Arguments to create many Wp_term_taxonomies.
     * @example
     * // Create many Wp_term_taxonomies
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_term_taxonomyCreateManyArgs>(args?: SelectSubset<T, wp_term_taxonomyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_term_taxonomy.
     * @param {wp_term_taxonomyDeleteArgs} args - Arguments to delete one Wp_term_taxonomy.
     * @example
     * // Delete one Wp_term_taxonomy
     * const Wp_term_taxonomy = await prisma.wp_term_taxonomy.delete({
     *   where: {
     *     // ... filter to delete one Wp_term_taxonomy
     *   }
     * })
     * 
     */
    delete<T extends wp_term_taxonomyDeleteArgs>(args: SelectSubset<T, wp_term_taxonomyDeleteArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_term_taxonomy.
     * @param {wp_term_taxonomyUpdateArgs} args - Arguments to update one Wp_term_taxonomy.
     * @example
     * // Update one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_term_taxonomyUpdateArgs>(args: SelectSubset<T, wp_term_taxonomyUpdateArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_term_taxonomies.
     * @param {wp_term_taxonomyDeleteManyArgs} args - Arguments to filter Wp_term_taxonomies to delete.
     * @example
     * // Delete a few Wp_term_taxonomies
     * const { count } = await prisma.wp_term_taxonomy.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_term_taxonomyDeleteManyArgs>(args?: SelectSubset<T, wp_term_taxonomyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_term_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_term_taxonomies
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_term_taxonomyUpdateManyArgs>(args: SelectSubset<T, wp_term_taxonomyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_term_taxonomy.
     * @param {wp_term_taxonomyUpsertArgs} args - Arguments to update or create a Wp_term_taxonomy.
     * @example
     * // Update or create a Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.upsert({
     *   create: {
     *     // ... data to create a Wp_term_taxonomy
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_term_taxonomy we want to update
     *   }
     * })
     */
    upsert<T extends wp_term_taxonomyUpsertArgs>(args: SelectSubset<T, wp_term_taxonomyUpsertArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_term_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyCountArgs} args - Arguments to filter Wp_term_taxonomies to count.
     * @example
     * // Count the number of Wp_term_taxonomies
     * const count = await prisma.wp_term_taxonomy.count({
     *   where: {
     *     // ... the filter for the Wp_term_taxonomies we want to count
     *   }
     * })
    **/
    count<T extends wp_term_taxonomyCountArgs>(
      args?: Subset<T, wp_term_taxonomyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_term_taxonomyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_term_taxonomy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_term_taxonomyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_term_taxonomyAggregateArgs>(args: Subset<T, Wp_term_taxonomyAggregateArgs>): Prisma.PrismaPromise<GetWp_term_taxonomyAggregateType<T>>

    /**
     * Group by Wp_term_taxonomy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_term_taxonomyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_term_taxonomyGroupByArgs['orderBy'] }
        : { orderBy?: wp_term_taxonomyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_term_taxonomyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_term_taxonomyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_term_taxonomy model
   */
  readonly fields: wp_term_taxonomyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_term_taxonomy.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_term_taxonomyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_term_taxonomy model
   */
  interface wp_term_taxonomyFieldRefs {
    readonly term_taxonomy_id: FieldRef<"wp_term_taxonomy", 'BigInt'>
    readonly term_id: FieldRef<"wp_term_taxonomy", 'BigInt'>
    readonly taxonomy: FieldRef<"wp_term_taxonomy", 'String'>
    readonly description: FieldRef<"wp_term_taxonomy", 'String'>
    readonly parent: FieldRef<"wp_term_taxonomy", 'BigInt'>
    readonly count: FieldRef<"wp_term_taxonomy", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_term_taxonomy findUnique
   */
  export type wp_term_taxonomyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy findUniqueOrThrow
   */
  export type wp_term_taxonomyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy findFirst
   */
  export type wp_term_taxonomyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_taxonomies.
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_taxonomies.
     */
    distinct?: Wp_term_taxonomyScalarFieldEnum | Wp_term_taxonomyScalarFieldEnum[]
  }

  /**
   * wp_term_taxonomy findFirstOrThrow
   */
  export type wp_term_taxonomyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_taxonomies.
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_taxonomies.
     */
    distinct?: Wp_term_taxonomyScalarFieldEnum | Wp_term_taxonomyScalarFieldEnum[]
  }

  /**
   * wp_term_taxonomy findMany
   */
  export type wp_term_taxonomyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomies to fetch.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_term_taxonomies.
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    distinct?: Wp_term_taxonomyScalarFieldEnum | Wp_term_taxonomyScalarFieldEnum[]
  }

  /**
   * wp_term_taxonomy create
   */
  export type wp_term_taxonomyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_term_taxonomy.
     */
    data: XOR<wp_term_taxonomyCreateInput, wp_term_taxonomyUncheckedCreateInput>
  }

  /**
   * wp_term_taxonomy createMany
   */
  export type wp_term_taxonomyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_term_taxonomies.
     */
    data: wp_term_taxonomyCreateManyInput | wp_term_taxonomyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_term_taxonomy update
   */
  export type wp_term_taxonomyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_term_taxonomy.
     */
    data: XOR<wp_term_taxonomyUpdateInput, wp_term_taxonomyUncheckedUpdateInput>
    /**
     * Choose, which wp_term_taxonomy to update.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy updateMany
   */
  export type wp_term_taxonomyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_term_taxonomies.
     */
    data: XOR<wp_term_taxonomyUpdateManyMutationInput, wp_term_taxonomyUncheckedUpdateManyInput>
    /**
     * Filter which wp_term_taxonomies to update
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * Limit how many wp_term_taxonomies to update.
     */
    limit?: number
  }

  /**
   * wp_term_taxonomy upsert
   */
  export type wp_term_taxonomyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_term_taxonomy to update in case it exists.
     */
    where: wp_term_taxonomyWhereUniqueInput
    /**
     * In case the wp_term_taxonomy found by the `where` argument doesn't exist, create a new wp_term_taxonomy with this data.
     */
    create: XOR<wp_term_taxonomyCreateInput, wp_term_taxonomyUncheckedCreateInput>
    /**
     * In case the wp_term_taxonomy was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_term_taxonomyUpdateInput, wp_term_taxonomyUncheckedUpdateInput>
  }

  /**
   * wp_term_taxonomy delete
   */
  export type wp_term_taxonomyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter which wp_term_taxonomy to delete.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy deleteMany
   */
  export type wp_term_taxonomyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_taxonomies to delete
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * Limit how many wp_term_taxonomies to delete.
     */
    limit?: number
  }

  /**
   * wp_term_taxonomy without action
   */
  export type wp_term_taxonomyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
  }


  /**
   * Model wp_termmeta
   */

  export type AggregateWp_termmeta = {
    _count: Wp_termmetaCountAggregateOutputType | null
    _avg: Wp_termmetaAvgAggregateOutputType | null
    _sum: Wp_termmetaSumAggregateOutputType | null
    _min: Wp_termmetaMinAggregateOutputType | null
    _max: Wp_termmetaMaxAggregateOutputType | null
  }

  export type Wp_termmetaAvgAggregateOutputType = {
    meta_id: number | null
    term_id: number | null
  }

  export type Wp_termmetaSumAggregateOutputType = {
    meta_id: bigint | null
    term_id: bigint | null
  }

  export type Wp_termmetaMinAggregateOutputType = {
    meta_id: bigint | null
    term_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_termmetaMaxAggregateOutputType = {
    meta_id: bigint | null
    term_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_termmetaCountAggregateOutputType = {
    meta_id: number
    term_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_termmetaAvgAggregateInputType = {
    meta_id?: true
    term_id?: true
  }

  export type Wp_termmetaSumAggregateInputType = {
    meta_id?: true
    term_id?: true
  }

  export type Wp_termmetaMinAggregateInputType = {
    meta_id?: true
    term_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_termmetaMaxAggregateInputType = {
    meta_id?: true
    term_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_termmetaCountAggregateInputType = {
    meta_id?: true
    term_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_termmetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_termmeta to aggregate.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_termmetas
    **/
    _count?: true | Wp_termmetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_termmetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_termmetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_termmetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_termmetaMaxAggregateInputType
  }

  export type GetWp_termmetaAggregateType<T extends Wp_termmetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_termmeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_termmeta[P]>
      : GetScalarType<T[P], AggregateWp_termmeta[P]>
  }




  export type wp_termmetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_termmetaWhereInput
    orderBy?: wp_termmetaOrderByWithAggregationInput | wp_termmetaOrderByWithAggregationInput[]
    by: Wp_termmetaScalarFieldEnum[] | Wp_termmetaScalarFieldEnum
    having?: wp_termmetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_termmetaCountAggregateInputType | true
    _avg?: Wp_termmetaAvgAggregateInputType
    _sum?: Wp_termmetaSumAggregateInputType
    _min?: Wp_termmetaMinAggregateInputType
    _max?: Wp_termmetaMaxAggregateInputType
  }

  export type Wp_termmetaGroupByOutputType = {
    meta_id: bigint
    term_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_termmetaCountAggregateOutputType | null
    _avg: Wp_termmetaAvgAggregateOutputType | null
    _sum: Wp_termmetaSumAggregateOutputType | null
    _min: Wp_termmetaMinAggregateOutputType | null
    _max: Wp_termmetaMaxAggregateOutputType | null
  }

  type GetWp_termmetaGroupByPayload<T extends wp_termmetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_termmetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_termmetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_termmetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_termmetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_termmetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    meta_id?: boolean
    term_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_termmeta"]>



  export type wp_termmetaSelectScalar = {
    meta_id?: boolean
    term_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_termmetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"meta_id" | "term_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_termmeta"]>

  export type $wp_termmetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_termmeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      meta_id: bigint
      term_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_termmeta"]>
    composites: {}
  }

  type wp_termmetaGetPayload<S extends boolean | null | undefined | wp_termmetaDefaultArgs> = $Result.GetResult<Prisma.$wp_termmetaPayload, S>

  type wp_termmetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_termmetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_termmetaCountAggregateInputType | true
    }

  export interface wp_termmetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_termmeta'], meta: { name: 'wp_termmeta' } }
    /**
     * Find zero or one Wp_termmeta that matches the filter.
     * @param {wp_termmetaFindUniqueArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_termmetaFindUniqueArgs>(args: SelectSubset<T, wp_termmetaFindUniqueArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_termmeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_termmetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_termmetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_termmetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_termmeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaFindFirstArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_termmetaFindFirstArgs>(args?: SelectSubset<T, wp_termmetaFindFirstArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_termmeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaFindFirstOrThrowArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_termmetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_termmetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_termmetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_termmetas
     * const wp_termmetas = await prisma.wp_termmeta.findMany()
     * 
     * // Get first 10 Wp_termmetas
     * const wp_termmetas = await prisma.wp_termmeta.findMany({ take: 10 })
     * 
     * // Only select the `meta_id`
     * const wp_termmetaWithMeta_idOnly = await prisma.wp_termmeta.findMany({ select: { meta_id: true } })
     * 
     */
    findMany<T extends wp_termmetaFindManyArgs>(args?: SelectSubset<T, wp_termmetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_termmeta.
     * @param {wp_termmetaCreateArgs} args - Arguments to create a Wp_termmeta.
     * @example
     * // Create one Wp_termmeta
     * const Wp_termmeta = await prisma.wp_termmeta.create({
     *   data: {
     *     // ... data to create a Wp_termmeta
     *   }
     * })
     * 
     */
    create<T extends wp_termmetaCreateArgs>(args: SelectSubset<T, wp_termmetaCreateArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_termmetas.
     * @param {wp_termmetaCreateManyArgs} args - Arguments to create many Wp_termmetas.
     * @example
     * // Create many Wp_termmetas
     * const wp_termmeta = await prisma.wp_termmeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_termmetaCreateManyArgs>(args?: SelectSubset<T, wp_termmetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_termmeta.
     * @param {wp_termmetaDeleteArgs} args - Arguments to delete one Wp_termmeta.
     * @example
     * // Delete one Wp_termmeta
     * const Wp_termmeta = await prisma.wp_termmeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_termmeta
     *   }
     * })
     * 
     */
    delete<T extends wp_termmetaDeleteArgs>(args: SelectSubset<T, wp_termmetaDeleteArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_termmeta.
     * @param {wp_termmetaUpdateArgs} args - Arguments to update one Wp_termmeta.
     * @example
     * // Update one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_termmetaUpdateArgs>(args: SelectSubset<T, wp_termmetaUpdateArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_termmetas.
     * @param {wp_termmetaDeleteManyArgs} args - Arguments to filter Wp_termmetas to delete.
     * @example
     * // Delete a few Wp_termmetas
     * const { count } = await prisma.wp_termmeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_termmetaDeleteManyArgs>(args?: SelectSubset<T, wp_termmetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_termmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_termmetas
     * const wp_termmeta = await prisma.wp_termmeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_termmetaUpdateManyArgs>(args: SelectSubset<T, wp_termmetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_termmeta.
     * @param {wp_termmetaUpsertArgs} args - Arguments to update or create a Wp_termmeta.
     * @example
     * // Update or create a Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.upsert({
     *   create: {
     *     // ... data to create a Wp_termmeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_termmeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_termmetaUpsertArgs>(args: SelectSubset<T, wp_termmetaUpsertArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_termmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaCountArgs} args - Arguments to filter Wp_termmetas to count.
     * @example
     * // Count the number of Wp_termmetas
     * const count = await prisma.wp_termmeta.count({
     *   where: {
     *     // ... the filter for the Wp_termmetas we want to count
     *   }
     * })
    **/
    count<T extends wp_termmetaCountArgs>(
      args?: Subset<T, wp_termmetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_termmetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_termmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_termmetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_termmetaAggregateArgs>(args: Subset<T, Wp_termmetaAggregateArgs>): Prisma.PrismaPromise<GetWp_termmetaAggregateType<T>>

    /**
     * Group by Wp_termmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_termmetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_termmetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_termmetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_termmetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_termmetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_termmeta model
   */
  readonly fields: wp_termmetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_termmeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_termmetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_termmeta model
   */
  interface wp_termmetaFieldRefs {
    readonly meta_id: FieldRef<"wp_termmeta", 'BigInt'>
    readonly term_id: FieldRef<"wp_termmeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_termmeta", 'String'>
    readonly meta_value: FieldRef<"wp_termmeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_termmeta findUnique
   */
  export type wp_termmetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta findUniqueOrThrow
   */
  export type wp_termmetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta findFirst
   */
  export type wp_termmetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_termmetas.
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_termmetas.
     */
    distinct?: Wp_termmetaScalarFieldEnum | Wp_termmetaScalarFieldEnum[]
  }

  /**
   * wp_termmeta findFirstOrThrow
   */
  export type wp_termmetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_termmetas.
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_termmetas.
     */
    distinct?: Wp_termmetaScalarFieldEnum | Wp_termmetaScalarFieldEnum[]
  }

  /**
   * wp_termmeta findMany
   */
  export type wp_termmetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmetas to fetch.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_termmetas.
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    distinct?: Wp_termmetaScalarFieldEnum | Wp_termmetaScalarFieldEnum[]
  }

  /**
   * wp_termmeta create
   */
  export type wp_termmetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_termmeta.
     */
    data?: XOR<wp_termmetaCreateInput, wp_termmetaUncheckedCreateInput>
  }

  /**
   * wp_termmeta createMany
   */
  export type wp_termmetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_termmetas.
     */
    data: wp_termmetaCreateManyInput | wp_termmetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_termmeta update
   */
  export type wp_termmetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_termmeta.
     */
    data: XOR<wp_termmetaUpdateInput, wp_termmetaUncheckedUpdateInput>
    /**
     * Choose, which wp_termmeta to update.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta updateMany
   */
  export type wp_termmetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_termmetas.
     */
    data: XOR<wp_termmetaUpdateManyMutationInput, wp_termmetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_termmetas to update
     */
    where?: wp_termmetaWhereInput
    /**
     * Limit how many wp_termmetas to update.
     */
    limit?: number
  }

  /**
   * wp_termmeta upsert
   */
  export type wp_termmetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_termmeta to update in case it exists.
     */
    where: wp_termmetaWhereUniqueInput
    /**
     * In case the wp_termmeta found by the `where` argument doesn't exist, create a new wp_termmeta with this data.
     */
    create: XOR<wp_termmetaCreateInput, wp_termmetaUncheckedCreateInput>
    /**
     * In case the wp_termmeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_termmetaUpdateInput, wp_termmetaUncheckedUpdateInput>
  }

  /**
   * wp_termmeta delete
   */
  export type wp_termmetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter which wp_termmeta to delete.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta deleteMany
   */
  export type wp_termmetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_termmetas to delete
     */
    where?: wp_termmetaWhereInput
    /**
     * Limit how many wp_termmetas to delete.
     */
    limit?: number
  }

  /**
   * wp_termmeta without action
   */
  export type wp_termmetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_terms
   */

  export type AggregateWp_terms = {
    _count: Wp_termsCountAggregateOutputType | null
    _avg: Wp_termsAvgAggregateOutputType | null
    _sum: Wp_termsSumAggregateOutputType | null
    _min: Wp_termsMinAggregateOutputType | null
    _max: Wp_termsMaxAggregateOutputType | null
  }

  export type Wp_termsAvgAggregateOutputType = {
    term_id: number | null
    term_group: number | null
  }

  export type Wp_termsSumAggregateOutputType = {
    term_id: bigint | null
    term_group: bigint | null
  }

  export type Wp_termsMinAggregateOutputType = {
    term_id: bigint | null
    name: string | null
    slug: string | null
    term_group: bigint | null
  }

  export type Wp_termsMaxAggregateOutputType = {
    term_id: bigint | null
    name: string | null
    slug: string | null
    term_group: bigint | null
  }

  export type Wp_termsCountAggregateOutputType = {
    term_id: number
    name: number
    slug: number
    term_group: number
    _all: number
  }


  export type Wp_termsAvgAggregateInputType = {
    term_id?: true
    term_group?: true
  }

  export type Wp_termsSumAggregateInputType = {
    term_id?: true
    term_group?: true
  }

  export type Wp_termsMinAggregateInputType = {
    term_id?: true
    name?: true
    slug?: true
    term_group?: true
  }

  export type Wp_termsMaxAggregateInputType = {
    term_id?: true
    name?: true
    slug?: true
    term_group?: true
  }

  export type Wp_termsCountAggregateInputType = {
    term_id?: true
    name?: true
    slug?: true
    term_group?: true
    _all?: true
  }

  export type Wp_termsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_terms to aggregate.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_terms
    **/
    _count?: true | Wp_termsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_termsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_termsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_termsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_termsMaxAggregateInputType
  }

  export type GetWp_termsAggregateType<T extends Wp_termsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_terms]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_terms[P]>
      : GetScalarType<T[P], AggregateWp_terms[P]>
  }




  export type wp_termsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_termsWhereInput
    orderBy?: wp_termsOrderByWithAggregationInput | wp_termsOrderByWithAggregationInput[]
    by: Wp_termsScalarFieldEnum[] | Wp_termsScalarFieldEnum
    having?: wp_termsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_termsCountAggregateInputType | true
    _avg?: Wp_termsAvgAggregateInputType
    _sum?: Wp_termsSumAggregateInputType
    _min?: Wp_termsMinAggregateInputType
    _max?: Wp_termsMaxAggregateInputType
  }

  export type Wp_termsGroupByOutputType = {
    term_id: bigint
    name: string
    slug: string
    term_group: bigint
    _count: Wp_termsCountAggregateOutputType | null
    _avg: Wp_termsAvgAggregateOutputType | null
    _sum: Wp_termsSumAggregateOutputType | null
    _min: Wp_termsMinAggregateOutputType | null
    _max: Wp_termsMaxAggregateOutputType | null
  }

  type GetWp_termsGroupByPayload<T extends wp_termsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_termsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_termsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_termsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_termsGroupByOutputType[P]>
        }
      >
    >


  export type wp_termsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    term_id?: boolean
    name?: boolean
    slug?: boolean
    term_group?: boolean
  }, ExtArgs["result"]["wp_terms"]>



  export type wp_termsSelectScalar = {
    term_id?: boolean
    name?: boolean
    slug?: boolean
    term_group?: boolean
  }

  export type wp_termsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"term_id" | "name" | "slug" | "term_group", ExtArgs["result"]["wp_terms"]>

  export type $wp_termsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_terms"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      term_id: bigint
      name: string
      slug: string
      term_group: bigint
    }, ExtArgs["result"]["wp_terms"]>
    composites: {}
  }

  type wp_termsGetPayload<S extends boolean | null | undefined | wp_termsDefaultArgs> = $Result.GetResult<Prisma.$wp_termsPayload, S>

  type wp_termsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_termsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_termsCountAggregateInputType | true
    }

  export interface wp_termsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_terms'], meta: { name: 'wp_terms' } }
    /**
     * Find zero or one Wp_terms that matches the filter.
     * @param {wp_termsFindUniqueArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_termsFindUniqueArgs>(args: SelectSubset<T, wp_termsFindUniqueArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_terms that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_termsFindUniqueOrThrowArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_termsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_termsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_terms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsFindFirstArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_termsFindFirstArgs>(args?: SelectSubset<T, wp_termsFindFirstArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_terms that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsFindFirstOrThrowArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_termsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_termsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_terms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_terms
     * const wp_terms = await prisma.wp_terms.findMany()
     * 
     * // Get first 10 Wp_terms
     * const wp_terms = await prisma.wp_terms.findMany({ take: 10 })
     * 
     * // Only select the `term_id`
     * const wp_termsWithTerm_idOnly = await prisma.wp_terms.findMany({ select: { term_id: true } })
     * 
     */
    findMany<T extends wp_termsFindManyArgs>(args?: SelectSubset<T, wp_termsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_terms.
     * @param {wp_termsCreateArgs} args - Arguments to create a Wp_terms.
     * @example
     * // Create one Wp_terms
     * const Wp_terms = await prisma.wp_terms.create({
     *   data: {
     *     // ... data to create a Wp_terms
     *   }
     * })
     * 
     */
    create<T extends wp_termsCreateArgs>(args: SelectSubset<T, wp_termsCreateArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_terms.
     * @param {wp_termsCreateManyArgs} args - Arguments to create many Wp_terms.
     * @example
     * // Create many Wp_terms
     * const wp_terms = await prisma.wp_terms.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_termsCreateManyArgs>(args?: SelectSubset<T, wp_termsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_terms.
     * @param {wp_termsDeleteArgs} args - Arguments to delete one Wp_terms.
     * @example
     * // Delete one Wp_terms
     * const Wp_terms = await prisma.wp_terms.delete({
     *   where: {
     *     // ... filter to delete one Wp_terms
     *   }
     * })
     * 
     */
    delete<T extends wp_termsDeleteArgs>(args: SelectSubset<T, wp_termsDeleteArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_terms.
     * @param {wp_termsUpdateArgs} args - Arguments to update one Wp_terms.
     * @example
     * // Update one Wp_terms
     * const wp_terms = await prisma.wp_terms.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_termsUpdateArgs>(args: SelectSubset<T, wp_termsUpdateArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_terms.
     * @param {wp_termsDeleteManyArgs} args - Arguments to filter Wp_terms to delete.
     * @example
     * // Delete a few Wp_terms
     * const { count } = await prisma.wp_terms.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_termsDeleteManyArgs>(args?: SelectSubset<T, wp_termsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_terms
     * const wp_terms = await prisma.wp_terms.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_termsUpdateManyArgs>(args: SelectSubset<T, wp_termsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_terms.
     * @param {wp_termsUpsertArgs} args - Arguments to update or create a Wp_terms.
     * @example
     * // Update or create a Wp_terms
     * const wp_terms = await prisma.wp_terms.upsert({
     *   create: {
     *     // ... data to create a Wp_terms
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_terms we want to update
     *   }
     * })
     */
    upsert<T extends wp_termsUpsertArgs>(args: SelectSubset<T, wp_termsUpsertArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsCountArgs} args - Arguments to filter Wp_terms to count.
     * @example
     * // Count the number of Wp_terms
     * const count = await prisma.wp_terms.count({
     *   where: {
     *     // ... the filter for the Wp_terms we want to count
     *   }
     * })
    **/
    count<T extends wp_termsCountArgs>(
      args?: Subset<T, wp_termsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_termsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_termsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_termsAggregateArgs>(args: Subset<T, Wp_termsAggregateArgs>): Prisma.PrismaPromise<GetWp_termsAggregateType<T>>

    /**
     * Group by Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_termsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_termsGroupByArgs['orderBy'] }
        : { orderBy?: wp_termsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_termsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_termsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_terms model
   */
  readonly fields: wp_termsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_terms.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_termsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_terms model
   */
  interface wp_termsFieldRefs {
    readonly term_id: FieldRef<"wp_terms", 'BigInt'>
    readonly name: FieldRef<"wp_terms", 'String'>
    readonly slug: FieldRef<"wp_terms", 'String'>
    readonly term_group: FieldRef<"wp_terms", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_terms findUnique
   */
  export type wp_termsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms findUniqueOrThrow
   */
  export type wp_termsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms findFirst
   */
  export type wp_termsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_terms.
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_terms.
     */
    distinct?: Wp_termsScalarFieldEnum | Wp_termsScalarFieldEnum[]
  }

  /**
   * wp_terms findFirstOrThrow
   */
  export type wp_termsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_terms.
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_terms.
     */
    distinct?: Wp_termsScalarFieldEnum | Wp_termsScalarFieldEnum[]
  }

  /**
   * wp_terms findMany
   */
  export type wp_termsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_terms.
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    distinct?: Wp_termsScalarFieldEnum | Wp_termsScalarFieldEnum[]
  }

  /**
   * wp_terms create
   */
  export type wp_termsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_terms.
     */
    data?: XOR<wp_termsCreateInput, wp_termsUncheckedCreateInput>
  }

  /**
   * wp_terms createMany
   */
  export type wp_termsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_terms.
     */
    data: wp_termsCreateManyInput | wp_termsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_terms update
   */
  export type wp_termsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_terms.
     */
    data: XOR<wp_termsUpdateInput, wp_termsUncheckedUpdateInput>
    /**
     * Choose, which wp_terms to update.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms updateMany
   */
  export type wp_termsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_terms.
     */
    data: XOR<wp_termsUpdateManyMutationInput, wp_termsUncheckedUpdateManyInput>
    /**
     * Filter which wp_terms to update
     */
    where?: wp_termsWhereInput
    /**
     * Limit how many wp_terms to update.
     */
    limit?: number
  }

  /**
   * wp_terms upsert
   */
  export type wp_termsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_terms to update in case it exists.
     */
    where: wp_termsWhereUniqueInput
    /**
     * In case the wp_terms found by the `where` argument doesn't exist, create a new wp_terms with this data.
     */
    create: XOR<wp_termsCreateInput, wp_termsUncheckedCreateInput>
    /**
     * In case the wp_terms was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_termsUpdateInput, wp_termsUncheckedUpdateInput>
  }

  /**
   * wp_terms delete
   */
  export type wp_termsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter which wp_terms to delete.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms deleteMany
   */
  export type wp_termsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_terms to delete
     */
    where?: wp_termsWhereInput
    /**
     * Limit how many wp_terms to delete.
     */
    limit?: number
  }

  /**
   * wp_terms without action
   */
  export type wp_termsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
  }


  /**
   * Model wp_um_metadata
   */

  export type AggregateWp_um_metadata = {
    _count: Wp_um_metadataCountAggregateOutputType | null
    _avg: Wp_um_metadataAvgAggregateOutputType | null
    _sum: Wp_um_metadataSumAggregateOutputType | null
    _min: Wp_um_metadataMinAggregateOutputType | null
    _max: Wp_um_metadataMaxAggregateOutputType | null
  }

  export type Wp_um_metadataAvgAggregateOutputType = {
    umeta_id: number | null
    user_id: number | null
  }

  export type Wp_um_metadataSumAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
  }

  export type Wp_um_metadataMinAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
    um_key: string | null
    um_value: string | null
  }

  export type Wp_um_metadataMaxAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
    um_key: string | null
    um_value: string | null
  }

  export type Wp_um_metadataCountAggregateOutputType = {
    umeta_id: number
    user_id: number
    um_key: number
    um_value: number
    _all: number
  }


  export type Wp_um_metadataAvgAggregateInputType = {
    umeta_id?: true
    user_id?: true
  }

  export type Wp_um_metadataSumAggregateInputType = {
    umeta_id?: true
    user_id?: true
  }

  export type Wp_um_metadataMinAggregateInputType = {
    umeta_id?: true
    user_id?: true
    um_key?: true
    um_value?: true
  }

  export type Wp_um_metadataMaxAggregateInputType = {
    umeta_id?: true
    user_id?: true
    um_key?: true
    um_value?: true
  }

  export type Wp_um_metadataCountAggregateInputType = {
    umeta_id?: true
    user_id?: true
    um_key?: true
    um_value?: true
    _all?: true
  }

  export type Wp_um_metadataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_um_metadata to aggregate.
     */
    where?: wp_um_metadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_um_metadata to fetch.
     */
    orderBy?: wp_um_metadataOrderByWithRelationInput | wp_um_metadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_um_metadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_um_metadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_um_metadata.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_um_metadata
    **/
    _count?: true | Wp_um_metadataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_um_metadataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_um_metadataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_um_metadataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_um_metadataMaxAggregateInputType
  }

  export type GetWp_um_metadataAggregateType<T extends Wp_um_metadataAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_um_metadata]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_um_metadata[P]>
      : GetScalarType<T[P], AggregateWp_um_metadata[P]>
  }




  export type wp_um_metadataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_um_metadataWhereInput
    orderBy?: wp_um_metadataOrderByWithAggregationInput | wp_um_metadataOrderByWithAggregationInput[]
    by: Wp_um_metadataScalarFieldEnum[] | Wp_um_metadataScalarFieldEnum
    having?: wp_um_metadataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_um_metadataCountAggregateInputType | true
    _avg?: Wp_um_metadataAvgAggregateInputType
    _sum?: Wp_um_metadataSumAggregateInputType
    _min?: Wp_um_metadataMinAggregateInputType
    _max?: Wp_um_metadataMaxAggregateInputType
  }

  export type Wp_um_metadataGroupByOutputType = {
    umeta_id: bigint
    user_id: bigint
    um_key: string | null
    um_value: string | null
    _count: Wp_um_metadataCountAggregateOutputType | null
    _avg: Wp_um_metadataAvgAggregateOutputType | null
    _sum: Wp_um_metadataSumAggregateOutputType | null
    _min: Wp_um_metadataMinAggregateOutputType | null
    _max: Wp_um_metadataMaxAggregateOutputType | null
  }

  type GetWp_um_metadataGroupByPayload<T extends wp_um_metadataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_um_metadataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_um_metadataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_um_metadataGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_um_metadataGroupByOutputType[P]>
        }
      >
    >


  export type wp_um_metadataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    umeta_id?: boolean
    user_id?: boolean
    um_key?: boolean
    um_value?: boolean
  }, ExtArgs["result"]["wp_um_metadata"]>



  export type wp_um_metadataSelectScalar = {
    umeta_id?: boolean
    user_id?: boolean
    um_key?: boolean
    um_value?: boolean
  }

  export type wp_um_metadataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"umeta_id" | "user_id" | "um_key" | "um_value", ExtArgs["result"]["wp_um_metadata"]>

  export type $wp_um_metadataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_um_metadata"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      umeta_id: bigint
      user_id: bigint
      um_key: string | null
      um_value: string | null
    }, ExtArgs["result"]["wp_um_metadata"]>
    composites: {}
  }

  type wp_um_metadataGetPayload<S extends boolean | null | undefined | wp_um_metadataDefaultArgs> = $Result.GetResult<Prisma.$wp_um_metadataPayload, S>

  type wp_um_metadataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_um_metadataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_um_metadataCountAggregateInputType | true
    }

  export interface wp_um_metadataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_um_metadata'], meta: { name: 'wp_um_metadata' } }
    /**
     * Find zero or one Wp_um_metadata that matches the filter.
     * @param {wp_um_metadataFindUniqueArgs} args - Arguments to find a Wp_um_metadata
     * @example
     * // Get one Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_um_metadataFindUniqueArgs>(args: SelectSubset<T, wp_um_metadataFindUniqueArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_um_metadata that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_um_metadataFindUniqueOrThrowArgs} args - Arguments to find a Wp_um_metadata
     * @example
     * // Get one Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_um_metadataFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_um_metadataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_um_metadata that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_um_metadataFindFirstArgs} args - Arguments to find a Wp_um_metadata
     * @example
     * // Get one Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_um_metadataFindFirstArgs>(args?: SelectSubset<T, wp_um_metadataFindFirstArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_um_metadata that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_um_metadataFindFirstOrThrowArgs} args - Arguments to find a Wp_um_metadata
     * @example
     * // Get one Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_um_metadataFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_um_metadataFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_um_metadata that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_um_metadataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.findMany()
     * 
     * // Get first 10 Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.findMany({ take: 10 })
     * 
     * // Only select the `umeta_id`
     * const wp_um_metadataWithUmeta_idOnly = await prisma.wp_um_metadata.findMany({ select: { umeta_id: true } })
     * 
     */
    findMany<T extends wp_um_metadataFindManyArgs>(args?: SelectSubset<T, wp_um_metadataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_um_metadata.
     * @param {wp_um_metadataCreateArgs} args - Arguments to create a Wp_um_metadata.
     * @example
     * // Create one Wp_um_metadata
     * const Wp_um_metadata = await prisma.wp_um_metadata.create({
     *   data: {
     *     // ... data to create a Wp_um_metadata
     *   }
     * })
     * 
     */
    create<T extends wp_um_metadataCreateArgs>(args: SelectSubset<T, wp_um_metadataCreateArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_um_metadata.
     * @param {wp_um_metadataCreateManyArgs} args - Arguments to create many Wp_um_metadata.
     * @example
     * // Create many Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_um_metadataCreateManyArgs>(args?: SelectSubset<T, wp_um_metadataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_um_metadata.
     * @param {wp_um_metadataDeleteArgs} args - Arguments to delete one Wp_um_metadata.
     * @example
     * // Delete one Wp_um_metadata
     * const Wp_um_metadata = await prisma.wp_um_metadata.delete({
     *   where: {
     *     // ... filter to delete one Wp_um_metadata
     *   }
     * })
     * 
     */
    delete<T extends wp_um_metadataDeleteArgs>(args: SelectSubset<T, wp_um_metadataDeleteArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_um_metadata.
     * @param {wp_um_metadataUpdateArgs} args - Arguments to update one Wp_um_metadata.
     * @example
     * // Update one Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_um_metadataUpdateArgs>(args: SelectSubset<T, wp_um_metadataUpdateArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_um_metadata.
     * @param {wp_um_metadataDeleteManyArgs} args - Arguments to filter Wp_um_metadata to delete.
     * @example
     * // Delete a few Wp_um_metadata
     * const { count } = await prisma.wp_um_metadata.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_um_metadataDeleteManyArgs>(args?: SelectSubset<T, wp_um_metadataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_um_metadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_um_metadataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_um_metadataUpdateManyArgs>(args: SelectSubset<T, wp_um_metadataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_um_metadata.
     * @param {wp_um_metadataUpsertArgs} args - Arguments to update or create a Wp_um_metadata.
     * @example
     * // Update or create a Wp_um_metadata
     * const wp_um_metadata = await prisma.wp_um_metadata.upsert({
     *   create: {
     *     // ... data to create a Wp_um_metadata
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_um_metadata we want to update
     *   }
     * })
     */
    upsert<T extends wp_um_metadataUpsertArgs>(args: SelectSubset<T, wp_um_metadataUpsertArgs<ExtArgs>>): Prisma__wp_um_metadataClient<$Result.GetResult<Prisma.$wp_um_metadataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_um_metadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_um_metadataCountArgs} args - Arguments to filter Wp_um_metadata to count.
     * @example
     * // Count the number of Wp_um_metadata
     * const count = await prisma.wp_um_metadata.count({
     *   where: {
     *     // ... the filter for the Wp_um_metadata we want to count
     *   }
     * })
    **/
    count<T extends wp_um_metadataCountArgs>(
      args?: Subset<T, wp_um_metadataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_um_metadataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_um_metadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_um_metadataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_um_metadataAggregateArgs>(args: Subset<T, Wp_um_metadataAggregateArgs>): Prisma.PrismaPromise<GetWp_um_metadataAggregateType<T>>

    /**
     * Group by Wp_um_metadata.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_um_metadataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_um_metadataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_um_metadataGroupByArgs['orderBy'] }
        : { orderBy?: wp_um_metadataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_um_metadataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_um_metadataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_um_metadata model
   */
  readonly fields: wp_um_metadataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_um_metadata.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_um_metadataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_um_metadata model
   */
  interface wp_um_metadataFieldRefs {
    readonly umeta_id: FieldRef<"wp_um_metadata", 'BigInt'>
    readonly user_id: FieldRef<"wp_um_metadata", 'BigInt'>
    readonly um_key: FieldRef<"wp_um_metadata", 'String'>
    readonly um_value: FieldRef<"wp_um_metadata", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_um_metadata findUnique
   */
  export type wp_um_metadataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * Filter, which wp_um_metadata to fetch.
     */
    where: wp_um_metadataWhereUniqueInput
  }

  /**
   * wp_um_metadata findUniqueOrThrow
   */
  export type wp_um_metadataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * Filter, which wp_um_metadata to fetch.
     */
    where: wp_um_metadataWhereUniqueInput
  }

  /**
   * wp_um_metadata findFirst
   */
  export type wp_um_metadataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * Filter, which wp_um_metadata to fetch.
     */
    where?: wp_um_metadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_um_metadata to fetch.
     */
    orderBy?: wp_um_metadataOrderByWithRelationInput | wp_um_metadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_um_metadata.
     */
    cursor?: wp_um_metadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_um_metadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_um_metadata.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_um_metadata.
     */
    distinct?: Wp_um_metadataScalarFieldEnum | Wp_um_metadataScalarFieldEnum[]
  }

  /**
   * wp_um_metadata findFirstOrThrow
   */
  export type wp_um_metadataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * Filter, which wp_um_metadata to fetch.
     */
    where?: wp_um_metadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_um_metadata to fetch.
     */
    orderBy?: wp_um_metadataOrderByWithRelationInput | wp_um_metadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_um_metadata.
     */
    cursor?: wp_um_metadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_um_metadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_um_metadata.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_um_metadata.
     */
    distinct?: Wp_um_metadataScalarFieldEnum | Wp_um_metadataScalarFieldEnum[]
  }

  /**
   * wp_um_metadata findMany
   */
  export type wp_um_metadataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * Filter, which wp_um_metadata to fetch.
     */
    where?: wp_um_metadataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_um_metadata to fetch.
     */
    orderBy?: wp_um_metadataOrderByWithRelationInput | wp_um_metadataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_um_metadata.
     */
    cursor?: wp_um_metadataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_um_metadata from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_um_metadata.
     */
    skip?: number
    distinct?: Wp_um_metadataScalarFieldEnum | Wp_um_metadataScalarFieldEnum[]
  }

  /**
   * wp_um_metadata create
   */
  export type wp_um_metadataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_um_metadata.
     */
    data?: XOR<wp_um_metadataCreateInput, wp_um_metadataUncheckedCreateInput>
  }

  /**
   * wp_um_metadata createMany
   */
  export type wp_um_metadataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_um_metadata.
     */
    data: wp_um_metadataCreateManyInput | wp_um_metadataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_um_metadata update
   */
  export type wp_um_metadataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_um_metadata.
     */
    data: XOR<wp_um_metadataUpdateInput, wp_um_metadataUncheckedUpdateInput>
    /**
     * Choose, which wp_um_metadata to update.
     */
    where: wp_um_metadataWhereUniqueInput
  }

  /**
   * wp_um_metadata updateMany
   */
  export type wp_um_metadataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_um_metadata.
     */
    data: XOR<wp_um_metadataUpdateManyMutationInput, wp_um_metadataUncheckedUpdateManyInput>
    /**
     * Filter which wp_um_metadata to update
     */
    where?: wp_um_metadataWhereInput
    /**
     * Limit how many wp_um_metadata to update.
     */
    limit?: number
  }

  /**
   * wp_um_metadata upsert
   */
  export type wp_um_metadataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_um_metadata to update in case it exists.
     */
    where: wp_um_metadataWhereUniqueInput
    /**
     * In case the wp_um_metadata found by the `where` argument doesn't exist, create a new wp_um_metadata with this data.
     */
    create: XOR<wp_um_metadataCreateInput, wp_um_metadataUncheckedCreateInput>
    /**
     * In case the wp_um_metadata was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_um_metadataUpdateInput, wp_um_metadataUncheckedUpdateInput>
  }

  /**
   * wp_um_metadata delete
   */
  export type wp_um_metadataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
    /**
     * Filter which wp_um_metadata to delete.
     */
    where: wp_um_metadataWhereUniqueInput
  }

  /**
   * wp_um_metadata deleteMany
   */
  export type wp_um_metadataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_um_metadata to delete
     */
    where?: wp_um_metadataWhereInput
    /**
     * Limit how many wp_um_metadata to delete.
     */
    limit?: number
  }

  /**
   * wp_um_metadata without action
   */
  export type wp_um_metadataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_um_metadata
     */
    select?: wp_um_metadataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_um_metadata
     */
    omit?: wp_um_metadataOmit<ExtArgs> | null
  }


  /**
   * Model wp_user_registration_sessions
   */

  export type AggregateWp_user_registration_sessions = {
    _count: Wp_user_registration_sessionsCountAggregateOutputType | null
    _avg: Wp_user_registration_sessionsAvgAggregateOutputType | null
    _sum: Wp_user_registration_sessionsSumAggregateOutputType | null
    _min: Wp_user_registration_sessionsMinAggregateOutputType | null
    _max: Wp_user_registration_sessionsMaxAggregateOutputType | null
  }

  export type Wp_user_registration_sessionsAvgAggregateOutputType = {
    session_id: number | null
    session_expiry: number | null
  }

  export type Wp_user_registration_sessionsSumAggregateOutputType = {
    session_id: bigint | null
    session_expiry: bigint | null
  }

  export type Wp_user_registration_sessionsMinAggregateOutputType = {
    session_id: bigint | null
    session_key: string | null
    session_value: string | null
    session_expiry: bigint | null
  }

  export type Wp_user_registration_sessionsMaxAggregateOutputType = {
    session_id: bigint | null
    session_key: string | null
    session_value: string | null
    session_expiry: bigint | null
  }

  export type Wp_user_registration_sessionsCountAggregateOutputType = {
    session_id: number
    session_key: number
    session_value: number
    session_expiry: number
    _all: number
  }


  export type Wp_user_registration_sessionsAvgAggregateInputType = {
    session_id?: true
    session_expiry?: true
  }

  export type Wp_user_registration_sessionsSumAggregateInputType = {
    session_id?: true
    session_expiry?: true
  }

  export type Wp_user_registration_sessionsMinAggregateInputType = {
    session_id?: true
    session_key?: true
    session_value?: true
    session_expiry?: true
  }

  export type Wp_user_registration_sessionsMaxAggregateInputType = {
    session_id?: true
    session_key?: true
    session_value?: true
    session_expiry?: true
  }

  export type Wp_user_registration_sessionsCountAggregateInputType = {
    session_id?: true
    session_key?: true
    session_value?: true
    session_expiry?: true
    _all?: true
  }

  export type Wp_user_registration_sessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_user_registration_sessions to aggregate.
     */
    where?: wp_user_registration_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_user_registration_sessions to fetch.
     */
    orderBy?: wp_user_registration_sessionsOrderByWithRelationInput | wp_user_registration_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_user_registration_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_user_registration_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_user_registration_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_user_registration_sessions
    **/
    _count?: true | Wp_user_registration_sessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_user_registration_sessionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_user_registration_sessionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_user_registration_sessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_user_registration_sessionsMaxAggregateInputType
  }

  export type GetWp_user_registration_sessionsAggregateType<T extends Wp_user_registration_sessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_user_registration_sessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_user_registration_sessions[P]>
      : GetScalarType<T[P], AggregateWp_user_registration_sessions[P]>
  }




  export type wp_user_registration_sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_user_registration_sessionsWhereInput
    orderBy?: wp_user_registration_sessionsOrderByWithAggregationInput | wp_user_registration_sessionsOrderByWithAggregationInput[]
    by: Wp_user_registration_sessionsScalarFieldEnum[] | Wp_user_registration_sessionsScalarFieldEnum
    having?: wp_user_registration_sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_user_registration_sessionsCountAggregateInputType | true
    _avg?: Wp_user_registration_sessionsAvgAggregateInputType
    _sum?: Wp_user_registration_sessionsSumAggregateInputType
    _min?: Wp_user_registration_sessionsMinAggregateInputType
    _max?: Wp_user_registration_sessionsMaxAggregateInputType
  }

  export type Wp_user_registration_sessionsGroupByOutputType = {
    session_id: bigint
    session_key: string
    session_value: string
    session_expiry: bigint
    _count: Wp_user_registration_sessionsCountAggregateOutputType | null
    _avg: Wp_user_registration_sessionsAvgAggregateOutputType | null
    _sum: Wp_user_registration_sessionsSumAggregateOutputType | null
    _min: Wp_user_registration_sessionsMinAggregateOutputType | null
    _max: Wp_user_registration_sessionsMaxAggregateOutputType | null
  }

  type GetWp_user_registration_sessionsGroupByPayload<T extends wp_user_registration_sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_user_registration_sessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_user_registration_sessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_user_registration_sessionsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_user_registration_sessionsGroupByOutputType[P]>
        }
      >
    >


  export type wp_user_registration_sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    session_key?: boolean
    session_value?: boolean
    session_expiry?: boolean
  }, ExtArgs["result"]["wp_user_registration_sessions"]>



  export type wp_user_registration_sessionsSelectScalar = {
    session_id?: boolean
    session_key?: boolean
    session_value?: boolean
    session_expiry?: boolean
  }

  export type wp_user_registration_sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"session_id" | "session_key" | "session_value" | "session_expiry", ExtArgs["result"]["wp_user_registration_sessions"]>

  export type $wp_user_registration_sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_user_registration_sessions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      session_id: bigint
      session_key: string
      session_value: string
      session_expiry: bigint
    }, ExtArgs["result"]["wp_user_registration_sessions"]>
    composites: {}
  }

  type wp_user_registration_sessionsGetPayload<S extends boolean | null | undefined | wp_user_registration_sessionsDefaultArgs> = $Result.GetResult<Prisma.$wp_user_registration_sessionsPayload, S>

  type wp_user_registration_sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_user_registration_sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_user_registration_sessionsCountAggregateInputType | true
    }

  export interface wp_user_registration_sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_user_registration_sessions'], meta: { name: 'wp_user_registration_sessions' } }
    /**
     * Find zero or one Wp_user_registration_sessions that matches the filter.
     * @param {wp_user_registration_sessionsFindUniqueArgs} args - Arguments to find a Wp_user_registration_sessions
     * @example
     * // Get one Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_user_registration_sessionsFindUniqueArgs>(args: SelectSubset<T, wp_user_registration_sessionsFindUniqueArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_user_registration_sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_user_registration_sessionsFindUniqueOrThrowArgs} args - Arguments to find a Wp_user_registration_sessions
     * @example
     * // Get one Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_user_registration_sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_user_registration_sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_user_registration_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_user_registration_sessionsFindFirstArgs} args - Arguments to find a Wp_user_registration_sessions
     * @example
     * // Get one Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_user_registration_sessionsFindFirstArgs>(args?: SelectSubset<T, wp_user_registration_sessionsFindFirstArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_user_registration_sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_user_registration_sessionsFindFirstOrThrowArgs} args - Arguments to find a Wp_user_registration_sessions
     * @example
     * // Get one Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_user_registration_sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_user_registration_sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_user_registration_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_user_registration_sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.findMany()
     * 
     * // Get first 10 Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.findMany({ take: 10 })
     * 
     * // Only select the `session_id`
     * const wp_user_registration_sessionsWithSession_idOnly = await prisma.wp_user_registration_sessions.findMany({ select: { session_id: true } })
     * 
     */
    findMany<T extends wp_user_registration_sessionsFindManyArgs>(args?: SelectSubset<T, wp_user_registration_sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_user_registration_sessions.
     * @param {wp_user_registration_sessionsCreateArgs} args - Arguments to create a Wp_user_registration_sessions.
     * @example
     * // Create one Wp_user_registration_sessions
     * const Wp_user_registration_sessions = await prisma.wp_user_registration_sessions.create({
     *   data: {
     *     // ... data to create a Wp_user_registration_sessions
     *   }
     * })
     * 
     */
    create<T extends wp_user_registration_sessionsCreateArgs>(args: SelectSubset<T, wp_user_registration_sessionsCreateArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_user_registration_sessions.
     * @param {wp_user_registration_sessionsCreateManyArgs} args - Arguments to create many Wp_user_registration_sessions.
     * @example
     * // Create many Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_user_registration_sessionsCreateManyArgs>(args?: SelectSubset<T, wp_user_registration_sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_user_registration_sessions.
     * @param {wp_user_registration_sessionsDeleteArgs} args - Arguments to delete one Wp_user_registration_sessions.
     * @example
     * // Delete one Wp_user_registration_sessions
     * const Wp_user_registration_sessions = await prisma.wp_user_registration_sessions.delete({
     *   where: {
     *     // ... filter to delete one Wp_user_registration_sessions
     *   }
     * })
     * 
     */
    delete<T extends wp_user_registration_sessionsDeleteArgs>(args: SelectSubset<T, wp_user_registration_sessionsDeleteArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_user_registration_sessions.
     * @param {wp_user_registration_sessionsUpdateArgs} args - Arguments to update one Wp_user_registration_sessions.
     * @example
     * // Update one Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_user_registration_sessionsUpdateArgs>(args: SelectSubset<T, wp_user_registration_sessionsUpdateArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_user_registration_sessions.
     * @param {wp_user_registration_sessionsDeleteManyArgs} args - Arguments to filter Wp_user_registration_sessions to delete.
     * @example
     * // Delete a few Wp_user_registration_sessions
     * const { count } = await prisma.wp_user_registration_sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_user_registration_sessionsDeleteManyArgs>(args?: SelectSubset<T, wp_user_registration_sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_user_registration_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_user_registration_sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_user_registration_sessionsUpdateManyArgs>(args: SelectSubset<T, wp_user_registration_sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_user_registration_sessions.
     * @param {wp_user_registration_sessionsUpsertArgs} args - Arguments to update or create a Wp_user_registration_sessions.
     * @example
     * // Update or create a Wp_user_registration_sessions
     * const wp_user_registration_sessions = await prisma.wp_user_registration_sessions.upsert({
     *   create: {
     *     // ... data to create a Wp_user_registration_sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_user_registration_sessions we want to update
     *   }
     * })
     */
    upsert<T extends wp_user_registration_sessionsUpsertArgs>(args: SelectSubset<T, wp_user_registration_sessionsUpsertArgs<ExtArgs>>): Prisma__wp_user_registration_sessionsClient<$Result.GetResult<Prisma.$wp_user_registration_sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_user_registration_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_user_registration_sessionsCountArgs} args - Arguments to filter Wp_user_registration_sessions to count.
     * @example
     * // Count the number of Wp_user_registration_sessions
     * const count = await prisma.wp_user_registration_sessions.count({
     *   where: {
     *     // ... the filter for the Wp_user_registration_sessions we want to count
     *   }
     * })
    **/
    count<T extends wp_user_registration_sessionsCountArgs>(
      args?: Subset<T, wp_user_registration_sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_user_registration_sessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_user_registration_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_user_registration_sessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_user_registration_sessionsAggregateArgs>(args: Subset<T, Wp_user_registration_sessionsAggregateArgs>): Prisma.PrismaPromise<GetWp_user_registration_sessionsAggregateType<T>>

    /**
     * Group by Wp_user_registration_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_user_registration_sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_user_registration_sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_user_registration_sessionsGroupByArgs['orderBy'] }
        : { orderBy?: wp_user_registration_sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_user_registration_sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_user_registration_sessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_user_registration_sessions model
   */
  readonly fields: wp_user_registration_sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_user_registration_sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_user_registration_sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_user_registration_sessions model
   */
  interface wp_user_registration_sessionsFieldRefs {
    readonly session_id: FieldRef<"wp_user_registration_sessions", 'BigInt'>
    readonly session_key: FieldRef<"wp_user_registration_sessions", 'String'>
    readonly session_value: FieldRef<"wp_user_registration_sessions", 'String'>
    readonly session_expiry: FieldRef<"wp_user_registration_sessions", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_user_registration_sessions findUnique
   */
  export type wp_user_registration_sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_user_registration_sessions to fetch.
     */
    where: wp_user_registration_sessionsWhereUniqueInput
  }

  /**
   * wp_user_registration_sessions findUniqueOrThrow
   */
  export type wp_user_registration_sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_user_registration_sessions to fetch.
     */
    where: wp_user_registration_sessionsWhereUniqueInput
  }

  /**
   * wp_user_registration_sessions findFirst
   */
  export type wp_user_registration_sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_user_registration_sessions to fetch.
     */
    where?: wp_user_registration_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_user_registration_sessions to fetch.
     */
    orderBy?: wp_user_registration_sessionsOrderByWithRelationInput | wp_user_registration_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_user_registration_sessions.
     */
    cursor?: wp_user_registration_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_user_registration_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_user_registration_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_user_registration_sessions.
     */
    distinct?: Wp_user_registration_sessionsScalarFieldEnum | Wp_user_registration_sessionsScalarFieldEnum[]
  }

  /**
   * wp_user_registration_sessions findFirstOrThrow
   */
  export type wp_user_registration_sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_user_registration_sessions to fetch.
     */
    where?: wp_user_registration_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_user_registration_sessions to fetch.
     */
    orderBy?: wp_user_registration_sessionsOrderByWithRelationInput | wp_user_registration_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_user_registration_sessions.
     */
    cursor?: wp_user_registration_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_user_registration_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_user_registration_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_user_registration_sessions.
     */
    distinct?: Wp_user_registration_sessionsScalarFieldEnum | Wp_user_registration_sessionsScalarFieldEnum[]
  }

  /**
   * wp_user_registration_sessions findMany
   */
  export type wp_user_registration_sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_user_registration_sessions to fetch.
     */
    where?: wp_user_registration_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_user_registration_sessions to fetch.
     */
    orderBy?: wp_user_registration_sessionsOrderByWithRelationInput | wp_user_registration_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_user_registration_sessions.
     */
    cursor?: wp_user_registration_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_user_registration_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_user_registration_sessions.
     */
    skip?: number
    distinct?: Wp_user_registration_sessionsScalarFieldEnum | Wp_user_registration_sessionsScalarFieldEnum[]
  }

  /**
   * wp_user_registration_sessions create
   */
  export type wp_user_registration_sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_user_registration_sessions.
     */
    data: XOR<wp_user_registration_sessionsCreateInput, wp_user_registration_sessionsUncheckedCreateInput>
  }

  /**
   * wp_user_registration_sessions createMany
   */
  export type wp_user_registration_sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_user_registration_sessions.
     */
    data: wp_user_registration_sessionsCreateManyInput | wp_user_registration_sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_user_registration_sessions update
   */
  export type wp_user_registration_sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_user_registration_sessions.
     */
    data: XOR<wp_user_registration_sessionsUpdateInput, wp_user_registration_sessionsUncheckedUpdateInput>
    /**
     * Choose, which wp_user_registration_sessions to update.
     */
    where: wp_user_registration_sessionsWhereUniqueInput
  }

  /**
   * wp_user_registration_sessions updateMany
   */
  export type wp_user_registration_sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_user_registration_sessions.
     */
    data: XOR<wp_user_registration_sessionsUpdateManyMutationInput, wp_user_registration_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which wp_user_registration_sessions to update
     */
    where?: wp_user_registration_sessionsWhereInput
    /**
     * Limit how many wp_user_registration_sessions to update.
     */
    limit?: number
  }

  /**
   * wp_user_registration_sessions upsert
   */
  export type wp_user_registration_sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_user_registration_sessions to update in case it exists.
     */
    where: wp_user_registration_sessionsWhereUniqueInput
    /**
     * In case the wp_user_registration_sessions found by the `where` argument doesn't exist, create a new wp_user_registration_sessions with this data.
     */
    create: XOR<wp_user_registration_sessionsCreateInput, wp_user_registration_sessionsUncheckedCreateInput>
    /**
     * In case the wp_user_registration_sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_user_registration_sessionsUpdateInput, wp_user_registration_sessionsUncheckedUpdateInput>
  }

  /**
   * wp_user_registration_sessions delete
   */
  export type wp_user_registration_sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
    /**
     * Filter which wp_user_registration_sessions to delete.
     */
    where: wp_user_registration_sessionsWhereUniqueInput
  }

  /**
   * wp_user_registration_sessions deleteMany
   */
  export type wp_user_registration_sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_user_registration_sessions to delete
     */
    where?: wp_user_registration_sessionsWhereInput
    /**
     * Limit how many wp_user_registration_sessions to delete.
     */
    limit?: number
  }

  /**
   * wp_user_registration_sessions without action
   */
  export type wp_user_registration_sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_user_registration_sessions
     */
    select?: wp_user_registration_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_user_registration_sessions
     */
    omit?: wp_user_registration_sessionsOmit<ExtArgs> | null
  }


  /**
   * Model wp_usermeta
   */

  export type AggregateWp_usermeta = {
    _count: Wp_usermetaCountAggregateOutputType | null
    _avg: Wp_usermetaAvgAggregateOutputType | null
    _sum: Wp_usermetaSumAggregateOutputType | null
    _min: Wp_usermetaMinAggregateOutputType | null
    _max: Wp_usermetaMaxAggregateOutputType | null
  }

  export type Wp_usermetaAvgAggregateOutputType = {
    umeta_id: number | null
    user_id: number | null
  }

  export type Wp_usermetaSumAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
  }

  export type Wp_usermetaMinAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_usermetaMaxAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_usermetaCountAggregateOutputType = {
    umeta_id: number
    user_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_usermetaAvgAggregateInputType = {
    umeta_id?: true
    user_id?: true
  }

  export type Wp_usermetaSumAggregateInputType = {
    umeta_id?: true
    user_id?: true
  }

  export type Wp_usermetaMinAggregateInputType = {
    umeta_id?: true
    user_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_usermetaMaxAggregateInputType = {
    umeta_id?: true
    user_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_usermetaCountAggregateInputType = {
    umeta_id?: true
    user_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_usermetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_usermeta to aggregate.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_usermetas
    **/
    _count?: true | Wp_usermetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_usermetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_usermetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_usermetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_usermetaMaxAggregateInputType
  }

  export type GetWp_usermetaAggregateType<T extends Wp_usermetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_usermeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_usermeta[P]>
      : GetScalarType<T[P], AggregateWp_usermeta[P]>
  }




  export type wp_usermetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_usermetaWhereInput
    orderBy?: wp_usermetaOrderByWithAggregationInput | wp_usermetaOrderByWithAggregationInput[]
    by: Wp_usermetaScalarFieldEnum[] | Wp_usermetaScalarFieldEnum
    having?: wp_usermetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_usermetaCountAggregateInputType | true
    _avg?: Wp_usermetaAvgAggregateInputType
    _sum?: Wp_usermetaSumAggregateInputType
    _min?: Wp_usermetaMinAggregateInputType
    _max?: Wp_usermetaMaxAggregateInputType
  }

  export type Wp_usermetaGroupByOutputType = {
    umeta_id: bigint
    user_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_usermetaCountAggregateOutputType | null
    _avg: Wp_usermetaAvgAggregateOutputType | null
    _sum: Wp_usermetaSumAggregateOutputType | null
    _min: Wp_usermetaMinAggregateOutputType | null
    _max: Wp_usermetaMaxAggregateOutputType | null
  }

  type GetWp_usermetaGroupByPayload<T extends wp_usermetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_usermetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_usermetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_usermetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_usermetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_usermetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    umeta_id?: boolean
    user_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_usermeta"]>



  export type wp_usermetaSelectScalar = {
    umeta_id?: boolean
    user_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_usermetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"umeta_id" | "user_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_usermeta"]>

  export type $wp_usermetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_usermeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      umeta_id: bigint
      user_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_usermeta"]>
    composites: {}
  }

  type wp_usermetaGetPayload<S extends boolean | null | undefined | wp_usermetaDefaultArgs> = $Result.GetResult<Prisma.$wp_usermetaPayload, S>

  type wp_usermetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_usermetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_usermetaCountAggregateInputType | true
    }

  export interface wp_usermetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_usermeta'], meta: { name: 'wp_usermeta' } }
    /**
     * Find zero or one Wp_usermeta that matches the filter.
     * @param {wp_usermetaFindUniqueArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_usermetaFindUniqueArgs>(args: SelectSubset<T, wp_usermetaFindUniqueArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_usermeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_usermetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_usermetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_usermetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_usermeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaFindFirstArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_usermetaFindFirstArgs>(args?: SelectSubset<T, wp_usermetaFindFirstArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_usermeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaFindFirstOrThrowArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_usermetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_usermetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_usermetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_usermetas
     * const wp_usermetas = await prisma.wp_usermeta.findMany()
     * 
     * // Get first 10 Wp_usermetas
     * const wp_usermetas = await prisma.wp_usermeta.findMany({ take: 10 })
     * 
     * // Only select the `umeta_id`
     * const wp_usermetaWithUmeta_idOnly = await prisma.wp_usermeta.findMany({ select: { umeta_id: true } })
     * 
     */
    findMany<T extends wp_usermetaFindManyArgs>(args?: SelectSubset<T, wp_usermetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_usermeta.
     * @param {wp_usermetaCreateArgs} args - Arguments to create a Wp_usermeta.
     * @example
     * // Create one Wp_usermeta
     * const Wp_usermeta = await prisma.wp_usermeta.create({
     *   data: {
     *     // ... data to create a Wp_usermeta
     *   }
     * })
     * 
     */
    create<T extends wp_usermetaCreateArgs>(args: SelectSubset<T, wp_usermetaCreateArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_usermetas.
     * @param {wp_usermetaCreateManyArgs} args - Arguments to create many Wp_usermetas.
     * @example
     * // Create many Wp_usermetas
     * const wp_usermeta = await prisma.wp_usermeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_usermetaCreateManyArgs>(args?: SelectSubset<T, wp_usermetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_usermeta.
     * @param {wp_usermetaDeleteArgs} args - Arguments to delete one Wp_usermeta.
     * @example
     * // Delete one Wp_usermeta
     * const Wp_usermeta = await prisma.wp_usermeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_usermeta
     *   }
     * })
     * 
     */
    delete<T extends wp_usermetaDeleteArgs>(args: SelectSubset<T, wp_usermetaDeleteArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_usermeta.
     * @param {wp_usermetaUpdateArgs} args - Arguments to update one Wp_usermeta.
     * @example
     * // Update one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_usermetaUpdateArgs>(args: SelectSubset<T, wp_usermetaUpdateArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_usermetas.
     * @param {wp_usermetaDeleteManyArgs} args - Arguments to filter Wp_usermetas to delete.
     * @example
     * // Delete a few Wp_usermetas
     * const { count } = await prisma.wp_usermeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_usermetaDeleteManyArgs>(args?: SelectSubset<T, wp_usermetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_usermetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_usermetas
     * const wp_usermeta = await prisma.wp_usermeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_usermetaUpdateManyArgs>(args: SelectSubset<T, wp_usermetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_usermeta.
     * @param {wp_usermetaUpsertArgs} args - Arguments to update or create a Wp_usermeta.
     * @example
     * // Update or create a Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.upsert({
     *   create: {
     *     // ... data to create a Wp_usermeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_usermeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_usermetaUpsertArgs>(args: SelectSubset<T, wp_usermetaUpsertArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_usermetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaCountArgs} args - Arguments to filter Wp_usermetas to count.
     * @example
     * // Count the number of Wp_usermetas
     * const count = await prisma.wp_usermeta.count({
     *   where: {
     *     // ... the filter for the Wp_usermetas we want to count
     *   }
     * })
    **/
    count<T extends wp_usermetaCountArgs>(
      args?: Subset<T, wp_usermetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_usermetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_usermeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_usermetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_usermetaAggregateArgs>(args: Subset<T, Wp_usermetaAggregateArgs>): Prisma.PrismaPromise<GetWp_usermetaAggregateType<T>>

    /**
     * Group by Wp_usermeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_usermetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_usermetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_usermetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_usermetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_usermetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_usermeta model
   */
  readonly fields: wp_usermetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_usermeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_usermetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_usermeta model
   */
  interface wp_usermetaFieldRefs {
    readonly umeta_id: FieldRef<"wp_usermeta", 'BigInt'>
    readonly user_id: FieldRef<"wp_usermeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_usermeta", 'String'>
    readonly meta_value: FieldRef<"wp_usermeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_usermeta findUnique
   */
  export type wp_usermetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta findUniqueOrThrow
   */
  export type wp_usermetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta findFirst
   */
  export type wp_usermetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_usermetas.
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_usermetas.
     */
    distinct?: Wp_usermetaScalarFieldEnum | Wp_usermetaScalarFieldEnum[]
  }

  /**
   * wp_usermeta findFirstOrThrow
   */
  export type wp_usermetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_usermetas.
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_usermetas.
     */
    distinct?: Wp_usermetaScalarFieldEnum | Wp_usermetaScalarFieldEnum[]
  }

  /**
   * wp_usermeta findMany
   */
  export type wp_usermetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermetas to fetch.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_usermetas.
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    distinct?: Wp_usermetaScalarFieldEnum | Wp_usermetaScalarFieldEnum[]
  }

  /**
   * wp_usermeta create
   */
  export type wp_usermetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_usermeta.
     */
    data?: XOR<wp_usermetaCreateInput, wp_usermetaUncheckedCreateInput>
  }

  /**
   * wp_usermeta createMany
   */
  export type wp_usermetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_usermetas.
     */
    data: wp_usermetaCreateManyInput | wp_usermetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_usermeta update
   */
  export type wp_usermetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_usermeta.
     */
    data: XOR<wp_usermetaUpdateInput, wp_usermetaUncheckedUpdateInput>
    /**
     * Choose, which wp_usermeta to update.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta updateMany
   */
  export type wp_usermetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_usermetas.
     */
    data: XOR<wp_usermetaUpdateManyMutationInput, wp_usermetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_usermetas to update
     */
    where?: wp_usermetaWhereInput
    /**
     * Limit how many wp_usermetas to update.
     */
    limit?: number
  }

  /**
   * wp_usermeta upsert
   */
  export type wp_usermetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_usermeta to update in case it exists.
     */
    where: wp_usermetaWhereUniqueInput
    /**
     * In case the wp_usermeta found by the `where` argument doesn't exist, create a new wp_usermeta with this data.
     */
    create: XOR<wp_usermetaCreateInput, wp_usermetaUncheckedCreateInput>
    /**
     * In case the wp_usermeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_usermetaUpdateInput, wp_usermetaUncheckedUpdateInput>
  }

  /**
   * wp_usermeta delete
   */
  export type wp_usermetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter which wp_usermeta to delete.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta deleteMany
   */
  export type wp_usermetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_usermetas to delete
     */
    where?: wp_usermetaWhereInput
    /**
     * Limit how many wp_usermetas to delete.
     */
    limit?: number
  }

  /**
   * wp_usermeta without action
   */
  export type wp_usermetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_users
   */

  export type AggregateWp_users = {
    _count: Wp_usersCountAggregateOutputType | null
    _avg: Wp_usersAvgAggregateOutputType | null
    _sum: Wp_usersSumAggregateOutputType | null
    _min: Wp_usersMinAggregateOutputType | null
    _max: Wp_usersMaxAggregateOutputType | null
  }

  export type Wp_usersAvgAggregateOutputType = {
    ID: number | null
    user_status: number | null
  }

  export type Wp_usersSumAggregateOutputType = {
    ID: bigint | null
    user_status: number | null
  }

  export type Wp_usersMinAggregateOutputType = {
    ID: bigint | null
    user_login: string | null
    user_pass: string | null
    user_nicename: string | null
    user_email: string | null
    user_url: string | null
    user_registered: Date | null
    user_activation_key: string | null
    user_status: number | null
    display_name: string | null
  }

  export type Wp_usersMaxAggregateOutputType = {
    ID: bigint | null
    user_login: string | null
    user_pass: string | null
    user_nicename: string | null
    user_email: string | null
    user_url: string | null
    user_registered: Date | null
    user_activation_key: string | null
    user_status: number | null
    display_name: string | null
  }

  export type Wp_usersCountAggregateOutputType = {
    ID: number
    user_login: number
    user_pass: number
    user_nicename: number
    user_email: number
    user_url: number
    user_registered: number
    user_activation_key: number
    user_status: number
    display_name: number
    _all: number
  }


  export type Wp_usersAvgAggregateInputType = {
    ID?: true
    user_status?: true
  }

  export type Wp_usersSumAggregateInputType = {
    ID?: true
    user_status?: true
  }

  export type Wp_usersMinAggregateInputType = {
    ID?: true
    user_login?: true
    user_pass?: true
    user_nicename?: true
    user_email?: true
    user_url?: true
    user_registered?: true
    user_activation_key?: true
    user_status?: true
    display_name?: true
  }

  export type Wp_usersMaxAggregateInputType = {
    ID?: true
    user_login?: true
    user_pass?: true
    user_nicename?: true
    user_email?: true
    user_url?: true
    user_registered?: true
    user_activation_key?: true
    user_status?: true
    display_name?: true
  }

  export type Wp_usersCountAggregateInputType = {
    ID?: true
    user_login?: true
    user_pass?: true
    user_nicename?: true
    user_email?: true
    user_url?: true
    user_registered?: true
    user_activation_key?: true
    user_status?: true
    display_name?: true
    _all?: true
  }

  export type Wp_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_users to aggregate.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_users
    **/
    _count?: true | Wp_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_usersMaxAggregateInputType
  }

  export type GetWp_usersAggregateType<T extends Wp_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_users[P]>
      : GetScalarType<T[P], AggregateWp_users[P]>
  }




  export type wp_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_usersWhereInput
    orderBy?: wp_usersOrderByWithAggregationInput | wp_usersOrderByWithAggregationInput[]
    by: Wp_usersScalarFieldEnum[] | Wp_usersScalarFieldEnum
    having?: wp_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_usersCountAggregateInputType | true
    _avg?: Wp_usersAvgAggregateInputType
    _sum?: Wp_usersSumAggregateInputType
    _min?: Wp_usersMinAggregateInputType
    _max?: Wp_usersMaxAggregateInputType
  }

  export type Wp_usersGroupByOutputType = {
    ID: bigint
    user_login: string
    user_pass: string
    user_nicename: string
    user_email: string
    user_url: string
    user_registered: Date
    user_activation_key: string
    user_status: number
    display_name: string
    _count: Wp_usersCountAggregateOutputType | null
    _avg: Wp_usersAvgAggregateOutputType | null
    _sum: Wp_usersSumAggregateOutputType | null
    _min: Wp_usersMinAggregateOutputType | null
    _max: Wp_usersMaxAggregateOutputType | null
  }

  type GetWp_usersGroupByPayload<T extends wp_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_usersGroupByOutputType[P]>
        }
      >
    >


  export type wp_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID?: boolean
    user_login?: boolean
    user_pass?: boolean
    user_nicename?: boolean
    user_email?: boolean
    user_url?: boolean
    user_registered?: boolean
    user_activation_key?: boolean
    user_status?: boolean
    display_name?: boolean
  }, ExtArgs["result"]["wp_users"]>



  export type wp_usersSelectScalar = {
    ID?: boolean
    user_login?: boolean
    user_pass?: boolean
    user_nicename?: boolean
    user_email?: boolean
    user_url?: boolean
    user_registered?: boolean
    user_activation_key?: boolean
    user_status?: boolean
    display_name?: boolean
  }

  export type wp_usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ID" | "user_login" | "user_pass" | "user_nicename" | "user_email" | "user_url" | "user_registered" | "user_activation_key" | "user_status" | "display_name", ExtArgs["result"]["wp_users"]>

  export type $wp_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_users"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID: bigint
      user_login: string
      user_pass: string
      user_nicename: string
      user_email: string
      user_url: string
      user_registered: Date
      user_activation_key: string
      user_status: number
      display_name: string
    }, ExtArgs["result"]["wp_users"]>
    composites: {}
  }

  type wp_usersGetPayload<S extends boolean | null | undefined | wp_usersDefaultArgs> = $Result.GetResult<Prisma.$wp_usersPayload, S>

  type wp_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_usersCountAggregateInputType | true
    }

  export interface wp_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_users'], meta: { name: 'wp_users' } }
    /**
     * Find zero or one Wp_users that matches the filter.
     * @param {wp_usersFindUniqueArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_usersFindUniqueArgs>(args: SelectSubset<T, wp_usersFindUniqueArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_usersFindUniqueOrThrowArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_usersFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersFindFirstArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_usersFindFirstArgs>(args?: SelectSubset<T, wp_usersFindFirstArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersFindFirstOrThrowArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_usersFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_users
     * const wp_users = await prisma.wp_users.findMany()
     * 
     * // Get first 10 Wp_users
     * const wp_users = await prisma.wp_users.findMany({ take: 10 })
     * 
     * // Only select the `ID`
     * const wp_usersWithIDOnly = await prisma.wp_users.findMany({ select: { ID: true } })
     * 
     */
    findMany<T extends wp_usersFindManyArgs>(args?: SelectSubset<T, wp_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_users.
     * @param {wp_usersCreateArgs} args - Arguments to create a Wp_users.
     * @example
     * // Create one Wp_users
     * const Wp_users = await prisma.wp_users.create({
     *   data: {
     *     // ... data to create a Wp_users
     *   }
     * })
     * 
     */
    create<T extends wp_usersCreateArgs>(args: SelectSubset<T, wp_usersCreateArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_users.
     * @param {wp_usersCreateManyArgs} args - Arguments to create many Wp_users.
     * @example
     * // Create many Wp_users
     * const wp_users = await prisma.wp_users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_usersCreateManyArgs>(args?: SelectSubset<T, wp_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_users.
     * @param {wp_usersDeleteArgs} args - Arguments to delete one Wp_users.
     * @example
     * // Delete one Wp_users
     * const Wp_users = await prisma.wp_users.delete({
     *   where: {
     *     // ... filter to delete one Wp_users
     *   }
     * })
     * 
     */
    delete<T extends wp_usersDeleteArgs>(args: SelectSubset<T, wp_usersDeleteArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_users.
     * @param {wp_usersUpdateArgs} args - Arguments to update one Wp_users.
     * @example
     * // Update one Wp_users
     * const wp_users = await prisma.wp_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_usersUpdateArgs>(args: SelectSubset<T, wp_usersUpdateArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_users.
     * @param {wp_usersDeleteManyArgs} args - Arguments to filter Wp_users to delete.
     * @example
     * // Delete a few Wp_users
     * const { count } = await prisma.wp_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_usersDeleteManyArgs>(args?: SelectSubset<T, wp_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_users
     * const wp_users = await prisma.wp_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_usersUpdateManyArgs>(args: SelectSubset<T, wp_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_users.
     * @param {wp_usersUpsertArgs} args - Arguments to update or create a Wp_users.
     * @example
     * // Update or create a Wp_users
     * const wp_users = await prisma.wp_users.upsert({
     *   create: {
     *     // ... data to create a Wp_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_users we want to update
     *   }
     * })
     */
    upsert<T extends wp_usersUpsertArgs>(args: SelectSubset<T, wp_usersUpsertArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersCountArgs} args - Arguments to filter Wp_users to count.
     * @example
     * // Count the number of Wp_users
     * const count = await prisma.wp_users.count({
     *   where: {
     *     // ... the filter for the Wp_users we want to count
     *   }
     * })
    **/
    count<T extends wp_usersCountArgs>(
      args?: Subset<T, wp_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_usersAggregateArgs>(args: Subset<T, Wp_usersAggregateArgs>): Prisma.PrismaPromise<GetWp_usersAggregateType<T>>

    /**
     * Group by Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_usersGroupByArgs['orderBy'] }
        : { orderBy?: wp_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_users model
   */
  readonly fields: wp_usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_users model
   */
  interface wp_usersFieldRefs {
    readonly ID: FieldRef<"wp_users", 'BigInt'>
    readonly user_login: FieldRef<"wp_users", 'String'>
    readonly user_pass: FieldRef<"wp_users", 'String'>
    readonly user_nicename: FieldRef<"wp_users", 'String'>
    readonly user_email: FieldRef<"wp_users", 'String'>
    readonly user_url: FieldRef<"wp_users", 'String'>
    readonly user_registered: FieldRef<"wp_users", 'DateTime'>
    readonly user_activation_key: FieldRef<"wp_users", 'String'>
    readonly user_status: FieldRef<"wp_users", 'Int'>
    readonly display_name: FieldRef<"wp_users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_users findUnique
   */
  export type wp_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users findUniqueOrThrow
   */
  export type wp_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users findFirst
   */
  export type wp_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_users.
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_users.
     */
    distinct?: Wp_usersScalarFieldEnum | Wp_usersScalarFieldEnum[]
  }

  /**
   * wp_users findFirstOrThrow
   */
  export type wp_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_users.
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_users.
     */
    distinct?: Wp_usersScalarFieldEnum | Wp_usersScalarFieldEnum[]
  }

  /**
   * wp_users findMany
   */
  export type wp_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_users.
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    distinct?: Wp_usersScalarFieldEnum | Wp_usersScalarFieldEnum[]
  }

  /**
   * wp_users create
   */
  export type wp_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_users.
     */
    data?: XOR<wp_usersCreateInput, wp_usersUncheckedCreateInput>
  }

  /**
   * wp_users createMany
   */
  export type wp_usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_users.
     */
    data: wp_usersCreateManyInput | wp_usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_users update
   */
  export type wp_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_users.
     */
    data: XOR<wp_usersUpdateInput, wp_usersUncheckedUpdateInput>
    /**
     * Choose, which wp_users to update.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users updateMany
   */
  export type wp_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_users.
     */
    data: XOR<wp_usersUpdateManyMutationInput, wp_usersUncheckedUpdateManyInput>
    /**
     * Filter which wp_users to update
     */
    where?: wp_usersWhereInput
    /**
     * Limit how many wp_users to update.
     */
    limit?: number
  }

  /**
   * wp_users upsert
   */
  export type wp_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_users to update in case it exists.
     */
    where: wp_usersWhereUniqueInput
    /**
     * In case the wp_users found by the `where` argument doesn't exist, create a new wp_users with this data.
     */
    create: XOR<wp_usersCreateInput, wp_usersUncheckedCreateInput>
    /**
     * In case the wp_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_usersUpdateInput, wp_usersUncheckedUpdateInput>
  }

  /**
   * wp_users delete
   */
  export type wp_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter which wp_users to delete.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users deleteMany
   */
  export type wp_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_users to delete
     */
    where?: wp_usersWhereInput
    /**
     * Limit how many wp_users to delete.
     */
    limit?: number
  }

  /**
   * wp_users without action
   */
  export type wp_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpdatacharts
   */

  export type AggregateWp_wpdatacharts = {
    _count: Wp_wpdatachartsCountAggregateOutputType | null
    _avg: Wp_wpdatachartsAvgAggregateOutputType | null
    _sum: Wp_wpdatachartsSumAggregateOutputType | null
    _min: Wp_wpdatachartsMinAggregateOutputType | null
    _max: Wp_wpdatachartsMaxAggregateOutputType | null
  }

  export type Wp_wpdatachartsAvgAggregateOutputType = {
    id: number | null
    wpdatatable_id: number | null
  }

  export type Wp_wpdatachartsSumAggregateOutputType = {
    id: number | null
    wpdatatable_id: number | null
  }

  export type Wp_wpdatachartsMinAggregateOutputType = {
    id: number | null
    wpdatatable_id: number | null
    title: string | null
    engine: $Enums.wp_wpdatacharts_engine | null
    type: string | null
    json_render_data: string | null
  }

  export type Wp_wpdatachartsMaxAggregateOutputType = {
    id: number | null
    wpdatatable_id: number | null
    title: string | null
    engine: $Enums.wp_wpdatacharts_engine | null
    type: string | null
    json_render_data: string | null
  }

  export type Wp_wpdatachartsCountAggregateOutputType = {
    id: number
    wpdatatable_id: number
    title: number
    engine: number
    type: number
    json_render_data: number
    _all: number
  }


  export type Wp_wpdatachartsAvgAggregateInputType = {
    id?: true
    wpdatatable_id?: true
  }

  export type Wp_wpdatachartsSumAggregateInputType = {
    id?: true
    wpdatatable_id?: true
  }

  export type Wp_wpdatachartsMinAggregateInputType = {
    id?: true
    wpdatatable_id?: true
    title?: true
    engine?: true
    type?: true
    json_render_data?: true
  }

  export type Wp_wpdatachartsMaxAggregateInputType = {
    id?: true
    wpdatatable_id?: true
    title?: true
    engine?: true
    type?: true
    json_render_data?: true
  }

  export type Wp_wpdatachartsCountAggregateInputType = {
    id?: true
    wpdatatable_id?: true
    title?: true
    engine?: true
    type?: true
    json_render_data?: true
    _all?: true
  }

  export type Wp_wpdatachartsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatacharts to aggregate.
     */
    where?: wp_wpdatachartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatacharts to fetch.
     */
    orderBy?: wp_wpdatachartsOrderByWithRelationInput | wp_wpdatachartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpdatachartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatacharts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatacharts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpdatacharts
    **/
    _count?: true | Wp_wpdatachartsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpdatachartsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpdatachartsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpdatachartsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpdatachartsMaxAggregateInputType
  }

  export type GetWp_wpdatachartsAggregateType<T extends Wp_wpdatachartsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpdatacharts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpdatacharts[P]>
      : GetScalarType<T[P], AggregateWp_wpdatacharts[P]>
  }




  export type wp_wpdatachartsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpdatachartsWhereInput
    orderBy?: wp_wpdatachartsOrderByWithAggregationInput | wp_wpdatachartsOrderByWithAggregationInput[]
    by: Wp_wpdatachartsScalarFieldEnum[] | Wp_wpdatachartsScalarFieldEnum
    having?: wp_wpdatachartsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpdatachartsCountAggregateInputType | true
    _avg?: Wp_wpdatachartsAvgAggregateInputType
    _sum?: Wp_wpdatachartsSumAggregateInputType
    _min?: Wp_wpdatachartsMinAggregateInputType
    _max?: Wp_wpdatachartsMaxAggregateInputType
  }

  export type Wp_wpdatachartsGroupByOutputType = {
    id: number
    wpdatatable_id: number
    title: string
    engine: $Enums.wp_wpdatacharts_engine
    type: string
    json_render_data: string
    _count: Wp_wpdatachartsCountAggregateOutputType | null
    _avg: Wp_wpdatachartsAvgAggregateOutputType | null
    _sum: Wp_wpdatachartsSumAggregateOutputType | null
    _min: Wp_wpdatachartsMinAggregateOutputType | null
    _max: Wp_wpdatachartsMaxAggregateOutputType | null
  }

  type GetWp_wpdatachartsGroupByPayload<T extends wp_wpdatachartsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpdatachartsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpdatachartsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpdatachartsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpdatachartsGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpdatachartsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    wpdatatable_id?: boolean
    title?: boolean
    engine?: boolean
    type?: boolean
    json_render_data?: boolean
  }, ExtArgs["result"]["wp_wpdatacharts"]>



  export type wp_wpdatachartsSelectScalar = {
    id?: boolean
    wpdatatable_id?: boolean
    title?: boolean
    engine?: boolean
    type?: boolean
    json_render_data?: boolean
  }

  export type wp_wpdatachartsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "wpdatatable_id" | "title" | "engine" | "type" | "json_render_data", ExtArgs["result"]["wp_wpdatacharts"]>

  export type $wp_wpdatachartsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpdatacharts"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      wpdatatable_id: number
      title: string
      engine: $Enums.wp_wpdatacharts_engine
      type: string
      json_render_data: string
    }, ExtArgs["result"]["wp_wpdatacharts"]>
    composites: {}
  }

  type wp_wpdatachartsGetPayload<S extends boolean | null | undefined | wp_wpdatachartsDefaultArgs> = $Result.GetResult<Prisma.$wp_wpdatachartsPayload, S>

  type wp_wpdatachartsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpdatachartsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpdatachartsCountAggregateInputType | true
    }

  export interface wp_wpdatachartsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpdatacharts'], meta: { name: 'wp_wpdatacharts' } }
    /**
     * Find zero or one Wp_wpdatacharts that matches the filter.
     * @param {wp_wpdatachartsFindUniqueArgs} args - Arguments to find a Wp_wpdatacharts
     * @example
     * // Get one Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpdatachartsFindUniqueArgs>(args: SelectSubset<T, wp_wpdatachartsFindUniqueArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpdatacharts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpdatachartsFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpdatacharts
     * @example
     * // Get one Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpdatachartsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpdatachartsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatacharts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatachartsFindFirstArgs} args - Arguments to find a Wp_wpdatacharts
     * @example
     * // Get one Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpdatachartsFindFirstArgs>(args?: SelectSubset<T, wp_wpdatachartsFindFirstArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatacharts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatachartsFindFirstOrThrowArgs} args - Arguments to find a Wp_wpdatacharts
     * @example
     * // Get one Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpdatachartsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpdatachartsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpdatacharts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatachartsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.findMany()
     * 
     * // Get first 10 Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpdatachartsWithIdOnly = await prisma.wp_wpdatacharts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpdatachartsFindManyArgs>(args?: SelectSubset<T, wp_wpdatachartsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpdatacharts.
     * @param {wp_wpdatachartsCreateArgs} args - Arguments to create a Wp_wpdatacharts.
     * @example
     * // Create one Wp_wpdatacharts
     * const Wp_wpdatacharts = await prisma.wp_wpdatacharts.create({
     *   data: {
     *     // ... data to create a Wp_wpdatacharts
     *   }
     * })
     * 
     */
    create<T extends wp_wpdatachartsCreateArgs>(args: SelectSubset<T, wp_wpdatachartsCreateArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpdatacharts.
     * @param {wp_wpdatachartsCreateManyArgs} args - Arguments to create many Wp_wpdatacharts.
     * @example
     * // Create many Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpdatachartsCreateManyArgs>(args?: SelectSubset<T, wp_wpdatachartsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpdatacharts.
     * @param {wp_wpdatachartsDeleteArgs} args - Arguments to delete one Wp_wpdatacharts.
     * @example
     * // Delete one Wp_wpdatacharts
     * const Wp_wpdatacharts = await prisma.wp_wpdatacharts.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpdatacharts
     *   }
     * })
     * 
     */
    delete<T extends wp_wpdatachartsDeleteArgs>(args: SelectSubset<T, wp_wpdatachartsDeleteArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpdatacharts.
     * @param {wp_wpdatachartsUpdateArgs} args - Arguments to update one Wp_wpdatacharts.
     * @example
     * // Update one Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpdatachartsUpdateArgs>(args: SelectSubset<T, wp_wpdatachartsUpdateArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpdatacharts.
     * @param {wp_wpdatachartsDeleteManyArgs} args - Arguments to filter Wp_wpdatacharts to delete.
     * @example
     * // Delete a few Wp_wpdatacharts
     * const { count } = await prisma.wp_wpdatacharts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpdatachartsDeleteManyArgs>(args?: SelectSubset<T, wp_wpdatachartsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpdatacharts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatachartsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpdatachartsUpdateManyArgs>(args: SelectSubset<T, wp_wpdatachartsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpdatacharts.
     * @param {wp_wpdatachartsUpsertArgs} args - Arguments to update or create a Wp_wpdatacharts.
     * @example
     * // Update or create a Wp_wpdatacharts
     * const wp_wpdatacharts = await prisma.wp_wpdatacharts.upsert({
     *   create: {
     *     // ... data to create a Wp_wpdatacharts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpdatacharts we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpdatachartsUpsertArgs>(args: SelectSubset<T, wp_wpdatachartsUpsertArgs<ExtArgs>>): Prisma__wp_wpdatachartsClient<$Result.GetResult<Prisma.$wp_wpdatachartsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpdatacharts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatachartsCountArgs} args - Arguments to filter Wp_wpdatacharts to count.
     * @example
     * // Count the number of Wp_wpdatacharts
     * const count = await prisma.wp_wpdatacharts.count({
     *   where: {
     *     // ... the filter for the Wp_wpdatacharts we want to count
     *   }
     * })
    **/
    count<T extends wp_wpdatachartsCountArgs>(
      args?: Subset<T, wp_wpdatachartsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpdatachartsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpdatacharts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpdatachartsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpdatachartsAggregateArgs>(args: Subset<T, Wp_wpdatachartsAggregateArgs>): Prisma.PrismaPromise<GetWp_wpdatachartsAggregateType<T>>

    /**
     * Group by Wp_wpdatacharts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatachartsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpdatachartsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpdatachartsGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpdatachartsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpdatachartsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpdatachartsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpdatacharts model
   */
  readonly fields: wp_wpdatachartsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpdatacharts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpdatachartsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpdatacharts model
   */
  interface wp_wpdatachartsFieldRefs {
    readonly id: FieldRef<"wp_wpdatacharts", 'Int'>
    readonly wpdatatable_id: FieldRef<"wp_wpdatacharts", 'Int'>
    readonly title: FieldRef<"wp_wpdatacharts", 'String'>
    readonly engine: FieldRef<"wp_wpdatacharts", 'wp_wpdatacharts_engine'>
    readonly type: FieldRef<"wp_wpdatacharts", 'String'>
    readonly json_render_data: FieldRef<"wp_wpdatacharts", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpdatacharts findUnique
   */
  export type wp_wpdatachartsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatacharts to fetch.
     */
    where: wp_wpdatachartsWhereUniqueInput
  }

  /**
   * wp_wpdatacharts findUniqueOrThrow
   */
  export type wp_wpdatachartsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatacharts to fetch.
     */
    where: wp_wpdatachartsWhereUniqueInput
  }

  /**
   * wp_wpdatacharts findFirst
   */
  export type wp_wpdatachartsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatacharts to fetch.
     */
    where?: wp_wpdatachartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatacharts to fetch.
     */
    orderBy?: wp_wpdatachartsOrderByWithRelationInput | wp_wpdatachartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatacharts.
     */
    cursor?: wp_wpdatachartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatacharts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatacharts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatacharts.
     */
    distinct?: Wp_wpdatachartsScalarFieldEnum | Wp_wpdatachartsScalarFieldEnum[]
  }

  /**
   * wp_wpdatacharts findFirstOrThrow
   */
  export type wp_wpdatachartsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatacharts to fetch.
     */
    where?: wp_wpdatachartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatacharts to fetch.
     */
    orderBy?: wp_wpdatachartsOrderByWithRelationInput | wp_wpdatachartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatacharts.
     */
    cursor?: wp_wpdatachartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatacharts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatacharts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatacharts.
     */
    distinct?: Wp_wpdatachartsScalarFieldEnum | Wp_wpdatachartsScalarFieldEnum[]
  }

  /**
   * wp_wpdatacharts findMany
   */
  export type wp_wpdatachartsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatacharts to fetch.
     */
    where?: wp_wpdatachartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatacharts to fetch.
     */
    orderBy?: wp_wpdatachartsOrderByWithRelationInput | wp_wpdatachartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpdatacharts.
     */
    cursor?: wp_wpdatachartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatacharts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatacharts.
     */
    skip?: number
    distinct?: Wp_wpdatachartsScalarFieldEnum | Wp_wpdatachartsScalarFieldEnum[]
  }

  /**
   * wp_wpdatacharts create
   */
  export type wp_wpdatachartsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpdatacharts.
     */
    data: XOR<wp_wpdatachartsCreateInput, wp_wpdatachartsUncheckedCreateInput>
  }

  /**
   * wp_wpdatacharts createMany
   */
  export type wp_wpdatachartsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpdatacharts.
     */
    data: wp_wpdatachartsCreateManyInput | wp_wpdatachartsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpdatacharts update
   */
  export type wp_wpdatachartsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpdatacharts.
     */
    data: XOR<wp_wpdatachartsUpdateInput, wp_wpdatachartsUncheckedUpdateInput>
    /**
     * Choose, which wp_wpdatacharts to update.
     */
    where: wp_wpdatachartsWhereUniqueInput
  }

  /**
   * wp_wpdatacharts updateMany
   */
  export type wp_wpdatachartsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpdatacharts.
     */
    data: XOR<wp_wpdatachartsUpdateManyMutationInput, wp_wpdatachartsUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpdatacharts to update
     */
    where?: wp_wpdatachartsWhereInput
    /**
     * Limit how many wp_wpdatacharts to update.
     */
    limit?: number
  }

  /**
   * wp_wpdatacharts upsert
   */
  export type wp_wpdatachartsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpdatacharts to update in case it exists.
     */
    where: wp_wpdatachartsWhereUniqueInput
    /**
     * In case the wp_wpdatacharts found by the `where` argument doesn't exist, create a new wp_wpdatacharts with this data.
     */
    create: XOR<wp_wpdatachartsCreateInput, wp_wpdatachartsUncheckedCreateInput>
    /**
     * In case the wp_wpdatacharts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpdatachartsUpdateInput, wp_wpdatachartsUncheckedUpdateInput>
  }

  /**
   * wp_wpdatacharts delete
   */
  export type wp_wpdatachartsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
    /**
     * Filter which wp_wpdatacharts to delete.
     */
    where: wp_wpdatachartsWhereUniqueInput
  }

  /**
   * wp_wpdatacharts deleteMany
   */
  export type wp_wpdatachartsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatacharts to delete
     */
    where?: wp_wpdatachartsWhereInput
    /**
     * Limit how many wp_wpdatacharts to delete.
     */
    limit?: number
  }

  /**
   * wp_wpdatacharts without action
   */
  export type wp_wpdatachartsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatacharts
     */
    select?: wp_wpdatachartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatacharts
     */
    omit?: wp_wpdatachartsOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpdatatables
   */

  export type AggregateWp_wpdatatables = {
    _count: Wp_wpdatatablesCountAggregateOutputType | null
    _avg: Wp_wpdatatablesAvgAggregateOutputType | null
    _sum: Wp_wpdatatablesSumAggregateOutputType | null
    _min: Wp_wpdatatablesMinAggregateOutputType | null
    _max: Wp_wpdatatablesMaxAggregateOutputType | null
  }

  export type Wp_wpdatatablesAvgAggregateOutputType = {
    id: number | null
    userid_column_id: number | null
    display_length: number | null
    auto_refresh: number | null
    fixed_columns: number | null
  }

  export type Wp_wpdatatablesSumAggregateOutputType = {
    id: number | null
    userid_column_id: number | null
    display_length: number | null
    auto_refresh: number | null
    fixed_columns: number | null
  }

  export type Wp_wpdatatablesMinAggregateOutputType = {
    id: number | null
    title: string | null
    show_title: boolean | null
    table_type: string | null
    content: string | null
    filtering: boolean | null
    filtering_form: boolean | null
    sorting: boolean | null
    tools: boolean | null
    server_side: boolean | null
    editable: boolean | null
    inline_editing: boolean | null
    popover_tools: boolean | null
    editor_roles: string | null
    mysql_table_name: string | null
    edit_only_own_rows: boolean | null
    userid_column_id: number | null
    display_length: number | null
    auto_refresh: number | null
    fixed_columns: number | null
    fixed_layout: boolean | null
    responsive: boolean | null
    scrollable: boolean | null
    word_wrap: boolean | null
    hide_before_load: boolean | null
    var1: string | null
    var2: string | null
    var3: string | null
    tabletools_config: string | null
    advanced_settings: string | null
    connection: string | null
  }

  export type Wp_wpdatatablesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    show_title: boolean | null
    table_type: string | null
    content: string | null
    filtering: boolean | null
    filtering_form: boolean | null
    sorting: boolean | null
    tools: boolean | null
    server_side: boolean | null
    editable: boolean | null
    inline_editing: boolean | null
    popover_tools: boolean | null
    editor_roles: string | null
    mysql_table_name: string | null
    edit_only_own_rows: boolean | null
    userid_column_id: number | null
    display_length: number | null
    auto_refresh: number | null
    fixed_columns: number | null
    fixed_layout: boolean | null
    responsive: boolean | null
    scrollable: boolean | null
    word_wrap: boolean | null
    hide_before_load: boolean | null
    var1: string | null
    var2: string | null
    var3: string | null
    tabletools_config: string | null
    advanced_settings: string | null
    connection: string | null
  }

  export type Wp_wpdatatablesCountAggregateOutputType = {
    id: number
    title: number
    show_title: number
    table_type: number
    content: number
    filtering: number
    filtering_form: number
    sorting: number
    tools: number
    server_side: number
    editable: number
    inline_editing: number
    popover_tools: number
    editor_roles: number
    mysql_table_name: number
    edit_only_own_rows: number
    userid_column_id: number
    display_length: number
    auto_refresh: number
    fixed_columns: number
    fixed_layout: number
    responsive: number
    scrollable: number
    word_wrap: number
    hide_before_load: number
    var1: number
    var2: number
    var3: number
    tabletools_config: number
    advanced_settings: number
    connection: number
    _all: number
  }


  export type Wp_wpdatatablesAvgAggregateInputType = {
    id?: true
    userid_column_id?: true
    display_length?: true
    auto_refresh?: true
    fixed_columns?: true
  }

  export type Wp_wpdatatablesSumAggregateInputType = {
    id?: true
    userid_column_id?: true
    display_length?: true
    auto_refresh?: true
    fixed_columns?: true
  }

  export type Wp_wpdatatablesMinAggregateInputType = {
    id?: true
    title?: true
    show_title?: true
    table_type?: true
    content?: true
    filtering?: true
    filtering_form?: true
    sorting?: true
    tools?: true
    server_side?: true
    editable?: true
    inline_editing?: true
    popover_tools?: true
    editor_roles?: true
    mysql_table_name?: true
    edit_only_own_rows?: true
    userid_column_id?: true
    display_length?: true
    auto_refresh?: true
    fixed_columns?: true
    fixed_layout?: true
    responsive?: true
    scrollable?: true
    word_wrap?: true
    hide_before_load?: true
    var1?: true
    var2?: true
    var3?: true
    tabletools_config?: true
    advanced_settings?: true
    connection?: true
  }

  export type Wp_wpdatatablesMaxAggregateInputType = {
    id?: true
    title?: true
    show_title?: true
    table_type?: true
    content?: true
    filtering?: true
    filtering_form?: true
    sorting?: true
    tools?: true
    server_side?: true
    editable?: true
    inline_editing?: true
    popover_tools?: true
    editor_roles?: true
    mysql_table_name?: true
    edit_only_own_rows?: true
    userid_column_id?: true
    display_length?: true
    auto_refresh?: true
    fixed_columns?: true
    fixed_layout?: true
    responsive?: true
    scrollable?: true
    word_wrap?: true
    hide_before_load?: true
    var1?: true
    var2?: true
    var3?: true
    tabletools_config?: true
    advanced_settings?: true
    connection?: true
  }

  export type Wp_wpdatatablesCountAggregateInputType = {
    id?: true
    title?: true
    show_title?: true
    table_type?: true
    content?: true
    filtering?: true
    filtering_form?: true
    sorting?: true
    tools?: true
    server_side?: true
    editable?: true
    inline_editing?: true
    popover_tools?: true
    editor_roles?: true
    mysql_table_name?: true
    edit_only_own_rows?: true
    userid_column_id?: true
    display_length?: true
    auto_refresh?: true
    fixed_columns?: true
    fixed_layout?: true
    responsive?: true
    scrollable?: true
    word_wrap?: true
    hide_before_load?: true
    var1?: true
    var2?: true
    var3?: true
    tabletools_config?: true
    advanced_settings?: true
    connection?: true
    _all?: true
  }

  export type Wp_wpdatatablesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatatables to aggregate.
     */
    where?: wp_wpdatatablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables to fetch.
     */
    orderBy?: wp_wpdatatablesOrderByWithRelationInput | wp_wpdatatablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpdatatablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpdatatables
    **/
    _count?: true | Wp_wpdatatablesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpdatatablesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpdatatablesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpdatatablesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpdatatablesMaxAggregateInputType
  }

  export type GetWp_wpdatatablesAggregateType<T extends Wp_wpdatatablesAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpdatatables]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpdatatables[P]>
      : GetScalarType<T[P], AggregateWp_wpdatatables[P]>
  }




  export type wp_wpdatatablesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpdatatablesWhereInput
    orderBy?: wp_wpdatatablesOrderByWithAggregationInput | wp_wpdatatablesOrderByWithAggregationInput[]
    by: Wp_wpdatatablesScalarFieldEnum[] | Wp_wpdatatablesScalarFieldEnum
    having?: wp_wpdatatablesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpdatatablesCountAggregateInputType | true
    _avg?: Wp_wpdatatablesAvgAggregateInputType
    _sum?: Wp_wpdatatablesSumAggregateInputType
    _min?: Wp_wpdatatablesMinAggregateInputType
    _max?: Wp_wpdatatablesMaxAggregateInputType
  }

  export type Wp_wpdatatablesGroupByOutputType = {
    id: number
    title: string
    show_title: boolean
    table_type: string
    content: string
    filtering: boolean
    filtering_form: boolean
    sorting: boolean
    tools: boolean
    server_side: boolean
    editable: boolean
    inline_editing: boolean
    popover_tools: boolean
    editor_roles: string
    mysql_table_name: string
    edit_only_own_rows: boolean
    userid_column_id: number
    display_length: number
    auto_refresh: number
    fixed_columns: number
    fixed_layout: boolean
    responsive: boolean
    scrollable: boolean
    word_wrap: boolean
    hide_before_load: boolean
    var1: string
    var2: string
    var3: string
    tabletools_config: string
    advanced_settings: string
    connection: string
    _count: Wp_wpdatatablesCountAggregateOutputType | null
    _avg: Wp_wpdatatablesAvgAggregateOutputType | null
    _sum: Wp_wpdatatablesSumAggregateOutputType | null
    _min: Wp_wpdatatablesMinAggregateOutputType | null
    _max: Wp_wpdatatablesMaxAggregateOutputType | null
  }

  type GetWp_wpdatatablesGroupByPayload<T extends wp_wpdatatablesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpdatatablesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpdatatablesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpdatatablesGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpdatatablesGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpdatatablesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    show_title?: boolean
    table_type?: boolean
    content?: boolean
    filtering?: boolean
    filtering_form?: boolean
    sorting?: boolean
    tools?: boolean
    server_side?: boolean
    editable?: boolean
    inline_editing?: boolean
    popover_tools?: boolean
    editor_roles?: boolean
    mysql_table_name?: boolean
    edit_only_own_rows?: boolean
    userid_column_id?: boolean
    display_length?: boolean
    auto_refresh?: boolean
    fixed_columns?: boolean
    fixed_layout?: boolean
    responsive?: boolean
    scrollable?: boolean
    word_wrap?: boolean
    hide_before_load?: boolean
    var1?: boolean
    var2?: boolean
    var3?: boolean
    tabletools_config?: boolean
    advanced_settings?: boolean
    connection?: boolean
  }, ExtArgs["result"]["wp_wpdatatables"]>



  export type wp_wpdatatablesSelectScalar = {
    id?: boolean
    title?: boolean
    show_title?: boolean
    table_type?: boolean
    content?: boolean
    filtering?: boolean
    filtering_form?: boolean
    sorting?: boolean
    tools?: boolean
    server_side?: boolean
    editable?: boolean
    inline_editing?: boolean
    popover_tools?: boolean
    editor_roles?: boolean
    mysql_table_name?: boolean
    edit_only_own_rows?: boolean
    userid_column_id?: boolean
    display_length?: boolean
    auto_refresh?: boolean
    fixed_columns?: boolean
    fixed_layout?: boolean
    responsive?: boolean
    scrollable?: boolean
    word_wrap?: boolean
    hide_before_load?: boolean
    var1?: boolean
    var2?: boolean
    var3?: boolean
    tabletools_config?: boolean
    advanced_settings?: boolean
    connection?: boolean
  }

  export type wp_wpdatatablesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "show_title" | "table_type" | "content" | "filtering" | "filtering_form" | "sorting" | "tools" | "server_side" | "editable" | "inline_editing" | "popover_tools" | "editor_roles" | "mysql_table_name" | "edit_only_own_rows" | "userid_column_id" | "display_length" | "auto_refresh" | "fixed_columns" | "fixed_layout" | "responsive" | "scrollable" | "word_wrap" | "hide_before_load" | "var1" | "var2" | "var3" | "tabletools_config" | "advanced_settings" | "connection", ExtArgs["result"]["wp_wpdatatables"]>

  export type $wp_wpdatatablesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpdatatables"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      show_title: boolean
      table_type: string
      content: string
      filtering: boolean
      filtering_form: boolean
      sorting: boolean
      tools: boolean
      server_side: boolean
      editable: boolean
      inline_editing: boolean
      popover_tools: boolean
      editor_roles: string
      mysql_table_name: string
      edit_only_own_rows: boolean
      userid_column_id: number
      display_length: number
      auto_refresh: number
      fixed_columns: number
      fixed_layout: boolean
      responsive: boolean
      scrollable: boolean
      word_wrap: boolean
      hide_before_load: boolean
      var1: string
      var2: string
      var3: string
      tabletools_config: string
      advanced_settings: string
      connection: string
    }, ExtArgs["result"]["wp_wpdatatables"]>
    composites: {}
  }

  type wp_wpdatatablesGetPayload<S extends boolean | null | undefined | wp_wpdatatablesDefaultArgs> = $Result.GetResult<Prisma.$wp_wpdatatablesPayload, S>

  type wp_wpdatatablesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpdatatablesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpdatatablesCountAggregateInputType | true
    }

  export interface wp_wpdatatablesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpdatatables'], meta: { name: 'wp_wpdatatables' } }
    /**
     * Find zero or one Wp_wpdatatables that matches the filter.
     * @param {wp_wpdatatablesFindUniqueArgs} args - Arguments to find a Wp_wpdatatables
     * @example
     * // Get one Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpdatatablesFindUniqueArgs>(args: SelectSubset<T, wp_wpdatatablesFindUniqueArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpdatatables that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpdatatablesFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpdatatables
     * @example
     * // Get one Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpdatatablesFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpdatatablesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatatables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatablesFindFirstArgs} args - Arguments to find a Wp_wpdatatables
     * @example
     * // Get one Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpdatatablesFindFirstArgs>(args?: SelectSubset<T, wp_wpdatatablesFindFirstArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatatables that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatablesFindFirstOrThrowArgs} args - Arguments to find a Wp_wpdatatables
     * @example
     * // Get one Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpdatatablesFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpdatatablesFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpdatatables that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatablesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.findMany()
     * 
     * // Get first 10 Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpdatatablesWithIdOnly = await prisma.wp_wpdatatables.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpdatatablesFindManyArgs>(args?: SelectSubset<T, wp_wpdatatablesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpdatatables.
     * @param {wp_wpdatatablesCreateArgs} args - Arguments to create a Wp_wpdatatables.
     * @example
     * // Create one Wp_wpdatatables
     * const Wp_wpdatatables = await prisma.wp_wpdatatables.create({
     *   data: {
     *     // ... data to create a Wp_wpdatatables
     *   }
     * })
     * 
     */
    create<T extends wp_wpdatatablesCreateArgs>(args: SelectSubset<T, wp_wpdatatablesCreateArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpdatatables.
     * @param {wp_wpdatatablesCreateManyArgs} args - Arguments to create many Wp_wpdatatables.
     * @example
     * // Create many Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpdatatablesCreateManyArgs>(args?: SelectSubset<T, wp_wpdatatablesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpdatatables.
     * @param {wp_wpdatatablesDeleteArgs} args - Arguments to delete one Wp_wpdatatables.
     * @example
     * // Delete one Wp_wpdatatables
     * const Wp_wpdatatables = await prisma.wp_wpdatatables.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpdatatables
     *   }
     * })
     * 
     */
    delete<T extends wp_wpdatatablesDeleteArgs>(args: SelectSubset<T, wp_wpdatatablesDeleteArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpdatatables.
     * @param {wp_wpdatatablesUpdateArgs} args - Arguments to update one Wp_wpdatatables.
     * @example
     * // Update one Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpdatatablesUpdateArgs>(args: SelectSubset<T, wp_wpdatatablesUpdateArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpdatatables.
     * @param {wp_wpdatatablesDeleteManyArgs} args - Arguments to filter Wp_wpdatatables to delete.
     * @example
     * // Delete a few Wp_wpdatatables
     * const { count } = await prisma.wp_wpdatatables.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpdatatablesDeleteManyArgs>(args?: SelectSubset<T, wp_wpdatatablesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpdatatables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatablesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpdatatablesUpdateManyArgs>(args: SelectSubset<T, wp_wpdatatablesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpdatatables.
     * @param {wp_wpdatatablesUpsertArgs} args - Arguments to update or create a Wp_wpdatatables.
     * @example
     * // Update or create a Wp_wpdatatables
     * const wp_wpdatatables = await prisma.wp_wpdatatables.upsert({
     *   create: {
     *     // ... data to create a Wp_wpdatatables
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpdatatables we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpdatatablesUpsertArgs>(args: SelectSubset<T, wp_wpdatatablesUpsertArgs<ExtArgs>>): Prisma__wp_wpdatatablesClient<$Result.GetResult<Prisma.$wp_wpdatatablesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpdatatables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatablesCountArgs} args - Arguments to filter Wp_wpdatatables to count.
     * @example
     * // Count the number of Wp_wpdatatables
     * const count = await prisma.wp_wpdatatables.count({
     *   where: {
     *     // ... the filter for the Wp_wpdatatables we want to count
     *   }
     * })
    **/
    count<T extends wp_wpdatatablesCountArgs>(
      args?: Subset<T, wp_wpdatatablesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpdatatablesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpdatatables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpdatatablesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpdatatablesAggregateArgs>(args: Subset<T, Wp_wpdatatablesAggregateArgs>): Prisma.PrismaPromise<GetWp_wpdatatablesAggregateType<T>>

    /**
     * Group by Wp_wpdatatables.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatablesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpdatatablesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpdatatablesGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpdatatablesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpdatatablesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpdatatablesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpdatatables model
   */
  readonly fields: wp_wpdatatablesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpdatatables.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpdatatablesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpdatatables model
   */
  interface wp_wpdatatablesFieldRefs {
    readonly id: FieldRef<"wp_wpdatatables", 'Int'>
    readonly title: FieldRef<"wp_wpdatatables", 'String'>
    readonly show_title: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly table_type: FieldRef<"wp_wpdatatables", 'String'>
    readonly content: FieldRef<"wp_wpdatatables", 'String'>
    readonly filtering: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly filtering_form: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly sorting: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly tools: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly server_side: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly editable: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly inline_editing: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly popover_tools: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly editor_roles: FieldRef<"wp_wpdatatables", 'String'>
    readonly mysql_table_name: FieldRef<"wp_wpdatatables", 'String'>
    readonly edit_only_own_rows: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly userid_column_id: FieldRef<"wp_wpdatatables", 'Int'>
    readonly display_length: FieldRef<"wp_wpdatatables", 'Int'>
    readonly auto_refresh: FieldRef<"wp_wpdatatables", 'Int'>
    readonly fixed_columns: FieldRef<"wp_wpdatatables", 'Int'>
    readonly fixed_layout: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly responsive: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly scrollable: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly word_wrap: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly hide_before_load: FieldRef<"wp_wpdatatables", 'Boolean'>
    readonly var1: FieldRef<"wp_wpdatatables", 'String'>
    readonly var2: FieldRef<"wp_wpdatatables", 'String'>
    readonly var3: FieldRef<"wp_wpdatatables", 'String'>
    readonly tabletools_config: FieldRef<"wp_wpdatatables", 'String'>
    readonly advanced_settings: FieldRef<"wp_wpdatatables", 'String'>
    readonly connection: FieldRef<"wp_wpdatatables", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpdatatables findUnique
   */
  export type wp_wpdatatablesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables to fetch.
     */
    where: wp_wpdatatablesWhereUniqueInput
  }

  /**
   * wp_wpdatatables findUniqueOrThrow
   */
  export type wp_wpdatatablesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables to fetch.
     */
    where: wp_wpdatatablesWhereUniqueInput
  }

  /**
   * wp_wpdatatables findFirst
   */
  export type wp_wpdatatablesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables to fetch.
     */
    where?: wp_wpdatatablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables to fetch.
     */
    orderBy?: wp_wpdatatablesOrderByWithRelationInput | wp_wpdatatablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatatables.
     */
    cursor?: wp_wpdatatablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatatables.
     */
    distinct?: Wp_wpdatatablesScalarFieldEnum | Wp_wpdatatablesScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables findFirstOrThrow
   */
  export type wp_wpdatatablesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables to fetch.
     */
    where?: wp_wpdatatablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables to fetch.
     */
    orderBy?: wp_wpdatatablesOrderByWithRelationInput | wp_wpdatatablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatatables.
     */
    cursor?: wp_wpdatatablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatatables.
     */
    distinct?: Wp_wpdatatablesScalarFieldEnum | Wp_wpdatatablesScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables findMany
   */
  export type wp_wpdatatablesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables to fetch.
     */
    where?: wp_wpdatatablesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables to fetch.
     */
    orderBy?: wp_wpdatatablesOrderByWithRelationInput | wp_wpdatatablesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpdatatables.
     */
    cursor?: wp_wpdatatablesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables.
     */
    skip?: number
    distinct?: Wp_wpdatatablesScalarFieldEnum | Wp_wpdatatablesScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables create
   */
  export type wp_wpdatatablesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpdatatables.
     */
    data: XOR<wp_wpdatatablesCreateInput, wp_wpdatatablesUncheckedCreateInput>
  }

  /**
   * wp_wpdatatables createMany
   */
  export type wp_wpdatatablesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpdatatables.
     */
    data: wp_wpdatatablesCreateManyInput | wp_wpdatatablesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpdatatables update
   */
  export type wp_wpdatatablesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpdatatables.
     */
    data: XOR<wp_wpdatatablesUpdateInput, wp_wpdatatablesUncheckedUpdateInput>
    /**
     * Choose, which wp_wpdatatables to update.
     */
    where: wp_wpdatatablesWhereUniqueInput
  }

  /**
   * wp_wpdatatables updateMany
   */
  export type wp_wpdatatablesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpdatatables.
     */
    data: XOR<wp_wpdatatablesUpdateManyMutationInput, wp_wpdatatablesUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpdatatables to update
     */
    where?: wp_wpdatatablesWhereInput
    /**
     * Limit how many wp_wpdatatables to update.
     */
    limit?: number
  }

  /**
   * wp_wpdatatables upsert
   */
  export type wp_wpdatatablesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpdatatables to update in case it exists.
     */
    where: wp_wpdatatablesWhereUniqueInput
    /**
     * In case the wp_wpdatatables found by the `where` argument doesn't exist, create a new wp_wpdatatables with this data.
     */
    create: XOR<wp_wpdatatablesCreateInput, wp_wpdatatablesUncheckedCreateInput>
    /**
     * In case the wp_wpdatatables was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpdatatablesUpdateInput, wp_wpdatatablesUncheckedUpdateInput>
  }

  /**
   * wp_wpdatatables delete
   */
  export type wp_wpdatatablesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
    /**
     * Filter which wp_wpdatatables to delete.
     */
    where: wp_wpdatatablesWhereUniqueInput
  }

  /**
   * wp_wpdatatables deleteMany
   */
  export type wp_wpdatatablesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatatables to delete
     */
    where?: wp_wpdatatablesWhereInput
    /**
     * Limit how many wp_wpdatatables to delete.
     */
    limit?: number
  }

  /**
   * wp_wpdatatables without action
   */
  export type wp_wpdatatablesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables
     */
    select?: wp_wpdatatablesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables
     */
    omit?: wp_wpdatatablesOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpdatatables_columns
   */

  export type AggregateWp_wpdatatables_columns = {
    _count: Wp_wpdatatables_columnsCountAggregateOutputType | null
    _avg: Wp_wpdatatables_columnsAvgAggregateOutputType | null
    _sum: Wp_wpdatatables_columnsSumAggregateOutputType | null
    _min: Wp_wpdatatables_columnsMinAggregateOutputType | null
    _max: Wp_wpdatatables_columnsMaxAggregateOutputType | null
  }

  export type Wp_wpdatatables_columnsAvgAggregateOutputType = {
    id: number | null
    table_id: number | null
    pos: number | null
  }

  export type Wp_wpdatatables_columnsSumAggregateOutputType = {
    id: number | null
    table_id: number | null
    pos: number | null
  }

  export type Wp_wpdatatables_columnsMinAggregateOutputType = {
    id: number | null
    table_id: number | null
    orig_header: string | null
    display_header: string | null
    filter_type: $Enums.wp_wpdatatables_columns_filter_type | null
    column_type: $Enums.wp_wpdatatables_columns_column_type | null
    input_type: $Enums.wp_wpdatatables_columns_input_type | null
    input_mandatory: boolean | null
    id_column: boolean | null
    group_column: boolean | null
    sort_column: boolean | null
    hide_on_phones: boolean | null
    hide_on_tablets: boolean | null
    visible: boolean | null
    sum_column: boolean | null
    skip_thousands_separator: boolean | null
    width: string | null
    possible_values: string | null
    default_value: string | null
    css_class: string | null
    text_before: string | null
    text_after: string | null
    formatting_rules: string | null
    calc_formula: string | null
    color: string | null
    advanced_settings: string | null
    pos: number | null
  }

  export type Wp_wpdatatables_columnsMaxAggregateOutputType = {
    id: number | null
    table_id: number | null
    orig_header: string | null
    display_header: string | null
    filter_type: $Enums.wp_wpdatatables_columns_filter_type | null
    column_type: $Enums.wp_wpdatatables_columns_column_type | null
    input_type: $Enums.wp_wpdatatables_columns_input_type | null
    input_mandatory: boolean | null
    id_column: boolean | null
    group_column: boolean | null
    sort_column: boolean | null
    hide_on_phones: boolean | null
    hide_on_tablets: boolean | null
    visible: boolean | null
    sum_column: boolean | null
    skip_thousands_separator: boolean | null
    width: string | null
    possible_values: string | null
    default_value: string | null
    css_class: string | null
    text_before: string | null
    text_after: string | null
    formatting_rules: string | null
    calc_formula: string | null
    color: string | null
    advanced_settings: string | null
    pos: number | null
  }

  export type Wp_wpdatatables_columnsCountAggregateOutputType = {
    id: number
    table_id: number
    orig_header: number
    display_header: number
    filter_type: number
    column_type: number
    input_type: number
    input_mandatory: number
    id_column: number
    group_column: number
    sort_column: number
    hide_on_phones: number
    hide_on_tablets: number
    visible: number
    sum_column: number
    skip_thousands_separator: number
    width: number
    possible_values: number
    default_value: number
    css_class: number
    text_before: number
    text_after: number
    formatting_rules: number
    calc_formula: number
    color: number
    advanced_settings: number
    pos: number
    _all: number
  }


  export type Wp_wpdatatables_columnsAvgAggregateInputType = {
    id?: true
    table_id?: true
    pos?: true
  }

  export type Wp_wpdatatables_columnsSumAggregateInputType = {
    id?: true
    table_id?: true
    pos?: true
  }

  export type Wp_wpdatatables_columnsMinAggregateInputType = {
    id?: true
    table_id?: true
    orig_header?: true
    display_header?: true
    filter_type?: true
    column_type?: true
    input_type?: true
    input_mandatory?: true
    id_column?: true
    group_column?: true
    sort_column?: true
    hide_on_phones?: true
    hide_on_tablets?: true
    visible?: true
    sum_column?: true
    skip_thousands_separator?: true
    width?: true
    possible_values?: true
    default_value?: true
    css_class?: true
    text_before?: true
    text_after?: true
    formatting_rules?: true
    calc_formula?: true
    color?: true
    advanced_settings?: true
    pos?: true
  }

  export type Wp_wpdatatables_columnsMaxAggregateInputType = {
    id?: true
    table_id?: true
    orig_header?: true
    display_header?: true
    filter_type?: true
    column_type?: true
    input_type?: true
    input_mandatory?: true
    id_column?: true
    group_column?: true
    sort_column?: true
    hide_on_phones?: true
    hide_on_tablets?: true
    visible?: true
    sum_column?: true
    skip_thousands_separator?: true
    width?: true
    possible_values?: true
    default_value?: true
    css_class?: true
    text_before?: true
    text_after?: true
    formatting_rules?: true
    calc_formula?: true
    color?: true
    advanced_settings?: true
    pos?: true
  }

  export type Wp_wpdatatables_columnsCountAggregateInputType = {
    id?: true
    table_id?: true
    orig_header?: true
    display_header?: true
    filter_type?: true
    column_type?: true
    input_type?: true
    input_mandatory?: true
    id_column?: true
    group_column?: true
    sort_column?: true
    hide_on_phones?: true
    hide_on_tablets?: true
    visible?: true
    sum_column?: true
    skip_thousands_separator?: true
    width?: true
    possible_values?: true
    default_value?: true
    css_class?: true
    text_before?: true
    text_after?: true
    formatting_rules?: true
    calc_formula?: true
    color?: true
    advanced_settings?: true
    pos?: true
    _all?: true
  }

  export type Wp_wpdatatables_columnsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatatables_columns to aggregate.
     */
    where?: wp_wpdatatables_columnsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_columns to fetch.
     */
    orderBy?: wp_wpdatatables_columnsOrderByWithRelationInput | wp_wpdatatables_columnsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpdatatables_columnsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_columns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_columns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpdatatables_columns
    **/
    _count?: true | Wp_wpdatatables_columnsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpdatatables_columnsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpdatatables_columnsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpdatatables_columnsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpdatatables_columnsMaxAggregateInputType
  }

  export type GetWp_wpdatatables_columnsAggregateType<T extends Wp_wpdatatables_columnsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpdatatables_columns]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpdatatables_columns[P]>
      : GetScalarType<T[P], AggregateWp_wpdatatables_columns[P]>
  }




  export type wp_wpdatatables_columnsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpdatatables_columnsWhereInput
    orderBy?: wp_wpdatatables_columnsOrderByWithAggregationInput | wp_wpdatatables_columnsOrderByWithAggregationInput[]
    by: Wp_wpdatatables_columnsScalarFieldEnum[] | Wp_wpdatatables_columnsScalarFieldEnum
    having?: wp_wpdatatables_columnsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpdatatables_columnsCountAggregateInputType | true
    _avg?: Wp_wpdatatables_columnsAvgAggregateInputType
    _sum?: Wp_wpdatatables_columnsSumAggregateInputType
    _min?: Wp_wpdatatables_columnsMinAggregateInputType
    _max?: Wp_wpdatatables_columnsMaxAggregateInputType
  }

  export type Wp_wpdatatables_columnsGroupByOutputType = {
    id: number
    table_id: number
    orig_header: string
    display_header: string
    filter_type: $Enums.wp_wpdatatables_columns_filter_type
    column_type: $Enums.wp_wpdatatables_columns_column_type
    input_type: $Enums.wp_wpdatatables_columns_input_type
    input_mandatory: boolean
    id_column: boolean
    group_column: boolean
    sort_column: boolean
    hide_on_phones: boolean
    hide_on_tablets: boolean
    visible: boolean
    sum_column: boolean
    skip_thousands_separator: boolean
    width: string
    possible_values: string
    default_value: string
    css_class: string
    text_before: string
    text_after: string
    formatting_rules: string
    calc_formula: string
    color: string
    advanced_settings: string
    pos: number
    _count: Wp_wpdatatables_columnsCountAggregateOutputType | null
    _avg: Wp_wpdatatables_columnsAvgAggregateOutputType | null
    _sum: Wp_wpdatatables_columnsSumAggregateOutputType | null
    _min: Wp_wpdatatables_columnsMinAggregateOutputType | null
    _max: Wp_wpdatatables_columnsMaxAggregateOutputType | null
  }

  type GetWp_wpdatatables_columnsGroupByPayload<T extends wp_wpdatatables_columnsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpdatatables_columnsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpdatatables_columnsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpdatatables_columnsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpdatatables_columnsGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpdatatables_columnsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_id?: boolean
    orig_header?: boolean
    display_header?: boolean
    filter_type?: boolean
    column_type?: boolean
    input_type?: boolean
    input_mandatory?: boolean
    id_column?: boolean
    group_column?: boolean
    sort_column?: boolean
    hide_on_phones?: boolean
    hide_on_tablets?: boolean
    visible?: boolean
    sum_column?: boolean
    skip_thousands_separator?: boolean
    width?: boolean
    possible_values?: boolean
    default_value?: boolean
    css_class?: boolean
    text_before?: boolean
    text_after?: boolean
    formatting_rules?: boolean
    calc_formula?: boolean
    color?: boolean
    advanced_settings?: boolean
    pos?: boolean
  }, ExtArgs["result"]["wp_wpdatatables_columns"]>



  export type wp_wpdatatables_columnsSelectScalar = {
    id?: boolean
    table_id?: boolean
    orig_header?: boolean
    display_header?: boolean
    filter_type?: boolean
    column_type?: boolean
    input_type?: boolean
    input_mandatory?: boolean
    id_column?: boolean
    group_column?: boolean
    sort_column?: boolean
    hide_on_phones?: boolean
    hide_on_tablets?: boolean
    visible?: boolean
    sum_column?: boolean
    skip_thousands_separator?: boolean
    width?: boolean
    possible_values?: boolean
    default_value?: boolean
    css_class?: boolean
    text_before?: boolean
    text_after?: boolean
    formatting_rules?: boolean
    calc_formula?: boolean
    color?: boolean
    advanced_settings?: boolean
    pos?: boolean
  }

  export type wp_wpdatatables_columnsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "table_id" | "orig_header" | "display_header" | "filter_type" | "column_type" | "input_type" | "input_mandatory" | "id_column" | "group_column" | "sort_column" | "hide_on_phones" | "hide_on_tablets" | "visible" | "sum_column" | "skip_thousands_separator" | "width" | "possible_values" | "default_value" | "css_class" | "text_before" | "text_after" | "formatting_rules" | "calc_formula" | "color" | "advanced_settings" | "pos", ExtArgs["result"]["wp_wpdatatables_columns"]>

  export type $wp_wpdatatables_columnsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpdatatables_columns"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      table_id: number
      orig_header: string
      display_header: string
      filter_type: $Enums.wp_wpdatatables_columns_filter_type
      column_type: $Enums.wp_wpdatatables_columns_column_type
      input_type: $Enums.wp_wpdatatables_columns_input_type
      input_mandatory: boolean
      id_column: boolean
      group_column: boolean
      sort_column: boolean
      hide_on_phones: boolean
      hide_on_tablets: boolean
      visible: boolean
      sum_column: boolean
      skip_thousands_separator: boolean
      width: string
      possible_values: string
      default_value: string
      css_class: string
      text_before: string
      text_after: string
      formatting_rules: string
      calc_formula: string
      color: string
      advanced_settings: string
      pos: number
    }, ExtArgs["result"]["wp_wpdatatables_columns"]>
    composites: {}
  }

  type wp_wpdatatables_columnsGetPayload<S extends boolean | null | undefined | wp_wpdatatables_columnsDefaultArgs> = $Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload, S>

  type wp_wpdatatables_columnsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpdatatables_columnsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpdatatables_columnsCountAggregateInputType | true
    }

  export interface wp_wpdatatables_columnsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpdatatables_columns'], meta: { name: 'wp_wpdatatables_columns' } }
    /**
     * Find zero or one Wp_wpdatatables_columns that matches the filter.
     * @param {wp_wpdatatables_columnsFindUniqueArgs} args - Arguments to find a Wp_wpdatatables_columns
     * @example
     * // Get one Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpdatatables_columnsFindUniqueArgs>(args: SelectSubset<T, wp_wpdatatables_columnsFindUniqueArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpdatatables_columns that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpdatatables_columnsFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpdatatables_columns
     * @example
     * // Get one Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpdatatables_columnsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpdatatables_columnsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatatables_columns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_columnsFindFirstArgs} args - Arguments to find a Wp_wpdatatables_columns
     * @example
     * // Get one Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpdatatables_columnsFindFirstArgs>(args?: SelectSubset<T, wp_wpdatatables_columnsFindFirstArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatatables_columns that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_columnsFindFirstOrThrowArgs} args - Arguments to find a Wp_wpdatatables_columns
     * @example
     * // Get one Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpdatatables_columnsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpdatatables_columnsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpdatatables_columns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_columnsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.findMany()
     * 
     * // Get first 10 Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpdatatables_columnsWithIdOnly = await prisma.wp_wpdatatables_columns.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpdatatables_columnsFindManyArgs>(args?: SelectSubset<T, wp_wpdatatables_columnsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpdatatables_columns.
     * @param {wp_wpdatatables_columnsCreateArgs} args - Arguments to create a Wp_wpdatatables_columns.
     * @example
     * // Create one Wp_wpdatatables_columns
     * const Wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.create({
     *   data: {
     *     // ... data to create a Wp_wpdatatables_columns
     *   }
     * })
     * 
     */
    create<T extends wp_wpdatatables_columnsCreateArgs>(args: SelectSubset<T, wp_wpdatatables_columnsCreateArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpdatatables_columns.
     * @param {wp_wpdatatables_columnsCreateManyArgs} args - Arguments to create many Wp_wpdatatables_columns.
     * @example
     * // Create many Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpdatatables_columnsCreateManyArgs>(args?: SelectSubset<T, wp_wpdatatables_columnsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpdatatables_columns.
     * @param {wp_wpdatatables_columnsDeleteArgs} args - Arguments to delete one Wp_wpdatatables_columns.
     * @example
     * // Delete one Wp_wpdatatables_columns
     * const Wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpdatatables_columns
     *   }
     * })
     * 
     */
    delete<T extends wp_wpdatatables_columnsDeleteArgs>(args: SelectSubset<T, wp_wpdatatables_columnsDeleteArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpdatatables_columns.
     * @param {wp_wpdatatables_columnsUpdateArgs} args - Arguments to update one Wp_wpdatatables_columns.
     * @example
     * // Update one Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpdatatables_columnsUpdateArgs>(args: SelectSubset<T, wp_wpdatatables_columnsUpdateArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpdatatables_columns.
     * @param {wp_wpdatatables_columnsDeleteManyArgs} args - Arguments to filter Wp_wpdatatables_columns to delete.
     * @example
     * // Delete a few Wp_wpdatatables_columns
     * const { count } = await prisma.wp_wpdatatables_columns.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpdatatables_columnsDeleteManyArgs>(args?: SelectSubset<T, wp_wpdatatables_columnsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpdatatables_columns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_columnsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpdatatables_columnsUpdateManyArgs>(args: SelectSubset<T, wp_wpdatatables_columnsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpdatatables_columns.
     * @param {wp_wpdatatables_columnsUpsertArgs} args - Arguments to update or create a Wp_wpdatatables_columns.
     * @example
     * // Update or create a Wp_wpdatatables_columns
     * const wp_wpdatatables_columns = await prisma.wp_wpdatatables_columns.upsert({
     *   create: {
     *     // ... data to create a Wp_wpdatatables_columns
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpdatatables_columns we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpdatatables_columnsUpsertArgs>(args: SelectSubset<T, wp_wpdatatables_columnsUpsertArgs<ExtArgs>>): Prisma__wp_wpdatatables_columnsClient<$Result.GetResult<Prisma.$wp_wpdatatables_columnsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpdatatables_columns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_columnsCountArgs} args - Arguments to filter Wp_wpdatatables_columns to count.
     * @example
     * // Count the number of Wp_wpdatatables_columns
     * const count = await prisma.wp_wpdatatables_columns.count({
     *   where: {
     *     // ... the filter for the Wp_wpdatatables_columns we want to count
     *   }
     * })
    **/
    count<T extends wp_wpdatatables_columnsCountArgs>(
      args?: Subset<T, wp_wpdatatables_columnsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpdatatables_columnsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpdatatables_columns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpdatatables_columnsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpdatatables_columnsAggregateArgs>(args: Subset<T, Wp_wpdatatables_columnsAggregateArgs>): Prisma.PrismaPromise<GetWp_wpdatatables_columnsAggregateType<T>>

    /**
     * Group by Wp_wpdatatables_columns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_columnsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpdatatables_columnsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpdatatables_columnsGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpdatatables_columnsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpdatatables_columnsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpdatatables_columnsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpdatatables_columns model
   */
  readonly fields: wp_wpdatatables_columnsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpdatatables_columns.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpdatatables_columnsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpdatatables_columns model
   */
  interface wp_wpdatatables_columnsFieldRefs {
    readonly id: FieldRef<"wp_wpdatatables_columns", 'Int'>
    readonly table_id: FieldRef<"wp_wpdatatables_columns", 'Int'>
    readonly orig_header: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly display_header: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly filter_type: FieldRef<"wp_wpdatatables_columns", 'wp_wpdatatables_columns_filter_type'>
    readonly column_type: FieldRef<"wp_wpdatatables_columns", 'wp_wpdatatables_columns_column_type'>
    readonly input_type: FieldRef<"wp_wpdatatables_columns", 'wp_wpdatatables_columns_input_type'>
    readonly input_mandatory: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly id_column: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly group_column: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly sort_column: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly hide_on_phones: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly hide_on_tablets: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly visible: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly sum_column: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly skip_thousands_separator: FieldRef<"wp_wpdatatables_columns", 'Boolean'>
    readonly width: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly possible_values: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly default_value: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly css_class: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly text_before: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly text_after: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly formatting_rules: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly calc_formula: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly color: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly advanced_settings: FieldRef<"wp_wpdatatables_columns", 'String'>
    readonly pos: FieldRef<"wp_wpdatatables_columns", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpdatatables_columns findUnique
   */
  export type wp_wpdatatables_columnsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_columns to fetch.
     */
    where: wp_wpdatatables_columnsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_columns findUniqueOrThrow
   */
  export type wp_wpdatatables_columnsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_columns to fetch.
     */
    where: wp_wpdatatables_columnsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_columns findFirst
   */
  export type wp_wpdatatables_columnsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_columns to fetch.
     */
    where?: wp_wpdatatables_columnsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_columns to fetch.
     */
    orderBy?: wp_wpdatatables_columnsOrderByWithRelationInput | wp_wpdatatables_columnsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatatables_columns.
     */
    cursor?: wp_wpdatatables_columnsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_columns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_columns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatatables_columns.
     */
    distinct?: Wp_wpdatatables_columnsScalarFieldEnum | Wp_wpdatatables_columnsScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables_columns findFirstOrThrow
   */
  export type wp_wpdatatables_columnsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_columns to fetch.
     */
    where?: wp_wpdatatables_columnsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_columns to fetch.
     */
    orderBy?: wp_wpdatatables_columnsOrderByWithRelationInput | wp_wpdatatables_columnsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatatables_columns.
     */
    cursor?: wp_wpdatatables_columnsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_columns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_columns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatatables_columns.
     */
    distinct?: Wp_wpdatatables_columnsScalarFieldEnum | Wp_wpdatatables_columnsScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables_columns findMany
   */
  export type wp_wpdatatables_columnsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_columns to fetch.
     */
    where?: wp_wpdatatables_columnsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_columns to fetch.
     */
    orderBy?: wp_wpdatatables_columnsOrderByWithRelationInput | wp_wpdatatables_columnsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpdatatables_columns.
     */
    cursor?: wp_wpdatatables_columnsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_columns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_columns.
     */
    skip?: number
    distinct?: Wp_wpdatatables_columnsScalarFieldEnum | Wp_wpdatatables_columnsScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables_columns create
   */
  export type wp_wpdatatables_columnsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpdatatables_columns.
     */
    data: XOR<wp_wpdatatables_columnsCreateInput, wp_wpdatatables_columnsUncheckedCreateInput>
  }

  /**
   * wp_wpdatatables_columns createMany
   */
  export type wp_wpdatatables_columnsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpdatatables_columns.
     */
    data: wp_wpdatatables_columnsCreateManyInput | wp_wpdatatables_columnsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpdatatables_columns update
   */
  export type wp_wpdatatables_columnsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpdatatables_columns.
     */
    data: XOR<wp_wpdatatables_columnsUpdateInput, wp_wpdatatables_columnsUncheckedUpdateInput>
    /**
     * Choose, which wp_wpdatatables_columns to update.
     */
    where: wp_wpdatatables_columnsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_columns updateMany
   */
  export type wp_wpdatatables_columnsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpdatatables_columns.
     */
    data: XOR<wp_wpdatatables_columnsUpdateManyMutationInput, wp_wpdatatables_columnsUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpdatatables_columns to update
     */
    where?: wp_wpdatatables_columnsWhereInput
    /**
     * Limit how many wp_wpdatatables_columns to update.
     */
    limit?: number
  }

  /**
   * wp_wpdatatables_columns upsert
   */
  export type wp_wpdatatables_columnsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpdatatables_columns to update in case it exists.
     */
    where: wp_wpdatatables_columnsWhereUniqueInput
    /**
     * In case the wp_wpdatatables_columns found by the `where` argument doesn't exist, create a new wp_wpdatatables_columns with this data.
     */
    create: XOR<wp_wpdatatables_columnsCreateInput, wp_wpdatatables_columnsUncheckedCreateInput>
    /**
     * In case the wp_wpdatatables_columns was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpdatatables_columnsUpdateInput, wp_wpdatatables_columnsUncheckedUpdateInput>
  }

  /**
   * wp_wpdatatables_columns delete
   */
  export type wp_wpdatatables_columnsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
    /**
     * Filter which wp_wpdatatables_columns to delete.
     */
    where: wp_wpdatatables_columnsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_columns deleteMany
   */
  export type wp_wpdatatables_columnsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatatables_columns to delete
     */
    where?: wp_wpdatatables_columnsWhereInput
    /**
     * Limit how many wp_wpdatatables_columns to delete.
     */
    limit?: number
  }

  /**
   * wp_wpdatatables_columns without action
   */
  export type wp_wpdatatables_columnsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_columns
     */
    select?: wp_wpdatatables_columnsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_columns
     */
    omit?: wp_wpdatatables_columnsOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpdatatables_rows
   */

  export type AggregateWp_wpdatatables_rows = {
    _count: Wp_wpdatatables_rowsCountAggregateOutputType | null
    _avg: Wp_wpdatatables_rowsAvgAggregateOutputType | null
    _sum: Wp_wpdatatables_rowsSumAggregateOutputType | null
    _min: Wp_wpdatatables_rowsMinAggregateOutputType | null
    _max: Wp_wpdatatables_rowsMaxAggregateOutputType | null
  }

  export type Wp_wpdatatables_rowsAvgAggregateOutputType = {
    id: number | null
    table_id: number | null
  }

  export type Wp_wpdatatables_rowsSumAggregateOutputType = {
    id: number | null
    table_id: number | null
  }

  export type Wp_wpdatatables_rowsMinAggregateOutputType = {
    id: number | null
    table_id: number | null
    data: string | null
  }

  export type Wp_wpdatatables_rowsMaxAggregateOutputType = {
    id: number | null
    table_id: number | null
    data: string | null
  }

  export type Wp_wpdatatables_rowsCountAggregateOutputType = {
    id: number
    table_id: number
    data: number
    _all: number
  }


  export type Wp_wpdatatables_rowsAvgAggregateInputType = {
    id?: true
    table_id?: true
  }

  export type Wp_wpdatatables_rowsSumAggregateInputType = {
    id?: true
    table_id?: true
  }

  export type Wp_wpdatatables_rowsMinAggregateInputType = {
    id?: true
    table_id?: true
    data?: true
  }

  export type Wp_wpdatatables_rowsMaxAggregateInputType = {
    id?: true
    table_id?: true
    data?: true
  }

  export type Wp_wpdatatables_rowsCountAggregateInputType = {
    id?: true
    table_id?: true
    data?: true
    _all?: true
  }

  export type Wp_wpdatatables_rowsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatatables_rows to aggregate.
     */
    where?: wp_wpdatatables_rowsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_rows to fetch.
     */
    orderBy?: wp_wpdatatables_rowsOrderByWithRelationInput | wp_wpdatatables_rowsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpdatatables_rowsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_rows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_rows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpdatatables_rows
    **/
    _count?: true | Wp_wpdatatables_rowsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpdatatables_rowsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpdatatables_rowsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpdatatables_rowsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpdatatables_rowsMaxAggregateInputType
  }

  export type GetWp_wpdatatables_rowsAggregateType<T extends Wp_wpdatatables_rowsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpdatatables_rows]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpdatatables_rows[P]>
      : GetScalarType<T[P], AggregateWp_wpdatatables_rows[P]>
  }




  export type wp_wpdatatables_rowsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpdatatables_rowsWhereInput
    orderBy?: wp_wpdatatables_rowsOrderByWithAggregationInput | wp_wpdatatables_rowsOrderByWithAggregationInput[]
    by: Wp_wpdatatables_rowsScalarFieldEnum[] | Wp_wpdatatables_rowsScalarFieldEnum
    having?: wp_wpdatatables_rowsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpdatatables_rowsCountAggregateInputType | true
    _avg?: Wp_wpdatatables_rowsAvgAggregateInputType
    _sum?: Wp_wpdatatables_rowsSumAggregateInputType
    _min?: Wp_wpdatatables_rowsMinAggregateInputType
    _max?: Wp_wpdatatables_rowsMaxAggregateInputType
  }

  export type Wp_wpdatatables_rowsGroupByOutputType = {
    id: number
    table_id: number
    data: string
    _count: Wp_wpdatatables_rowsCountAggregateOutputType | null
    _avg: Wp_wpdatatables_rowsAvgAggregateOutputType | null
    _sum: Wp_wpdatatables_rowsSumAggregateOutputType | null
    _min: Wp_wpdatatables_rowsMinAggregateOutputType | null
    _max: Wp_wpdatatables_rowsMaxAggregateOutputType | null
  }

  type GetWp_wpdatatables_rowsGroupByPayload<T extends wp_wpdatatables_rowsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpdatatables_rowsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpdatatables_rowsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpdatatables_rowsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpdatatables_rowsGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpdatatables_rowsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_id?: boolean
    data?: boolean
  }, ExtArgs["result"]["wp_wpdatatables_rows"]>



  export type wp_wpdatatables_rowsSelectScalar = {
    id?: boolean
    table_id?: boolean
    data?: boolean
  }

  export type wp_wpdatatables_rowsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "table_id" | "data", ExtArgs["result"]["wp_wpdatatables_rows"]>

  export type $wp_wpdatatables_rowsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpdatatables_rows"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      table_id: number
      data: string
    }, ExtArgs["result"]["wp_wpdatatables_rows"]>
    composites: {}
  }

  type wp_wpdatatables_rowsGetPayload<S extends boolean | null | undefined | wp_wpdatatables_rowsDefaultArgs> = $Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload, S>

  type wp_wpdatatables_rowsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpdatatables_rowsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpdatatables_rowsCountAggregateInputType | true
    }

  export interface wp_wpdatatables_rowsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpdatatables_rows'], meta: { name: 'wp_wpdatatables_rows' } }
    /**
     * Find zero or one Wp_wpdatatables_rows that matches the filter.
     * @param {wp_wpdatatables_rowsFindUniqueArgs} args - Arguments to find a Wp_wpdatatables_rows
     * @example
     * // Get one Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpdatatables_rowsFindUniqueArgs>(args: SelectSubset<T, wp_wpdatatables_rowsFindUniqueArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpdatatables_rows that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpdatatables_rowsFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpdatatables_rows
     * @example
     * // Get one Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpdatatables_rowsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpdatatables_rowsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatatables_rows that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_rowsFindFirstArgs} args - Arguments to find a Wp_wpdatatables_rows
     * @example
     * // Get one Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpdatatables_rowsFindFirstArgs>(args?: SelectSubset<T, wp_wpdatatables_rowsFindFirstArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpdatatables_rows that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_rowsFindFirstOrThrowArgs} args - Arguments to find a Wp_wpdatatables_rows
     * @example
     * // Get one Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpdatatables_rowsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpdatatables_rowsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpdatatables_rows that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_rowsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.findMany()
     * 
     * // Get first 10 Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpdatatables_rowsWithIdOnly = await prisma.wp_wpdatatables_rows.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpdatatables_rowsFindManyArgs>(args?: SelectSubset<T, wp_wpdatatables_rowsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpdatatables_rows.
     * @param {wp_wpdatatables_rowsCreateArgs} args - Arguments to create a Wp_wpdatatables_rows.
     * @example
     * // Create one Wp_wpdatatables_rows
     * const Wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.create({
     *   data: {
     *     // ... data to create a Wp_wpdatatables_rows
     *   }
     * })
     * 
     */
    create<T extends wp_wpdatatables_rowsCreateArgs>(args: SelectSubset<T, wp_wpdatatables_rowsCreateArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpdatatables_rows.
     * @param {wp_wpdatatables_rowsCreateManyArgs} args - Arguments to create many Wp_wpdatatables_rows.
     * @example
     * // Create many Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpdatatables_rowsCreateManyArgs>(args?: SelectSubset<T, wp_wpdatatables_rowsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpdatatables_rows.
     * @param {wp_wpdatatables_rowsDeleteArgs} args - Arguments to delete one Wp_wpdatatables_rows.
     * @example
     * // Delete one Wp_wpdatatables_rows
     * const Wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpdatatables_rows
     *   }
     * })
     * 
     */
    delete<T extends wp_wpdatatables_rowsDeleteArgs>(args: SelectSubset<T, wp_wpdatatables_rowsDeleteArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpdatatables_rows.
     * @param {wp_wpdatatables_rowsUpdateArgs} args - Arguments to update one Wp_wpdatatables_rows.
     * @example
     * // Update one Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpdatatables_rowsUpdateArgs>(args: SelectSubset<T, wp_wpdatatables_rowsUpdateArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpdatatables_rows.
     * @param {wp_wpdatatables_rowsDeleteManyArgs} args - Arguments to filter Wp_wpdatatables_rows to delete.
     * @example
     * // Delete a few Wp_wpdatatables_rows
     * const { count } = await prisma.wp_wpdatatables_rows.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpdatatables_rowsDeleteManyArgs>(args?: SelectSubset<T, wp_wpdatatables_rowsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpdatatables_rows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_rowsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpdatatables_rowsUpdateManyArgs>(args: SelectSubset<T, wp_wpdatatables_rowsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpdatatables_rows.
     * @param {wp_wpdatatables_rowsUpsertArgs} args - Arguments to update or create a Wp_wpdatatables_rows.
     * @example
     * // Update or create a Wp_wpdatatables_rows
     * const wp_wpdatatables_rows = await prisma.wp_wpdatatables_rows.upsert({
     *   create: {
     *     // ... data to create a Wp_wpdatatables_rows
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpdatatables_rows we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpdatatables_rowsUpsertArgs>(args: SelectSubset<T, wp_wpdatatables_rowsUpsertArgs<ExtArgs>>): Prisma__wp_wpdatatables_rowsClient<$Result.GetResult<Prisma.$wp_wpdatatables_rowsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpdatatables_rows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_rowsCountArgs} args - Arguments to filter Wp_wpdatatables_rows to count.
     * @example
     * // Count the number of Wp_wpdatatables_rows
     * const count = await prisma.wp_wpdatatables_rows.count({
     *   where: {
     *     // ... the filter for the Wp_wpdatatables_rows we want to count
     *   }
     * })
    **/
    count<T extends wp_wpdatatables_rowsCountArgs>(
      args?: Subset<T, wp_wpdatatables_rowsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpdatatables_rowsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpdatatables_rows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpdatatables_rowsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpdatatables_rowsAggregateArgs>(args: Subset<T, Wp_wpdatatables_rowsAggregateArgs>): Prisma.PrismaPromise<GetWp_wpdatatables_rowsAggregateType<T>>

    /**
     * Group by Wp_wpdatatables_rows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpdatatables_rowsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpdatatables_rowsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpdatatables_rowsGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpdatatables_rowsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpdatatables_rowsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpdatatables_rowsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpdatatables_rows model
   */
  readonly fields: wp_wpdatatables_rowsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpdatatables_rows.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpdatatables_rowsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpdatatables_rows model
   */
  interface wp_wpdatatables_rowsFieldRefs {
    readonly id: FieldRef<"wp_wpdatatables_rows", 'Int'>
    readonly table_id: FieldRef<"wp_wpdatatables_rows", 'Int'>
    readonly data: FieldRef<"wp_wpdatatables_rows", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpdatatables_rows findUnique
   */
  export type wp_wpdatatables_rowsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_rows to fetch.
     */
    where: wp_wpdatatables_rowsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_rows findUniqueOrThrow
   */
  export type wp_wpdatatables_rowsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_rows to fetch.
     */
    where: wp_wpdatatables_rowsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_rows findFirst
   */
  export type wp_wpdatatables_rowsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_rows to fetch.
     */
    where?: wp_wpdatatables_rowsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_rows to fetch.
     */
    orderBy?: wp_wpdatatables_rowsOrderByWithRelationInput | wp_wpdatatables_rowsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatatables_rows.
     */
    cursor?: wp_wpdatatables_rowsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_rows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_rows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatatables_rows.
     */
    distinct?: Wp_wpdatatables_rowsScalarFieldEnum | Wp_wpdatatables_rowsScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables_rows findFirstOrThrow
   */
  export type wp_wpdatatables_rowsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_rows to fetch.
     */
    where?: wp_wpdatatables_rowsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_rows to fetch.
     */
    orderBy?: wp_wpdatatables_rowsOrderByWithRelationInput | wp_wpdatatables_rowsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpdatatables_rows.
     */
    cursor?: wp_wpdatatables_rowsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_rows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_rows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpdatatables_rows.
     */
    distinct?: Wp_wpdatatables_rowsScalarFieldEnum | Wp_wpdatatables_rowsScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables_rows findMany
   */
  export type wp_wpdatatables_rowsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpdatatables_rows to fetch.
     */
    where?: wp_wpdatatables_rowsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpdatatables_rows to fetch.
     */
    orderBy?: wp_wpdatatables_rowsOrderByWithRelationInput | wp_wpdatatables_rowsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpdatatables_rows.
     */
    cursor?: wp_wpdatatables_rowsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpdatatables_rows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpdatatables_rows.
     */
    skip?: number
    distinct?: Wp_wpdatatables_rowsScalarFieldEnum | Wp_wpdatatables_rowsScalarFieldEnum[]
  }

  /**
   * wp_wpdatatables_rows create
   */
  export type wp_wpdatatables_rowsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpdatatables_rows.
     */
    data: XOR<wp_wpdatatables_rowsCreateInput, wp_wpdatatables_rowsUncheckedCreateInput>
  }

  /**
   * wp_wpdatatables_rows createMany
   */
  export type wp_wpdatatables_rowsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpdatatables_rows.
     */
    data: wp_wpdatatables_rowsCreateManyInput | wp_wpdatatables_rowsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpdatatables_rows update
   */
  export type wp_wpdatatables_rowsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpdatatables_rows.
     */
    data: XOR<wp_wpdatatables_rowsUpdateInput, wp_wpdatatables_rowsUncheckedUpdateInput>
    /**
     * Choose, which wp_wpdatatables_rows to update.
     */
    where: wp_wpdatatables_rowsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_rows updateMany
   */
  export type wp_wpdatatables_rowsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpdatatables_rows.
     */
    data: XOR<wp_wpdatatables_rowsUpdateManyMutationInput, wp_wpdatatables_rowsUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpdatatables_rows to update
     */
    where?: wp_wpdatatables_rowsWhereInput
    /**
     * Limit how many wp_wpdatatables_rows to update.
     */
    limit?: number
  }

  /**
   * wp_wpdatatables_rows upsert
   */
  export type wp_wpdatatables_rowsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpdatatables_rows to update in case it exists.
     */
    where: wp_wpdatatables_rowsWhereUniqueInput
    /**
     * In case the wp_wpdatatables_rows found by the `where` argument doesn't exist, create a new wp_wpdatatables_rows with this data.
     */
    create: XOR<wp_wpdatatables_rowsCreateInput, wp_wpdatatables_rowsUncheckedCreateInput>
    /**
     * In case the wp_wpdatatables_rows was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpdatatables_rowsUpdateInput, wp_wpdatatables_rowsUncheckedUpdateInput>
  }

  /**
   * wp_wpdatatables_rows delete
   */
  export type wp_wpdatatables_rowsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
    /**
     * Filter which wp_wpdatatables_rows to delete.
     */
    where: wp_wpdatatables_rowsWhereUniqueInput
  }

  /**
   * wp_wpdatatables_rows deleteMany
   */
  export type wp_wpdatatables_rowsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpdatatables_rows to delete
     */
    where?: wp_wpdatatables_rowsWhereInput
    /**
     * Limit how many wp_wpdatatables_rows to delete.
     */
    limit?: number
  }

  /**
   * wp_wpdatatables_rows without action
   */
  export type wp_wpdatatables_rowsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpdatatables_rows
     */
    select?: wp_wpdatatables_rowsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpdatatables_rows
     */
    omit?: wp_wpdatatables_rowsOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpforms_tasks_meta
   */

  export type AggregateWp_wpforms_tasks_meta = {
    _count: Wp_wpforms_tasks_metaCountAggregateOutputType | null
    _avg: Wp_wpforms_tasks_metaAvgAggregateOutputType | null
    _sum: Wp_wpforms_tasks_metaSumAggregateOutputType | null
    _min: Wp_wpforms_tasks_metaMinAggregateOutputType | null
    _max: Wp_wpforms_tasks_metaMaxAggregateOutputType | null
  }

  export type Wp_wpforms_tasks_metaAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_wpforms_tasks_metaSumAggregateOutputType = {
    id: bigint | null
  }

  export type Wp_wpforms_tasks_metaMinAggregateOutputType = {
    id: bigint | null
    action: string | null
    data: string | null
    date: Date | null
  }

  export type Wp_wpforms_tasks_metaMaxAggregateOutputType = {
    id: bigint | null
    action: string | null
    data: string | null
    date: Date | null
  }

  export type Wp_wpforms_tasks_metaCountAggregateOutputType = {
    id: number
    action: number
    data: number
    date: number
    _all: number
  }


  export type Wp_wpforms_tasks_metaAvgAggregateInputType = {
    id?: true
  }

  export type Wp_wpforms_tasks_metaSumAggregateInputType = {
    id?: true
  }

  export type Wp_wpforms_tasks_metaMinAggregateInputType = {
    id?: true
    action?: true
    data?: true
    date?: true
  }

  export type Wp_wpforms_tasks_metaMaxAggregateInputType = {
    id?: true
    action?: true
    data?: true
    date?: true
  }

  export type Wp_wpforms_tasks_metaCountAggregateInputType = {
    id?: true
    action?: true
    data?: true
    date?: true
    _all?: true
  }

  export type Wp_wpforms_tasks_metaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpforms_tasks_meta to aggregate.
     */
    where?: wp_wpforms_tasks_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpforms_tasks_metas to fetch.
     */
    orderBy?: wp_wpforms_tasks_metaOrderByWithRelationInput | wp_wpforms_tasks_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpforms_tasks_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpforms_tasks_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpforms_tasks_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpforms_tasks_metas
    **/
    _count?: true | Wp_wpforms_tasks_metaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpforms_tasks_metaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpforms_tasks_metaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpforms_tasks_metaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpforms_tasks_metaMaxAggregateInputType
  }

  export type GetWp_wpforms_tasks_metaAggregateType<T extends Wp_wpforms_tasks_metaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpforms_tasks_meta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpforms_tasks_meta[P]>
      : GetScalarType<T[P], AggregateWp_wpforms_tasks_meta[P]>
  }




  export type wp_wpforms_tasks_metaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpforms_tasks_metaWhereInput
    orderBy?: wp_wpforms_tasks_metaOrderByWithAggregationInput | wp_wpforms_tasks_metaOrderByWithAggregationInput[]
    by: Wp_wpforms_tasks_metaScalarFieldEnum[] | Wp_wpforms_tasks_metaScalarFieldEnum
    having?: wp_wpforms_tasks_metaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpforms_tasks_metaCountAggregateInputType | true
    _avg?: Wp_wpforms_tasks_metaAvgAggregateInputType
    _sum?: Wp_wpforms_tasks_metaSumAggregateInputType
    _min?: Wp_wpforms_tasks_metaMinAggregateInputType
    _max?: Wp_wpforms_tasks_metaMaxAggregateInputType
  }

  export type Wp_wpforms_tasks_metaGroupByOutputType = {
    id: bigint
    action: string
    data: string
    date: Date
    _count: Wp_wpforms_tasks_metaCountAggregateOutputType | null
    _avg: Wp_wpforms_tasks_metaAvgAggregateOutputType | null
    _sum: Wp_wpforms_tasks_metaSumAggregateOutputType | null
    _min: Wp_wpforms_tasks_metaMinAggregateOutputType | null
    _max: Wp_wpforms_tasks_metaMaxAggregateOutputType | null
  }

  type GetWp_wpforms_tasks_metaGroupByPayload<T extends wp_wpforms_tasks_metaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpforms_tasks_metaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpforms_tasks_metaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpforms_tasks_metaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpforms_tasks_metaGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpforms_tasks_metaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    data?: boolean
    date?: boolean
  }, ExtArgs["result"]["wp_wpforms_tasks_meta"]>



  export type wp_wpforms_tasks_metaSelectScalar = {
    id?: boolean
    action?: boolean
    data?: boolean
    date?: boolean
  }

  export type wp_wpforms_tasks_metaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "action" | "data" | "date", ExtArgs["result"]["wp_wpforms_tasks_meta"]>

  export type $wp_wpforms_tasks_metaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpforms_tasks_meta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      action: string
      data: string
      date: Date
    }, ExtArgs["result"]["wp_wpforms_tasks_meta"]>
    composites: {}
  }

  type wp_wpforms_tasks_metaGetPayload<S extends boolean | null | undefined | wp_wpforms_tasks_metaDefaultArgs> = $Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload, S>

  type wp_wpforms_tasks_metaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpforms_tasks_metaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpforms_tasks_metaCountAggregateInputType | true
    }

  export interface wp_wpforms_tasks_metaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpforms_tasks_meta'], meta: { name: 'wp_wpforms_tasks_meta' } }
    /**
     * Find zero or one Wp_wpforms_tasks_meta that matches the filter.
     * @param {wp_wpforms_tasks_metaFindUniqueArgs} args - Arguments to find a Wp_wpforms_tasks_meta
     * @example
     * // Get one Wp_wpforms_tasks_meta
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpforms_tasks_metaFindUniqueArgs>(args: SelectSubset<T, wp_wpforms_tasks_metaFindUniqueArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpforms_tasks_meta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpforms_tasks_metaFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpforms_tasks_meta
     * @example
     * // Get one Wp_wpforms_tasks_meta
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpforms_tasks_metaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpforms_tasks_metaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpforms_tasks_meta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpforms_tasks_metaFindFirstArgs} args - Arguments to find a Wp_wpforms_tasks_meta
     * @example
     * // Get one Wp_wpforms_tasks_meta
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpforms_tasks_metaFindFirstArgs>(args?: SelectSubset<T, wp_wpforms_tasks_metaFindFirstArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpforms_tasks_meta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpforms_tasks_metaFindFirstOrThrowArgs} args - Arguments to find a Wp_wpforms_tasks_meta
     * @example
     * // Get one Wp_wpforms_tasks_meta
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpforms_tasks_metaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpforms_tasks_metaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpforms_tasks_metas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpforms_tasks_metaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpforms_tasks_metas
     * const wp_wpforms_tasks_metas = await prisma.wp_wpforms_tasks_meta.findMany()
     * 
     * // Get first 10 Wp_wpforms_tasks_metas
     * const wp_wpforms_tasks_metas = await prisma.wp_wpforms_tasks_meta.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpforms_tasks_metaWithIdOnly = await prisma.wp_wpforms_tasks_meta.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpforms_tasks_metaFindManyArgs>(args?: SelectSubset<T, wp_wpforms_tasks_metaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpforms_tasks_meta.
     * @param {wp_wpforms_tasks_metaCreateArgs} args - Arguments to create a Wp_wpforms_tasks_meta.
     * @example
     * // Create one Wp_wpforms_tasks_meta
     * const Wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.create({
     *   data: {
     *     // ... data to create a Wp_wpforms_tasks_meta
     *   }
     * })
     * 
     */
    create<T extends wp_wpforms_tasks_metaCreateArgs>(args: SelectSubset<T, wp_wpforms_tasks_metaCreateArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpforms_tasks_metas.
     * @param {wp_wpforms_tasks_metaCreateManyArgs} args - Arguments to create many Wp_wpforms_tasks_metas.
     * @example
     * // Create many Wp_wpforms_tasks_metas
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpforms_tasks_metaCreateManyArgs>(args?: SelectSubset<T, wp_wpforms_tasks_metaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpforms_tasks_meta.
     * @param {wp_wpforms_tasks_metaDeleteArgs} args - Arguments to delete one Wp_wpforms_tasks_meta.
     * @example
     * // Delete one Wp_wpforms_tasks_meta
     * const Wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpforms_tasks_meta
     *   }
     * })
     * 
     */
    delete<T extends wp_wpforms_tasks_metaDeleteArgs>(args: SelectSubset<T, wp_wpforms_tasks_metaDeleteArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpforms_tasks_meta.
     * @param {wp_wpforms_tasks_metaUpdateArgs} args - Arguments to update one Wp_wpforms_tasks_meta.
     * @example
     * // Update one Wp_wpforms_tasks_meta
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpforms_tasks_metaUpdateArgs>(args: SelectSubset<T, wp_wpforms_tasks_metaUpdateArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpforms_tasks_metas.
     * @param {wp_wpforms_tasks_metaDeleteManyArgs} args - Arguments to filter Wp_wpforms_tasks_metas to delete.
     * @example
     * // Delete a few Wp_wpforms_tasks_metas
     * const { count } = await prisma.wp_wpforms_tasks_meta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpforms_tasks_metaDeleteManyArgs>(args?: SelectSubset<T, wp_wpforms_tasks_metaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpforms_tasks_metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpforms_tasks_metaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpforms_tasks_metas
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpforms_tasks_metaUpdateManyArgs>(args: SelectSubset<T, wp_wpforms_tasks_metaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpforms_tasks_meta.
     * @param {wp_wpforms_tasks_metaUpsertArgs} args - Arguments to update or create a Wp_wpforms_tasks_meta.
     * @example
     * // Update or create a Wp_wpforms_tasks_meta
     * const wp_wpforms_tasks_meta = await prisma.wp_wpforms_tasks_meta.upsert({
     *   create: {
     *     // ... data to create a Wp_wpforms_tasks_meta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpforms_tasks_meta we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpforms_tasks_metaUpsertArgs>(args: SelectSubset<T, wp_wpforms_tasks_metaUpsertArgs<ExtArgs>>): Prisma__wp_wpforms_tasks_metaClient<$Result.GetResult<Prisma.$wp_wpforms_tasks_metaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpforms_tasks_metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpforms_tasks_metaCountArgs} args - Arguments to filter Wp_wpforms_tasks_metas to count.
     * @example
     * // Count the number of Wp_wpforms_tasks_metas
     * const count = await prisma.wp_wpforms_tasks_meta.count({
     *   where: {
     *     // ... the filter for the Wp_wpforms_tasks_metas we want to count
     *   }
     * })
    **/
    count<T extends wp_wpforms_tasks_metaCountArgs>(
      args?: Subset<T, wp_wpforms_tasks_metaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpforms_tasks_metaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpforms_tasks_meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpforms_tasks_metaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpforms_tasks_metaAggregateArgs>(args: Subset<T, Wp_wpforms_tasks_metaAggregateArgs>): Prisma.PrismaPromise<GetWp_wpforms_tasks_metaAggregateType<T>>

    /**
     * Group by Wp_wpforms_tasks_meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpforms_tasks_metaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpforms_tasks_metaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpforms_tasks_metaGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpforms_tasks_metaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpforms_tasks_metaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpforms_tasks_metaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpforms_tasks_meta model
   */
  readonly fields: wp_wpforms_tasks_metaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpforms_tasks_meta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpforms_tasks_metaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpforms_tasks_meta model
   */
  interface wp_wpforms_tasks_metaFieldRefs {
    readonly id: FieldRef<"wp_wpforms_tasks_meta", 'BigInt'>
    readonly action: FieldRef<"wp_wpforms_tasks_meta", 'String'>
    readonly data: FieldRef<"wp_wpforms_tasks_meta", 'String'>
    readonly date: FieldRef<"wp_wpforms_tasks_meta", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpforms_tasks_meta findUnique
   */
  export type wp_wpforms_tasks_metaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpforms_tasks_meta to fetch.
     */
    where: wp_wpforms_tasks_metaWhereUniqueInput
  }

  /**
   * wp_wpforms_tasks_meta findUniqueOrThrow
   */
  export type wp_wpforms_tasks_metaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpforms_tasks_meta to fetch.
     */
    where: wp_wpforms_tasks_metaWhereUniqueInput
  }

  /**
   * wp_wpforms_tasks_meta findFirst
   */
  export type wp_wpforms_tasks_metaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpforms_tasks_meta to fetch.
     */
    where?: wp_wpforms_tasks_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpforms_tasks_metas to fetch.
     */
    orderBy?: wp_wpforms_tasks_metaOrderByWithRelationInput | wp_wpforms_tasks_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpforms_tasks_metas.
     */
    cursor?: wp_wpforms_tasks_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpforms_tasks_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpforms_tasks_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpforms_tasks_metas.
     */
    distinct?: Wp_wpforms_tasks_metaScalarFieldEnum | Wp_wpforms_tasks_metaScalarFieldEnum[]
  }

  /**
   * wp_wpforms_tasks_meta findFirstOrThrow
   */
  export type wp_wpforms_tasks_metaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpforms_tasks_meta to fetch.
     */
    where?: wp_wpforms_tasks_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpforms_tasks_metas to fetch.
     */
    orderBy?: wp_wpforms_tasks_metaOrderByWithRelationInput | wp_wpforms_tasks_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpforms_tasks_metas.
     */
    cursor?: wp_wpforms_tasks_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpforms_tasks_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpforms_tasks_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpforms_tasks_metas.
     */
    distinct?: Wp_wpforms_tasks_metaScalarFieldEnum | Wp_wpforms_tasks_metaScalarFieldEnum[]
  }

  /**
   * wp_wpforms_tasks_meta findMany
   */
  export type wp_wpforms_tasks_metaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpforms_tasks_metas to fetch.
     */
    where?: wp_wpforms_tasks_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpforms_tasks_metas to fetch.
     */
    orderBy?: wp_wpforms_tasks_metaOrderByWithRelationInput | wp_wpforms_tasks_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpforms_tasks_metas.
     */
    cursor?: wp_wpforms_tasks_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpforms_tasks_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpforms_tasks_metas.
     */
    skip?: number
    distinct?: Wp_wpforms_tasks_metaScalarFieldEnum | Wp_wpforms_tasks_metaScalarFieldEnum[]
  }

  /**
   * wp_wpforms_tasks_meta create
   */
  export type wp_wpforms_tasks_metaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpforms_tasks_meta.
     */
    data: XOR<wp_wpforms_tasks_metaCreateInput, wp_wpforms_tasks_metaUncheckedCreateInput>
  }

  /**
   * wp_wpforms_tasks_meta createMany
   */
  export type wp_wpforms_tasks_metaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpforms_tasks_metas.
     */
    data: wp_wpforms_tasks_metaCreateManyInput | wp_wpforms_tasks_metaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpforms_tasks_meta update
   */
  export type wp_wpforms_tasks_metaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpforms_tasks_meta.
     */
    data: XOR<wp_wpforms_tasks_metaUpdateInput, wp_wpforms_tasks_metaUncheckedUpdateInput>
    /**
     * Choose, which wp_wpforms_tasks_meta to update.
     */
    where: wp_wpforms_tasks_metaWhereUniqueInput
  }

  /**
   * wp_wpforms_tasks_meta updateMany
   */
  export type wp_wpforms_tasks_metaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpforms_tasks_metas.
     */
    data: XOR<wp_wpforms_tasks_metaUpdateManyMutationInput, wp_wpforms_tasks_metaUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpforms_tasks_metas to update
     */
    where?: wp_wpforms_tasks_metaWhereInput
    /**
     * Limit how many wp_wpforms_tasks_metas to update.
     */
    limit?: number
  }

  /**
   * wp_wpforms_tasks_meta upsert
   */
  export type wp_wpforms_tasks_metaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpforms_tasks_meta to update in case it exists.
     */
    where: wp_wpforms_tasks_metaWhereUniqueInput
    /**
     * In case the wp_wpforms_tasks_meta found by the `where` argument doesn't exist, create a new wp_wpforms_tasks_meta with this data.
     */
    create: XOR<wp_wpforms_tasks_metaCreateInput, wp_wpforms_tasks_metaUncheckedCreateInput>
    /**
     * In case the wp_wpforms_tasks_meta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpforms_tasks_metaUpdateInput, wp_wpforms_tasks_metaUncheckedUpdateInput>
  }

  /**
   * wp_wpforms_tasks_meta delete
   */
  export type wp_wpforms_tasks_metaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
    /**
     * Filter which wp_wpforms_tasks_meta to delete.
     */
    where: wp_wpforms_tasks_metaWhereUniqueInput
  }

  /**
   * wp_wpforms_tasks_meta deleteMany
   */
  export type wp_wpforms_tasks_metaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpforms_tasks_metas to delete
     */
    where?: wp_wpforms_tasks_metaWhereInput
    /**
     * Limit how many wp_wpforms_tasks_metas to delete.
     */
    limit?: number
  }

  /**
   * wp_wpforms_tasks_meta without action
   */
  export type wp_wpforms_tasks_metaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpforms_tasks_meta
     */
    select?: wp_wpforms_tasks_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpforms_tasks_meta
     */
    omit?: wp_wpforms_tasks_metaOmit<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    plan: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    plan: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    isActive: boolean | null
    profileImage: string | null
    plan: number | null
    role: string | null
    stripeId: string | null
    customerId: string | null
    planId: string | null
    planName: string | null
    subscriptionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    emailUpdate: string | null
    isPaid: boolean | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    isActive: boolean | null
    profileImage: string | null
    plan: number | null
    role: string | null
    stripeId: string | null
    customerId: string | null
    planId: string | null
    planName: string | null
    subscriptionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    emailUpdate: string | null
    isPaid: boolean | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password: number
    isActive: number
    profileImage: number
    plan: number
    role: number
    stripeId: number
    customerId: number
    planId: number
    planName: number
    subscriptionId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    emailUpdate: number
    isPaid: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    plan?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    plan?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    isActive?: true
    profileImage?: true
    plan?: true
    role?: true
    stripeId?: true
    customerId?: true
    planId?: true
    planName?: true
    subscriptionId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    emailUpdate?: true
    isPaid?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    isActive?: true
    profileImage?: true
    plan?: true
    role?: true
    stripeId?: true
    customerId?: true
    planId?: true
    planName?: true
    subscriptionId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    emailUpdate?: true
    isPaid?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    isActive?: true
    profileImage?: true
    plan?: true
    role?: true
    stripeId?: true
    customerId?: true
    planId?: true
    planName?: true
    subscriptionId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    emailUpdate?: true
    isPaid?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage: string | null
    plan: number
    role: string
    stripeId: string | null
    customerId: string | null
    planId: string | null
    planName: string | null
    subscriptionId: string | null
    createdAt: Date
    updatedAt: Date | null
    deletedAt: Date | null
    emailUpdate: string
    isPaid: boolean | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    isActive?: boolean
    profileImage?: boolean
    plan?: boolean
    role?: boolean
    stripeId?: boolean
    customerId?: boolean
    planId?: boolean
    planName?: boolean
    subscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    emailUpdate?: boolean
    isPaid?: boolean
    Portfolio?: boolean | User$PortfolioArgs<ExtArgs>
    ticketComments?: boolean | User$ticketCommentsArgs<ExtArgs>
    tickets?: boolean | User$ticketsArgs<ExtArgs>
    UserSubscription?: boolean | User$UserSubscriptionArgs<ExtArgs>
    search?: boolean | User$searchArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>



  export type UserSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    isActive?: boolean
    profileImage?: boolean
    plan?: boolean
    role?: boolean
    stripeId?: boolean
    customerId?: boolean
    planId?: boolean
    planName?: boolean
    subscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    emailUpdate?: boolean
    isPaid?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password" | "isActive" | "profileImage" | "plan" | "role" | "stripeId" | "customerId" | "planId" | "planName" | "subscriptionId" | "createdAt" | "updatedAt" | "deletedAt" | "emailUpdate" | "isPaid", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Portfolio?: boolean | User$PortfolioArgs<ExtArgs>
    ticketComments?: boolean | User$ticketCommentsArgs<ExtArgs>
    tickets?: boolean | User$ticketsArgs<ExtArgs>
    UserSubscription?: boolean | User$UserSubscriptionArgs<ExtArgs>
    search?: boolean | User$searchArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      Portfolio: Prisma.$PortfolioPayload<ExtArgs>[]
      ticketComments: Prisma.$TicketCommentPayload<ExtArgs>[]
      tickets: Prisma.$TicketPayload<ExtArgs>[]
      UserSubscription: Prisma.$UserSubscriptionPayload<ExtArgs>[]
      search: Prisma.$SearchPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      email: string
      password: string
      isActive: boolean
      profileImage: string | null
      plan: number
      role: string
      stripeId: string | null
      customerId: string | null
      planId: string | null
      planName: string | null
      subscriptionId: string | null
      createdAt: Date
      updatedAt: Date | null
      deletedAt: Date | null
      emailUpdate: string
      isPaid: boolean | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Portfolio<T extends User$PortfolioArgs<ExtArgs> = {}>(args?: Subset<T, User$PortfolioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ticketComments<T extends User$ticketCommentsArgs<ExtArgs> = {}>(args?: Subset<T, User$ticketCommentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tickets<T extends User$ticketsArgs<ExtArgs> = {}>(args?: Subset<T, User$ticketsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    UserSubscription<T extends User$UserSubscriptionArgs<ExtArgs> = {}>(args?: Subset<T, User$UserSubscriptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    search<T extends User$searchArgs<ExtArgs> = {}>(args?: Subset<T, User$searchArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly profileImage: FieldRef<"User", 'String'>
    readonly plan: FieldRef<"User", 'Int'>
    readonly role: FieldRef<"User", 'String'>
    readonly stripeId: FieldRef<"User", 'String'>
    readonly customerId: FieldRef<"User", 'String'>
    readonly planId: FieldRef<"User", 'String'>
    readonly planName: FieldRef<"User", 'String'>
    readonly subscriptionId: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly deletedAt: FieldRef<"User", 'DateTime'>
    readonly emailUpdate: FieldRef<"User", 'String'>
    readonly isPaid: FieldRef<"User", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.Portfolio
   */
  export type User$PortfolioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    where?: PortfolioWhereInput
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    cursor?: PortfolioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * User.ticketComments
   */
  export type User$ticketCommentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    where?: TicketCommentWhereInput
    orderBy?: TicketCommentOrderByWithRelationInput | TicketCommentOrderByWithRelationInput[]
    cursor?: TicketCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketCommentScalarFieldEnum | TicketCommentScalarFieldEnum[]
  }

  /**
   * User.tickets
   */
  export type User$ticketsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    cursor?: TicketWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * User.UserSubscription
   */
  export type User$UserSubscriptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    where?: UserSubscriptionWhereInput
    orderBy?: UserSubscriptionOrderByWithRelationInput | UserSubscriptionOrderByWithRelationInput[]
    cursor?: UserSubscriptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSubscriptionScalarFieldEnum | UserSubscriptionScalarFieldEnum[]
  }

  /**
   * User.search
   */
  export type User$searchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    where?: SearchWhereInput
    orderBy?: SearchOrderByWithRelationInput | SearchOrderByWithRelationInput[]
    cursor?: SearchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SearchScalarFieldEnum | SearchScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Ticket
   */

  export type AggregateTicket = {
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  export type TicketAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type TicketSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type TicketMinAggregateOutputType = {
    id: number | null
    userId: number | null
    title: string | null
    description: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type TicketMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    title: string | null
    description: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type TicketCountAggregateOutputType = {
    id: number
    userId: number
    title: number
    description: number
    status: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type TicketAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type TicketSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type TicketMinAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type TicketMaxAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type TicketCountAggregateInputType = {
    id?: true
    userId?: true
    title?: true
    description?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type TicketAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Ticket to aggregate.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tickets
    **/
    _count?: true | TicketCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketMaxAggregateInputType
  }

  export type GetTicketAggregateType<T extends TicketAggregateArgs> = {
        [P in keyof T & keyof AggregateTicket]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicket[P]>
      : GetScalarType<T[P], AggregateTicket[P]>
  }




  export type TicketGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketWhereInput
    orderBy?: TicketOrderByWithAggregationInput | TicketOrderByWithAggregationInput[]
    by: TicketScalarFieldEnum[] | TicketScalarFieldEnum
    having?: TicketScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketCountAggregateInputType | true
    _avg?: TicketAvgAggregateInputType
    _sum?: TicketSumAggregateInputType
    _min?: TicketMinAggregateInputType
    _max?: TicketMaxAggregateInputType
  }

  export type TicketGroupByOutputType = {
    id: number
    userId: number
    title: string
    description: string
    status: string
    createdAt: Date
    updatedAt: Date | null
    deletedAt: Date | null
    _count: TicketCountAggregateOutputType | null
    _avg: TicketAvgAggregateOutputType | null
    _sum: TicketSumAggregateOutputType | null
    _min: TicketMinAggregateOutputType | null
    _max: TicketMaxAggregateOutputType | null
  }

  type GetTicketGroupByPayload<T extends TicketGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketGroupByOutputType[P]>
            : GetScalarType<T[P], TicketGroupByOutputType[P]>
        }
      >
    >


  export type TicketSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    comments?: boolean | Ticket$commentsArgs<ExtArgs>
    documents?: boolean | Ticket$documentsArgs<ExtArgs>
    postedBy?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | TicketCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticket"]>



  export type TicketSelectScalar = {
    id?: boolean
    userId?: boolean
    title?: boolean
    description?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type TicketOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "title" | "description" | "status" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["ticket"]>
  export type TicketInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    comments?: boolean | Ticket$commentsArgs<ExtArgs>
    documents?: boolean | Ticket$documentsArgs<ExtArgs>
    postedBy?: boolean | UserDefaultArgs<ExtArgs>
    _count?: boolean | TicketCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $TicketPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Ticket"
    objects: {
      comments: Prisma.$TicketCommentPayload<ExtArgs>[]
      documents: Prisma.$TicketDocumentPayload<ExtArgs>[]
      postedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      title: string
      description: string
      status: string
      createdAt: Date
      updatedAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["ticket"]>
    composites: {}
  }

  type TicketGetPayload<S extends boolean | null | undefined | TicketDefaultArgs> = $Result.GetResult<Prisma.$TicketPayload, S>

  type TicketCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TicketFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketCountAggregateInputType | true
    }

  export interface TicketDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Ticket'], meta: { name: 'Ticket' } }
    /**
     * Find zero or one Ticket that matches the filter.
     * @param {TicketFindUniqueArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketFindUniqueArgs>(args: SelectSubset<T, TicketFindUniqueArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ticket that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TicketFindUniqueOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindFirstArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketFindFirstArgs>(args?: SelectSubset<T, TicketFindFirstArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ticket that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindFirstOrThrowArgs} args - Arguments to find a Ticket
     * @example
     * // Get one Ticket
     * const ticket = await prisma.ticket.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tickets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tickets
     * const tickets = await prisma.ticket.findMany()
     * 
     * // Get first 10 Tickets
     * const tickets = await prisma.ticket.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketWithIdOnly = await prisma.ticket.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketFindManyArgs>(args?: SelectSubset<T, TicketFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ticket.
     * @param {TicketCreateArgs} args - Arguments to create a Ticket.
     * @example
     * // Create one Ticket
     * const Ticket = await prisma.ticket.create({
     *   data: {
     *     // ... data to create a Ticket
     *   }
     * })
     * 
     */
    create<T extends TicketCreateArgs>(args: SelectSubset<T, TicketCreateArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tickets.
     * @param {TicketCreateManyArgs} args - Arguments to create many Tickets.
     * @example
     * // Create many Tickets
     * const ticket = await prisma.ticket.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketCreateManyArgs>(args?: SelectSubset<T, TicketCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ticket.
     * @param {TicketDeleteArgs} args - Arguments to delete one Ticket.
     * @example
     * // Delete one Ticket
     * const Ticket = await prisma.ticket.delete({
     *   where: {
     *     // ... filter to delete one Ticket
     *   }
     * })
     * 
     */
    delete<T extends TicketDeleteArgs>(args: SelectSubset<T, TicketDeleteArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ticket.
     * @param {TicketUpdateArgs} args - Arguments to update one Ticket.
     * @example
     * // Update one Ticket
     * const ticket = await prisma.ticket.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketUpdateArgs>(args: SelectSubset<T, TicketUpdateArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tickets.
     * @param {TicketDeleteManyArgs} args - Arguments to filter Tickets to delete.
     * @example
     * // Delete a few Tickets
     * const { count } = await prisma.ticket.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketDeleteManyArgs>(args?: SelectSubset<T, TicketDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tickets
     * const ticket = await prisma.ticket.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketUpdateManyArgs>(args: SelectSubset<T, TicketUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ticket.
     * @param {TicketUpsertArgs} args - Arguments to update or create a Ticket.
     * @example
     * // Update or create a Ticket
     * const ticket = await prisma.ticket.upsert({
     *   create: {
     *     // ... data to create a Ticket
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ticket we want to update
     *   }
     * })
     */
    upsert<T extends TicketUpsertArgs>(args: SelectSubset<T, TicketUpsertArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tickets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCountArgs} args - Arguments to filter Tickets to count.
     * @example
     * // Count the number of Tickets
     * const count = await prisma.ticket.count({
     *   where: {
     *     // ... the filter for the Tickets we want to count
     *   }
     * })
    **/
    count<T extends TicketCountArgs>(
      args?: Subset<T, TicketCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketAggregateArgs>(args: Subset<T, TicketAggregateArgs>): Prisma.PrismaPromise<GetTicketAggregateType<T>>

    /**
     * Group by Ticket.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketGroupByArgs['orderBy'] }
        : { orderBy?: TicketGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Ticket model
   */
  readonly fields: TicketFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Ticket.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    comments<T extends Ticket$commentsArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    documents<T extends Ticket$documentsArgs<ExtArgs> = {}>(args?: Subset<T, Ticket$documentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    postedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Ticket model
   */
  interface TicketFieldRefs {
    readonly id: FieldRef<"Ticket", 'Int'>
    readonly userId: FieldRef<"Ticket", 'Int'>
    readonly title: FieldRef<"Ticket", 'String'>
    readonly description: FieldRef<"Ticket", 'String'>
    readonly status: FieldRef<"Ticket", 'String'>
    readonly createdAt: FieldRef<"Ticket", 'DateTime'>
    readonly updatedAt: FieldRef<"Ticket", 'DateTime'>
    readonly deletedAt: FieldRef<"Ticket", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Ticket findUnique
   */
  export type TicketFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket findUniqueOrThrow
   */
  export type TicketFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket findFirst
   */
  export type TicketFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tickets.
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tickets.
     */
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Ticket findFirstOrThrow
   */
  export type TicketFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Ticket to fetch.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tickets.
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tickets.
     */
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Ticket findMany
   */
  export type TicketFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter, which Tickets to fetch.
     */
    where?: TicketWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tickets to fetch.
     */
    orderBy?: TicketOrderByWithRelationInput | TicketOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tickets.
     */
    cursor?: TicketWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tickets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tickets.
     */
    skip?: number
    distinct?: TicketScalarFieldEnum | TicketScalarFieldEnum[]
  }

  /**
   * Ticket create
   */
  export type TicketCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * The data needed to create a Ticket.
     */
    data: XOR<TicketCreateInput, TicketUncheckedCreateInput>
  }

  /**
   * Ticket createMany
   */
  export type TicketCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tickets.
     */
    data: TicketCreateManyInput | TicketCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Ticket update
   */
  export type TicketUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * The data needed to update a Ticket.
     */
    data: XOR<TicketUpdateInput, TicketUncheckedUpdateInput>
    /**
     * Choose, which Ticket to update.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket updateMany
   */
  export type TicketUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tickets.
     */
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyInput>
    /**
     * Filter which Tickets to update
     */
    where?: TicketWhereInput
    /**
     * Limit how many Tickets to update.
     */
    limit?: number
  }

  /**
   * Ticket upsert
   */
  export type TicketUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * The filter to search for the Ticket to update in case it exists.
     */
    where: TicketWhereUniqueInput
    /**
     * In case the Ticket found by the `where` argument doesn't exist, create a new Ticket with this data.
     */
    create: XOR<TicketCreateInput, TicketUncheckedCreateInput>
    /**
     * In case the Ticket was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketUpdateInput, TicketUncheckedUpdateInput>
  }

  /**
   * Ticket delete
   */
  export type TicketDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
    /**
     * Filter which Ticket to delete.
     */
    where: TicketWhereUniqueInput
  }

  /**
   * Ticket deleteMany
   */
  export type TicketDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tickets to delete
     */
    where?: TicketWhereInput
    /**
     * Limit how many Tickets to delete.
     */
    limit?: number
  }

  /**
   * Ticket.comments
   */
  export type Ticket$commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    where?: TicketCommentWhereInput
    orderBy?: TicketCommentOrderByWithRelationInput | TicketCommentOrderByWithRelationInput[]
    cursor?: TicketCommentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketCommentScalarFieldEnum | TicketCommentScalarFieldEnum[]
  }

  /**
   * Ticket.documents
   */
  export type Ticket$documentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    where?: TicketDocumentWhereInput
    orderBy?: TicketDocumentOrderByWithRelationInput | TicketDocumentOrderByWithRelationInput[]
    cursor?: TicketDocumentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TicketDocumentScalarFieldEnum | TicketDocumentScalarFieldEnum[]
  }

  /**
   * Ticket without action
   */
  export type TicketDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Ticket
     */
    select?: TicketSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Ticket
     */
    omit?: TicketOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketInclude<ExtArgs> | null
  }


  /**
   * Model TicketDocument
   */

  export type AggregateTicketDocument = {
    _count: TicketDocumentCountAggregateOutputType | null
    _avg: TicketDocumentAvgAggregateOutputType | null
    _sum: TicketDocumentSumAggregateOutputType | null
    _min: TicketDocumentMinAggregateOutputType | null
    _max: TicketDocumentMaxAggregateOutputType | null
  }

  export type TicketDocumentAvgAggregateOutputType = {
    id: number | null
    size: number | null
    ticketId: number | null
  }

  export type TicketDocumentSumAggregateOutputType = {
    id: number | null
    size: number | null
    ticketId: number | null
  }

  export type TicketDocumentMinAggregateOutputType = {
    id: number | null
    url: string | null
    name: string | null
    size: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    ticketId: number | null
  }

  export type TicketDocumentMaxAggregateOutputType = {
    id: number | null
    url: string | null
    name: string | null
    size: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    ticketId: number | null
  }

  export type TicketDocumentCountAggregateOutputType = {
    id: number
    url: number
    name: number
    size: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    ticketId: number
    _all: number
  }


  export type TicketDocumentAvgAggregateInputType = {
    id?: true
    size?: true
    ticketId?: true
  }

  export type TicketDocumentSumAggregateInputType = {
    id?: true
    size?: true
    ticketId?: true
  }

  export type TicketDocumentMinAggregateInputType = {
    id?: true
    url?: true
    name?: true
    size?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    ticketId?: true
  }

  export type TicketDocumentMaxAggregateInputType = {
    id?: true
    url?: true
    name?: true
    size?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    ticketId?: true
  }

  export type TicketDocumentCountAggregateInputType = {
    id?: true
    url?: true
    name?: true
    size?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    ticketId?: true
    _all?: true
  }

  export type TicketDocumentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketDocument to aggregate.
     */
    where?: TicketDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketDocuments to fetch.
     */
    orderBy?: TicketDocumentOrderByWithRelationInput | TicketDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TicketDocuments
    **/
    _count?: true | TicketDocumentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketDocumentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketDocumentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketDocumentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketDocumentMaxAggregateInputType
  }

  export type GetTicketDocumentAggregateType<T extends TicketDocumentAggregateArgs> = {
        [P in keyof T & keyof AggregateTicketDocument]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicketDocument[P]>
      : GetScalarType<T[P], AggregateTicketDocument[P]>
  }




  export type TicketDocumentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketDocumentWhereInput
    orderBy?: TicketDocumentOrderByWithAggregationInput | TicketDocumentOrderByWithAggregationInput[]
    by: TicketDocumentScalarFieldEnum[] | TicketDocumentScalarFieldEnum
    having?: TicketDocumentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketDocumentCountAggregateInputType | true
    _avg?: TicketDocumentAvgAggregateInputType
    _sum?: TicketDocumentSumAggregateInputType
    _min?: TicketDocumentMinAggregateInputType
    _max?: TicketDocumentMaxAggregateInputType
  }

  export type TicketDocumentGroupByOutputType = {
    id: number
    url: string
    name: string
    size: number
    createdAt: Date
    updatedAt: Date | null
    deletedAt: Date | null
    ticketId: number
    _count: TicketDocumentCountAggregateOutputType | null
    _avg: TicketDocumentAvgAggregateOutputType | null
    _sum: TicketDocumentSumAggregateOutputType | null
    _min: TicketDocumentMinAggregateOutputType | null
    _max: TicketDocumentMaxAggregateOutputType | null
  }

  type GetTicketDocumentGroupByPayload<T extends TicketDocumentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketDocumentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketDocumentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketDocumentGroupByOutputType[P]>
            : GetScalarType<T[P], TicketDocumentGroupByOutputType[P]>
        }
      >
    >


  export type TicketDocumentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    name?: boolean
    size?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    ticketId?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticketDocument"]>



  export type TicketDocumentSelectScalar = {
    id?: boolean
    url?: boolean
    name?: boolean
    size?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    ticketId?: boolean
  }

  export type TicketDocumentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "name" | "size" | "createdAt" | "updatedAt" | "deletedAt" | "ticketId", ExtArgs["result"]["ticketDocument"]>
  export type TicketDocumentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
  }

  export type $TicketDocumentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TicketDocument"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      url: string
      name: string
      size: number
      createdAt: Date
      updatedAt: Date | null
      deletedAt: Date | null
      ticketId: number
    }, ExtArgs["result"]["ticketDocument"]>
    composites: {}
  }

  type TicketDocumentGetPayload<S extends boolean | null | undefined | TicketDocumentDefaultArgs> = $Result.GetResult<Prisma.$TicketDocumentPayload, S>

  type TicketDocumentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TicketDocumentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketDocumentCountAggregateInputType | true
    }

  export interface TicketDocumentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TicketDocument'], meta: { name: 'TicketDocument' } }
    /**
     * Find zero or one TicketDocument that matches the filter.
     * @param {TicketDocumentFindUniqueArgs} args - Arguments to find a TicketDocument
     * @example
     * // Get one TicketDocument
     * const ticketDocument = await prisma.ticketDocument.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketDocumentFindUniqueArgs>(args: SelectSubset<T, TicketDocumentFindUniqueArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TicketDocument that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TicketDocumentFindUniqueOrThrowArgs} args - Arguments to find a TicketDocument
     * @example
     * // Get one TicketDocument
     * const ticketDocument = await prisma.ticketDocument.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketDocumentFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketDocumentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketDocument that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketDocumentFindFirstArgs} args - Arguments to find a TicketDocument
     * @example
     * // Get one TicketDocument
     * const ticketDocument = await prisma.ticketDocument.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketDocumentFindFirstArgs>(args?: SelectSubset<T, TicketDocumentFindFirstArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketDocument that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketDocumentFindFirstOrThrowArgs} args - Arguments to find a TicketDocument
     * @example
     * // Get one TicketDocument
     * const ticketDocument = await prisma.ticketDocument.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketDocumentFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketDocumentFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TicketDocuments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketDocumentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TicketDocuments
     * const ticketDocuments = await prisma.ticketDocument.findMany()
     * 
     * // Get first 10 TicketDocuments
     * const ticketDocuments = await prisma.ticketDocument.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketDocumentWithIdOnly = await prisma.ticketDocument.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketDocumentFindManyArgs>(args?: SelectSubset<T, TicketDocumentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TicketDocument.
     * @param {TicketDocumentCreateArgs} args - Arguments to create a TicketDocument.
     * @example
     * // Create one TicketDocument
     * const TicketDocument = await prisma.ticketDocument.create({
     *   data: {
     *     // ... data to create a TicketDocument
     *   }
     * })
     * 
     */
    create<T extends TicketDocumentCreateArgs>(args: SelectSubset<T, TicketDocumentCreateArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TicketDocuments.
     * @param {TicketDocumentCreateManyArgs} args - Arguments to create many TicketDocuments.
     * @example
     * // Create many TicketDocuments
     * const ticketDocument = await prisma.ticketDocument.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketDocumentCreateManyArgs>(args?: SelectSubset<T, TicketDocumentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TicketDocument.
     * @param {TicketDocumentDeleteArgs} args - Arguments to delete one TicketDocument.
     * @example
     * // Delete one TicketDocument
     * const TicketDocument = await prisma.ticketDocument.delete({
     *   where: {
     *     // ... filter to delete one TicketDocument
     *   }
     * })
     * 
     */
    delete<T extends TicketDocumentDeleteArgs>(args: SelectSubset<T, TicketDocumentDeleteArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TicketDocument.
     * @param {TicketDocumentUpdateArgs} args - Arguments to update one TicketDocument.
     * @example
     * // Update one TicketDocument
     * const ticketDocument = await prisma.ticketDocument.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketDocumentUpdateArgs>(args: SelectSubset<T, TicketDocumentUpdateArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TicketDocuments.
     * @param {TicketDocumentDeleteManyArgs} args - Arguments to filter TicketDocuments to delete.
     * @example
     * // Delete a few TicketDocuments
     * const { count } = await prisma.ticketDocument.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketDocumentDeleteManyArgs>(args?: SelectSubset<T, TicketDocumentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TicketDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketDocumentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TicketDocuments
     * const ticketDocument = await prisma.ticketDocument.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketDocumentUpdateManyArgs>(args: SelectSubset<T, TicketDocumentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TicketDocument.
     * @param {TicketDocumentUpsertArgs} args - Arguments to update or create a TicketDocument.
     * @example
     * // Update or create a TicketDocument
     * const ticketDocument = await prisma.ticketDocument.upsert({
     *   create: {
     *     // ... data to create a TicketDocument
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TicketDocument we want to update
     *   }
     * })
     */
    upsert<T extends TicketDocumentUpsertArgs>(args: SelectSubset<T, TicketDocumentUpsertArgs<ExtArgs>>): Prisma__TicketDocumentClient<$Result.GetResult<Prisma.$TicketDocumentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TicketDocuments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketDocumentCountArgs} args - Arguments to filter TicketDocuments to count.
     * @example
     * // Count the number of TicketDocuments
     * const count = await prisma.ticketDocument.count({
     *   where: {
     *     // ... the filter for the TicketDocuments we want to count
     *   }
     * })
    **/
    count<T extends TicketDocumentCountArgs>(
      args?: Subset<T, TicketDocumentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketDocumentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TicketDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketDocumentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketDocumentAggregateArgs>(args: Subset<T, TicketDocumentAggregateArgs>): Prisma.PrismaPromise<GetTicketDocumentAggregateType<T>>

    /**
     * Group by TicketDocument.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketDocumentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketDocumentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketDocumentGroupByArgs['orderBy'] }
        : { orderBy?: TicketDocumentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketDocumentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketDocumentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TicketDocument model
   */
  readonly fields: TicketDocumentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TicketDocument.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketDocumentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TicketDocument model
   */
  interface TicketDocumentFieldRefs {
    readonly id: FieldRef<"TicketDocument", 'Int'>
    readonly url: FieldRef<"TicketDocument", 'String'>
    readonly name: FieldRef<"TicketDocument", 'String'>
    readonly size: FieldRef<"TicketDocument", 'Int'>
    readonly createdAt: FieldRef<"TicketDocument", 'DateTime'>
    readonly updatedAt: FieldRef<"TicketDocument", 'DateTime'>
    readonly deletedAt: FieldRef<"TicketDocument", 'DateTime'>
    readonly ticketId: FieldRef<"TicketDocument", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TicketDocument findUnique
   */
  export type TicketDocumentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TicketDocument to fetch.
     */
    where: TicketDocumentWhereUniqueInput
  }

  /**
   * TicketDocument findUniqueOrThrow
   */
  export type TicketDocumentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TicketDocument to fetch.
     */
    where: TicketDocumentWhereUniqueInput
  }

  /**
   * TicketDocument findFirst
   */
  export type TicketDocumentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TicketDocument to fetch.
     */
    where?: TicketDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketDocuments to fetch.
     */
    orderBy?: TicketDocumentOrderByWithRelationInput | TicketDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketDocuments.
     */
    cursor?: TicketDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketDocuments.
     */
    distinct?: TicketDocumentScalarFieldEnum | TicketDocumentScalarFieldEnum[]
  }

  /**
   * TicketDocument findFirstOrThrow
   */
  export type TicketDocumentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TicketDocument to fetch.
     */
    where?: TicketDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketDocuments to fetch.
     */
    orderBy?: TicketDocumentOrderByWithRelationInput | TicketDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketDocuments.
     */
    cursor?: TicketDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketDocuments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketDocuments.
     */
    distinct?: TicketDocumentScalarFieldEnum | TicketDocumentScalarFieldEnum[]
  }

  /**
   * TicketDocument findMany
   */
  export type TicketDocumentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * Filter, which TicketDocuments to fetch.
     */
    where?: TicketDocumentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketDocuments to fetch.
     */
    orderBy?: TicketDocumentOrderByWithRelationInput | TicketDocumentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TicketDocuments.
     */
    cursor?: TicketDocumentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketDocuments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketDocuments.
     */
    skip?: number
    distinct?: TicketDocumentScalarFieldEnum | TicketDocumentScalarFieldEnum[]
  }

  /**
   * TicketDocument create
   */
  export type TicketDocumentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * The data needed to create a TicketDocument.
     */
    data: XOR<TicketDocumentCreateInput, TicketDocumentUncheckedCreateInput>
  }

  /**
   * TicketDocument createMany
   */
  export type TicketDocumentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TicketDocuments.
     */
    data: TicketDocumentCreateManyInput | TicketDocumentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TicketDocument update
   */
  export type TicketDocumentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * The data needed to update a TicketDocument.
     */
    data: XOR<TicketDocumentUpdateInput, TicketDocumentUncheckedUpdateInput>
    /**
     * Choose, which TicketDocument to update.
     */
    where: TicketDocumentWhereUniqueInput
  }

  /**
   * TicketDocument updateMany
   */
  export type TicketDocumentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TicketDocuments.
     */
    data: XOR<TicketDocumentUpdateManyMutationInput, TicketDocumentUncheckedUpdateManyInput>
    /**
     * Filter which TicketDocuments to update
     */
    where?: TicketDocumentWhereInput
    /**
     * Limit how many TicketDocuments to update.
     */
    limit?: number
  }

  /**
   * TicketDocument upsert
   */
  export type TicketDocumentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * The filter to search for the TicketDocument to update in case it exists.
     */
    where: TicketDocumentWhereUniqueInput
    /**
     * In case the TicketDocument found by the `where` argument doesn't exist, create a new TicketDocument with this data.
     */
    create: XOR<TicketDocumentCreateInput, TicketDocumentUncheckedCreateInput>
    /**
     * In case the TicketDocument was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketDocumentUpdateInput, TicketDocumentUncheckedUpdateInput>
  }

  /**
   * TicketDocument delete
   */
  export type TicketDocumentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
    /**
     * Filter which TicketDocument to delete.
     */
    where: TicketDocumentWhereUniqueInput
  }

  /**
   * TicketDocument deleteMany
   */
  export type TicketDocumentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketDocuments to delete
     */
    where?: TicketDocumentWhereInput
    /**
     * Limit how many TicketDocuments to delete.
     */
    limit?: number
  }

  /**
   * TicketDocument without action
   */
  export type TicketDocumentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketDocument
     */
    select?: TicketDocumentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketDocument
     */
    omit?: TicketDocumentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketDocumentInclude<ExtArgs> | null
  }


  /**
   * Model TicketComment
   */

  export type AggregateTicketComment = {
    _count: TicketCommentCountAggregateOutputType | null
    _avg: TicketCommentAvgAggregateOutputType | null
    _sum: TicketCommentSumAggregateOutputType | null
    _min: TicketCommentMinAggregateOutputType | null
    _max: TicketCommentMaxAggregateOutputType | null
  }

  export type TicketCommentAvgAggregateOutputType = {
    id: number | null
    ticketId: number | null
    userId: number | null
  }

  export type TicketCommentSumAggregateOutputType = {
    id: number | null
    ticketId: number | null
    userId: number | null
  }

  export type TicketCommentMinAggregateOutputType = {
    id: number | null
    text: string | null
    ticketId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type TicketCommentMaxAggregateOutputType = {
    id: number | null
    text: string | null
    ticketId: number | null
    userId: number | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type TicketCommentCountAggregateOutputType = {
    id: number
    text: number
    ticketId: number
    userId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type TicketCommentAvgAggregateInputType = {
    id?: true
    ticketId?: true
    userId?: true
  }

  export type TicketCommentSumAggregateInputType = {
    id?: true
    ticketId?: true
    userId?: true
  }

  export type TicketCommentMinAggregateInputType = {
    id?: true
    text?: true
    ticketId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type TicketCommentMaxAggregateInputType = {
    id?: true
    text?: true
    ticketId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type TicketCommentCountAggregateInputType = {
    id?: true
    text?: true
    ticketId?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type TicketCommentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketComment to aggregate.
     */
    where?: TicketCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketComments to fetch.
     */
    orderBy?: TicketCommentOrderByWithRelationInput | TicketCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TicketCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TicketComments
    **/
    _count?: true | TicketCommentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TicketCommentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TicketCommentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TicketCommentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TicketCommentMaxAggregateInputType
  }

  export type GetTicketCommentAggregateType<T extends TicketCommentAggregateArgs> = {
        [P in keyof T & keyof AggregateTicketComment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTicketComment[P]>
      : GetScalarType<T[P], AggregateTicketComment[P]>
  }




  export type TicketCommentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TicketCommentWhereInput
    orderBy?: TicketCommentOrderByWithAggregationInput | TicketCommentOrderByWithAggregationInput[]
    by: TicketCommentScalarFieldEnum[] | TicketCommentScalarFieldEnum
    having?: TicketCommentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TicketCommentCountAggregateInputType | true
    _avg?: TicketCommentAvgAggregateInputType
    _sum?: TicketCommentSumAggregateInputType
    _min?: TicketCommentMinAggregateInputType
    _max?: TicketCommentMaxAggregateInputType
  }

  export type TicketCommentGroupByOutputType = {
    id: number
    text: string
    ticketId: number
    userId: number
    createdAt: Date
    updatedAt: Date | null
    deletedAt: Date | null
    _count: TicketCommentCountAggregateOutputType | null
    _avg: TicketCommentAvgAggregateOutputType | null
    _sum: TicketCommentSumAggregateOutputType | null
    _min: TicketCommentMinAggregateOutputType | null
    _max: TicketCommentMaxAggregateOutputType | null
  }

  type GetTicketCommentGroupByPayload<T extends TicketCommentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TicketCommentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TicketCommentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TicketCommentGroupByOutputType[P]>
            : GetScalarType<T[P], TicketCommentGroupByOutputType[P]>
        }
      >
    >


  export type TicketCommentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    text?: boolean
    ticketId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    postedBy?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ticketComment"]>



  export type TicketCommentSelectScalar = {
    id?: boolean
    text?: boolean
    ticketId?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type TicketCommentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "text" | "ticketId" | "userId" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["ticketComment"]>
  export type TicketCommentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ticket?: boolean | TicketDefaultArgs<ExtArgs>
    postedBy?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $TicketCommentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TicketComment"
    objects: {
      ticket: Prisma.$TicketPayload<ExtArgs>
      postedBy: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      text: string
      ticketId: number
      userId: number
      createdAt: Date
      updatedAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["ticketComment"]>
    composites: {}
  }

  type TicketCommentGetPayload<S extends boolean | null | undefined | TicketCommentDefaultArgs> = $Result.GetResult<Prisma.$TicketCommentPayload, S>

  type TicketCommentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<TicketCommentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TicketCommentCountAggregateInputType | true
    }

  export interface TicketCommentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TicketComment'], meta: { name: 'TicketComment' } }
    /**
     * Find zero or one TicketComment that matches the filter.
     * @param {TicketCommentFindUniqueArgs} args - Arguments to find a TicketComment
     * @example
     * // Get one TicketComment
     * const ticketComment = await prisma.ticketComment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TicketCommentFindUniqueArgs>(args: SelectSubset<T, TicketCommentFindUniqueArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one TicketComment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {TicketCommentFindUniqueOrThrowArgs} args - Arguments to find a TicketComment
     * @example
     * // Get one TicketComment
     * const ticketComment = await prisma.ticketComment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TicketCommentFindUniqueOrThrowArgs>(args: SelectSubset<T, TicketCommentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketComment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCommentFindFirstArgs} args - Arguments to find a TicketComment
     * @example
     * // Get one TicketComment
     * const ticketComment = await prisma.ticketComment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TicketCommentFindFirstArgs>(args?: SelectSubset<T, TicketCommentFindFirstArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first TicketComment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCommentFindFirstOrThrowArgs} args - Arguments to find a TicketComment
     * @example
     * // Get one TicketComment
     * const ticketComment = await prisma.ticketComment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TicketCommentFindFirstOrThrowArgs>(args?: SelectSubset<T, TicketCommentFindFirstOrThrowArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more TicketComments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCommentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TicketComments
     * const ticketComments = await prisma.ticketComment.findMany()
     * 
     * // Get first 10 TicketComments
     * const ticketComments = await prisma.ticketComment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ticketCommentWithIdOnly = await prisma.ticketComment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TicketCommentFindManyArgs>(args?: SelectSubset<T, TicketCommentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a TicketComment.
     * @param {TicketCommentCreateArgs} args - Arguments to create a TicketComment.
     * @example
     * // Create one TicketComment
     * const TicketComment = await prisma.ticketComment.create({
     *   data: {
     *     // ... data to create a TicketComment
     *   }
     * })
     * 
     */
    create<T extends TicketCommentCreateArgs>(args: SelectSubset<T, TicketCommentCreateArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many TicketComments.
     * @param {TicketCommentCreateManyArgs} args - Arguments to create many TicketComments.
     * @example
     * // Create many TicketComments
     * const ticketComment = await prisma.ticketComment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TicketCommentCreateManyArgs>(args?: SelectSubset<T, TicketCommentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a TicketComment.
     * @param {TicketCommentDeleteArgs} args - Arguments to delete one TicketComment.
     * @example
     * // Delete one TicketComment
     * const TicketComment = await prisma.ticketComment.delete({
     *   where: {
     *     // ... filter to delete one TicketComment
     *   }
     * })
     * 
     */
    delete<T extends TicketCommentDeleteArgs>(args: SelectSubset<T, TicketCommentDeleteArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one TicketComment.
     * @param {TicketCommentUpdateArgs} args - Arguments to update one TicketComment.
     * @example
     * // Update one TicketComment
     * const ticketComment = await prisma.ticketComment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TicketCommentUpdateArgs>(args: SelectSubset<T, TicketCommentUpdateArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more TicketComments.
     * @param {TicketCommentDeleteManyArgs} args - Arguments to filter TicketComments to delete.
     * @example
     * // Delete a few TicketComments
     * const { count } = await prisma.ticketComment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TicketCommentDeleteManyArgs>(args?: SelectSubset<T, TicketCommentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TicketComments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCommentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TicketComments
     * const ticketComment = await prisma.ticketComment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TicketCommentUpdateManyArgs>(args: SelectSubset<T, TicketCommentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TicketComment.
     * @param {TicketCommentUpsertArgs} args - Arguments to update or create a TicketComment.
     * @example
     * // Update or create a TicketComment
     * const ticketComment = await prisma.ticketComment.upsert({
     *   create: {
     *     // ... data to create a TicketComment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TicketComment we want to update
     *   }
     * })
     */
    upsert<T extends TicketCommentUpsertArgs>(args: SelectSubset<T, TicketCommentUpsertArgs<ExtArgs>>): Prisma__TicketCommentClient<$Result.GetResult<Prisma.$TicketCommentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of TicketComments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCommentCountArgs} args - Arguments to filter TicketComments to count.
     * @example
     * // Count the number of TicketComments
     * const count = await prisma.ticketComment.count({
     *   where: {
     *     // ... the filter for the TicketComments we want to count
     *   }
     * })
    **/
    count<T extends TicketCommentCountArgs>(
      args?: Subset<T, TicketCommentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TicketCommentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TicketComment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCommentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TicketCommentAggregateArgs>(args: Subset<T, TicketCommentAggregateArgs>): Prisma.PrismaPromise<GetTicketCommentAggregateType<T>>

    /**
     * Group by TicketComment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TicketCommentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TicketCommentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TicketCommentGroupByArgs['orderBy'] }
        : { orderBy?: TicketCommentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TicketCommentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTicketCommentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TicketComment model
   */
  readonly fields: TicketCommentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TicketComment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TicketCommentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ticket<T extends TicketDefaultArgs<ExtArgs> = {}>(args?: Subset<T, TicketDefaultArgs<ExtArgs>>): Prisma__TicketClient<$Result.GetResult<Prisma.$TicketPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    postedBy<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the TicketComment model
   */
  interface TicketCommentFieldRefs {
    readonly id: FieldRef<"TicketComment", 'Int'>
    readonly text: FieldRef<"TicketComment", 'String'>
    readonly ticketId: FieldRef<"TicketComment", 'Int'>
    readonly userId: FieldRef<"TicketComment", 'Int'>
    readonly createdAt: FieldRef<"TicketComment", 'DateTime'>
    readonly updatedAt: FieldRef<"TicketComment", 'DateTime'>
    readonly deletedAt: FieldRef<"TicketComment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * TicketComment findUnique
   */
  export type TicketCommentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * Filter, which TicketComment to fetch.
     */
    where: TicketCommentWhereUniqueInput
  }

  /**
   * TicketComment findUniqueOrThrow
   */
  export type TicketCommentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * Filter, which TicketComment to fetch.
     */
    where: TicketCommentWhereUniqueInput
  }

  /**
   * TicketComment findFirst
   */
  export type TicketCommentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * Filter, which TicketComment to fetch.
     */
    where?: TicketCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketComments to fetch.
     */
    orderBy?: TicketCommentOrderByWithRelationInput | TicketCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketComments.
     */
    cursor?: TicketCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketComments.
     */
    distinct?: TicketCommentScalarFieldEnum | TicketCommentScalarFieldEnum[]
  }

  /**
   * TicketComment findFirstOrThrow
   */
  export type TicketCommentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * Filter, which TicketComment to fetch.
     */
    where?: TicketCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketComments to fetch.
     */
    orderBy?: TicketCommentOrderByWithRelationInput | TicketCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TicketComments.
     */
    cursor?: TicketCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketComments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TicketComments.
     */
    distinct?: TicketCommentScalarFieldEnum | TicketCommentScalarFieldEnum[]
  }

  /**
   * TicketComment findMany
   */
  export type TicketCommentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * Filter, which TicketComments to fetch.
     */
    where?: TicketCommentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TicketComments to fetch.
     */
    orderBy?: TicketCommentOrderByWithRelationInput | TicketCommentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TicketComments.
     */
    cursor?: TicketCommentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TicketComments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TicketComments.
     */
    skip?: number
    distinct?: TicketCommentScalarFieldEnum | TicketCommentScalarFieldEnum[]
  }

  /**
   * TicketComment create
   */
  export type TicketCommentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * The data needed to create a TicketComment.
     */
    data: XOR<TicketCommentCreateInput, TicketCommentUncheckedCreateInput>
  }

  /**
   * TicketComment createMany
   */
  export type TicketCommentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TicketComments.
     */
    data: TicketCommentCreateManyInput | TicketCommentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TicketComment update
   */
  export type TicketCommentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * The data needed to update a TicketComment.
     */
    data: XOR<TicketCommentUpdateInput, TicketCommentUncheckedUpdateInput>
    /**
     * Choose, which TicketComment to update.
     */
    where: TicketCommentWhereUniqueInput
  }

  /**
   * TicketComment updateMany
   */
  export type TicketCommentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TicketComments.
     */
    data: XOR<TicketCommentUpdateManyMutationInput, TicketCommentUncheckedUpdateManyInput>
    /**
     * Filter which TicketComments to update
     */
    where?: TicketCommentWhereInput
    /**
     * Limit how many TicketComments to update.
     */
    limit?: number
  }

  /**
   * TicketComment upsert
   */
  export type TicketCommentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * The filter to search for the TicketComment to update in case it exists.
     */
    where: TicketCommentWhereUniqueInput
    /**
     * In case the TicketComment found by the `where` argument doesn't exist, create a new TicketComment with this data.
     */
    create: XOR<TicketCommentCreateInput, TicketCommentUncheckedCreateInput>
    /**
     * In case the TicketComment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TicketCommentUpdateInput, TicketCommentUncheckedUpdateInput>
  }

  /**
   * TicketComment delete
   */
  export type TicketCommentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
    /**
     * Filter which TicketComment to delete.
     */
    where: TicketCommentWhereUniqueInput
  }

  /**
   * TicketComment deleteMany
   */
  export type TicketCommentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TicketComments to delete
     */
    where?: TicketCommentWhereInput
    /**
     * Limit how many TicketComments to delete.
     */
    limit?: number
  }

  /**
   * TicketComment without action
   */
  export type TicketCommentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TicketComment
     */
    select?: TicketCommentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the TicketComment
     */
    omit?: TicketCommentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TicketCommentInclude<ExtArgs> | null
  }


  /**
   * Model UserSubscription
   */

  export type AggregateUserSubscription = {
    _count: UserSubscriptionCountAggregateOutputType | null
    _avg: UserSubscriptionAvgAggregateOutputType | null
    _sum: UserSubscriptionSumAggregateOutputType | null
    _min: UserSubscriptionMinAggregateOutputType | null
    _max: UserSubscriptionMaxAggregateOutputType | null
  }

  export type UserSubscriptionAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type UserSubscriptionSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type UserSubscriptionMinAggregateOutputType = {
    id: number | null
    userId: number | null
    subscriptionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UserSubscriptionMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    subscriptionId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UserSubscriptionCountAggregateOutputType = {
    id: number
    userId: number
    subscriptionId: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type UserSubscriptionAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type UserSubscriptionSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type UserSubscriptionMinAggregateInputType = {
    id?: true
    userId?: true
    subscriptionId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UserSubscriptionMaxAggregateInputType = {
    id?: true
    userId?: true
    subscriptionId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UserSubscriptionCountAggregateInputType = {
    id?: true
    userId?: true
    subscriptionId?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type UserSubscriptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSubscription to aggregate.
     */
    where?: UserSubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSubscriptions to fetch.
     */
    orderBy?: UserSubscriptionOrderByWithRelationInput | UserSubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSubscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSubscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSubscriptions
    **/
    _count?: true | UserSubscriptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserSubscriptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSubscriptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSubscriptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSubscriptionMaxAggregateInputType
  }

  export type GetUserSubscriptionAggregateType<T extends UserSubscriptionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSubscription]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSubscription[P]>
      : GetScalarType<T[P], AggregateUserSubscription[P]>
  }




  export type UserSubscriptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSubscriptionWhereInput
    orderBy?: UserSubscriptionOrderByWithAggregationInput | UserSubscriptionOrderByWithAggregationInput[]
    by: UserSubscriptionScalarFieldEnum[] | UserSubscriptionScalarFieldEnum
    having?: UserSubscriptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSubscriptionCountAggregateInputType | true
    _avg?: UserSubscriptionAvgAggregateInputType
    _sum?: UserSubscriptionSumAggregateInputType
    _min?: UserSubscriptionMinAggregateInputType
    _max?: UserSubscriptionMaxAggregateInputType
  }

  export type UserSubscriptionGroupByOutputType = {
    id: number
    userId: number
    subscriptionId: string
    createdAt: Date
    updatedAt: Date | null
    deletedAt: Date | null
    _count: UserSubscriptionCountAggregateOutputType | null
    _avg: UserSubscriptionAvgAggregateOutputType | null
    _sum: UserSubscriptionSumAggregateOutputType | null
    _min: UserSubscriptionMinAggregateOutputType | null
    _max: UserSubscriptionMaxAggregateOutputType | null
  }

  type GetUserSubscriptionGroupByPayload<T extends UserSubscriptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSubscriptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSubscriptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSubscriptionGroupByOutputType[P]>
            : GetScalarType<T[P], UserSubscriptionGroupByOutputType[P]>
        }
      >
    >


  export type UserSubscriptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    subscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSubscription"]>



  export type UserSubscriptionSelectScalar = {
    id?: boolean
    userId?: boolean
    subscriptionId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type UserSubscriptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "subscriptionId" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["userSubscription"]>
  export type UserSubscriptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSubscriptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSubscription"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      subscriptionId: string
      createdAt: Date
      updatedAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["userSubscription"]>
    composites: {}
  }

  type UserSubscriptionGetPayload<S extends boolean | null | undefined | UserSubscriptionDefaultArgs> = $Result.GetResult<Prisma.$UserSubscriptionPayload, S>

  type UserSubscriptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserSubscriptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserSubscriptionCountAggregateInputType | true
    }

  export interface UserSubscriptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSubscription'], meta: { name: 'UserSubscription' } }
    /**
     * Find zero or one UserSubscription that matches the filter.
     * @param {UserSubscriptionFindUniqueArgs} args - Arguments to find a UserSubscription
     * @example
     * // Get one UserSubscription
     * const userSubscription = await prisma.userSubscription.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSubscriptionFindUniqueArgs>(args: SelectSubset<T, UserSubscriptionFindUniqueArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserSubscription that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserSubscriptionFindUniqueOrThrowArgs} args - Arguments to find a UserSubscription
     * @example
     * // Get one UserSubscription
     * const userSubscription = await prisma.userSubscription.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSubscriptionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSubscriptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSubscription that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSubscriptionFindFirstArgs} args - Arguments to find a UserSubscription
     * @example
     * // Get one UserSubscription
     * const userSubscription = await prisma.userSubscription.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSubscriptionFindFirstArgs>(args?: SelectSubset<T, UserSubscriptionFindFirstArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserSubscription that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSubscriptionFindFirstOrThrowArgs} args - Arguments to find a UserSubscription
     * @example
     * // Get one UserSubscription
     * const userSubscription = await prisma.userSubscription.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSubscriptionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSubscriptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserSubscriptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSubscriptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSubscriptions
     * const userSubscriptions = await prisma.userSubscription.findMany()
     * 
     * // Get first 10 UserSubscriptions
     * const userSubscriptions = await prisma.userSubscription.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSubscriptionWithIdOnly = await prisma.userSubscription.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSubscriptionFindManyArgs>(args?: SelectSubset<T, UserSubscriptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserSubscription.
     * @param {UserSubscriptionCreateArgs} args - Arguments to create a UserSubscription.
     * @example
     * // Create one UserSubscription
     * const UserSubscription = await prisma.userSubscription.create({
     *   data: {
     *     // ... data to create a UserSubscription
     *   }
     * })
     * 
     */
    create<T extends UserSubscriptionCreateArgs>(args: SelectSubset<T, UserSubscriptionCreateArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserSubscriptions.
     * @param {UserSubscriptionCreateManyArgs} args - Arguments to create many UserSubscriptions.
     * @example
     * // Create many UserSubscriptions
     * const userSubscription = await prisma.userSubscription.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSubscriptionCreateManyArgs>(args?: SelectSubset<T, UserSubscriptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserSubscription.
     * @param {UserSubscriptionDeleteArgs} args - Arguments to delete one UserSubscription.
     * @example
     * // Delete one UserSubscription
     * const UserSubscription = await prisma.userSubscription.delete({
     *   where: {
     *     // ... filter to delete one UserSubscription
     *   }
     * })
     * 
     */
    delete<T extends UserSubscriptionDeleteArgs>(args: SelectSubset<T, UserSubscriptionDeleteArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserSubscription.
     * @param {UserSubscriptionUpdateArgs} args - Arguments to update one UserSubscription.
     * @example
     * // Update one UserSubscription
     * const userSubscription = await prisma.userSubscription.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSubscriptionUpdateArgs>(args: SelectSubset<T, UserSubscriptionUpdateArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserSubscriptions.
     * @param {UserSubscriptionDeleteManyArgs} args - Arguments to filter UserSubscriptions to delete.
     * @example
     * // Delete a few UserSubscriptions
     * const { count } = await prisma.userSubscription.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSubscriptionDeleteManyArgs>(args?: SelectSubset<T, UserSubscriptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSubscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSubscriptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSubscriptions
     * const userSubscription = await prisma.userSubscription.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSubscriptionUpdateManyArgs>(args: SelectSubset<T, UserSubscriptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSubscription.
     * @param {UserSubscriptionUpsertArgs} args - Arguments to update or create a UserSubscription.
     * @example
     * // Update or create a UserSubscription
     * const userSubscription = await prisma.userSubscription.upsert({
     *   create: {
     *     // ... data to create a UserSubscription
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSubscription we want to update
     *   }
     * })
     */
    upsert<T extends UserSubscriptionUpsertArgs>(args: SelectSubset<T, UserSubscriptionUpsertArgs<ExtArgs>>): Prisma__UserSubscriptionClient<$Result.GetResult<Prisma.$UserSubscriptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserSubscriptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSubscriptionCountArgs} args - Arguments to filter UserSubscriptions to count.
     * @example
     * // Count the number of UserSubscriptions
     * const count = await prisma.userSubscription.count({
     *   where: {
     *     // ... the filter for the UserSubscriptions we want to count
     *   }
     * })
    **/
    count<T extends UserSubscriptionCountArgs>(
      args?: Subset<T, UserSubscriptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSubscriptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSubscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSubscriptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSubscriptionAggregateArgs>(args: Subset<T, UserSubscriptionAggregateArgs>): Prisma.PrismaPromise<GetUserSubscriptionAggregateType<T>>

    /**
     * Group by UserSubscription.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSubscriptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSubscriptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSubscriptionGroupByArgs['orderBy'] }
        : { orderBy?: UserSubscriptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSubscriptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSubscriptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSubscription model
   */
  readonly fields: UserSubscriptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSubscription.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSubscriptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSubscription model
   */
  interface UserSubscriptionFieldRefs {
    readonly id: FieldRef<"UserSubscription", 'Int'>
    readonly userId: FieldRef<"UserSubscription", 'Int'>
    readonly subscriptionId: FieldRef<"UserSubscription", 'String'>
    readonly createdAt: FieldRef<"UserSubscription", 'DateTime'>
    readonly updatedAt: FieldRef<"UserSubscription", 'DateTime'>
    readonly deletedAt: FieldRef<"UserSubscription", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSubscription findUnique
   */
  export type UserSubscriptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which UserSubscription to fetch.
     */
    where: UserSubscriptionWhereUniqueInput
  }

  /**
   * UserSubscription findUniqueOrThrow
   */
  export type UserSubscriptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which UserSubscription to fetch.
     */
    where: UserSubscriptionWhereUniqueInput
  }

  /**
   * UserSubscription findFirst
   */
  export type UserSubscriptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which UserSubscription to fetch.
     */
    where?: UserSubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSubscriptions to fetch.
     */
    orderBy?: UserSubscriptionOrderByWithRelationInput | UserSubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSubscriptions.
     */
    cursor?: UserSubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSubscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSubscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSubscriptions.
     */
    distinct?: UserSubscriptionScalarFieldEnum | UserSubscriptionScalarFieldEnum[]
  }

  /**
   * UserSubscription findFirstOrThrow
   */
  export type UserSubscriptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which UserSubscription to fetch.
     */
    where?: UserSubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSubscriptions to fetch.
     */
    orderBy?: UserSubscriptionOrderByWithRelationInput | UserSubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSubscriptions.
     */
    cursor?: UserSubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSubscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSubscriptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSubscriptions.
     */
    distinct?: UserSubscriptionScalarFieldEnum | UserSubscriptionScalarFieldEnum[]
  }

  /**
   * UserSubscription findMany
   */
  export type UserSubscriptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * Filter, which UserSubscriptions to fetch.
     */
    where?: UserSubscriptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSubscriptions to fetch.
     */
    orderBy?: UserSubscriptionOrderByWithRelationInput | UserSubscriptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSubscriptions.
     */
    cursor?: UserSubscriptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSubscriptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSubscriptions.
     */
    skip?: number
    distinct?: UserSubscriptionScalarFieldEnum | UserSubscriptionScalarFieldEnum[]
  }

  /**
   * UserSubscription create
   */
  export type UserSubscriptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSubscription.
     */
    data: XOR<UserSubscriptionCreateInput, UserSubscriptionUncheckedCreateInput>
  }

  /**
   * UserSubscription createMany
   */
  export type UserSubscriptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSubscriptions.
     */
    data: UserSubscriptionCreateManyInput | UserSubscriptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSubscription update
   */
  export type UserSubscriptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSubscription.
     */
    data: XOR<UserSubscriptionUpdateInput, UserSubscriptionUncheckedUpdateInput>
    /**
     * Choose, which UserSubscription to update.
     */
    where: UserSubscriptionWhereUniqueInput
  }

  /**
   * UserSubscription updateMany
   */
  export type UserSubscriptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSubscriptions.
     */
    data: XOR<UserSubscriptionUpdateManyMutationInput, UserSubscriptionUncheckedUpdateManyInput>
    /**
     * Filter which UserSubscriptions to update
     */
    where?: UserSubscriptionWhereInput
    /**
     * Limit how many UserSubscriptions to update.
     */
    limit?: number
  }

  /**
   * UserSubscription upsert
   */
  export type UserSubscriptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSubscription to update in case it exists.
     */
    where: UserSubscriptionWhereUniqueInput
    /**
     * In case the UserSubscription found by the `where` argument doesn't exist, create a new UserSubscription with this data.
     */
    create: XOR<UserSubscriptionCreateInput, UserSubscriptionUncheckedCreateInput>
    /**
     * In case the UserSubscription was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSubscriptionUpdateInput, UserSubscriptionUncheckedUpdateInput>
  }

  /**
   * UserSubscription delete
   */
  export type UserSubscriptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
    /**
     * Filter which UserSubscription to delete.
     */
    where: UserSubscriptionWhereUniqueInput
  }

  /**
   * UserSubscription deleteMany
   */
  export type UserSubscriptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSubscriptions to delete
     */
    where?: UserSubscriptionWhereInput
    /**
     * Limit how many UserSubscriptions to delete.
     */
    limit?: number
  }

  /**
   * UserSubscription without action
   */
  export type UserSubscriptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSubscription
     */
    select?: UserSubscriptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserSubscription
     */
    omit?: UserSubscriptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSubscriptionInclude<ExtArgs> | null
  }


  /**
   * Model Portfolio
   */

  export type AggregatePortfolio = {
    _count: PortfolioCountAggregateOutputType | null
    _avg: PortfolioAvgAggregateOutputType | null
    _sum: PortfolioSumAggregateOutputType | null
    _min: PortfolioMinAggregateOutputType | null
    _max: PortfolioMaxAggregateOutputType | null
  }

  export type PortfolioAvgAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type PortfolioSumAggregateOutputType = {
    id: number | null
    userId: number | null
  }

  export type PortfolioMinAggregateOutputType = {
    id: number | null
    userId: number | null
    name: string | null
    tableName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type PortfolioMaxAggregateOutputType = {
    id: number | null
    userId: number | null
    name: string | null
    tableName: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type PortfolioCountAggregateOutputType = {
    id: number
    userId: number
    name: number
    filters: number
    tableName: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type PortfolioAvgAggregateInputType = {
    id?: true
    userId?: true
  }

  export type PortfolioSumAggregateInputType = {
    id?: true
    userId?: true
  }

  export type PortfolioMinAggregateInputType = {
    id?: true
    userId?: true
    name?: true
    tableName?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type PortfolioMaxAggregateInputType = {
    id?: true
    userId?: true
    name?: true
    tableName?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type PortfolioCountAggregateInputType = {
    id?: true
    userId?: true
    name?: true
    filters?: true
    tableName?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type PortfolioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Portfolio to aggregate.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Portfolios
    **/
    _count?: true | PortfolioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PortfolioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PortfolioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PortfolioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PortfolioMaxAggregateInputType
  }

  export type GetPortfolioAggregateType<T extends PortfolioAggregateArgs> = {
        [P in keyof T & keyof AggregatePortfolio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePortfolio[P]>
      : GetScalarType<T[P], AggregatePortfolio[P]>
  }




  export type PortfolioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PortfolioWhereInput
    orderBy?: PortfolioOrderByWithAggregationInput | PortfolioOrderByWithAggregationInput[]
    by: PortfolioScalarFieldEnum[] | PortfolioScalarFieldEnum
    having?: PortfolioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PortfolioCountAggregateInputType | true
    _avg?: PortfolioAvgAggregateInputType
    _sum?: PortfolioSumAggregateInputType
    _min?: PortfolioMinAggregateInputType
    _max?: PortfolioMaxAggregateInputType
  }

  export type PortfolioGroupByOutputType = {
    id: number
    userId: number
    name: string
    filters: JsonValue
    tableName: string
    createdAt: Date
    updatedAt: Date | null
    deletedAt: Date | null
    _count: PortfolioCountAggregateOutputType | null
    _avg: PortfolioAvgAggregateOutputType | null
    _sum: PortfolioSumAggregateOutputType | null
    _min: PortfolioMinAggregateOutputType | null
    _max: PortfolioMaxAggregateOutputType | null
  }

  type GetPortfolioGroupByPayload<T extends PortfolioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PortfolioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PortfolioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PortfolioGroupByOutputType[P]>
            : GetScalarType<T[P], PortfolioGroupByOutputType[P]>
        }
      >
    >


  export type PortfolioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    name?: boolean
    filters?: boolean
    tableName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["portfolio"]>



  export type PortfolioSelectScalar = {
    id?: boolean
    userId?: boolean
    name?: boolean
    filters?: boolean
    tableName?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type PortfolioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "name" | "filters" | "tableName" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["portfolio"]>
  export type PortfolioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $PortfolioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Portfolio"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: number
      name: string
      filters: Prisma.JsonValue
      tableName: string
      createdAt: Date
      updatedAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["portfolio"]>
    composites: {}
  }

  type PortfolioGetPayload<S extends boolean | null | undefined | PortfolioDefaultArgs> = $Result.GetResult<Prisma.$PortfolioPayload, S>

  type PortfolioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PortfolioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PortfolioCountAggregateInputType | true
    }

  export interface PortfolioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Portfolio'], meta: { name: 'Portfolio' } }
    /**
     * Find zero or one Portfolio that matches the filter.
     * @param {PortfolioFindUniqueArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PortfolioFindUniqueArgs>(args: SelectSubset<T, PortfolioFindUniqueArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Portfolio that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PortfolioFindUniqueOrThrowArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PortfolioFindUniqueOrThrowArgs>(args: SelectSubset<T, PortfolioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Portfolio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioFindFirstArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PortfolioFindFirstArgs>(args?: SelectSubset<T, PortfolioFindFirstArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Portfolio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioFindFirstOrThrowArgs} args - Arguments to find a Portfolio
     * @example
     * // Get one Portfolio
     * const portfolio = await prisma.portfolio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PortfolioFindFirstOrThrowArgs>(args?: SelectSubset<T, PortfolioFindFirstOrThrowArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Portfolios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Portfolios
     * const portfolios = await prisma.portfolio.findMany()
     * 
     * // Get first 10 Portfolios
     * const portfolios = await prisma.portfolio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const portfolioWithIdOnly = await prisma.portfolio.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PortfolioFindManyArgs>(args?: SelectSubset<T, PortfolioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Portfolio.
     * @param {PortfolioCreateArgs} args - Arguments to create a Portfolio.
     * @example
     * // Create one Portfolio
     * const Portfolio = await prisma.portfolio.create({
     *   data: {
     *     // ... data to create a Portfolio
     *   }
     * })
     * 
     */
    create<T extends PortfolioCreateArgs>(args: SelectSubset<T, PortfolioCreateArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Portfolios.
     * @param {PortfolioCreateManyArgs} args - Arguments to create many Portfolios.
     * @example
     * // Create many Portfolios
     * const portfolio = await prisma.portfolio.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PortfolioCreateManyArgs>(args?: SelectSubset<T, PortfolioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Portfolio.
     * @param {PortfolioDeleteArgs} args - Arguments to delete one Portfolio.
     * @example
     * // Delete one Portfolio
     * const Portfolio = await prisma.portfolio.delete({
     *   where: {
     *     // ... filter to delete one Portfolio
     *   }
     * })
     * 
     */
    delete<T extends PortfolioDeleteArgs>(args: SelectSubset<T, PortfolioDeleteArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Portfolio.
     * @param {PortfolioUpdateArgs} args - Arguments to update one Portfolio.
     * @example
     * // Update one Portfolio
     * const portfolio = await prisma.portfolio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PortfolioUpdateArgs>(args: SelectSubset<T, PortfolioUpdateArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Portfolios.
     * @param {PortfolioDeleteManyArgs} args - Arguments to filter Portfolios to delete.
     * @example
     * // Delete a few Portfolios
     * const { count } = await prisma.portfolio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PortfolioDeleteManyArgs>(args?: SelectSubset<T, PortfolioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Portfolios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Portfolios
     * const portfolio = await prisma.portfolio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PortfolioUpdateManyArgs>(args: SelectSubset<T, PortfolioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Portfolio.
     * @param {PortfolioUpsertArgs} args - Arguments to update or create a Portfolio.
     * @example
     * // Update or create a Portfolio
     * const portfolio = await prisma.portfolio.upsert({
     *   create: {
     *     // ... data to create a Portfolio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Portfolio we want to update
     *   }
     * })
     */
    upsert<T extends PortfolioUpsertArgs>(args: SelectSubset<T, PortfolioUpsertArgs<ExtArgs>>): Prisma__PortfolioClient<$Result.GetResult<Prisma.$PortfolioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Portfolios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioCountArgs} args - Arguments to filter Portfolios to count.
     * @example
     * // Count the number of Portfolios
     * const count = await prisma.portfolio.count({
     *   where: {
     *     // ... the filter for the Portfolios we want to count
     *   }
     * })
    **/
    count<T extends PortfolioCountArgs>(
      args?: Subset<T, PortfolioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PortfolioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Portfolio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PortfolioAggregateArgs>(args: Subset<T, PortfolioAggregateArgs>): Prisma.PrismaPromise<GetPortfolioAggregateType<T>>

    /**
     * Group by Portfolio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PortfolioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PortfolioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PortfolioGroupByArgs['orderBy'] }
        : { orderBy?: PortfolioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PortfolioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPortfolioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Portfolio model
   */
  readonly fields: PortfolioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Portfolio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PortfolioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Portfolio model
   */
  interface PortfolioFieldRefs {
    readonly id: FieldRef<"Portfolio", 'Int'>
    readonly userId: FieldRef<"Portfolio", 'Int'>
    readonly name: FieldRef<"Portfolio", 'String'>
    readonly filters: FieldRef<"Portfolio", 'Json'>
    readonly tableName: FieldRef<"Portfolio", 'String'>
    readonly createdAt: FieldRef<"Portfolio", 'DateTime'>
    readonly updatedAt: FieldRef<"Portfolio", 'DateTime'>
    readonly deletedAt: FieldRef<"Portfolio", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Portfolio findUnique
   */
  export type PortfolioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio findUniqueOrThrow
   */
  export type PortfolioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio findFirst
   */
  export type PortfolioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Portfolios.
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Portfolios.
     */
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * Portfolio findFirstOrThrow
   */
  export type PortfolioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolio to fetch.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Portfolios.
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Portfolios.
     */
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * Portfolio findMany
   */
  export type PortfolioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter, which Portfolios to fetch.
     */
    where?: PortfolioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Portfolios to fetch.
     */
    orderBy?: PortfolioOrderByWithRelationInput | PortfolioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Portfolios.
     */
    cursor?: PortfolioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Portfolios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Portfolios.
     */
    skip?: number
    distinct?: PortfolioScalarFieldEnum | PortfolioScalarFieldEnum[]
  }

  /**
   * Portfolio create
   */
  export type PortfolioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * The data needed to create a Portfolio.
     */
    data: XOR<PortfolioCreateInput, PortfolioUncheckedCreateInput>
  }

  /**
   * Portfolio createMany
   */
  export type PortfolioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Portfolios.
     */
    data: PortfolioCreateManyInput | PortfolioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Portfolio update
   */
  export type PortfolioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * The data needed to update a Portfolio.
     */
    data: XOR<PortfolioUpdateInput, PortfolioUncheckedUpdateInput>
    /**
     * Choose, which Portfolio to update.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio updateMany
   */
  export type PortfolioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Portfolios.
     */
    data: XOR<PortfolioUpdateManyMutationInput, PortfolioUncheckedUpdateManyInput>
    /**
     * Filter which Portfolios to update
     */
    where?: PortfolioWhereInput
    /**
     * Limit how many Portfolios to update.
     */
    limit?: number
  }

  /**
   * Portfolio upsert
   */
  export type PortfolioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * The filter to search for the Portfolio to update in case it exists.
     */
    where: PortfolioWhereUniqueInput
    /**
     * In case the Portfolio found by the `where` argument doesn't exist, create a new Portfolio with this data.
     */
    create: XOR<PortfolioCreateInput, PortfolioUncheckedCreateInput>
    /**
     * In case the Portfolio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PortfolioUpdateInput, PortfolioUncheckedUpdateInput>
  }

  /**
   * Portfolio delete
   */
  export type PortfolioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
    /**
     * Filter which Portfolio to delete.
     */
    where: PortfolioWhereUniqueInput
  }

  /**
   * Portfolio deleteMany
   */
  export type PortfolioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Portfolios to delete
     */
    where?: PortfolioWhereInput
    /**
     * Limit how many Portfolios to delete.
     */
    limit?: number
  }

  /**
   * Portfolio without action
   */
  export type PortfolioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Portfolio
     */
    select?: PortfolioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Portfolio
     */
    omit?: PortfolioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PortfolioInclude<ExtArgs> | null
  }


  /**
   * Model sentenceallview
   */

  export type AggregateSentenceallview = {
    _count: SentenceallviewCountAggregateOutputType | null
    _avg: SentenceallviewAvgAggregateOutputType | null
    _sum: SentenceallviewSumAggregateOutputType | null
    _min: SentenceallviewMinAggregateOutputType | null
    _max: SentenceallviewMaxAggregateOutputType | null
  }

  export type SentenceallviewAvgAggregateOutputType = {
    id: number | null
    sentence_carbon: number | null
    sentence_renewables: number | null
    sentence_suppliers: number | null
    sentence_gender: number | null
    sentence_other: number | null
    sentence_waste: number | null
    sentence_water: number | null
  }

  export type SentenceallviewSumAggregateOutputType = {
    id: number | null
    sentence_carbon: bigint | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    sentence_other: bigint | null
    sentence_waste: bigint | null
    sentence_water: bigint | null
  }

  export type SentenceallviewMinAggregateOutputType = {
    id: number | null
    release_date: Date | null
    pr_site: string | null
    Targetyear_s: string | null
    ArticleTargetYear: string | null
    sentence_carbon: bigint | null
    full_text: string | null
    PressReleaseMonth: string | null
    PressReleaseFullClean: string | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    Company: string | null
    Annual_Report_Date: string | null
    title: string | null
    emails: string | null
    sentence_other: bigint | null
    Source_link: string | null
    Source_Date: string | null
    PressReleaseFullCleanstep1: string | null
    sentence_waste: bigint | null
    source: string | null
    sentence_water: bigint | null
    PressReleaseYear: string | null
    ticker: string | null
    SentenceTargetYear: string | null
    Target_sentence: string | null
    upload_date: string | null
    PageURL: string | null
    DocURL: string | null
    DocTitle: string | null
    DocName: string | null
    Target_Sentence_Page: string | null
    x: string | null
    Member_SP500: string | null
    Member_Russell1000: string | null
    ScrapingCodeSetUp: string | null
    Tickers: string | null
    PRAgency: string | null
    Domain: string | null
    PressURL: string | null
    SubscribedEsgroadmap: string | null
    SubscribedJames: string | null
    PlainTextSubscription: string | null
    AnnualReportsURL: string | null
    AnnualReportPDF2020: string | null
    ESGReportsURL: string | null
    ESGReportPDF2020: string | null
    Country: string | null
    SectorCode1: string | null
    SectorName1: string | null
    SectorCode2: string | null
    SectorName2: string | null
    SectorCode3: string | null
    SectorName3: string | null
    SectorCode4: string | null
    SectorName4: string | null
    SectorCode5: string | null
    SectorName5: string | null
    WorkedBy: string | null
    CommentsNotes: string | null
    CarbonSentenceAvailable: string | null
  }

  export type SentenceallviewMaxAggregateOutputType = {
    id: number | null
    release_date: Date | null
    pr_site: string | null
    Targetyear_s: string | null
    ArticleTargetYear: string | null
    sentence_carbon: bigint | null
    full_text: string | null
    PressReleaseMonth: string | null
    PressReleaseFullClean: string | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    Company: string | null
    Annual_Report_Date: string | null
    title: string | null
    emails: string | null
    sentence_other: bigint | null
    Source_link: string | null
    Source_Date: string | null
    PressReleaseFullCleanstep1: string | null
    sentence_waste: bigint | null
    source: string | null
    sentence_water: bigint | null
    PressReleaseYear: string | null
    ticker: string | null
    SentenceTargetYear: string | null
    Target_sentence: string | null
    upload_date: string | null
    PageURL: string | null
    DocURL: string | null
    DocTitle: string | null
    DocName: string | null
    Target_Sentence_Page: string | null
    x: string | null
    Member_SP500: string | null
    Member_Russell1000: string | null
    ScrapingCodeSetUp: string | null
    Tickers: string | null
    PRAgency: string | null
    Domain: string | null
    PressURL: string | null
    SubscribedEsgroadmap: string | null
    SubscribedJames: string | null
    PlainTextSubscription: string | null
    AnnualReportsURL: string | null
    AnnualReportPDF2020: string | null
    ESGReportsURL: string | null
    ESGReportPDF2020: string | null
    Country: string | null
    SectorCode1: string | null
    SectorName1: string | null
    SectorCode2: string | null
    SectorName2: string | null
    SectorCode3: string | null
    SectorName3: string | null
    SectorCode4: string | null
    SectorName4: string | null
    SectorCode5: string | null
    SectorName5: string | null
    WorkedBy: string | null
    CommentsNotes: string | null
    CarbonSentenceAvailable: string | null
  }

  export type SentenceallviewCountAggregateOutputType = {
    id: number
    release_date: number
    pr_site: number
    Targetyear_s: number
    ArticleTargetYear: number
    sentence_carbon: number
    full_text: number
    PressReleaseMonth: number
    PressReleaseFullClean: number
    sentence_renewables: number
    sentence_suppliers: number
    sentence_gender: number
    Company: number
    Annual_Report_Date: number
    title: number
    emails: number
    sentence_other: number
    Source_link: number
    Source_Date: number
    PressReleaseFullCleanstep1: number
    sentence_waste: number
    source: number
    sentence_water: number
    PressReleaseYear: number
    ticker: number
    SentenceTargetYear: number
    Target_sentence: number
    upload_date: number
    PageURL: number
    DocURL: number
    DocTitle: number
    DocName: number
    Target_Sentence_Page: number
    x: number
    Member_SP500: number
    Member_Russell1000: number
    ScrapingCodeSetUp: number
    Tickers: number
    PRAgency: number
    Domain: number
    PressURL: number
    SubscribedEsgroadmap: number
    SubscribedJames: number
    PlainTextSubscription: number
    AnnualReportsURL: number
    AnnualReportPDF2020: number
    ESGReportsURL: number
    ESGReportPDF2020: number
    Country: number
    SectorCode1: number
    SectorName1: number
    SectorCode2: number
    SectorName2: number
    SectorCode3: number
    SectorName3: number
    SectorCode4: number
    SectorName4: number
    SectorCode5: number
    SectorName5: number
    WorkedBy: number
    CommentsNotes: number
    CarbonSentenceAvailable: number
    _all: number
  }


  export type SentenceallviewAvgAggregateInputType = {
    id?: true
    sentence_carbon?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    sentence_other?: true
    sentence_waste?: true
    sentence_water?: true
  }

  export type SentenceallviewSumAggregateInputType = {
    id?: true
    sentence_carbon?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    sentence_other?: true
    sentence_waste?: true
    sentence_water?: true
  }

  export type SentenceallviewMinAggregateInputType = {
    id?: true
    release_date?: true
    pr_site?: true
    Targetyear_s?: true
    ArticleTargetYear?: true
    sentence_carbon?: true
    full_text?: true
    PressReleaseMonth?: true
    PressReleaseFullClean?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    Company?: true
    Annual_Report_Date?: true
    title?: true
    emails?: true
    sentence_other?: true
    Source_link?: true
    Source_Date?: true
    PressReleaseFullCleanstep1?: true
    sentence_waste?: true
    source?: true
    sentence_water?: true
    PressReleaseYear?: true
    ticker?: true
    SentenceTargetYear?: true
    Target_sentence?: true
    upload_date?: true
    PageURL?: true
    DocURL?: true
    DocTitle?: true
    DocName?: true
    Target_Sentence_Page?: true
    x?: true
    Member_SP500?: true
    Member_Russell1000?: true
    ScrapingCodeSetUp?: true
    Tickers?: true
    PRAgency?: true
    Domain?: true
    PressURL?: true
    SubscribedEsgroadmap?: true
    SubscribedJames?: true
    PlainTextSubscription?: true
    AnnualReportsURL?: true
    AnnualReportPDF2020?: true
    ESGReportsURL?: true
    ESGReportPDF2020?: true
    Country?: true
    SectorCode1?: true
    SectorName1?: true
    SectorCode2?: true
    SectorName2?: true
    SectorCode3?: true
    SectorName3?: true
    SectorCode4?: true
    SectorName4?: true
    SectorCode5?: true
    SectorName5?: true
    WorkedBy?: true
    CommentsNotes?: true
    CarbonSentenceAvailable?: true
  }

  export type SentenceallviewMaxAggregateInputType = {
    id?: true
    release_date?: true
    pr_site?: true
    Targetyear_s?: true
    ArticleTargetYear?: true
    sentence_carbon?: true
    full_text?: true
    PressReleaseMonth?: true
    PressReleaseFullClean?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    Company?: true
    Annual_Report_Date?: true
    title?: true
    emails?: true
    sentence_other?: true
    Source_link?: true
    Source_Date?: true
    PressReleaseFullCleanstep1?: true
    sentence_waste?: true
    source?: true
    sentence_water?: true
    PressReleaseYear?: true
    ticker?: true
    SentenceTargetYear?: true
    Target_sentence?: true
    upload_date?: true
    PageURL?: true
    DocURL?: true
    DocTitle?: true
    DocName?: true
    Target_Sentence_Page?: true
    x?: true
    Member_SP500?: true
    Member_Russell1000?: true
    ScrapingCodeSetUp?: true
    Tickers?: true
    PRAgency?: true
    Domain?: true
    PressURL?: true
    SubscribedEsgroadmap?: true
    SubscribedJames?: true
    PlainTextSubscription?: true
    AnnualReportsURL?: true
    AnnualReportPDF2020?: true
    ESGReportsURL?: true
    ESGReportPDF2020?: true
    Country?: true
    SectorCode1?: true
    SectorName1?: true
    SectorCode2?: true
    SectorName2?: true
    SectorCode3?: true
    SectorName3?: true
    SectorCode4?: true
    SectorName4?: true
    SectorCode5?: true
    SectorName5?: true
    WorkedBy?: true
    CommentsNotes?: true
    CarbonSentenceAvailable?: true
  }

  export type SentenceallviewCountAggregateInputType = {
    id?: true
    release_date?: true
    pr_site?: true
    Targetyear_s?: true
    ArticleTargetYear?: true
    sentence_carbon?: true
    full_text?: true
    PressReleaseMonth?: true
    PressReleaseFullClean?: true
    sentence_renewables?: true
    sentence_suppliers?: true
    sentence_gender?: true
    Company?: true
    Annual_Report_Date?: true
    title?: true
    emails?: true
    sentence_other?: true
    Source_link?: true
    Source_Date?: true
    PressReleaseFullCleanstep1?: true
    sentence_waste?: true
    source?: true
    sentence_water?: true
    PressReleaseYear?: true
    ticker?: true
    SentenceTargetYear?: true
    Target_sentence?: true
    upload_date?: true
    PageURL?: true
    DocURL?: true
    DocTitle?: true
    DocName?: true
    Target_Sentence_Page?: true
    x?: true
    Member_SP500?: true
    Member_Russell1000?: true
    ScrapingCodeSetUp?: true
    Tickers?: true
    PRAgency?: true
    Domain?: true
    PressURL?: true
    SubscribedEsgroadmap?: true
    SubscribedJames?: true
    PlainTextSubscription?: true
    AnnualReportsURL?: true
    AnnualReportPDF2020?: true
    ESGReportsURL?: true
    ESGReportPDF2020?: true
    Country?: true
    SectorCode1?: true
    SectorName1?: true
    SectorCode2?: true
    SectorName2?: true
    SectorCode3?: true
    SectorName3?: true
    SectorCode4?: true
    SectorName4?: true
    SectorCode5?: true
    SectorName5?: true
    WorkedBy?: true
    CommentsNotes?: true
    CarbonSentenceAvailable?: true
    _all?: true
  }

  export type SentenceallviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sentenceallview to aggregate.
     */
    where?: sentenceallviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sentenceallviews to fetch.
     */
    orderBy?: sentenceallviewOrderByWithRelationInput | sentenceallviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sentenceallviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sentenceallviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sentenceallviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sentenceallviews
    **/
    _count?: true | SentenceallviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SentenceallviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SentenceallviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SentenceallviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SentenceallviewMaxAggregateInputType
  }

  export type GetSentenceallviewAggregateType<T extends SentenceallviewAggregateArgs> = {
        [P in keyof T & keyof AggregateSentenceallview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSentenceallview[P]>
      : GetScalarType<T[P], AggregateSentenceallview[P]>
  }




  export type sentenceallviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sentenceallviewWhereInput
    orderBy?: sentenceallviewOrderByWithAggregationInput | sentenceallviewOrderByWithAggregationInput[]
    by: SentenceallviewScalarFieldEnum[] | SentenceallviewScalarFieldEnum
    having?: sentenceallviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SentenceallviewCountAggregateInputType | true
    _avg?: SentenceallviewAvgAggregateInputType
    _sum?: SentenceallviewSumAggregateInputType
    _min?: SentenceallviewMinAggregateInputType
    _max?: SentenceallviewMaxAggregateInputType
  }

  export type SentenceallviewGroupByOutputType = {
    id: number
    release_date: Date | null
    pr_site: string | null
    Targetyear_s: string | null
    ArticleTargetYear: string | null
    sentence_carbon: bigint | null
    full_text: string | null
    PressReleaseMonth: string | null
    PressReleaseFullClean: string | null
    sentence_renewables: bigint | null
    sentence_suppliers: bigint | null
    sentence_gender: bigint | null
    Company: string | null
    Annual_Report_Date: string | null
    title: string | null
    emails: string | null
    sentence_other: bigint | null
    Source_link: string | null
    Source_Date: string | null
    PressReleaseFullCleanstep1: string | null
    sentence_waste: bigint | null
    source: string | null
    sentence_water: bigint | null
    PressReleaseYear: string | null
    ticker: string | null
    SentenceTargetYear: string | null
    Target_sentence: string | null
    upload_date: string | null
    PageURL: string | null
    DocURL: string | null
    DocTitle: string | null
    DocName: string | null
    Target_Sentence_Page: string | null
    x: string | null
    Member_SP500: string | null
    Member_Russell1000: string | null
    ScrapingCodeSetUp: string | null
    Tickers: string | null
    PRAgency: string | null
    Domain: string | null
    PressURL: string | null
    SubscribedEsgroadmap: string | null
    SubscribedJames: string | null
    PlainTextSubscription: string | null
    AnnualReportsURL: string | null
    AnnualReportPDF2020: string | null
    ESGReportsURL: string | null
    ESGReportPDF2020: string | null
    Country: string | null
    SectorCode1: string | null
    SectorName1: string | null
    SectorCode2: string | null
    SectorName2: string | null
    SectorCode3: string | null
    SectorName3: string | null
    SectorCode4: string | null
    SectorName4: string | null
    SectorCode5: string | null
    SectorName5: string | null
    WorkedBy: string | null
    CommentsNotes: string | null
    CarbonSentenceAvailable: string | null
    _count: SentenceallviewCountAggregateOutputType | null
    _avg: SentenceallviewAvgAggregateOutputType | null
    _sum: SentenceallviewSumAggregateOutputType | null
    _min: SentenceallviewMinAggregateOutputType | null
    _max: SentenceallviewMaxAggregateOutputType | null
  }

  type GetSentenceallviewGroupByPayload<T extends sentenceallviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SentenceallviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SentenceallviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SentenceallviewGroupByOutputType[P]>
            : GetScalarType<T[P], SentenceallviewGroupByOutputType[P]>
        }
      >
    >


  export type sentenceallviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    release_date?: boolean
    pr_site?: boolean
    Targetyear_s?: boolean
    ArticleTargetYear?: boolean
    sentence_carbon?: boolean
    full_text?: boolean
    PressReleaseMonth?: boolean
    PressReleaseFullClean?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_gender?: boolean
    Company?: boolean
    Annual_Report_Date?: boolean
    title?: boolean
    emails?: boolean
    sentence_other?: boolean
    Source_link?: boolean
    Source_Date?: boolean
    PressReleaseFullCleanstep1?: boolean
    sentence_waste?: boolean
    source?: boolean
    sentence_water?: boolean
    PressReleaseYear?: boolean
    ticker?: boolean
    SentenceTargetYear?: boolean
    Target_sentence?: boolean
    upload_date?: boolean
    PageURL?: boolean
    DocURL?: boolean
    DocTitle?: boolean
    DocName?: boolean
    Target_Sentence_Page?: boolean
    x?: boolean
    Member_SP500?: boolean
    Member_Russell1000?: boolean
    ScrapingCodeSetUp?: boolean
    Tickers?: boolean
    PRAgency?: boolean
    Domain?: boolean
    PressURL?: boolean
    SubscribedEsgroadmap?: boolean
    SubscribedJames?: boolean
    PlainTextSubscription?: boolean
    AnnualReportsURL?: boolean
    AnnualReportPDF2020?: boolean
    ESGReportsURL?: boolean
    ESGReportPDF2020?: boolean
    Country?: boolean
    SectorCode1?: boolean
    SectorName1?: boolean
    SectorCode2?: boolean
    SectorName2?: boolean
    SectorCode3?: boolean
    SectorName3?: boolean
    SectorCode4?: boolean
    SectorName4?: boolean
    SectorCode5?: boolean
    SectorName5?: boolean
    WorkedBy?: boolean
    CommentsNotes?: boolean
    CarbonSentenceAvailable?: boolean
  }, ExtArgs["result"]["sentenceallview"]>



  export type sentenceallviewSelectScalar = {
    id?: boolean
    release_date?: boolean
    pr_site?: boolean
    Targetyear_s?: boolean
    ArticleTargetYear?: boolean
    sentence_carbon?: boolean
    full_text?: boolean
    PressReleaseMonth?: boolean
    PressReleaseFullClean?: boolean
    sentence_renewables?: boolean
    sentence_suppliers?: boolean
    sentence_gender?: boolean
    Company?: boolean
    Annual_Report_Date?: boolean
    title?: boolean
    emails?: boolean
    sentence_other?: boolean
    Source_link?: boolean
    Source_Date?: boolean
    PressReleaseFullCleanstep1?: boolean
    sentence_waste?: boolean
    source?: boolean
    sentence_water?: boolean
    PressReleaseYear?: boolean
    ticker?: boolean
    SentenceTargetYear?: boolean
    Target_sentence?: boolean
    upload_date?: boolean
    PageURL?: boolean
    DocURL?: boolean
    DocTitle?: boolean
    DocName?: boolean
    Target_Sentence_Page?: boolean
    x?: boolean
    Member_SP500?: boolean
    Member_Russell1000?: boolean
    ScrapingCodeSetUp?: boolean
    Tickers?: boolean
    PRAgency?: boolean
    Domain?: boolean
    PressURL?: boolean
    SubscribedEsgroadmap?: boolean
    SubscribedJames?: boolean
    PlainTextSubscription?: boolean
    AnnualReportsURL?: boolean
    AnnualReportPDF2020?: boolean
    ESGReportsURL?: boolean
    ESGReportPDF2020?: boolean
    Country?: boolean
    SectorCode1?: boolean
    SectorName1?: boolean
    SectorCode2?: boolean
    SectorName2?: boolean
    SectorCode3?: boolean
    SectorName3?: boolean
    SectorCode4?: boolean
    SectorName4?: boolean
    SectorCode5?: boolean
    SectorName5?: boolean
    WorkedBy?: boolean
    CommentsNotes?: boolean
    CarbonSentenceAvailable?: boolean
  }

  export type sentenceallviewOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "release_date" | "pr_site" | "Targetyear_s" | "ArticleTargetYear" | "sentence_carbon" | "full_text" | "PressReleaseMonth" | "PressReleaseFullClean" | "sentence_renewables" | "sentence_suppliers" | "sentence_gender" | "Company" | "Annual_Report_Date" | "title" | "emails" | "sentence_other" | "Source_link" | "Source_Date" | "PressReleaseFullCleanstep1" | "sentence_waste" | "source" | "sentence_water" | "PressReleaseYear" | "ticker" | "SentenceTargetYear" | "Target_sentence" | "upload_date" | "PageURL" | "DocURL" | "DocTitle" | "DocName" | "Target_Sentence_Page" | "x" | "Member_SP500" | "Member_Russell1000" | "ScrapingCodeSetUp" | "Tickers" | "PRAgency" | "Domain" | "PressURL" | "SubscribedEsgroadmap" | "SubscribedJames" | "PlainTextSubscription" | "AnnualReportsURL" | "AnnualReportPDF2020" | "ESGReportsURL" | "ESGReportPDF2020" | "Country" | "SectorCode1" | "SectorName1" | "SectorCode2" | "SectorName2" | "SectorCode3" | "SectorName3" | "SectorCode4" | "SectorName4" | "SectorCode5" | "SectorName5" | "WorkedBy" | "CommentsNotes" | "CarbonSentenceAvailable", ExtArgs["result"]["sentenceallview"]>

  export type $sentenceallviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sentenceallview"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      release_date: Date | null
      pr_site: string | null
      Targetyear_s: string | null
      ArticleTargetYear: string | null
      sentence_carbon: bigint | null
      full_text: string | null
      PressReleaseMonth: string | null
      PressReleaseFullClean: string | null
      sentence_renewables: bigint | null
      sentence_suppliers: bigint | null
      sentence_gender: bigint | null
      Company: string | null
      Annual_Report_Date: string | null
      title: string | null
      emails: string | null
      sentence_other: bigint | null
      Source_link: string | null
      Source_Date: string | null
      PressReleaseFullCleanstep1: string | null
      sentence_waste: bigint | null
      source: string | null
      sentence_water: bigint | null
      PressReleaseYear: string | null
      ticker: string | null
      SentenceTargetYear: string | null
      Target_sentence: string | null
      upload_date: string | null
      PageURL: string | null
      DocURL: string | null
      DocTitle: string | null
      DocName: string | null
      Target_Sentence_Page: string | null
      x: string | null
      Member_SP500: string | null
      Member_Russell1000: string | null
      ScrapingCodeSetUp: string | null
      Tickers: string | null
      PRAgency: string | null
      Domain: string | null
      PressURL: string | null
      SubscribedEsgroadmap: string | null
      SubscribedJames: string | null
      PlainTextSubscription: string | null
      AnnualReportsURL: string | null
      AnnualReportPDF2020: string | null
      ESGReportsURL: string | null
      ESGReportPDF2020: string | null
      Country: string | null
      SectorCode1: string | null
      SectorName1: string | null
      SectorCode2: string | null
      SectorName2: string | null
      SectorCode3: string | null
      SectorName3: string | null
      SectorCode4: string | null
      SectorName4: string | null
      SectorCode5: string | null
      SectorName5: string | null
      WorkedBy: string | null
      CommentsNotes: string | null
      CarbonSentenceAvailable: string | null
    }, ExtArgs["result"]["sentenceallview"]>
    composites: {}
  }

  type sentenceallviewGetPayload<S extends boolean | null | undefined | sentenceallviewDefaultArgs> = $Result.GetResult<Prisma.$sentenceallviewPayload, S>

  type sentenceallviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sentenceallviewFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SentenceallviewCountAggregateInputType | true
    }

  export interface sentenceallviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sentenceallview'], meta: { name: 'sentenceallview' } }
    /**
     * Find zero or one Sentenceallview that matches the filter.
     * @param {sentenceallviewFindUniqueArgs} args - Arguments to find a Sentenceallview
     * @example
     * // Get one Sentenceallview
     * const sentenceallview = await prisma.sentenceallview.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sentenceallviewFindUniqueArgs>(args: SelectSubset<T, sentenceallviewFindUniqueArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sentenceallview that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sentenceallviewFindUniqueOrThrowArgs} args - Arguments to find a Sentenceallview
     * @example
     * // Get one Sentenceallview
     * const sentenceallview = await prisma.sentenceallview.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sentenceallviewFindUniqueOrThrowArgs>(args: SelectSubset<T, sentenceallviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sentenceallview that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sentenceallviewFindFirstArgs} args - Arguments to find a Sentenceallview
     * @example
     * // Get one Sentenceallview
     * const sentenceallview = await prisma.sentenceallview.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sentenceallviewFindFirstArgs>(args?: SelectSubset<T, sentenceallviewFindFirstArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sentenceallview that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sentenceallviewFindFirstOrThrowArgs} args - Arguments to find a Sentenceallview
     * @example
     * // Get one Sentenceallview
     * const sentenceallview = await prisma.sentenceallview.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sentenceallviewFindFirstOrThrowArgs>(args?: SelectSubset<T, sentenceallviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sentenceallviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sentenceallviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sentenceallviews
     * const sentenceallviews = await prisma.sentenceallview.findMany()
     * 
     * // Get first 10 Sentenceallviews
     * const sentenceallviews = await prisma.sentenceallview.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sentenceallviewWithIdOnly = await prisma.sentenceallview.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sentenceallviewFindManyArgs>(args?: SelectSubset<T, sentenceallviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sentenceallview.
     * @param {sentenceallviewCreateArgs} args - Arguments to create a Sentenceallview.
     * @example
     * // Create one Sentenceallview
     * const Sentenceallview = await prisma.sentenceallview.create({
     *   data: {
     *     // ... data to create a Sentenceallview
     *   }
     * })
     * 
     */
    create<T extends sentenceallviewCreateArgs>(args: SelectSubset<T, sentenceallviewCreateArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sentenceallviews.
     * @param {sentenceallviewCreateManyArgs} args - Arguments to create many Sentenceallviews.
     * @example
     * // Create many Sentenceallviews
     * const sentenceallview = await prisma.sentenceallview.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sentenceallviewCreateManyArgs>(args?: SelectSubset<T, sentenceallviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sentenceallview.
     * @param {sentenceallviewDeleteArgs} args - Arguments to delete one Sentenceallview.
     * @example
     * // Delete one Sentenceallview
     * const Sentenceallview = await prisma.sentenceallview.delete({
     *   where: {
     *     // ... filter to delete one Sentenceallview
     *   }
     * })
     * 
     */
    delete<T extends sentenceallviewDeleteArgs>(args: SelectSubset<T, sentenceallviewDeleteArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sentenceallview.
     * @param {sentenceallviewUpdateArgs} args - Arguments to update one Sentenceallview.
     * @example
     * // Update one Sentenceallview
     * const sentenceallview = await prisma.sentenceallview.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sentenceallviewUpdateArgs>(args: SelectSubset<T, sentenceallviewUpdateArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sentenceallviews.
     * @param {sentenceallviewDeleteManyArgs} args - Arguments to filter Sentenceallviews to delete.
     * @example
     * // Delete a few Sentenceallviews
     * const { count } = await prisma.sentenceallview.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sentenceallviewDeleteManyArgs>(args?: SelectSubset<T, sentenceallviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sentenceallviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sentenceallviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sentenceallviews
     * const sentenceallview = await prisma.sentenceallview.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sentenceallviewUpdateManyArgs>(args: SelectSubset<T, sentenceallviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sentenceallview.
     * @param {sentenceallviewUpsertArgs} args - Arguments to update or create a Sentenceallview.
     * @example
     * // Update or create a Sentenceallview
     * const sentenceallview = await prisma.sentenceallview.upsert({
     *   create: {
     *     // ... data to create a Sentenceallview
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sentenceallview we want to update
     *   }
     * })
     */
    upsert<T extends sentenceallviewUpsertArgs>(args: SelectSubset<T, sentenceallviewUpsertArgs<ExtArgs>>): Prisma__sentenceallviewClient<$Result.GetResult<Prisma.$sentenceallviewPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sentenceallviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sentenceallviewCountArgs} args - Arguments to filter Sentenceallviews to count.
     * @example
     * // Count the number of Sentenceallviews
     * const count = await prisma.sentenceallview.count({
     *   where: {
     *     // ... the filter for the Sentenceallviews we want to count
     *   }
     * })
    **/
    count<T extends sentenceallviewCountArgs>(
      args?: Subset<T, sentenceallviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SentenceallviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sentenceallview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SentenceallviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SentenceallviewAggregateArgs>(args: Subset<T, SentenceallviewAggregateArgs>): Prisma.PrismaPromise<GetSentenceallviewAggregateType<T>>

    /**
     * Group by Sentenceallview.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sentenceallviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sentenceallviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sentenceallviewGroupByArgs['orderBy'] }
        : { orderBy?: sentenceallviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sentenceallviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSentenceallviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sentenceallview model
   */
  readonly fields: sentenceallviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sentenceallview.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sentenceallviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sentenceallview model
   */
  interface sentenceallviewFieldRefs {
    readonly id: FieldRef<"sentenceallview", 'Int'>
    readonly release_date: FieldRef<"sentenceallview", 'DateTime'>
    readonly pr_site: FieldRef<"sentenceallview", 'String'>
    readonly Targetyear_s: FieldRef<"sentenceallview", 'String'>
    readonly ArticleTargetYear: FieldRef<"sentenceallview", 'String'>
    readonly sentence_carbon: FieldRef<"sentenceallview", 'BigInt'>
    readonly full_text: FieldRef<"sentenceallview", 'String'>
    readonly PressReleaseMonth: FieldRef<"sentenceallview", 'String'>
    readonly PressReleaseFullClean: FieldRef<"sentenceallview", 'String'>
    readonly sentence_renewables: FieldRef<"sentenceallview", 'BigInt'>
    readonly sentence_suppliers: FieldRef<"sentenceallview", 'BigInt'>
    readonly sentence_gender: FieldRef<"sentenceallview", 'BigInt'>
    readonly Company: FieldRef<"sentenceallview", 'String'>
    readonly Annual_Report_Date: FieldRef<"sentenceallview", 'String'>
    readonly title: FieldRef<"sentenceallview", 'String'>
    readonly emails: FieldRef<"sentenceallview", 'String'>
    readonly sentence_other: FieldRef<"sentenceallview", 'BigInt'>
    readonly Source_link: FieldRef<"sentenceallview", 'String'>
    readonly Source_Date: FieldRef<"sentenceallview", 'String'>
    readonly PressReleaseFullCleanstep1: FieldRef<"sentenceallview", 'String'>
    readonly sentence_waste: FieldRef<"sentenceallview", 'BigInt'>
    readonly source: FieldRef<"sentenceallview", 'String'>
    readonly sentence_water: FieldRef<"sentenceallview", 'BigInt'>
    readonly PressReleaseYear: FieldRef<"sentenceallview", 'String'>
    readonly ticker: FieldRef<"sentenceallview", 'String'>
    readonly SentenceTargetYear: FieldRef<"sentenceallview", 'String'>
    readonly Target_sentence: FieldRef<"sentenceallview", 'String'>
    readonly upload_date: FieldRef<"sentenceallview", 'String'>
    readonly PageURL: FieldRef<"sentenceallview", 'String'>
    readonly DocURL: FieldRef<"sentenceallview", 'String'>
    readonly DocTitle: FieldRef<"sentenceallview", 'String'>
    readonly DocName: FieldRef<"sentenceallview", 'String'>
    readonly Target_Sentence_Page: FieldRef<"sentenceallview", 'String'>
    readonly x: FieldRef<"sentenceallview", 'String'>
    readonly Member_SP500: FieldRef<"sentenceallview", 'String'>
    readonly Member_Russell1000: FieldRef<"sentenceallview", 'String'>
    readonly ScrapingCodeSetUp: FieldRef<"sentenceallview", 'String'>
    readonly Tickers: FieldRef<"sentenceallview", 'String'>
    readonly PRAgency: FieldRef<"sentenceallview", 'String'>
    readonly Domain: FieldRef<"sentenceallview", 'String'>
    readonly PressURL: FieldRef<"sentenceallview", 'String'>
    readonly SubscribedEsgroadmap: FieldRef<"sentenceallview", 'String'>
    readonly SubscribedJames: FieldRef<"sentenceallview", 'String'>
    readonly PlainTextSubscription: FieldRef<"sentenceallview", 'String'>
    readonly AnnualReportsURL: FieldRef<"sentenceallview", 'String'>
    readonly AnnualReportPDF2020: FieldRef<"sentenceallview", 'String'>
    readonly ESGReportsURL: FieldRef<"sentenceallview", 'String'>
    readonly ESGReportPDF2020: FieldRef<"sentenceallview", 'String'>
    readonly Country: FieldRef<"sentenceallview", 'String'>
    readonly SectorCode1: FieldRef<"sentenceallview", 'String'>
    readonly SectorName1: FieldRef<"sentenceallview", 'String'>
    readonly SectorCode2: FieldRef<"sentenceallview", 'String'>
    readonly SectorName2: FieldRef<"sentenceallview", 'String'>
    readonly SectorCode3: FieldRef<"sentenceallview", 'String'>
    readonly SectorName3: FieldRef<"sentenceallview", 'String'>
    readonly SectorCode4: FieldRef<"sentenceallview", 'String'>
    readonly SectorName4: FieldRef<"sentenceallview", 'String'>
    readonly SectorCode5: FieldRef<"sentenceallview", 'String'>
    readonly SectorName5: FieldRef<"sentenceallview", 'String'>
    readonly WorkedBy: FieldRef<"sentenceallview", 'String'>
    readonly CommentsNotes: FieldRef<"sentenceallview", 'String'>
    readonly CarbonSentenceAvailable: FieldRef<"sentenceallview", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sentenceallview findUnique
   */
  export type sentenceallviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * Filter, which sentenceallview to fetch.
     */
    where: sentenceallviewWhereUniqueInput
  }

  /**
   * sentenceallview findUniqueOrThrow
   */
  export type sentenceallviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * Filter, which sentenceallview to fetch.
     */
    where: sentenceallviewWhereUniqueInput
  }

  /**
   * sentenceallview findFirst
   */
  export type sentenceallviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * Filter, which sentenceallview to fetch.
     */
    where?: sentenceallviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sentenceallviews to fetch.
     */
    orderBy?: sentenceallviewOrderByWithRelationInput | sentenceallviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sentenceallviews.
     */
    cursor?: sentenceallviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sentenceallviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sentenceallviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sentenceallviews.
     */
    distinct?: SentenceallviewScalarFieldEnum | SentenceallviewScalarFieldEnum[]
  }

  /**
   * sentenceallview findFirstOrThrow
   */
  export type sentenceallviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * Filter, which sentenceallview to fetch.
     */
    where?: sentenceallviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sentenceallviews to fetch.
     */
    orderBy?: sentenceallviewOrderByWithRelationInput | sentenceallviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sentenceallviews.
     */
    cursor?: sentenceallviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sentenceallviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sentenceallviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sentenceallviews.
     */
    distinct?: SentenceallviewScalarFieldEnum | SentenceallviewScalarFieldEnum[]
  }

  /**
   * sentenceallview findMany
   */
  export type sentenceallviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * Filter, which sentenceallviews to fetch.
     */
    where?: sentenceallviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sentenceallviews to fetch.
     */
    orderBy?: sentenceallviewOrderByWithRelationInput | sentenceallviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sentenceallviews.
     */
    cursor?: sentenceallviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sentenceallviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sentenceallviews.
     */
    skip?: number
    distinct?: SentenceallviewScalarFieldEnum | SentenceallviewScalarFieldEnum[]
  }

  /**
   * sentenceallview create
   */
  export type sentenceallviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * The data needed to create a sentenceallview.
     */
    data: XOR<sentenceallviewCreateInput, sentenceallviewUncheckedCreateInput>
  }

  /**
   * sentenceallview createMany
   */
  export type sentenceallviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sentenceallviews.
     */
    data: sentenceallviewCreateManyInput | sentenceallviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sentenceallview update
   */
  export type sentenceallviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * The data needed to update a sentenceallview.
     */
    data: XOR<sentenceallviewUpdateInput, sentenceallviewUncheckedUpdateInput>
    /**
     * Choose, which sentenceallview to update.
     */
    where: sentenceallviewWhereUniqueInput
  }

  /**
   * sentenceallview updateMany
   */
  export type sentenceallviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sentenceallviews.
     */
    data: XOR<sentenceallviewUpdateManyMutationInput, sentenceallviewUncheckedUpdateManyInput>
    /**
     * Filter which sentenceallviews to update
     */
    where?: sentenceallviewWhereInput
    /**
     * Limit how many sentenceallviews to update.
     */
    limit?: number
  }

  /**
   * sentenceallview upsert
   */
  export type sentenceallviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * The filter to search for the sentenceallview to update in case it exists.
     */
    where: sentenceallviewWhereUniqueInput
    /**
     * In case the sentenceallview found by the `where` argument doesn't exist, create a new sentenceallview with this data.
     */
    create: XOR<sentenceallviewCreateInput, sentenceallviewUncheckedCreateInput>
    /**
     * In case the sentenceallview was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sentenceallviewUpdateInput, sentenceallviewUncheckedUpdateInput>
  }

  /**
   * sentenceallview delete
   */
  export type sentenceallviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
    /**
     * Filter which sentenceallview to delete.
     */
    where: sentenceallviewWhereUniqueInput
  }

  /**
   * sentenceallview deleteMany
   */
  export type sentenceallviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sentenceallviews to delete
     */
    where?: sentenceallviewWhereInput
    /**
     * Limit how many sentenceallviews to delete.
     */
    limit?: number
  }

  /**
   * sentenceallview without action
   */
  export type sentenceallviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sentenceallview
     */
    select?: sentenceallviewSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sentenceallview
     */
    omit?: sentenceallviewOmit<ExtArgs> | null
  }


  /**
   * Model Search
   */

  export type AggregateSearch = {
    _count: SearchCountAggregateOutputType | null
    _avg: SearchAvgAggregateOutputType | null
    _sum: SearchSumAggregateOutputType | null
    _min: SearchMinAggregateOutputType | null
    _max: SearchMaxAggregateOutputType | null
  }

  export type SearchAvgAggregateOutputType = {
    userId: number | null
  }

  export type SearchSumAggregateOutputType = {
    userId: number | null
  }

  export type SearchMinAggregateOutputType = {
    id: string | null
    userId: number | null
    keyword: string | null
    tableName: string | null
    createdAt: Date | null
    lastChecked: Date | null
  }

  export type SearchMaxAggregateOutputType = {
    id: string | null
    userId: number | null
    keyword: string | null
    tableName: string | null
    createdAt: Date | null
    lastChecked: Date | null
  }

  export type SearchCountAggregateOutputType = {
    id: number
    userId: number
    keyword: number
    tableName: number
    createdAt: number
    lastChecked: number
    _all: number
  }


  export type SearchAvgAggregateInputType = {
    userId?: true
  }

  export type SearchSumAggregateInputType = {
    userId?: true
  }

  export type SearchMinAggregateInputType = {
    id?: true
    userId?: true
    keyword?: true
    tableName?: true
    createdAt?: true
    lastChecked?: true
  }

  export type SearchMaxAggregateInputType = {
    id?: true
    userId?: true
    keyword?: true
    tableName?: true
    createdAt?: true
    lastChecked?: true
  }

  export type SearchCountAggregateInputType = {
    id?: true
    userId?: true
    keyword?: true
    tableName?: true
    createdAt?: true
    lastChecked?: true
    _all?: true
  }

  export type SearchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Search to aggregate.
     */
    where?: SearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Searches to fetch.
     */
    orderBy?: SearchOrderByWithRelationInput | SearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Searches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Searches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Searches
    **/
    _count?: true | SearchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SearchAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SearchSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SearchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SearchMaxAggregateInputType
  }

  export type GetSearchAggregateType<T extends SearchAggregateArgs> = {
        [P in keyof T & keyof AggregateSearch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSearch[P]>
      : GetScalarType<T[P], AggregateSearch[P]>
  }




  export type SearchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SearchWhereInput
    orderBy?: SearchOrderByWithAggregationInput | SearchOrderByWithAggregationInput[]
    by: SearchScalarFieldEnum[] | SearchScalarFieldEnum
    having?: SearchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SearchCountAggregateInputType | true
    _avg?: SearchAvgAggregateInputType
    _sum?: SearchSumAggregateInputType
    _min?: SearchMinAggregateInputType
    _max?: SearchMaxAggregateInputType
  }

  export type SearchGroupByOutputType = {
    id: string
    userId: number
    keyword: string
    tableName: string
    createdAt: Date
    lastChecked: Date | null
    _count: SearchCountAggregateOutputType | null
    _avg: SearchAvgAggregateOutputType | null
    _sum: SearchSumAggregateOutputType | null
    _min: SearchMinAggregateOutputType | null
    _max: SearchMaxAggregateOutputType | null
  }

  type GetSearchGroupByPayload<T extends SearchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SearchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SearchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SearchGroupByOutputType[P]>
            : GetScalarType<T[P], SearchGroupByOutputType[P]>
        }
      >
    >


  export type SearchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    keyword?: boolean
    tableName?: boolean
    createdAt?: boolean
    lastChecked?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["search"]>



  export type SearchSelectScalar = {
    id?: boolean
    userId?: boolean
    keyword?: boolean
    tableName?: boolean
    createdAt?: boolean
    lastChecked?: boolean
  }

  export type SearchOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "keyword" | "tableName" | "createdAt" | "lastChecked", ExtArgs["result"]["search"]>
  export type SearchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SearchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Search"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: number
      keyword: string
      tableName: string
      createdAt: Date
      lastChecked: Date | null
    }, ExtArgs["result"]["search"]>
    composites: {}
  }

  type SearchGetPayload<S extends boolean | null | undefined | SearchDefaultArgs> = $Result.GetResult<Prisma.$SearchPayload, S>

  type SearchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SearchFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SearchCountAggregateInputType | true
    }

  export interface SearchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Search'], meta: { name: 'Search' } }
    /**
     * Find zero or one Search that matches the filter.
     * @param {SearchFindUniqueArgs} args - Arguments to find a Search
     * @example
     * // Get one Search
     * const search = await prisma.search.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SearchFindUniqueArgs>(args: SelectSubset<T, SearchFindUniqueArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Search that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SearchFindUniqueOrThrowArgs} args - Arguments to find a Search
     * @example
     * // Get one Search
     * const search = await prisma.search.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SearchFindUniqueOrThrowArgs>(args: SelectSubset<T, SearchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Search that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchFindFirstArgs} args - Arguments to find a Search
     * @example
     * // Get one Search
     * const search = await prisma.search.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SearchFindFirstArgs>(args?: SelectSubset<T, SearchFindFirstArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Search that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchFindFirstOrThrowArgs} args - Arguments to find a Search
     * @example
     * // Get one Search
     * const search = await prisma.search.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SearchFindFirstOrThrowArgs>(args?: SelectSubset<T, SearchFindFirstOrThrowArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Searches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Searches
     * const searches = await prisma.search.findMany()
     * 
     * // Get first 10 Searches
     * const searches = await prisma.search.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const searchWithIdOnly = await prisma.search.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SearchFindManyArgs>(args?: SelectSubset<T, SearchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Search.
     * @param {SearchCreateArgs} args - Arguments to create a Search.
     * @example
     * // Create one Search
     * const Search = await prisma.search.create({
     *   data: {
     *     // ... data to create a Search
     *   }
     * })
     * 
     */
    create<T extends SearchCreateArgs>(args: SelectSubset<T, SearchCreateArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Searches.
     * @param {SearchCreateManyArgs} args - Arguments to create many Searches.
     * @example
     * // Create many Searches
     * const search = await prisma.search.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SearchCreateManyArgs>(args?: SelectSubset<T, SearchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Search.
     * @param {SearchDeleteArgs} args - Arguments to delete one Search.
     * @example
     * // Delete one Search
     * const Search = await prisma.search.delete({
     *   where: {
     *     // ... filter to delete one Search
     *   }
     * })
     * 
     */
    delete<T extends SearchDeleteArgs>(args: SelectSubset<T, SearchDeleteArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Search.
     * @param {SearchUpdateArgs} args - Arguments to update one Search.
     * @example
     * // Update one Search
     * const search = await prisma.search.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SearchUpdateArgs>(args: SelectSubset<T, SearchUpdateArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Searches.
     * @param {SearchDeleteManyArgs} args - Arguments to filter Searches to delete.
     * @example
     * // Delete a few Searches
     * const { count } = await prisma.search.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SearchDeleteManyArgs>(args?: SelectSubset<T, SearchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Searches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Searches
     * const search = await prisma.search.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SearchUpdateManyArgs>(args: SelectSubset<T, SearchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Search.
     * @param {SearchUpsertArgs} args - Arguments to update or create a Search.
     * @example
     * // Update or create a Search
     * const search = await prisma.search.upsert({
     *   create: {
     *     // ... data to create a Search
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Search we want to update
     *   }
     * })
     */
    upsert<T extends SearchUpsertArgs>(args: SelectSubset<T, SearchUpsertArgs<ExtArgs>>): Prisma__SearchClient<$Result.GetResult<Prisma.$SearchPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Searches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchCountArgs} args - Arguments to filter Searches to count.
     * @example
     * // Count the number of Searches
     * const count = await prisma.search.count({
     *   where: {
     *     // ... the filter for the Searches we want to count
     *   }
     * })
    **/
    count<T extends SearchCountArgs>(
      args?: Subset<T, SearchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SearchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Search.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SearchAggregateArgs>(args: Subset<T, SearchAggregateArgs>): Prisma.PrismaPromise<GetSearchAggregateType<T>>

    /**
     * Group by Search.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SearchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SearchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SearchGroupByArgs['orderBy'] }
        : { orderBy?: SearchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SearchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSearchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Search model
   */
  readonly fields: SearchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Search.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SearchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Search model
   */
  interface SearchFieldRefs {
    readonly id: FieldRef<"Search", 'String'>
    readonly userId: FieldRef<"Search", 'Int'>
    readonly keyword: FieldRef<"Search", 'String'>
    readonly tableName: FieldRef<"Search", 'String'>
    readonly createdAt: FieldRef<"Search", 'DateTime'>
    readonly lastChecked: FieldRef<"Search", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Search findUnique
   */
  export type SearchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * Filter, which Search to fetch.
     */
    where: SearchWhereUniqueInput
  }

  /**
   * Search findUniqueOrThrow
   */
  export type SearchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * Filter, which Search to fetch.
     */
    where: SearchWhereUniqueInput
  }

  /**
   * Search findFirst
   */
  export type SearchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * Filter, which Search to fetch.
     */
    where?: SearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Searches to fetch.
     */
    orderBy?: SearchOrderByWithRelationInput | SearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Searches.
     */
    cursor?: SearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Searches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Searches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Searches.
     */
    distinct?: SearchScalarFieldEnum | SearchScalarFieldEnum[]
  }

  /**
   * Search findFirstOrThrow
   */
  export type SearchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * Filter, which Search to fetch.
     */
    where?: SearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Searches to fetch.
     */
    orderBy?: SearchOrderByWithRelationInput | SearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Searches.
     */
    cursor?: SearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Searches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Searches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Searches.
     */
    distinct?: SearchScalarFieldEnum | SearchScalarFieldEnum[]
  }

  /**
   * Search findMany
   */
  export type SearchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * Filter, which Searches to fetch.
     */
    where?: SearchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Searches to fetch.
     */
    orderBy?: SearchOrderByWithRelationInput | SearchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Searches.
     */
    cursor?: SearchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Searches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Searches.
     */
    skip?: number
    distinct?: SearchScalarFieldEnum | SearchScalarFieldEnum[]
  }

  /**
   * Search create
   */
  export type SearchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * The data needed to create a Search.
     */
    data: XOR<SearchCreateInput, SearchUncheckedCreateInput>
  }

  /**
   * Search createMany
   */
  export type SearchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Searches.
     */
    data: SearchCreateManyInput | SearchCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Search update
   */
  export type SearchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * The data needed to update a Search.
     */
    data: XOR<SearchUpdateInput, SearchUncheckedUpdateInput>
    /**
     * Choose, which Search to update.
     */
    where: SearchWhereUniqueInput
  }

  /**
   * Search updateMany
   */
  export type SearchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Searches.
     */
    data: XOR<SearchUpdateManyMutationInput, SearchUncheckedUpdateManyInput>
    /**
     * Filter which Searches to update
     */
    where?: SearchWhereInput
    /**
     * Limit how many Searches to update.
     */
    limit?: number
  }

  /**
   * Search upsert
   */
  export type SearchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * The filter to search for the Search to update in case it exists.
     */
    where: SearchWhereUniqueInput
    /**
     * In case the Search found by the `where` argument doesn't exist, create a new Search with this data.
     */
    create: XOR<SearchCreateInput, SearchUncheckedCreateInput>
    /**
     * In case the Search was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SearchUpdateInput, SearchUncheckedUpdateInput>
  }

  /**
   * Search delete
   */
  export type SearchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
    /**
     * Filter which Search to delete.
     */
    where: SearchWhereUniqueInput
  }

  /**
   * Search deleteMany
   */
  export type SearchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Searches to delete
     */
    where?: SearchWhereInput
    /**
     * Limit how many Searches to delete.
     */
    limit?: number
  }

  /**
   * Search without action
   */
  export type SearchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Search
     */
    select?: SearchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Search
     */
    omit?: SearchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SearchInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UniqueFactorsTableScalarFieldEnum: {
    KPI_Report_Date: 'KPI_Report_Date',
    Company__NON_NULL_Total_: 'Company__NON_NULL_Total_',
    Company__NON_NULL_Unique_: 'Company__NON_NULL_Unique_',
    Member_of_the_S_P500__YES_Total_: 'Member_of_the_S_P500__YES_Total_',
    Member_of_the_Russell_1000_Index__YES_Total_: 'Member_of_the_Russell_1000_Index__YES_Total_',
    Ticker_s___NON_NULL_Total_: 'Ticker_s___NON_NULL_Total_',
    Ticker_s___NON_NULL_Unique_: 'Ticker_s___NON_NULL_Unique_',
    Country__NON_NULL_Total_: 'Country__NON_NULL_Total_',
    Country__NON_NULL_Unique_: 'Country__NON_NULL_Unique_',
    sector_code__1__NAICS___NON_NULL_Unique_: 'sector_code__1__NAICS___NON_NULL_Unique_',
    sector_code__2__NAICS___NON_NULL_Unique_: 'sector_code__2__NAICS___NON_NULL_Unique_',
    sector_code__3__NAICS___NON_NULL_Unique_: 'sector_code__3__NAICS___NON_NULL_Unique_',
    sector_code__4__NAICS___NON_NULL_Unique_: 'sector_code__4__NAICS___NON_NULL_Unique_',
    sector_code__5__NAICS___NON_NULL_Unique_: 'sector_code__5__NAICS___NON_NULL_Unique_',
    sector_codes_all__NAICS___NON_NULL_Unique_: 'sector_codes_all__NAICS___NON_NULL_Unique_',
    ArticleTargetYear__NON_NULL_Unique_: 'ArticleTargetYear__NON_NULL_Unique_',
    Source_Date__NON_NULL_Unique_: 'Source_Date__NON_NULL_Unique_',
    PressReleaseYear__NON_NULL_Unique_: 'PressReleaseYear__NON_NULL_Unique_',
    Target_sentence__NON_NULL_Total_: 'Target_sentence__NON_NULL_Total_',
    Target_sentence__NON_NULL_Unique_: 'Target_sentence__NON_NULL_Unique_',
    Targetyear_s___NON_NULL_Unique_: 'Targetyear_s___NON_NULL_Unique_',
    sentence_carbon__1_Total_: 'sentence_carbon__1_Total_',
    sentence_gender__1_Total_: 'sentence_gender__1_Total_',
    sentence_renewables__1_Total_: 'sentence_renewables__1_Total_',
    sentence_suppliers__1_Total_: 'sentence_suppliers__1_Total_',
    sentence_water__1_Total_: 'sentence_water__1_Total_',
    sentence_waste__1_Total_: 'sentence_waste__1_Total_',
    sentence_other__1_Total_: 'sentence_other__1_Total_',
    id: 'id'
  };

  export type UniqueFactorsTableScalarFieldEnum = (typeof UniqueFactorsTableScalarFieldEnum)[keyof typeof UniqueFactorsTableScalarFieldEnum]


  export const CompanyUniverseScalarFieldEnum: {
    Company: 'Company',
    x: 'x',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    source: 'source',
    Scraping_code_set_up__: 'Scraping_code_set_up__',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Domain: 'Domain',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Subscribed_to_press_releases_esgroadmap_gmail_com__: 'Subscribed_to_press_releases_esgroadmap_gmail_com__',
    Subscribed_to_press_releases_jameskijani_gmail_com__: 'Subscribed_to_press_releases_jameskijani_gmail_com__',
    Plain_text_press_release_subscription_possible___yes_no_: 'Plain_text_press_release_subscription_possible___yes_no_',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_: 'Company_annual_report_2020_URL_of_pdf_document__including_10_k_',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    WORKED_BY_: 'WORKED_BY_',
    COMMENTS___NOTES: 'COMMENTS___NOTES',
    Carbon_sentence_available__: 'Carbon_sentence_available__'
  };

  export type CompanyUniverseScalarFieldEnum = (typeof CompanyUniverseScalarFieldEnum)[keyof typeof CompanyUniverseScalarFieldEnum]


  export const CompanyDataScalarFieldEnum: {
    company: 'company',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Global___Main_Website_URL: 'Company_Global___Main_Website_URL',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual___financial_report_2020_URL_of_pdf_document: 'Company_annual___financial_report_2020_URL_of_pdf_document',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    sector_codes_all__NAICS_: 'sector_codes_all__NAICS_',
    sector_name_all__NAICS_: 'sector_name_all__NAICS_',
    id: 'id'
  };

  export type CompanyDataScalarFieldEnum = (typeof CompanyDataScalarFieldEnum)[keyof typeof CompanyDataScalarFieldEnum]


  export const CompanyData2ScalarFieldEnum: {
    company: 'company',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Global___Main_Website_URL: 'Company_Global___Main_Website_URL',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual___financial_report_2020_URL_of_pdf_document: 'Company_annual___financial_report_2020_URL_of_pdf_document',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    sector_codes_all__NAICS_: 'sector_codes_all__NAICS_',
    sector_name_all__NAICS_: 'sector_name_all__NAICS_',
    NAICS__1_GIG: 'NAICS__1_GIG',
    NAICS__1_GIG_name: 'NAICS__1_GIG_name',
    id: 'id'
  };

  export type CompanyData2ScalarFieldEnum = (typeof CompanyData2ScalarFieldEnum)[keyof typeof CompanyData2ScalarFieldEnum]


  export const PercentageTableScalarFieldEnum: {
    KPI_Report_Date: 'KPI_Report_Date',
    Company: 'Company',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Global___Main_Website_URL: 'Company_Global___Main_Website_URL',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual___financial_report_2020_URL_of_pdf_document: 'Company_annual___financial_report_2020_URL_of_pdf_document',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    sector_codes_all__NAICS_: 'sector_codes_all__NAICS_',
    sector_name_all__NAICS_: 'sector_name_all__NAICS_',
    climateaction100: 'climateaction100',
    emails: 'emails',
    full_text: 'full_text',
    Source_link: 'Source_link',
    pr_site: 'pr_site',
    release_date: 'release_date',
    source: 'source',
    ticker: 'ticker',
    title: 'title',
    ArticleTargetYear: 'ArticleTargetYear',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    PressReleaseFullClean: 'PressReleaseFullClean',
    Source_Date: 'Source_Date',
    Annual_Report_Date: 'Annual_Report_Date',
    PressReleaseYear: 'PressReleaseYear',
    PressReleaseMonth: 'PressReleaseMonth',
    Target_sentence: 'Target_sentence',
    SentenceTargetYear: 'SentenceTargetYear',
    Targetyear_s_: 'Targetyear_s_',
    sentence_carbon: 'sentence_carbon',
    sentence_gender: 'sentence_gender',
    sentence_renewables: 'sentence_renewables',
    sentence_suppliers: 'sentence_suppliers',
    sentence_water: 'sentence_water',
    sentence_waste: 'sentence_waste',
    sentence_other: 'sentence_other',
    id: 'id'
  };

  export type PercentageTableScalarFieldEnum = (typeof PercentageTableScalarFieldEnum)[keyof typeof PercentageTableScalarFieldEnum]


  export const RoadmapCarbonScalarFieldEnum: {
    Company: 'Company',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Company_Main_Website_URL: 'Company_Main_Website_URL',
    Company_Source_site_URL: 'Company_Source_site_URL',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    S_P500member: 'S_P500member',
    Russell_1000_member: 'Russell_1000_member',
    Source_link_1: 'Source_link_1',
    Source_date_1: 'Source_date_1',
    Source_sentence_1: 'Source_sentence_1',
    Targetyear_s__1: 'Targetyear_s__1',
    Source_link_2: 'Source_link_2',
    Source_date_2: 'Source_date_2',
    Source_sentence_2: 'Source_sentence_2',
    Targetyear_s__2: 'Targetyear_s__2',
    Source_link_3: 'Source_link_3',
    Source_date_3: 'Source_date_3',
    Source_sentence_3: 'Source_sentence_3',
    Targetyear_s__3: 'Targetyear_s__3',
    Source_link_4: 'Source_link_4',
    Source_date_4: 'Source_date_4',
    Source_sentence_4: 'Source_sentence_4',
    Targetyear_s__4: 'Targetyear_s__4',
    Source_link_5: 'Source_link_5',
    Source_date_5: 'Source_date_5',
    Source_sentence_5: 'Source_sentence_5',
    Targetyear_s__5: 'Targetyear_s__5',
    Source_link_6: 'Source_link_6',
    Source_date_6: 'Source_date_6',
    Source_sentence_6: 'Source_sentence_6',
    Targetyear_s__6: 'Targetyear_s__6',
    id: 'id'
  };

  export type RoadmapCarbonScalarFieldEnum = (typeof RoadmapCarbonScalarFieldEnum)[keyof typeof RoadmapCarbonScalarFieldEnum]


  export const SentenceAllScalarFieldEnum: {
    release_date: 'release_date',
    Targetyear_s_: 'Targetyear_s_',
    pr_site: 'pr_site',
    ArticleTargetYear: 'ArticleTargetYear',
    sentence_carbon: 'sentence_carbon',
    full_text: 'full_text',
    PressReleaseMonth: 'PressReleaseMonth',
    PressReleaseFullClean: 'PressReleaseFullClean',
    sentence_renewables: 'sentence_renewables',
    sentence_suppliers: 'sentence_suppliers',
    sentence_gender: 'sentence_gender',
    Company: 'Company',
    Annual_Report_Date: 'Annual_Report_Date',
    title: 'title',
    emails: 'emails',
    sentence_other: 'sentence_other',
    Source_link: 'Source_link',
    Source_Date: 'Source_Date',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    sentence_waste: 'sentence_waste',
    source: 'source',
    sentence_water: 'sentence_water',
    PressReleaseYear: 'PressReleaseYear',
    ticker: 'ticker',
    SentenceTargetYear: 'SentenceTargetYear',
    Target_sentence: 'Target_sentence',
    upload_date: 'upload_date',
    id: 'id',
    PageURL: 'PageURL',
    DocURL: 'DocURL',
    DocTitle: 'DocTitle',
    DocName: 'DocName',
    Target_Sentence_Page: 'Target_Sentence_Page'
  };

  export type SentenceAllScalarFieldEnum = (typeof SentenceAllScalarFieldEnum)[keyof typeof SentenceAllScalarFieldEnum]


  export const TargetSentenceScalarFieldEnum: {
    Company: 'Company',
    companylist: 'companylist',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Main_Website_URL: 'Company_Main_Website_URL',
    Company_press_release_site_URL: 'Company_press_release_site_URL',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    S_P500member: 'S_P500member',
    Russell_1000_member: 'Russell_1000_member',
    emails: 'emails',
    full_text: 'full_text',
    Source_link: 'Source_link',
    pr_site: 'pr_site',
    release_date: 'release_date',
    source: 'source',
    ticker: 'ticker',
    title: 'title',
    ArticleTargetYear: 'ArticleTargetYear',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    PressReleaseFullClean: 'PressReleaseFullClean',
    Source_date: 'Source_date',
    PressReleaseYear: 'PressReleaseYear',
    PressReleaseMonth: 'PressReleaseMonth',
    Target_sentence: 'Target_sentence',
    SentenceTargetYear: 'SentenceTargetYear',
    Targetyear_s_: 'Targetyear_s_',
    sentence_carbon: 'sentence_carbon',
    sentence_gender: 'sentence_gender',
    sentence_renewables: 'sentence_renewables',
    sentence_suppliers: 'sentence_suppliers',
    sentence_water: 'sentence_water',
    Primarysource: 'Primarysource',
    id: 'id'
  };

  export type TargetSentenceScalarFieldEnum = (typeof TargetSentenceScalarFieldEnum)[keyof typeof TargetSentenceScalarFieldEnum]


  export const TestableScalarFieldEnum: {
    firstname: 'firstname',
    surname: 'surname',
    city: 'city',
    country: 'country',
    id: 'id'
  };

  export type TestableScalarFieldEnum = (typeof TestableScalarFieldEnum)[keyof typeof TestableScalarFieldEnum]


  export const Wp_actionscheduler_actionsScalarFieldEnum: {
    action_id: 'action_id',
    hook: 'hook',
    status: 'status',
    scheduled_date_gmt: 'scheduled_date_gmt',
    scheduled_date_local: 'scheduled_date_local',
    args: 'args',
    schedule: 'schedule',
    group_id: 'group_id',
    attempts: 'attempts',
    last_attempt_gmt: 'last_attempt_gmt',
    last_attempt_local: 'last_attempt_local',
    claim_id: 'claim_id',
    extended_args: 'extended_args'
  };

  export type Wp_actionscheduler_actionsScalarFieldEnum = (typeof Wp_actionscheduler_actionsScalarFieldEnum)[keyof typeof Wp_actionscheduler_actionsScalarFieldEnum]


  export const Wp_actionscheduler_claimsScalarFieldEnum: {
    claim_id: 'claim_id',
    date_created_gmt: 'date_created_gmt'
  };

  export type Wp_actionscheduler_claimsScalarFieldEnum = (typeof Wp_actionscheduler_claimsScalarFieldEnum)[keyof typeof Wp_actionscheduler_claimsScalarFieldEnum]


  export const Wp_actionscheduler_groupsScalarFieldEnum: {
    group_id: 'group_id',
    slug: 'slug'
  };

  export type Wp_actionscheduler_groupsScalarFieldEnum = (typeof Wp_actionscheduler_groupsScalarFieldEnum)[keyof typeof Wp_actionscheduler_groupsScalarFieldEnum]


  export const Wp_actionscheduler_logsScalarFieldEnum: {
    log_id: 'log_id',
    action_id: 'action_id',
    message: 'message',
    log_date_gmt: 'log_date_gmt',
    log_date_local: 'log_date_local'
  };

  export type Wp_actionscheduler_logsScalarFieldEnum = (typeof Wp_actionscheduler_logsScalarFieldEnum)[keyof typeof Wp_actionscheduler_logsScalarFieldEnum]


  export const Wp_aioseo_notificationsScalarFieldEnum: {
    id: 'id',
    slug: 'slug',
    title: 'title',
    content: 'content',
    type: 'type',
    level: 'level',
    notification_id: 'notification_id',
    notification_name: 'notification_name',
    start: 'start',
    end: 'end',
    button1_label: 'button1_label',
    button1_action: 'button1_action',
    button2_label: 'button2_label',
    button2_action: 'button2_action',
    dismissed: 'dismissed',
    created: 'created',
    updated: 'updated'
  };

  export type Wp_aioseo_notificationsScalarFieldEnum = (typeof Wp_aioseo_notificationsScalarFieldEnum)[keyof typeof Wp_aioseo_notificationsScalarFieldEnum]


  export const Wp_aioseo_postsScalarFieldEnum: {
    id: 'id',
    post_id: 'post_id',
    title: 'title',
    description: 'description',
    keywords: 'keywords',
    keyphrases: 'keyphrases',
    page_analysis: 'page_analysis',
    canonical_url: 'canonical_url',
    og_title: 'og_title',
    og_description: 'og_description',
    og_object_type: 'og_object_type',
    og_image_type: 'og_image_type',
    og_image_custom_url: 'og_image_custom_url',
    og_image_custom_fields: 'og_image_custom_fields',
    og_custom_image_width: 'og_custom_image_width',
    og_custom_image_height: 'og_custom_image_height',
    og_video: 'og_video',
    og_custom_url: 'og_custom_url',
    og_article_section: 'og_article_section',
    og_article_tags: 'og_article_tags',
    twitter_use_og: 'twitter_use_og',
    twitter_card: 'twitter_card',
    twitter_image_type: 'twitter_image_type',
    twitter_image_custom_url: 'twitter_image_custom_url',
    twitter_image_custom_fields: 'twitter_image_custom_fields',
    twitter_title: 'twitter_title',
    twitter_description: 'twitter_description',
    seo_score: 'seo_score',
    schema_type: 'schema_type',
    schema_type_options: 'schema_type_options',
    pillar_content: 'pillar_content',
    robots_default: 'robots_default',
    robots_noindex: 'robots_noindex',
    robots_noarchive: 'robots_noarchive',
    robots_nosnippet: 'robots_nosnippet',
    robots_nofollow: 'robots_nofollow',
    robots_noimageindex: 'robots_noimageindex',
    robots_noodp: 'robots_noodp',
    robots_notranslate: 'robots_notranslate',
    robots_max_snippet: 'robots_max_snippet',
    robots_max_videopreview: 'robots_max_videopreview',
    robots_max_imagepreview: 'robots_max_imagepreview',
    tabs: 'tabs',
    images: 'images',
    image_scan_date: 'image_scan_date',
    priority: 'priority',
    frequency: 'frequency',
    videos: 'videos',
    video_thumbnail: 'video_thumbnail',
    video_scan_date: 'video_scan_date',
    local_seo: 'local_seo',
    created: 'created',
    updated: 'updated'
  };

  export type Wp_aioseo_postsScalarFieldEnum = (typeof Wp_aioseo_postsScalarFieldEnum)[keyof typeof Wp_aioseo_postsScalarFieldEnum]


  export const Wp_commentmetaScalarFieldEnum: {
    meta_id: 'meta_id',
    comment_id: 'comment_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_commentmetaScalarFieldEnum = (typeof Wp_commentmetaScalarFieldEnum)[keyof typeof Wp_commentmetaScalarFieldEnum]


  export const Wp_commentsScalarFieldEnum: {
    comment_ID: 'comment_ID',
    comment_post_ID: 'comment_post_ID',
    comment_author: 'comment_author',
    comment_author_email: 'comment_author_email',
    comment_author_url: 'comment_author_url',
    comment_author_IP: 'comment_author_IP',
    comment_date: 'comment_date',
    comment_date_gmt: 'comment_date_gmt',
    comment_content: 'comment_content',
    comment_karma: 'comment_karma',
    comment_approved: 'comment_approved',
    comment_agent: 'comment_agent',
    comment_type: 'comment_type',
    comment_parent: 'comment_parent',
    user_id: 'user_id'
  };

  export type Wp_commentsScalarFieldEnum = (typeof Wp_commentsScalarFieldEnum)[keyof typeof Wp_commentsScalarFieldEnum]


  export const Wp_linksScalarFieldEnum: {
    link_id: 'link_id',
    link_url: 'link_url',
    link_name: 'link_name',
    link_image: 'link_image',
    link_target: 'link_target',
    link_description: 'link_description',
    link_visible: 'link_visible',
    link_owner: 'link_owner',
    link_rating: 'link_rating',
    link_updated: 'link_updated',
    link_rel: 'link_rel',
    link_notes: 'link_notes',
    link_rss: 'link_rss'
  };

  export type Wp_linksScalarFieldEnum = (typeof Wp_linksScalarFieldEnum)[keyof typeof Wp_linksScalarFieldEnum]


  export const Wp_nextend2_image_storageScalarFieldEnum: {
    id: 'id',
    hash: 'hash',
    image: 'image',
    value: 'value'
  };

  export type Wp_nextend2_image_storageScalarFieldEnum = (typeof Wp_nextend2_image_storageScalarFieldEnum)[keyof typeof Wp_nextend2_image_storageScalarFieldEnum]


  export const Wp_nextend2_section_storageScalarFieldEnum: {
    id: 'id',
    application: 'application',
    section: 'section',
    referencekey: 'referencekey',
    value: 'value',
    system: 'system',
    editable: 'editable'
  };

  export type Wp_nextend2_section_storageScalarFieldEnum = (typeof Wp_nextend2_section_storageScalarFieldEnum)[keyof typeof Wp_nextend2_section_storageScalarFieldEnum]


  export const Wp_nextend2_smartslider3_generatorsScalarFieldEnum: {
    id: 'id',
    group: 'group',
    type: 'type',
    params: 'params'
  };

  export type Wp_nextend2_smartslider3_generatorsScalarFieldEnum = (typeof Wp_nextend2_smartslider3_generatorsScalarFieldEnum)[keyof typeof Wp_nextend2_smartslider3_generatorsScalarFieldEnum]


  export const Wp_nextend2_smartslider3_slidersScalarFieldEnum: {
    id: 'id',
    alias: 'alias',
    title: 'title',
    type: 'type',
    params: 'params',
    status: 'status',
    time: 'time',
    thumbnail: 'thumbnail',
    ordering: 'ordering'
  };

  export type Wp_nextend2_smartslider3_slidersScalarFieldEnum = (typeof Wp_nextend2_smartslider3_slidersScalarFieldEnum)[keyof typeof Wp_nextend2_smartslider3_slidersScalarFieldEnum]


  export const Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum: {
    group_id: 'group_id',
    slider_id: 'slider_id',
    ordering: 'ordering'
  };

  export type Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum = (typeof Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum)[keyof typeof Wp_nextend2_smartslider3_sliders_xrefScalarFieldEnum]


  export const Wp_nextend2_smartslider3_slidesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slider: 'slider',
    publish_up: 'publish_up',
    publish_down: 'publish_down',
    published: 'published',
    first: 'first',
    slide: 'slide',
    description: 'description',
    thumbnail: 'thumbnail',
    params: 'params',
    ordering: 'ordering',
    generator_id: 'generator_id'
  };

  export type Wp_nextend2_smartslider3_slidesScalarFieldEnum = (typeof Wp_nextend2_smartslider3_slidesScalarFieldEnum)[keyof typeof Wp_nextend2_smartslider3_slidesScalarFieldEnum]


  export const Wp_optionsScalarFieldEnum: {
    option_id: 'option_id',
    option_name: 'option_name',
    option_value: 'option_value',
    autoload: 'autoload'
  };

  export type Wp_optionsScalarFieldEnum = (typeof Wp_optionsScalarFieldEnum)[keyof typeof Wp_optionsScalarFieldEnum]


  export const Wp_postmetaScalarFieldEnum: {
    meta_id: 'meta_id',
    post_id: 'post_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_postmetaScalarFieldEnum = (typeof Wp_postmetaScalarFieldEnum)[keyof typeof Wp_postmetaScalarFieldEnum]


  export const Wp_postsScalarFieldEnum: {
    ID: 'ID',
    post_author: 'post_author',
    post_date: 'post_date',
    post_date_gmt: 'post_date_gmt',
    post_content: 'post_content',
    post_title: 'post_title',
    post_excerpt: 'post_excerpt',
    post_status: 'post_status',
    comment_status: 'comment_status',
    ping_status: 'ping_status',
    post_password: 'post_password',
    post_name: 'post_name',
    to_ping: 'to_ping',
    pinged: 'pinged',
    post_modified: 'post_modified',
    post_modified_gmt: 'post_modified_gmt',
    post_content_filtered: 'post_content_filtered',
    post_parent: 'post_parent',
    guid: 'guid',
    menu_order: 'menu_order',
    post_type: 'post_type',
    post_mime_type: 'post_mime_type',
    comment_count: 'comment_count'
  };

  export type Wp_postsScalarFieldEnum = (typeof Wp_postsScalarFieldEnum)[keyof typeof Wp_postsScalarFieldEnum]


  export const Wp_term_relationshipsScalarFieldEnum: {
    object_id: 'object_id',
    term_taxonomy_id: 'term_taxonomy_id',
    term_order: 'term_order'
  };

  export type Wp_term_relationshipsScalarFieldEnum = (typeof Wp_term_relationshipsScalarFieldEnum)[keyof typeof Wp_term_relationshipsScalarFieldEnum]


  export const Wp_term_taxonomyScalarFieldEnum: {
    term_taxonomy_id: 'term_taxonomy_id',
    term_id: 'term_id',
    taxonomy: 'taxonomy',
    description: 'description',
    parent: 'parent',
    count: 'count'
  };

  export type Wp_term_taxonomyScalarFieldEnum = (typeof Wp_term_taxonomyScalarFieldEnum)[keyof typeof Wp_term_taxonomyScalarFieldEnum]


  export const Wp_termmetaScalarFieldEnum: {
    meta_id: 'meta_id',
    term_id: 'term_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_termmetaScalarFieldEnum = (typeof Wp_termmetaScalarFieldEnum)[keyof typeof Wp_termmetaScalarFieldEnum]


  export const Wp_termsScalarFieldEnum: {
    term_id: 'term_id',
    name: 'name',
    slug: 'slug',
    term_group: 'term_group'
  };

  export type Wp_termsScalarFieldEnum = (typeof Wp_termsScalarFieldEnum)[keyof typeof Wp_termsScalarFieldEnum]


  export const Wp_um_metadataScalarFieldEnum: {
    umeta_id: 'umeta_id',
    user_id: 'user_id',
    um_key: 'um_key',
    um_value: 'um_value'
  };

  export type Wp_um_metadataScalarFieldEnum = (typeof Wp_um_metadataScalarFieldEnum)[keyof typeof Wp_um_metadataScalarFieldEnum]


  export const Wp_user_registration_sessionsScalarFieldEnum: {
    session_id: 'session_id',
    session_key: 'session_key',
    session_value: 'session_value',
    session_expiry: 'session_expiry'
  };

  export type Wp_user_registration_sessionsScalarFieldEnum = (typeof Wp_user_registration_sessionsScalarFieldEnum)[keyof typeof Wp_user_registration_sessionsScalarFieldEnum]


  export const Wp_usermetaScalarFieldEnum: {
    umeta_id: 'umeta_id',
    user_id: 'user_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_usermetaScalarFieldEnum = (typeof Wp_usermetaScalarFieldEnum)[keyof typeof Wp_usermetaScalarFieldEnum]


  export const Wp_usersScalarFieldEnum: {
    ID: 'ID',
    user_login: 'user_login',
    user_pass: 'user_pass',
    user_nicename: 'user_nicename',
    user_email: 'user_email',
    user_url: 'user_url',
    user_registered: 'user_registered',
    user_activation_key: 'user_activation_key',
    user_status: 'user_status',
    display_name: 'display_name'
  };

  export type Wp_usersScalarFieldEnum = (typeof Wp_usersScalarFieldEnum)[keyof typeof Wp_usersScalarFieldEnum]


  export const Wp_wpdatachartsScalarFieldEnum: {
    id: 'id',
    wpdatatable_id: 'wpdatatable_id',
    title: 'title',
    engine: 'engine',
    type: 'type',
    json_render_data: 'json_render_data'
  };

  export type Wp_wpdatachartsScalarFieldEnum = (typeof Wp_wpdatachartsScalarFieldEnum)[keyof typeof Wp_wpdatachartsScalarFieldEnum]


  export const Wp_wpdatatablesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    show_title: 'show_title',
    table_type: 'table_type',
    content: 'content',
    filtering: 'filtering',
    filtering_form: 'filtering_form',
    sorting: 'sorting',
    tools: 'tools',
    server_side: 'server_side',
    editable: 'editable',
    inline_editing: 'inline_editing',
    popover_tools: 'popover_tools',
    editor_roles: 'editor_roles',
    mysql_table_name: 'mysql_table_name',
    edit_only_own_rows: 'edit_only_own_rows',
    userid_column_id: 'userid_column_id',
    display_length: 'display_length',
    auto_refresh: 'auto_refresh',
    fixed_columns: 'fixed_columns',
    fixed_layout: 'fixed_layout',
    responsive: 'responsive',
    scrollable: 'scrollable',
    word_wrap: 'word_wrap',
    hide_before_load: 'hide_before_load',
    var1: 'var1',
    var2: 'var2',
    var3: 'var3',
    tabletools_config: 'tabletools_config',
    advanced_settings: 'advanced_settings',
    connection: 'connection'
  };

  export type Wp_wpdatatablesScalarFieldEnum = (typeof Wp_wpdatatablesScalarFieldEnum)[keyof typeof Wp_wpdatatablesScalarFieldEnum]


  export const Wp_wpdatatables_columnsScalarFieldEnum: {
    id: 'id',
    table_id: 'table_id',
    orig_header: 'orig_header',
    display_header: 'display_header',
    filter_type: 'filter_type',
    column_type: 'column_type',
    input_type: 'input_type',
    input_mandatory: 'input_mandatory',
    id_column: 'id_column',
    group_column: 'group_column',
    sort_column: 'sort_column',
    hide_on_phones: 'hide_on_phones',
    hide_on_tablets: 'hide_on_tablets',
    visible: 'visible',
    sum_column: 'sum_column',
    skip_thousands_separator: 'skip_thousands_separator',
    width: 'width',
    possible_values: 'possible_values',
    default_value: 'default_value',
    css_class: 'css_class',
    text_before: 'text_before',
    text_after: 'text_after',
    formatting_rules: 'formatting_rules',
    calc_formula: 'calc_formula',
    color: 'color',
    advanced_settings: 'advanced_settings',
    pos: 'pos'
  };

  export type Wp_wpdatatables_columnsScalarFieldEnum = (typeof Wp_wpdatatables_columnsScalarFieldEnum)[keyof typeof Wp_wpdatatables_columnsScalarFieldEnum]


  export const Wp_wpdatatables_rowsScalarFieldEnum: {
    id: 'id',
    table_id: 'table_id',
    data: 'data'
  };

  export type Wp_wpdatatables_rowsScalarFieldEnum = (typeof Wp_wpdatatables_rowsScalarFieldEnum)[keyof typeof Wp_wpdatatables_rowsScalarFieldEnum]


  export const Wp_wpforms_tasks_metaScalarFieldEnum: {
    id: 'id',
    action: 'action',
    data: 'data',
    date: 'date'
  };

  export type Wp_wpforms_tasks_metaScalarFieldEnum = (typeof Wp_wpforms_tasks_metaScalarFieldEnum)[keyof typeof Wp_wpforms_tasks_metaScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password: 'password',
    isActive: 'isActive',
    profileImage: 'profileImage',
    plan: 'plan',
    role: 'role',
    stripeId: 'stripeId',
    customerId: 'customerId',
    planId: 'planId',
    planName: 'planName',
    subscriptionId: 'subscriptionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    emailUpdate: 'emailUpdate',
    isPaid: 'isPaid'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const TicketScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    title: 'title',
    description: 'description',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type TicketScalarFieldEnum = (typeof TicketScalarFieldEnum)[keyof typeof TicketScalarFieldEnum]


  export const TicketDocumentScalarFieldEnum: {
    id: 'id',
    url: 'url',
    name: 'name',
    size: 'size',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt',
    ticketId: 'ticketId'
  };

  export type TicketDocumentScalarFieldEnum = (typeof TicketDocumentScalarFieldEnum)[keyof typeof TicketDocumentScalarFieldEnum]


  export const TicketCommentScalarFieldEnum: {
    id: 'id',
    text: 'text',
    ticketId: 'ticketId',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type TicketCommentScalarFieldEnum = (typeof TicketCommentScalarFieldEnum)[keyof typeof TicketCommentScalarFieldEnum]


  export const UserSubscriptionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    subscriptionId: 'subscriptionId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type UserSubscriptionScalarFieldEnum = (typeof UserSubscriptionScalarFieldEnum)[keyof typeof UserSubscriptionScalarFieldEnum]


  export const PortfolioScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    name: 'name',
    filters: 'filters',
    tableName: 'tableName',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type PortfolioScalarFieldEnum = (typeof PortfolioScalarFieldEnum)[keyof typeof PortfolioScalarFieldEnum]


  export const SentenceallviewScalarFieldEnum: {
    id: 'id',
    release_date: 'release_date',
    pr_site: 'pr_site',
    Targetyear_s: 'Targetyear_s',
    ArticleTargetYear: 'ArticleTargetYear',
    sentence_carbon: 'sentence_carbon',
    full_text: 'full_text',
    PressReleaseMonth: 'PressReleaseMonth',
    PressReleaseFullClean: 'PressReleaseFullClean',
    sentence_renewables: 'sentence_renewables',
    sentence_suppliers: 'sentence_suppliers',
    sentence_gender: 'sentence_gender',
    Company: 'Company',
    Annual_Report_Date: 'Annual_Report_Date',
    title: 'title',
    emails: 'emails',
    sentence_other: 'sentence_other',
    Source_link: 'Source_link',
    Source_Date: 'Source_Date',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    sentence_waste: 'sentence_waste',
    source: 'source',
    sentence_water: 'sentence_water',
    PressReleaseYear: 'PressReleaseYear',
    ticker: 'ticker',
    SentenceTargetYear: 'SentenceTargetYear',
    Target_sentence: 'Target_sentence',
    upload_date: 'upload_date',
    PageURL: 'PageURL',
    DocURL: 'DocURL',
    DocTitle: 'DocTitle',
    DocName: 'DocName',
    Target_Sentence_Page: 'Target_Sentence_Page',
    x: 'x',
    Member_SP500: 'Member_SP500',
    Member_Russell1000: 'Member_Russell1000',
    ScrapingCodeSetUp: 'ScrapingCodeSetUp',
    Tickers: 'Tickers',
    PRAgency: 'PRAgency',
    Domain: 'Domain',
    PressURL: 'PressURL',
    SubscribedEsgroadmap: 'SubscribedEsgroadmap',
    SubscribedJames: 'SubscribedJames',
    PlainTextSubscription: 'PlainTextSubscription',
    AnnualReportsURL: 'AnnualReportsURL',
    AnnualReportPDF2020: 'AnnualReportPDF2020',
    ESGReportsURL: 'ESGReportsURL',
    ESGReportPDF2020: 'ESGReportPDF2020',
    Country: 'Country',
    SectorCode1: 'SectorCode1',
    SectorName1: 'SectorName1',
    SectorCode2: 'SectorCode2',
    SectorName2: 'SectorName2',
    SectorCode3: 'SectorCode3',
    SectorName3: 'SectorName3',
    SectorCode4: 'SectorCode4',
    SectorName4: 'SectorName4',
    SectorCode5: 'SectorCode5',
    SectorName5: 'SectorName5',
    WorkedBy: 'WorkedBy',
    CommentsNotes: 'CommentsNotes',
    CarbonSentenceAvailable: 'CarbonSentenceAvailable'
  };

  export type SentenceallviewScalarFieldEnum = (typeof SentenceallviewScalarFieldEnum)[keyof typeof SentenceallviewScalarFieldEnum]


  export const SearchScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    keyword: 'keyword',
    tableName: 'tableName',
    createdAt: 'createdAt',
    lastChecked: 'lastChecked'
  };

  export type SearchScalarFieldEnum = (typeof SearchScalarFieldEnum)[keyof typeof SearchScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UniqueFactorsTableOrderByRelevanceFieldEnum: {
    Company__NON_NULL_Total_: 'Company__NON_NULL_Total_',
    Company__NON_NULL_Unique_: 'Company__NON_NULL_Unique_',
    Member_of_the_S_P500__YES_Total_: 'Member_of_the_S_P500__YES_Total_',
    Member_of_the_Russell_1000_Index__YES_Total_: 'Member_of_the_Russell_1000_Index__YES_Total_',
    Ticker_s___NON_NULL_Total_: 'Ticker_s___NON_NULL_Total_',
    Ticker_s___NON_NULL_Unique_: 'Ticker_s___NON_NULL_Unique_',
    Country__NON_NULL_Total_: 'Country__NON_NULL_Total_',
    Country__NON_NULL_Unique_: 'Country__NON_NULL_Unique_',
    sector_code__1__NAICS___NON_NULL_Unique_: 'sector_code__1__NAICS___NON_NULL_Unique_',
    sector_code__2__NAICS___NON_NULL_Unique_: 'sector_code__2__NAICS___NON_NULL_Unique_',
    sector_code__3__NAICS___NON_NULL_Unique_: 'sector_code__3__NAICS___NON_NULL_Unique_',
    sector_code__4__NAICS___NON_NULL_Unique_: 'sector_code__4__NAICS___NON_NULL_Unique_',
    sector_code__5__NAICS___NON_NULL_Unique_: 'sector_code__5__NAICS___NON_NULL_Unique_',
    sector_codes_all__NAICS___NON_NULL_Unique_: 'sector_codes_all__NAICS___NON_NULL_Unique_',
    ArticleTargetYear__NON_NULL_Unique_: 'ArticleTargetYear__NON_NULL_Unique_',
    Source_Date__NON_NULL_Unique_: 'Source_Date__NON_NULL_Unique_',
    PressReleaseYear__NON_NULL_Unique_: 'PressReleaseYear__NON_NULL_Unique_',
    Target_sentence__NON_NULL_Total_: 'Target_sentence__NON_NULL_Total_',
    Target_sentence__NON_NULL_Unique_: 'Target_sentence__NON_NULL_Unique_',
    Targetyear_s___NON_NULL_Unique_: 'Targetyear_s___NON_NULL_Unique_',
    sentence_carbon__1_Total_: 'sentence_carbon__1_Total_',
    sentence_gender__1_Total_: 'sentence_gender__1_Total_',
    sentence_renewables__1_Total_: 'sentence_renewables__1_Total_',
    sentence_suppliers__1_Total_: 'sentence_suppliers__1_Total_',
    sentence_water__1_Total_: 'sentence_water__1_Total_',
    sentence_waste__1_Total_: 'sentence_waste__1_Total_',
    sentence_other__1_Total_: 'sentence_other__1_Total_'
  };

  export type UniqueFactorsTableOrderByRelevanceFieldEnum = (typeof UniqueFactorsTableOrderByRelevanceFieldEnum)[keyof typeof UniqueFactorsTableOrderByRelevanceFieldEnum]


  export const CompanyUniverseOrderByRelevanceFieldEnum: {
    Company: 'Company',
    x: 'x',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    source: 'source',
    Scraping_code_set_up__: 'Scraping_code_set_up__',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Domain: 'Domain',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Subscribed_to_press_releases_esgroadmap_gmail_com__: 'Subscribed_to_press_releases_esgroadmap_gmail_com__',
    Subscribed_to_press_releases_jameskijani_gmail_com__: 'Subscribed_to_press_releases_jameskijani_gmail_com__',
    Plain_text_press_release_subscription_possible___yes_no_: 'Plain_text_press_release_subscription_possible___yes_no_',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_: 'Company_annual_report_2020_URL_of_pdf_document__including_10_k_',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    WORKED_BY_: 'WORKED_BY_',
    COMMENTS___NOTES: 'COMMENTS___NOTES',
    Carbon_sentence_available__: 'Carbon_sentence_available__'
  };

  export type CompanyUniverseOrderByRelevanceFieldEnum = (typeof CompanyUniverseOrderByRelevanceFieldEnum)[keyof typeof CompanyUniverseOrderByRelevanceFieldEnum]


  export const CompanyDataOrderByRelevanceFieldEnum: {
    company: 'company',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Global___Main_Website_URL: 'Company_Global___Main_Website_URL',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual___financial_report_2020_URL_of_pdf_document: 'Company_annual___financial_report_2020_URL_of_pdf_document',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    sector_codes_all__NAICS_: 'sector_codes_all__NAICS_',
    sector_name_all__NAICS_: 'sector_name_all__NAICS_'
  };

  export type CompanyDataOrderByRelevanceFieldEnum = (typeof CompanyDataOrderByRelevanceFieldEnum)[keyof typeof CompanyDataOrderByRelevanceFieldEnum]


  export const CompanyData2OrderByRelevanceFieldEnum: {
    company: 'company',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Global___Main_Website_URL: 'Company_Global___Main_Website_URL',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual___financial_report_2020_URL_of_pdf_document: 'Company_annual___financial_report_2020_URL_of_pdf_document',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    sector_codes_all__NAICS_: 'sector_codes_all__NAICS_',
    sector_name_all__NAICS_: 'sector_name_all__NAICS_',
    NAICS__1_GIG: 'NAICS__1_GIG',
    NAICS__1_GIG_name: 'NAICS__1_GIG_name'
  };

  export type CompanyData2OrderByRelevanceFieldEnum = (typeof CompanyData2OrderByRelevanceFieldEnum)[keyof typeof CompanyData2OrderByRelevanceFieldEnum]


  export const PercentageTableOrderByRelevanceFieldEnum: {
    Company: 'Company',
    Member_of_the_S_P500: 'Member_of_the_S_P500',
    Member_of_the_Russell_1000_Index: 'Member_of_the_Russell_1000_Index',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Global___Main_Website_URL: 'Company_Global___Main_Website_URL',
    Company_global_main_press___news_release_site_URL: 'Company_global_main_press___news_release_site_URL',
    Company_annual_reports_page_URL: 'Company_annual_reports_page_URL',
    Company_annual___financial_report_2020_URL_of_pdf_document: 'Company_annual___financial_report_2020_URL_of_pdf_document',
    Company_sustainability___ESG_reports_page_URL: 'Company_sustainability___ESG_reports_page_URL',
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document: 'Company_Sustainability___ESG_report_2020_URL_of_pdf_document',
    Country: 'Country',
    sector_code__1__NAICS_: 'sector_code__1__NAICS_',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    sector_codes_all__NAICS_: 'sector_codes_all__NAICS_',
    sector_name_all__NAICS_: 'sector_name_all__NAICS_',
    climateaction100: 'climateaction100',
    emails: 'emails',
    full_text: 'full_text',
    Source_link: 'Source_link',
    pr_site: 'pr_site',
    release_date: 'release_date',
    source: 'source',
    ticker: 'ticker',
    title: 'title',
    ArticleTargetYear: 'ArticleTargetYear',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    PressReleaseFullClean: 'PressReleaseFullClean',
    Source_Date: 'Source_Date',
    Annual_Report_Date: 'Annual_Report_Date',
    PressReleaseYear: 'PressReleaseYear',
    PressReleaseMonth: 'PressReleaseMonth',
    Target_sentence: 'Target_sentence',
    SentenceTargetYear: 'SentenceTargetYear',
    Targetyear_s_: 'Targetyear_s_',
    sentence_carbon: 'sentence_carbon',
    sentence_gender: 'sentence_gender',
    sentence_renewables: 'sentence_renewables',
    sentence_suppliers: 'sentence_suppliers',
    sentence_water: 'sentence_water',
    sentence_waste: 'sentence_waste',
    sentence_other: 'sentence_other'
  };

  export type PercentageTableOrderByRelevanceFieldEnum = (typeof PercentageTableOrderByRelevanceFieldEnum)[keyof typeof PercentageTableOrderByRelevanceFieldEnum]


  export const RoadmapCarbonOrderByRelevanceFieldEnum: {
    Company: 'Company',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Company_Main_Website_URL: 'Company_Main_Website_URL',
    Company_Source_site_URL: 'Company_Source_site_URL',
    Country: 'Country',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    S_P500member: 'S_P500member',
    Russell_1000_member: 'Russell_1000_member',
    Source_link_1: 'Source_link_1',
    Source_date_1: 'Source_date_1',
    Source_sentence_1: 'Source_sentence_1',
    Targetyear_s__1: 'Targetyear_s__1',
    Source_link_2: 'Source_link_2',
    Source_date_2: 'Source_date_2',
    Source_sentence_2: 'Source_sentence_2',
    Targetyear_s__2: 'Targetyear_s__2',
    Source_link_3: 'Source_link_3',
    Source_date_3: 'Source_date_3',
    Source_sentence_3: 'Source_sentence_3',
    Targetyear_s__3: 'Targetyear_s__3',
    Source_link_4: 'Source_link_4',
    Source_date_4: 'Source_date_4',
    Source_sentence_4: 'Source_sentence_4',
    Source_link_5: 'Source_link_5',
    Source_date_5: 'Source_date_5',
    Source_sentence_5: 'Source_sentence_5',
    Source_link_6: 'Source_link_6',
    Source_date_6: 'Source_date_6',
    Source_sentence_6: 'Source_sentence_6'
  };

  export type RoadmapCarbonOrderByRelevanceFieldEnum = (typeof RoadmapCarbonOrderByRelevanceFieldEnum)[keyof typeof RoadmapCarbonOrderByRelevanceFieldEnum]


  export const SentenceAllOrderByRelevanceFieldEnum: {
    release_date: 'release_date',
    Targetyear_s_: 'Targetyear_s_',
    pr_site: 'pr_site',
    ArticleTargetYear: 'ArticleTargetYear',
    full_text: 'full_text',
    PressReleaseMonth: 'PressReleaseMonth',
    PressReleaseFullClean: 'PressReleaseFullClean',
    Company: 'Company',
    Annual_Report_Date: 'Annual_Report_Date',
    title: 'title',
    emails: 'emails',
    Source_link: 'Source_link',
    Source_Date: 'Source_Date',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    source: 'source',
    PressReleaseYear: 'PressReleaseYear',
    ticker: 'ticker',
    SentenceTargetYear: 'SentenceTargetYear',
    Target_sentence: 'Target_sentence',
    upload_date: 'upload_date',
    PageURL: 'PageURL',
    DocURL: 'DocURL',
    DocTitle: 'DocTitle',
    DocName: 'DocName',
    Target_Sentence_Page: 'Target_Sentence_Page'
  };

  export type SentenceAllOrderByRelevanceFieldEnum = (typeof SentenceAllOrderByRelevanceFieldEnum)[keyof typeof SentenceAllOrderByRelevanceFieldEnum]


  export const TargetSentenceOrderByRelevanceFieldEnum: {
    Company: 'Company',
    companylist: 'companylist',
    Ticker_s_: 'Ticker_s_',
    PR_Agency: 'PR_Agency',
    Example_2020_company_PR_agency_press_release_URL: 'Example_2020_company_PR_agency_press_release_URL',
    Company_Main_Website_URL: 'Company_Main_Website_URL',
    Company_press_release_site_URL: 'Company_press_release_site_URL',
    Country: 'Country',
    sector_name__1__NAICS_: 'sector_name__1__NAICS_',
    sector_code__2__NAICS_: 'sector_code__2__NAICS_',
    sector_name__2__NAICS_: 'sector_name__2__NAICS_',
    sector_code__3__NAICS_: 'sector_code__3__NAICS_',
    sector_name__3__NAICS_: 'sector_name__3__NAICS_',
    sector_code__4__NAICS_: 'sector_code__4__NAICS_',
    sector_name__4__NAICS_: 'sector_name__4__NAICS_',
    sector_code__5__NAICS_: 'sector_code__5__NAICS_',
    sector_name__5__NAICS_: 'sector_name__5__NAICS_',
    S_P500member: 'S_P500member',
    Russell_1000_member: 'Russell_1000_member',
    emails: 'emails',
    full_text: 'full_text',
    Source_link: 'Source_link',
    pr_site: 'pr_site',
    release_date: 'release_date',
    source: 'source',
    ticker: 'ticker',
    title: 'title',
    ArticleTargetYear: 'ArticleTargetYear',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    PressReleaseFullClean: 'PressReleaseFullClean',
    Source_date: 'Source_date',
    Target_sentence: 'Target_sentence',
    SentenceTargetYear: 'SentenceTargetYear',
    Targetyear_s_: 'Targetyear_s_'
  };

  export type TargetSentenceOrderByRelevanceFieldEnum = (typeof TargetSentenceOrderByRelevanceFieldEnum)[keyof typeof TargetSentenceOrderByRelevanceFieldEnum]


  export const wp_actionscheduler_actionsOrderByRelevanceFieldEnum: {
    hook: 'hook',
    status: 'status',
    args: 'args',
    schedule: 'schedule',
    extended_args: 'extended_args'
  };

  export type wp_actionscheduler_actionsOrderByRelevanceFieldEnum = (typeof wp_actionscheduler_actionsOrderByRelevanceFieldEnum)[keyof typeof wp_actionscheduler_actionsOrderByRelevanceFieldEnum]


  export const wp_actionscheduler_groupsOrderByRelevanceFieldEnum: {
    slug: 'slug'
  };

  export type wp_actionscheduler_groupsOrderByRelevanceFieldEnum = (typeof wp_actionscheduler_groupsOrderByRelevanceFieldEnum)[keyof typeof wp_actionscheduler_groupsOrderByRelevanceFieldEnum]


  export const wp_actionscheduler_logsOrderByRelevanceFieldEnum: {
    message: 'message'
  };

  export type wp_actionscheduler_logsOrderByRelevanceFieldEnum = (typeof wp_actionscheduler_logsOrderByRelevanceFieldEnum)[keyof typeof wp_actionscheduler_logsOrderByRelevanceFieldEnum]


  export const wp_aioseo_notificationsOrderByRelevanceFieldEnum: {
    slug: 'slug',
    title: 'title',
    content: 'content',
    type: 'type',
    level: 'level',
    notification_name: 'notification_name',
    button1_label: 'button1_label',
    button1_action: 'button1_action',
    button2_label: 'button2_label',
    button2_action: 'button2_action'
  };

  export type wp_aioseo_notificationsOrderByRelevanceFieldEnum = (typeof wp_aioseo_notificationsOrderByRelevanceFieldEnum)[keyof typeof wp_aioseo_notificationsOrderByRelevanceFieldEnum]


  export const wp_aioseo_postsOrderByRelevanceFieldEnum: {
    title: 'title',
    description: 'description',
    keywords: 'keywords',
    keyphrases: 'keyphrases',
    page_analysis: 'page_analysis',
    canonical_url: 'canonical_url',
    og_title: 'og_title',
    og_description: 'og_description',
    og_object_type: 'og_object_type',
    og_image_type: 'og_image_type',
    og_image_custom_url: 'og_image_custom_url',
    og_image_custom_fields: 'og_image_custom_fields',
    og_video: 'og_video',
    og_custom_url: 'og_custom_url',
    og_article_section: 'og_article_section',
    og_article_tags: 'og_article_tags',
    twitter_card: 'twitter_card',
    twitter_image_type: 'twitter_image_type',
    twitter_image_custom_url: 'twitter_image_custom_url',
    twitter_image_custom_fields: 'twitter_image_custom_fields',
    twitter_title: 'twitter_title',
    twitter_description: 'twitter_description',
    schema_type: 'schema_type',
    schema_type_options: 'schema_type_options',
    robots_max_imagepreview: 'robots_max_imagepreview',
    tabs: 'tabs',
    images: 'images',
    priority: 'priority',
    frequency: 'frequency',
    videos: 'videos',
    video_thumbnail: 'video_thumbnail',
    local_seo: 'local_seo'
  };

  export type wp_aioseo_postsOrderByRelevanceFieldEnum = (typeof wp_aioseo_postsOrderByRelevanceFieldEnum)[keyof typeof wp_aioseo_postsOrderByRelevanceFieldEnum]


  export const wp_commentmetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_commentmetaOrderByRelevanceFieldEnum = (typeof wp_commentmetaOrderByRelevanceFieldEnum)[keyof typeof wp_commentmetaOrderByRelevanceFieldEnum]


  export const wp_commentsOrderByRelevanceFieldEnum: {
    comment_author: 'comment_author',
    comment_author_email: 'comment_author_email',
    comment_author_url: 'comment_author_url',
    comment_author_IP: 'comment_author_IP',
    comment_content: 'comment_content',
    comment_approved: 'comment_approved',
    comment_agent: 'comment_agent',
    comment_type: 'comment_type'
  };

  export type wp_commentsOrderByRelevanceFieldEnum = (typeof wp_commentsOrderByRelevanceFieldEnum)[keyof typeof wp_commentsOrderByRelevanceFieldEnum]


  export const wp_linksOrderByRelevanceFieldEnum: {
    link_url: 'link_url',
    link_name: 'link_name',
    link_image: 'link_image',
    link_target: 'link_target',
    link_description: 'link_description',
    link_visible: 'link_visible',
    link_rel: 'link_rel',
    link_notes: 'link_notes',
    link_rss: 'link_rss'
  };

  export type wp_linksOrderByRelevanceFieldEnum = (typeof wp_linksOrderByRelevanceFieldEnum)[keyof typeof wp_linksOrderByRelevanceFieldEnum]


  export const wp_nextend2_image_storageOrderByRelevanceFieldEnum: {
    hash: 'hash',
    image: 'image',
    value: 'value'
  };

  export type wp_nextend2_image_storageOrderByRelevanceFieldEnum = (typeof wp_nextend2_image_storageOrderByRelevanceFieldEnum)[keyof typeof wp_nextend2_image_storageOrderByRelevanceFieldEnum]


  export const wp_nextend2_section_storageOrderByRelevanceFieldEnum: {
    application: 'application',
    section: 'section',
    referencekey: 'referencekey',
    value: 'value'
  };

  export type wp_nextend2_section_storageOrderByRelevanceFieldEnum = (typeof wp_nextend2_section_storageOrderByRelevanceFieldEnum)[keyof typeof wp_nextend2_section_storageOrderByRelevanceFieldEnum]


  export const wp_nextend2_smartslider3_generatorsOrderByRelevanceFieldEnum: {
    group: 'group',
    type: 'type',
    params: 'params'
  };

  export type wp_nextend2_smartslider3_generatorsOrderByRelevanceFieldEnum = (typeof wp_nextend2_smartslider3_generatorsOrderByRelevanceFieldEnum)[keyof typeof wp_nextend2_smartslider3_generatorsOrderByRelevanceFieldEnum]


  export const wp_nextend2_smartslider3_slidersOrderByRelevanceFieldEnum: {
    alias: 'alias',
    title: 'title',
    type: 'type',
    params: 'params',
    status: 'status',
    thumbnail: 'thumbnail'
  };

  export type wp_nextend2_smartslider3_slidersOrderByRelevanceFieldEnum = (typeof wp_nextend2_smartslider3_slidersOrderByRelevanceFieldEnum)[keyof typeof wp_nextend2_smartslider3_slidersOrderByRelevanceFieldEnum]


  export const wp_nextend2_smartslider3_slidesOrderByRelevanceFieldEnum: {
    title: 'title',
    slide: 'slide',
    description: 'description',
    thumbnail: 'thumbnail',
    params: 'params'
  };

  export type wp_nextend2_smartslider3_slidesOrderByRelevanceFieldEnum = (typeof wp_nextend2_smartslider3_slidesOrderByRelevanceFieldEnum)[keyof typeof wp_nextend2_smartslider3_slidesOrderByRelevanceFieldEnum]


  export const wp_optionsOrderByRelevanceFieldEnum: {
    option_name: 'option_name',
    option_value: 'option_value',
    autoload: 'autoload'
  };

  export type wp_optionsOrderByRelevanceFieldEnum = (typeof wp_optionsOrderByRelevanceFieldEnum)[keyof typeof wp_optionsOrderByRelevanceFieldEnum]


  export const wp_postmetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_postmetaOrderByRelevanceFieldEnum = (typeof wp_postmetaOrderByRelevanceFieldEnum)[keyof typeof wp_postmetaOrderByRelevanceFieldEnum]


  export const wp_postsOrderByRelevanceFieldEnum: {
    post_content: 'post_content',
    post_title: 'post_title',
    post_excerpt: 'post_excerpt',
    post_status: 'post_status',
    comment_status: 'comment_status',
    ping_status: 'ping_status',
    post_password: 'post_password',
    post_name: 'post_name',
    to_ping: 'to_ping',
    pinged: 'pinged',
    post_content_filtered: 'post_content_filtered',
    guid: 'guid',
    post_type: 'post_type',
    post_mime_type: 'post_mime_type'
  };

  export type wp_postsOrderByRelevanceFieldEnum = (typeof wp_postsOrderByRelevanceFieldEnum)[keyof typeof wp_postsOrderByRelevanceFieldEnum]


  export const wp_term_taxonomyOrderByRelevanceFieldEnum: {
    taxonomy: 'taxonomy',
    description: 'description'
  };

  export type wp_term_taxonomyOrderByRelevanceFieldEnum = (typeof wp_term_taxonomyOrderByRelevanceFieldEnum)[keyof typeof wp_term_taxonomyOrderByRelevanceFieldEnum]


  export const wp_termmetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_termmetaOrderByRelevanceFieldEnum = (typeof wp_termmetaOrderByRelevanceFieldEnum)[keyof typeof wp_termmetaOrderByRelevanceFieldEnum]


  export const wp_termsOrderByRelevanceFieldEnum: {
    name: 'name',
    slug: 'slug'
  };

  export type wp_termsOrderByRelevanceFieldEnum = (typeof wp_termsOrderByRelevanceFieldEnum)[keyof typeof wp_termsOrderByRelevanceFieldEnum]


  export const wp_um_metadataOrderByRelevanceFieldEnum: {
    um_key: 'um_key',
    um_value: 'um_value'
  };

  export type wp_um_metadataOrderByRelevanceFieldEnum = (typeof wp_um_metadataOrderByRelevanceFieldEnum)[keyof typeof wp_um_metadataOrderByRelevanceFieldEnum]


  export const wp_user_registration_sessionsOrderByRelevanceFieldEnum: {
    session_key: 'session_key',
    session_value: 'session_value'
  };

  export type wp_user_registration_sessionsOrderByRelevanceFieldEnum = (typeof wp_user_registration_sessionsOrderByRelevanceFieldEnum)[keyof typeof wp_user_registration_sessionsOrderByRelevanceFieldEnum]


  export const wp_usermetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_usermetaOrderByRelevanceFieldEnum = (typeof wp_usermetaOrderByRelevanceFieldEnum)[keyof typeof wp_usermetaOrderByRelevanceFieldEnum]


  export const wp_usersOrderByRelevanceFieldEnum: {
    user_login: 'user_login',
    user_pass: 'user_pass',
    user_nicename: 'user_nicename',
    user_email: 'user_email',
    user_url: 'user_url',
    user_activation_key: 'user_activation_key',
    display_name: 'display_name'
  };

  export type wp_usersOrderByRelevanceFieldEnum = (typeof wp_usersOrderByRelevanceFieldEnum)[keyof typeof wp_usersOrderByRelevanceFieldEnum]


  export const wp_wpdatachartsOrderByRelevanceFieldEnum: {
    title: 'title',
    type: 'type',
    json_render_data: 'json_render_data'
  };

  export type wp_wpdatachartsOrderByRelevanceFieldEnum = (typeof wp_wpdatachartsOrderByRelevanceFieldEnum)[keyof typeof wp_wpdatachartsOrderByRelevanceFieldEnum]


  export const wp_wpdatatablesOrderByRelevanceFieldEnum: {
    title: 'title',
    table_type: 'table_type',
    content: 'content',
    editor_roles: 'editor_roles',
    mysql_table_name: 'mysql_table_name',
    var1: 'var1',
    var2: 'var2',
    var3: 'var3',
    tabletools_config: 'tabletools_config',
    advanced_settings: 'advanced_settings',
    connection: 'connection'
  };

  export type wp_wpdatatablesOrderByRelevanceFieldEnum = (typeof wp_wpdatatablesOrderByRelevanceFieldEnum)[keyof typeof wp_wpdatatablesOrderByRelevanceFieldEnum]


  export const wp_wpdatatables_columnsOrderByRelevanceFieldEnum: {
    orig_header: 'orig_header',
    display_header: 'display_header',
    width: 'width',
    possible_values: 'possible_values',
    default_value: 'default_value',
    css_class: 'css_class',
    text_before: 'text_before',
    text_after: 'text_after',
    formatting_rules: 'formatting_rules',
    calc_formula: 'calc_formula',
    color: 'color',
    advanced_settings: 'advanced_settings'
  };

  export type wp_wpdatatables_columnsOrderByRelevanceFieldEnum = (typeof wp_wpdatatables_columnsOrderByRelevanceFieldEnum)[keyof typeof wp_wpdatatables_columnsOrderByRelevanceFieldEnum]


  export const wp_wpdatatables_rowsOrderByRelevanceFieldEnum: {
    data: 'data'
  };

  export type wp_wpdatatables_rowsOrderByRelevanceFieldEnum = (typeof wp_wpdatatables_rowsOrderByRelevanceFieldEnum)[keyof typeof wp_wpdatatables_rowsOrderByRelevanceFieldEnum]


  export const wp_wpforms_tasks_metaOrderByRelevanceFieldEnum: {
    action: 'action',
    data: 'data'
  };

  export type wp_wpforms_tasks_metaOrderByRelevanceFieldEnum = (typeof wp_wpforms_tasks_metaOrderByRelevanceFieldEnum)[keyof typeof wp_wpforms_tasks_metaOrderByRelevanceFieldEnum]


  export const UserOrderByRelevanceFieldEnum: {
    username: 'username',
    email: 'email',
    password: 'password',
    profileImage: 'profileImage',
    role: 'role',
    stripeId: 'stripeId',
    customerId: 'customerId',
    planId: 'planId',
    planName: 'planName',
    subscriptionId: 'subscriptionId',
    emailUpdate: 'emailUpdate'
  };

  export type UserOrderByRelevanceFieldEnum = (typeof UserOrderByRelevanceFieldEnum)[keyof typeof UserOrderByRelevanceFieldEnum]


  export const TicketOrderByRelevanceFieldEnum: {
    title: 'title',
    description: 'description',
    status: 'status'
  };

  export type TicketOrderByRelevanceFieldEnum = (typeof TicketOrderByRelevanceFieldEnum)[keyof typeof TicketOrderByRelevanceFieldEnum]


  export const TicketDocumentOrderByRelevanceFieldEnum: {
    url: 'url',
    name: 'name'
  };

  export type TicketDocumentOrderByRelevanceFieldEnum = (typeof TicketDocumentOrderByRelevanceFieldEnum)[keyof typeof TicketDocumentOrderByRelevanceFieldEnum]


  export const TicketCommentOrderByRelevanceFieldEnum: {
    text: 'text'
  };

  export type TicketCommentOrderByRelevanceFieldEnum = (typeof TicketCommentOrderByRelevanceFieldEnum)[keyof typeof TicketCommentOrderByRelevanceFieldEnum]


  export const UserSubscriptionOrderByRelevanceFieldEnum: {
    subscriptionId: 'subscriptionId'
  };

  export type UserSubscriptionOrderByRelevanceFieldEnum = (typeof UserSubscriptionOrderByRelevanceFieldEnum)[keyof typeof UserSubscriptionOrderByRelevanceFieldEnum]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const PortfolioOrderByRelevanceFieldEnum: {
    name: 'name',
    tableName: 'tableName'
  };

  export type PortfolioOrderByRelevanceFieldEnum = (typeof PortfolioOrderByRelevanceFieldEnum)[keyof typeof PortfolioOrderByRelevanceFieldEnum]


  export const sentenceallviewOrderByRelevanceFieldEnum: {
    pr_site: 'pr_site',
    Targetyear_s: 'Targetyear_s',
    ArticleTargetYear: 'ArticleTargetYear',
    full_text: 'full_text',
    PressReleaseMonth: 'PressReleaseMonth',
    PressReleaseFullClean: 'PressReleaseFullClean',
    Company: 'Company',
    Annual_Report_Date: 'Annual_Report_Date',
    title: 'title',
    emails: 'emails',
    Source_link: 'Source_link',
    Source_Date: 'Source_Date',
    PressReleaseFullCleanstep1: 'PressReleaseFullCleanstep1',
    source: 'source',
    PressReleaseYear: 'PressReleaseYear',
    ticker: 'ticker',
    SentenceTargetYear: 'SentenceTargetYear',
    Target_sentence: 'Target_sentence',
    upload_date: 'upload_date',
    PageURL: 'PageURL',
    DocURL: 'DocURL',
    DocTitle: 'DocTitle',
    DocName: 'DocName',
    Target_Sentence_Page: 'Target_Sentence_Page',
    x: 'x',
    Member_SP500: 'Member_SP500',
    Member_Russell1000: 'Member_Russell1000',
    ScrapingCodeSetUp: 'ScrapingCodeSetUp',
    Tickers: 'Tickers',
    PRAgency: 'PRAgency',
    Domain: 'Domain',
    PressURL: 'PressURL',
    SubscribedEsgroadmap: 'SubscribedEsgroadmap',
    SubscribedJames: 'SubscribedJames',
    PlainTextSubscription: 'PlainTextSubscription',
    AnnualReportsURL: 'AnnualReportsURL',
    AnnualReportPDF2020: 'AnnualReportPDF2020',
    ESGReportsURL: 'ESGReportsURL',
    ESGReportPDF2020: 'ESGReportPDF2020',
    Country: 'Country',
    SectorCode1: 'SectorCode1',
    SectorName1: 'SectorName1',
    SectorCode2: 'SectorCode2',
    SectorName2: 'SectorName2',
    SectorCode3: 'SectorCode3',
    SectorName3: 'SectorName3',
    SectorCode4: 'SectorCode4',
    SectorName4: 'SectorName4',
    SectorCode5: 'SectorCode5',
    SectorName5: 'SectorName5',
    WorkedBy: 'WorkedBy',
    CommentsNotes: 'CommentsNotes',
    CarbonSentenceAvailable: 'CarbonSentenceAvailable'
  };

  export type sentenceallviewOrderByRelevanceFieldEnum = (typeof sentenceallviewOrderByRelevanceFieldEnum)[keyof typeof sentenceallviewOrderByRelevanceFieldEnum]


  export const SearchOrderByRelevanceFieldEnum: {
    id: 'id',
    keyword: 'keyword',
    tableName: 'tableName'
  };

  export type SearchOrderByRelevanceFieldEnum = (typeof SearchOrderByRelevanceFieldEnum)[keyof typeof SearchOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'wp_wpdatacharts_engine'
   */
  export type Enumwp_wpdatacharts_engineFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'wp_wpdatacharts_engine'>
    


  /**
   * Reference to a field of type 'wp_wpdatatables_columns_filter_type'
   */
  export type Enumwp_wpdatatables_columns_filter_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'wp_wpdatatables_columns_filter_type'>
    


  /**
   * Reference to a field of type 'wp_wpdatatables_columns_column_type'
   */
  export type Enumwp_wpdatatables_columns_column_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'wp_wpdatatables_columns_column_type'>
    


  /**
   * Reference to a field of type 'wp_wpdatatables_columns_input_type'
   */
  export type Enumwp_wpdatatables_columns_input_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'wp_wpdatatables_columns_input_type'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    
  /**
   * Deep Input Types
   */


  export type UniqueFactorsTableWhereInput = {
    AND?: UniqueFactorsTableWhereInput | UniqueFactorsTableWhereInput[]
    OR?: UniqueFactorsTableWhereInput[]
    NOT?: UniqueFactorsTableWhereInput | UniqueFactorsTableWhereInput[]
    KPI_Report_Date?: DateTimeFilter<"UniqueFactorsTable"> | Date | string
    Company__NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Company__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Member_of_the_S_P500__YES_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Ticker_s___NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Ticker_s___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Country__NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Country__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    ArticleTargetYear__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Source_Date__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    PressReleaseYear__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Target_sentence__NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Target_sentence__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Targetyear_s___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_carbon__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_gender__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_renewables__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_suppliers__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_water__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_waste__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_other__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    id?: IntFilter<"UniqueFactorsTable"> | number
  }

  export type UniqueFactorsTableOrderByWithRelationInput = {
    KPI_Report_Date?: SortOrder
    Company__NON_NULL_Total_?: SortOrderInput | SortOrder
    Company__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Member_of_the_S_P500__YES_Total_?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index__YES_Total_?: SortOrderInput | SortOrder
    Ticker_s___NON_NULL_Total_?: SortOrderInput | SortOrder
    Ticker_s___NON_NULL_Unique_?: SortOrderInput | SortOrder
    Country__NON_NULL_Total_?: SortOrderInput | SortOrder
    Country__NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__1__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__2__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__3__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__4__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__5__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    ArticleTargetYear__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Source_Date__NON_NULL_Unique_?: SortOrderInput | SortOrder
    PressReleaseYear__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Target_sentence__NON_NULL_Total_?: SortOrderInput | SortOrder
    Target_sentence__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Targetyear_s___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sentence_carbon__1_Total_?: SortOrderInput | SortOrder
    sentence_gender__1_Total_?: SortOrderInput | SortOrder
    sentence_renewables__1_Total_?: SortOrderInput | SortOrder
    sentence_suppliers__1_Total_?: SortOrderInput | SortOrder
    sentence_water__1_Total_?: SortOrderInput | SortOrder
    sentence_waste__1_Total_?: SortOrderInput | SortOrder
    sentence_other__1_Total_?: SortOrderInput | SortOrder
    id?: SortOrder
    _relevance?: UniqueFactorsTableOrderByRelevanceInput
  }

  export type UniqueFactorsTableWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UniqueFactorsTableWhereInput | UniqueFactorsTableWhereInput[]
    OR?: UniqueFactorsTableWhereInput[]
    NOT?: UniqueFactorsTableWhereInput | UniqueFactorsTableWhereInput[]
    KPI_Report_Date?: DateTimeFilter<"UniqueFactorsTable"> | Date | string
    Company__NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Company__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Member_of_the_S_P500__YES_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Ticker_s___NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Ticker_s___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Country__NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Country__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    ArticleTargetYear__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Source_Date__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    PressReleaseYear__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Target_sentence__NON_NULL_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Target_sentence__NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    Targetyear_s___NON_NULL_Unique_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_carbon__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_gender__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_renewables__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_suppliers__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_water__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_waste__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
    sentence_other__1_Total_?: StringNullableFilter<"UniqueFactorsTable"> | string | null
  }, "id">

  export type UniqueFactorsTableOrderByWithAggregationInput = {
    KPI_Report_Date?: SortOrder
    Company__NON_NULL_Total_?: SortOrderInput | SortOrder
    Company__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Member_of_the_S_P500__YES_Total_?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index__YES_Total_?: SortOrderInput | SortOrder
    Ticker_s___NON_NULL_Total_?: SortOrderInput | SortOrder
    Ticker_s___NON_NULL_Unique_?: SortOrderInput | SortOrder
    Country__NON_NULL_Total_?: SortOrderInput | SortOrder
    Country__NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__1__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__2__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__3__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__4__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_code__5__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS___NON_NULL_Unique_?: SortOrderInput | SortOrder
    ArticleTargetYear__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Source_Date__NON_NULL_Unique_?: SortOrderInput | SortOrder
    PressReleaseYear__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Target_sentence__NON_NULL_Total_?: SortOrderInput | SortOrder
    Target_sentence__NON_NULL_Unique_?: SortOrderInput | SortOrder
    Targetyear_s___NON_NULL_Unique_?: SortOrderInput | SortOrder
    sentence_carbon__1_Total_?: SortOrderInput | SortOrder
    sentence_gender__1_Total_?: SortOrderInput | SortOrder
    sentence_renewables__1_Total_?: SortOrderInput | SortOrder
    sentence_suppliers__1_Total_?: SortOrderInput | SortOrder
    sentence_water__1_Total_?: SortOrderInput | SortOrder
    sentence_waste__1_Total_?: SortOrderInput | SortOrder
    sentence_other__1_Total_?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: UniqueFactorsTableCountOrderByAggregateInput
    _avg?: UniqueFactorsTableAvgOrderByAggregateInput
    _max?: UniqueFactorsTableMaxOrderByAggregateInput
    _min?: UniqueFactorsTableMinOrderByAggregateInput
    _sum?: UniqueFactorsTableSumOrderByAggregateInput
  }

  export type UniqueFactorsTableScalarWhereWithAggregatesInput = {
    AND?: UniqueFactorsTableScalarWhereWithAggregatesInput | UniqueFactorsTableScalarWhereWithAggregatesInput[]
    OR?: UniqueFactorsTableScalarWhereWithAggregatesInput[]
    NOT?: UniqueFactorsTableScalarWhereWithAggregatesInput | UniqueFactorsTableScalarWhereWithAggregatesInput[]
    KPI_Report_Date?: DateTimeWithAggregatesFilter<"UniqueFactorsTable"> | Date | string
    Company__NON_NULL_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Company__NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Member_of_the_S_P500__YES_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Ticker_s___NON_NULL_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Ticker_s___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Country__NON_NULL_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Country__NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    ArticleTargetYear__NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Source_Date__NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    PressReleaseYear__NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Target_sentence__NON_NULL_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Target_sentence__NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    Targetyear_s___NON_NULL_Unique_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sentence_carbon__1_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sentence_gender__1_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sentence_renewables__1_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sentence_suppliers__1_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sentence_water__1_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sentence_waste__1_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    sentence_other__1_Total_?: StringNullableWithAggregatesFilter<"UniqueFactorsTable"> | string | null
    id?: IntWithAggregatesFilter<"UniqueFactorsTable"> | number
  }

  export type CompanyUniverseWhereInput = {
    AND?: CompanyUniverseWhereInput | CompanyUniverseWhereInput[]
    OR?: CompanyUniverseWhereInput[]
    NOT?: CompanyUniverseWhereInput | CompanyUniverseWhereInput[]
    Company?: StringFilter<"CompanyUniverse"> | string
    x?: StringNullableFilter<"CompanyUniverse"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"CompanyUniverse"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"CompanyUniverse"> | string | null
    source?: StringNullableFilter<"CompanyUniverse"> | string | null
    Scraping_code_set_up__?: StringNullableFilter<"CompanyUniverse"> | string | null
    Ticker_s_?: StringNullableFilter<"CompanyUniverse"> | string | null
    PR_Agency?: StringNullableFilter<"CompanyUniverse"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Domain?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: StringNullableFilter<"CompanyUniverse"> | string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: StringNullableFilter<"CompanyUniverse"> | string | null
    Plain_text_press_release_subscription_possible___yes_no_?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyUniverse"> | string | null
    Country?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__1__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__1__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    WORKED_BY_?: StringNullableFilter<"CompanyUniverse"> | string | null
    COMMENTS___NOTES?: StringNullableFilter<"CompanyUniverse"> | string | null
    Carbon_sentence_available__?: StringNullableFilter<"CompanyUniverse"> | string | null
  }

  export type CompanyUniverseOrderByWithRelationInput = {
    Company?: SortOrder
    x?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    Scraping_code_set_up__?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Domain?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: SortOrderInput | SortOrder
    Subscribed_to_press_releases_jameskijani_gmail_com__?: SortOrderInput | SortOrder
    Plain_text_press_release_subscription_possible___yes_no_?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    WORKED_BY_?: SortOrderInput | SortOrder
    COMMENTS___NOTES?: SortOrderInput | SortOrder
    Carbon_sentence_available__?: SortOrderInput | SortOrder
    _relevance?: CompanyUniverseOrderByRelevanceInput
  }

  export type CompanyUniverseWhereUniqueInput = Prisma.AtLeast<{
    Company?: string
    AND?: CompanyUniverseWhereInput | CompanyUniverseWhereInput[]
    OR?: CompanyUniverseWhereInput[]
    NOT?: CompanyUniverseWhereInput | CompanyUniverseWhereInput[]
    x?: StringNullableFilter<"CompanyUniverse"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"CompanyUniverse"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"CompanyUniverse"> | string | null
    source?: StringNullableFilter<"CompanyUniverse"> | string | null
    Scraping_code_set_up__?: StringNullableFilter<"CompanyUniverse"> | string | null
    Ticker_s_?: StringNullableFilter<"CompanyUniverse"> | string | null
    PR_Agency?: StringNullableFilter<"CompanyUniverse"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Domain?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: StringNullableFilter<"CompanyUniverse"> | string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: StringNullableFilter<"CompanyUniverse"> | string | null
    Plain_text_press_release_subscription_possible___yes_no_?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"CompanyUniverse"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyUniverse"> | string | null
    Country?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__1__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__1__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"CompanyUniverse"> | string | null
    WORKED_BY_?: StringNullableFilter<"CompanyUniverse"> | string | null
    COMMENTS___NOTES?: StringNullableFilter<"CompanyUniverse"> | string | null
    Carbon_sentence_available__?: StringNullableFilter<"CompanyUniverse"> | string | null
  }, "Company">

  export type CompanyUniverseOrderByWithAggregationInput = {
    Company?: SortOrder
    x?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    Scraping_code_set_up__?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Domain?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: SortOrderInput | SortOrder
    Subscribed_to_press_releases_jameskijani_gmail_com__?: SortOrderInput | SortOrder
    Plain_text_press_release_subscription_possible___yes_no_?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    WORKED_BY_?: SortOrderInput | SortOrder
    COMMENTS___NOTES?: SortOrderInput | SortOrder
    Carbon_sentence_available__?: SortOrderInput | SortOrder
    _count?: CompanyUniverseCountOrderByAggregateInput
    _max?: CompanyUniverseMaxOrderByAggregateInput
    _min?: CompanyUniverseMinOrderByAggregateInput
  }

  export type CompanyUniverseScalarWhereWithAggregatesInput = {
    AND?: CompanyUniverseScalarWhereWithAggregatesInput | CompanyUniverseScalarWhereWithAggregatesInput[]
    OR?: CompanyUniverseScalarWhereWithAggregatesInput[]
    NOT?: CompanyUniverseScalarWhereWithAggregatesInput | CompanyUniverseScalarWhereWithAggregatesInput[]
    Company?: StringWithAggregatesFilter<"CompanyUniverse"> | string
    x?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Member_of_the_S_P500?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    source?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Scraping_code_set_up__?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Ticker_s_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    PR_Agency?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Domain?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Plain_text_press_release_subscription_possible___yes_no_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Company_annual_reports_page_URL?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Country?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_code__1__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_name__1__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_code__2__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_name__2__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_code__3__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_name__3__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_code__4__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_name__4__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_code__5__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    sector_name__5__NAICS_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    WORKED_BY_?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    COMMENTS___NOTES?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
    Carbon_sentence_available__?: StringNullableWithAggregatesFilter<"CompanyUniverse"> | string | null
  }

  export type CompanyDataWhereInput = {
    AND?: CompanyDataWhereInput | CompanyDataWhereInput[]
    OR?: CompanyDataWhereInput[]
    NOT?: CompanyDataWhereInput | CompanyDataWhereInput[]
    company?: StringNullableFilter<"CompanyData"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"CompanyData"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"CompanyData"> | string | null
    Ticker_s_?: StringNullableFilter<"CompanyData"> | string | null
    PR_Agency?: StringNullableFilter<"CompanyData"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_Global___Main_Website_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData"> | string | null
    Country?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__1__NAICS_?: BigIntNullableFilter<"CompanyData"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_codes_all__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name_all__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    id?: IntFilter<"CompanyData"> | number
  }

  export type CompanyDataOrderByWithRelationInput = {
    company?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Global___Main_Website_URL?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS_?: SortOrderInput | SortOrder
    sector_name_all__NAICS_?: SortOrderInput | SortOrder
    id?: SortOrder
    _relevance?: CompanyDataOrderByRelevanceInput
  }

  export type CompanyDataWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CompanyDataWhereInput | CompanyDataWhereInput[]
    OR?: CompanyDataWhereInput[]
    NOT?: CompanyDataWhereInput | CompanyDataWhereInput[]
    company?: StringNullableFilter<"CompanyData"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"CompanyData"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"CompanyData"> | string | null
    Ticker_s_?: StringNullableFilter<"CompanyData"> | string | null
    PR_Agency?: StringNullableFilter<"CompanyData"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_Global___Main_Website_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"CompanyData"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData"> | string | null
    Country?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__1__NAICS_?: BigIntNullableFilter<"CompanyData"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_codes_all__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
    sector_name_all__NAICS_?: StringNullableFilter<"CompanyData"> | string | null
  }, "id">

  export type CompanyDataOrderByWithAggregationInput = {
    company?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Global___Main_Website_URL?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS_?: SortOrderInput | SortOrder
    sector_name_all__NAICS_?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: CompanyDataCountOrderByAggregateInput
    _avg?: CompanyDataAvgOrderByAggregateInput
    _max?: CompanyDataMaxOrderByAggregateInput
    _min?: CompanyDataMinOrderByAggregateInput
    _sum?: CompanyDataSumOrderByAggregateInput
  }

  export type CompanyDataScalarWhereWithAggregatesInput = {
    AND?: CompanyDataScalarWhereWithAggregatesInput | CompanyDataScalarWhereWithAggregatesInput[]
    OR?: CompanyDataScalarWhereWithAggregatesInput[]
    NOT?: CompanyDataScalarWhereWithAggregatesInput | CompanyDataScalarWhereWithAggregatesInput[]
    company?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Member_of_the_S_P500?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Ticker_s_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    PR_Agency?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Company_Global___Main_Website_URL?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Company_annual_reports_page_URL?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    Country?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_code__1__NAICS_?: BigIntNullableWithAggregatesFilter<"CompanyData"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_code__2__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_name__2__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_code__3__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_name__3__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_code__4__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_name__4__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_code__5__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_name__5__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_codes_all__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    sector_name_all__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData"> | string | null
    id?: IntWithAggregatesFilter<"CompanyData"> | number
  }

  export type CompanyData2WhereInput = {
    AND?: CompanyData2WhereInput | CompanyData2WhereInput[]
    OR?: CompanyData2WhereInput[]
    NOT?: CompanyData2WhereInput | CompanyData2WhereInput[]
    company?: StringNullableFilter<"CompanyData2"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"CompanyData2"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"CompanyData2"> | string | null
    Ticker_s_?: StringNullableFilter<"CompanyData2"> | string | null
    PR_Agency?: StringNullableFilter<"CompanyData2"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_Global___Main_Website_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData2"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData2"> | string | null
    Country?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__1__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__1__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_codes_all__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name_all__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    NAICS__1_GIG?: StringNullableFilter<"CompanyData2"> | string | null
    NAICS__1_GIG_name?: StringNullableFilter<"CompanyData2"> | string | null
    id?: IntFilter<"CompanyData2"> | number
  }

  export type CompanyData2OrderByWithRelationInput = {
    company?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Global___Main_Website_URL?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS_?: SortOrderInput | SortOrder
    sector_name_all__NAICS_?: SortOrderInput | SortOrder
    NAICS__1_GIG?: SortOrderInput | SortOrder
    NAICS__1_GIG_name?: SortOrderInput | SortOrder
    id?: SortOrder
    _relevance?: CompanyData2OrderByRelevanceInput
  }

  export type CompanyData2WhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CompanyData2WhereInput | CompanyData2WhereInput[]
    OR?: CompanyData2WhereInput[]
    NOT?: CompanyData2WhereInput | CompanyData2WhereInput[]
    company?: StringNullableFilter<"CompanyData2"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"CompanyData2"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"CompanyData2"> | string | null
    Ticker_s_?: StringNullableFilter<"CompanyData2"> | string | null
    PR_Agency?: StringNullableFilter<"CompanyData2"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_Global___Main_Website_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData2"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"CompanyData2"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"CompanyData2"> | string | null
    Country?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__1__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__1__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_codes_all__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    sector_name_all__NAICS_?: StringNullableFilter<"CompanyData2"> | string | null
    NAICS__1_GIG?: StringNullableFilter<"CompanyData2"> | string | null
    NAICS__1_GIG_name?: StringNullableFilter<"CompanyData2"> | string | null
  }, "id">

  export type CompanyData2OrderByWithAggregationInput = {
    company?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Global___Main_Website_URL?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS_?: SortOrderInput | SortOrder
    sector_name_all__NAICS_?: SortOrderInput | SortOrder
    NAICS__1_GIG?: SortOrderInput | SortOrder
    NAICS__1_GIG_name?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: CompanyData2CountOrderByAggregateInput
    _avg?: CompanyData2AvgOrderByAggregateInput
    _max?: CompanyData2MaxOrderByAggregateInput
    _min?: CompanyData2MinOrderByAggregateInput
    _sum?: CompanyData2SumOrderByAggregateInput
  }

  export type CompanyData2ScalarWhereWithAggregatesInput = {
    AND?: CompanyData2ScalarWhereWithAggregatesInput | CompanyData2ScalarWhereWithAggregatesInput[]
    OR?: CompanyData2ScalarWhereWithAggregatesInput[]
    NOT?: CompanyData2ScalarWhereWithAggregatesInput | CompanyData2ScalarWhereWithAggregatesInput[]
    company?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Member_of_the_S_P500?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Ticker_s_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    PR_Agency?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Company_Global___Main_Website_URL?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Company_annual_reports_page_URL?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    Country?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_code__1__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_name__1__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_code__2__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_name__2__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_code__3__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_name__3__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_code__4__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_name__4__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_code__5__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_name__5__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_codes_all__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    sector_name_all__NAICS_?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    NAICS__1_GIG?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    NAICS__1_GIG_name?: StringNullableWithAggregatesFilter<"CompanyData2"> | string | null
    id?: IntWithAggregatesFilter<"CompanyData2"> | number
  }

  export type PercentageTableWhereInput = {
    AND?: PercentageTableWhereInput | PercentageTableWhereInput[]
    OR?: PercentageTableWhereInput[]
    NOT?: PercentageTableWhereInput | PercentageTableWhereInput[]
    KPI_Report_Date?: DateTimeFilter<"PercentageTable"> | Date | string
    Company?: StringNullableFilter<"PercentageTable"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"PercentageTable"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"PercentageTable"> | string | null
    Ticker_s_?: StringNullableFilter<"PercentageTable"> | string | null
    PR_Agency?: StringNullableFilter<"PercentageTable"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_Global___Main_Website_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableFilter<"PercentageTable"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"PercentageTable"> | string | null
    Country?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__1__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__1__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_codes_all__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name_all__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    climateaction100?: StringNullableFilter<"PercentageTable"> | string | null
    emails?: StringNullableFilter<"PercentageTable"> | string | null
    full_text?: StringNullableFilter<"PercentageTable"> | string | null
    Source_link?: StringNullableFilter<"PercentageTable"> | string | null
    pr_site?: StringNullableFilter<"PercentageTable"> | string | null
    release_date?: StringNullableFilter<"PercentageTable"> | string | null
    source?: StringNullableFilter<"PercentageTable"> | string | null
    ticker?: StringNullableFilter<"PercentageTable"> | string | null
    title?: StringNullableFilter<"PercentageTable"> | string | null
    ArticleTargetYear?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"PercentageTable"> | string | null
    Source_Date?: StringNullableFilter<"PercentageTable"> | string | null
    Annual_Report_Date?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseYear?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseMonth?: StringNullableFilter<"PercentageTable"> | string | null
    Target_sentence?: StringNullableFilter<"PercentageTable"> | string | null
    SentenceTargetYear?: StringNullableFilter<"PercentageTable"> | string | null
    Targetyear_s_?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_carbon?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_gender?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_renewables?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_suppliers?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_water?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_waste?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_other?: StringNullableFilter<"PercentageTable"> | string | null
    id?: IntFilter<"PercentageTable"> | number
  }

  export type PercentageTableOrderByWithRelationInput = {
    KPI_Report_Date?: SortOrder
    Company?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Global___Main_Website_URL?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS_?: SortOrderInput | SortOrder
    sector_name_all__NAICS_?: SortOrderInput | SortOrder
    climateaction100?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    release_date?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    Source_Date?: SortOrderInput | SortOrder
    Annual_Report_Date?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Targetyear_s_?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    sentence_waste?: SortOrderInput | SortOrder
    sentence_other?: SortOrderInput | SortOrder
    id?: SortOrder
    _relevance?: PercentageTableOrderByRelevanceInput
  }

  export type PercentageTableWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PercentageTableWhereInput | PercentageTableWhereInput[]
    OR?: PercentageTableWhereInput[]
    NOT?: PercentageTableWhereInput | PercentageTableWhereInput[]
    KPI_Report_Date?: DateTimeFilter<"PercentageTable"> | Date | string
    Company?: StringNullableFilter<"PercentageTable"> | string | null
    Member_of_the_S_P500?: StringNullableFilter<"PercentageTable"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableFilter<"PercentageTable"> | string | null
    Ticker_s_?: StringNullableFilter<"PercentageTable"> | string | null
    PR_Agency?: StringNullableFilter<"PercentageTable"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_Global___Main_Website_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_annual_reports_page_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableFilter<"PercentageTable"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableFilter<"PercentageTable"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableFilter<"PercentageTable"> | string | null
    Country?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__1__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__1__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_codes_all__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    sector_name_all__NAICS_?: StringNullableFilter<"PercentageTable"> | string | null
    climateaction100?: StringNullableFilter<"PercentageTable"> | string | null
    emails?: StringNullableFilter<"PercentageTable"> | string | null
    full_text?: StringNullableFilter<"PercentageTable"> | string | null
    Source_link?: StringNullableFilter<"PercentageTable"> | string | null
    pr_site?: StringNullableFilter<"PercentageTable"> | string | null
    release_date?: StringNullableFilter<"PercentageTable"> | string | null
    source?: StringNullableFilter<"PercentageTable"> | string | null
    ticker?: StringNullableFilter<"PercentageTable"> | string | null
    title?: StringNullableFilter<"PercentageTable"> | string | null
    ArticleTargetYear?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"PercentageTable"> | string | null
    Source_Date?: StringNullableFilter<"PercentageTable"> | string | null
    Annual_Report_Date?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseYear?: StringNullableFilter<"PercentageTable"> | string | null
    PressReleaseMonth?: StringNullableFilter<"PercentageTable"> | string | null
    Target_sentence?: StringNullableFilter<"PercentageTable"> | string | null
    SentenceTargetYear?: StringNullableFilter<"PercentageTable"> | string | null
    Targetyear_s_?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_carbon?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_gender?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_renewables?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_suppliers?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_water?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_waste?: StringNullableFilter<"PercentageTable"> | string | null
    sentence_other?: StringNullableFilter<"PercentageTable"> | string | null
  }, "id">

  export type PercentageTableOrderByWithAggregationInput = {
    KPI_Report_Date?: SortOrder
    Company?: SortOrderInput | SortOrder
    Member_of_the_S_P500?: SortOrderInput | SortOrder
    Member_of_the_Russell_1000_Index?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Global___Main_Website_URL?: SortOrderInput | SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrderInput | SortOrder
    Company_annual_reports_page_URL?: SortOrderInput | SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrderInput | SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    sector_codes_all__NAICS_?: SortOrderInput | SortOrder
    sector_name_all__NAICS_?: SortOrderInput | SortOrder
    climateaction100?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    release_date?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    Source_Date?: SortOrderInput | SortOrder
    Annual_Report_Date?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Targetyear_s_?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    sentence_waste?: SortOrderInput | SortOrder
    sentence_other?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: PercentageTableCountOrderByAggregateInput
    _avg?: PercentageTableAvgOrderByAggregateInput
    _max?: PercentageTableMaxOrderByAggregateInput
    _min?: PercentageTableMinOrderByAggregateInput
    _sum?: PercentageTableSumOrderByAggregateInput
  }

  export type PercentageTableScalarWhereWithAggregatesInput = {
    AND?: PercentageTableScalarWhereWithAggregatesInput | PercentageTableScalarWhereWithAggregatesInput[]
    OR?: PercentageTableScalarWhereWithAggregatesInput[]
    NOT?: PercentageTableScalarWhereWithAggregatesInput | PercentageTableScalarWhereWithAggregatesInput[]
    KPI_Report_Date?: DateTimeWithAggregatesFilter<"PercentageTable"> | Date | string
    Company?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Member_of_the_S_P500?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Member_of_the_Russell_1000_Index?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Ticker_s_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    PR_Agency?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Company_Global___Main_Website_URL?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Company_global_main_press___news_release_site_URL?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Company_annual_reports_page_URL?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Company_sustainability___ESG_reports_page_URL?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Country?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_code__1__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_name__1__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_code__2__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_name__2__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_code__3__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_name__3__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_code__4__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_name__4__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_code__5__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_name__5__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_codes_all__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sector_name_all__NAICS_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    climateaction100?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    emails?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    full_text?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Source_link?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    pr_site?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    release_date?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    source?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    ticker?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    title?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    ArticleTargetYear?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    PressReleaseFullCleanstep1?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    PressReleaseFullClean?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Source_Date?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Annual_Report_Date?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    PressReleaseYear?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    PressReleaseMonth?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Target_sentence?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    SentenceTargetYear?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    Targetyear_s_?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sentence_carbon?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sentence_gender?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sentence_renewables?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sentence_suppliers?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sentence_water?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sentence_waste?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    sentence_other?: StringNullableWithAggregatesFilter<"PercentageTable"> | string | null
    id?: IntWithAggregatesFilter<"PercentageTable"> | number
  }

  export type RoadmapCarbonWhereInput = {
    AND?: RoadmapCarbonWhereInput | RoadmapCarbonWhereInput[]
    OR?: RoadmapCarbonWhereInput[]
    NOT?: RoadmapCarbonWhereInput | RoadmapCarbonWhereInput[]
    Company?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Ticker_s_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    PR_Agency?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Company_Main_Website_URL?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Company_Source_site_URL?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Country?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__1__NAICS_?: BigIntNullableFilter<"RoadmapCarbon"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    S_P500member?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Russell_1000_member?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_4?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_4?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_4?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__4?: FloatNullableFilter<"RoadmapCarbon"> | number | null
    Source_link_5?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_5?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_5?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__5?: FloatNullableFilter<"RoadmapCarbon"> | number | null
    Source_link_6?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_6?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_6?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__6?: FloatNullableFilter<"RoadmapCarbon"> | number | null
    id?: IntFilter<"RoadmapCarbon"> | number
  }

  export type RoadmapCarbonOrderByWithRelationInput = {
    Company?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Company_Main_Website_URL?: SortOrderInput | SortOrder
    Company_Source_site_URL?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    S_P500member?: SortOrderInput | SortOrder
    Russell_1000_member?: SortOrderInput | SortOrder
    Source_link_1?: SortOrderInput | SortOrder
    Source_date_1?: SortOrderInput | SortOrder
    Source_sentence_1?: SortOrderInput | SortOrder
    Targetyear_s__1?: SortOrderInput | SortOrder
    Source_link_2?: SortOrderInput | SortOrder
    Source_date_2?: SortOrderInput | SortOrder
    Source_sentence_2?: SortOrderInput | SortOrder
    Targetyear_s__2?: SortOrderInput | SortOrder
    Source_link_3?: SortOrderInput | SortOrder
    Source_date_3?: SortOrderInput | SortOrder
    Source_sentence_3?: SortOrderInput | SortOrder
    Targetyear_s__3?: SortOrderInput | SortOrder
    Source_link_4?: SortOrderInput | SortOrder
    Source_date_4?: SortOrderInput | SortOrder
    Source_sentence_4?: SortOrderInput | SortOrder
    Targetyear_s__4?: SortOrderInput | SortOrder
    Source_link_5?: SortOrderInput | SortOrder
    Source_date_5?: SortOrderInput | SortOrder
    Source_sentence_5?: SortOrderInput | SortOrder
    Targetyear_s__5?: SortOrderInput | SortOrder
    Source_link_6?: SortOrderInput | SortOrder
    Source_date_6?: SortOrderInput | SortOrder
    Source_sentence_6?: SortOrderInput | SortOrder
    Targetyear_s__6?: SortOrderInput | SortOrder
    id?: SortOrder
    _relevance?: RoadmapCarbonOrderByRelevanceInput
  }

  export type RoadmapCarbonWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: RoadmapCarbonWhereInput | RoadmapCarbonWhereInput[]
    OR?: RoadmapCarbonWhereInput[]
    NOT?: RoadmapCarbonWhereInput | RoadmapCarbonWhereInput[]
    Company?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Ticker_s_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    PR_Agency?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Company_Main_Website_URL?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Company_Source_site_URL?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Country?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__1__NAICS_?: BigIntNullableFilter<"RoadmapCarbon"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"RoadmapCarbon"> | string | null
    S_P500member?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Russell_1000_member?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__1?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__2?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__3?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_link_4?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_4?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_4?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__4?: FloatNullableFilter<"RoadmapCarbon"> | number | null
    Source_link_5?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_5?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_5?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__5?: FloatNullableFilter<"RoadmapCarbon"> | number | null
    Source_link_6?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_date_6?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Source_sentence_6?: StringNullableFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__6?: FloatNullableFilter<"RoadmapCarbon"> | number | null
  }, "id">

  export type RoadmapCarbonOrderByWithAggregationInput = {
    Company?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Company_Main_Website_URL?: SortOrderInput | SortOrder
    Company_Source_site_URL?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    S_P500member?: SortOrderInput | SortOrder
    Russell_1000_member?: SortOrderInput | SortOrder
    Source_link_1?: SortOrderInput | SortOrder
    Source_date_1?: SortOrderInput | SortOrder
    Source_sentence_1?: SortOrderInput | SortOrder
    Targetyear_s__1?: SortOrderInput | SortOrder
    Source_link_2?: SortOrderInput | SortOrder
    Source_date_2?: SortOrderInput | SortOrder
    Source_sentence_2?: SortOrderInput | SortOrder
    Targetyear_s__2?: SortOrderInput | SortOrder
    Source_link_3?: SortOrderInput | SortOrder
    Source_date_3?: SortOrderInput | SortOrder
    Source_sentence_3?: SortOrderInput | SortOrder
    Targetyear_s__3?: SortOrderInput | SortOrder
    Source_link_4?: SortOrderInput | SortOrder
    Source_date_4?: SortOrderInput | SortOrder
    Source_sentence_4?: SortOrderInput | SortOrder
    Targetyear_s__4?: SortOrderInput | SortOrder
    Source_link_5?: SortOrderInput | SortOrder
    Source_date_5?: SortOrderInput | SortOrder
    Source_sentence_5?: SortOrderInput | SortOrder
    Targetyear_s__5?: SortOrderInput | SortOrder
    Source_link_6?: SortOrderInput | SortOrder
    Source_date_6?: SortOrderInput | SortOrder
    Source_sentence_6?: SortOrderInput | SortOrder
    Targetyear_s__6?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: RoadmapCarbonCountOrderByAggregateInput
    _avg?: RoadmapCarbonAvgOrderByAggregateInput
    _max?: RoadmapCarbonMaxOrderByAggregateInput
    _min?: RoadmapCarbonMinOrderByAggregateInput
    _sum?: RoadmapCarbonSumOrderByAggregateInput
  }

  export type RoadmapCarbonScalarWhereWithAggregatesInput = {
    AND?: RoadmapCarbonScalarWhereWithAggregatesInput | RoadmapCarbonScalarWhereWithAggregatesInput[]
    OR?: RoadmapCarbonScalarWhereWithAggregatesInput[]
    NOT?: RoadmapCarbonScalarWhereWithAggregatesInput | RoadmapCarbonScalarWhereWithAggregatesInput[]
    Company?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Ticker_s_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    PR_Agency?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Company_Main_Website_URL?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Company_Source_site_URL?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Country?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_code__1__NAICS_?: BigIntNullableWithAggregatesFilter<"RoadmapCarbon"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_code__2__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_name__2__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_code__3__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_name__3__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_code__4__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_name__4__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_code__5__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    sector_name__5__NAICS_?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    S_P500member?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Russell_1000_member?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_link_1?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_date_1?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_sentence_1?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__1?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_link_2?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_date_2?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_sentence_2?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__2?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_link_3?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_date_3?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_sentence_3?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__3?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_link_4?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_date_4?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_sentence_4?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__4?: FloatNullableWithAggregatesFilter<"RoadmapCarbon"> | number | null
    Source_link_5?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_date_5?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_sentence_5?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__5?: FloatNullableWithAggregatesFilter<"RoadmapCarbon"> | number | null
    Source_link_6?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_date_6?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Source_sentence_6?: StringNullableWithAggregatesFilter<"RoadmapCarbon"> | string | null
    Targetyear_s__6?: FloatNullableWithAggregatesFilter<"RoadmapCarbon"> | number | null
    id?: IntWithAggregatesFilter<"RoadmapCarbon"> | number
  }

  export type SentenceAllWhereInput = {
    AND?: SentenceAllWhereInput | SentenceAllWhereInput[]
    OR?: SentenceAllWhereInput[]
    NOT?: SentenceAllWhereInput | SentenceAllWhereInput[]
    release_date?: StringNullableFilter<"SentenceAll"> | string | null
    Targetyear_s_?: StringNullableFilter<"SentenceAll"> | string | null
    pr_site?: StringNullableFilter<"SentenceAll"> | string | null
    ArticleTargetYear?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_carbon?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    full_text?: StringNullableFilter<"SentenceAll"> | string | null
    PressReleaseMonth?: StringNullableFilter<"SentenceAll"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_renewables?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    sentence_suppliers?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    sentence_gender?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    Company?: StringNullableFilter<"SentenceAll"> | string | null
    Annual_Report_Date?: StringNullableFilter<"SentenceAll"> | string | null
    title?: StringNullableFilter<"SentenceAll"> | string | null
    emails?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_other?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    Source_link?: StringNullableFilter<"SentenceAll"> | string | null
    Source_Date?: StringNullableFilter<"SentenceAll"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_waste?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    source?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_water?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    PressReleaseYear?: StringNullableFilter<"SentenceAll"> | string | null
    ticker?: StringNullableFilter<"SentenceAll"> | string | null
    SentenceTargetYear?: StringNullableFilter<"SentenceAll"> | string | null
    Target_sentence?: StringNullableFilter<"SentenceAll"> | string | null
    upload_date?: StringNullableFilter<"SentenceAll"> | string | null
    id?: IntFilter<"SentenceAll"> | number
    PageURL?: StringNullableFilter<"SentenceAll"> | string | null
    DocURL?: StringNullableFilter<"SentenceAll"> | string | null
    DocTitle?: StringNullableFilter<"SentenceAll"> | string | null
    DocName?: StringNullableFilter<"SentenceAll"> | string | null
    Target_Sentence_Page?: StringNullableFilter<"SentenceAll"> | string | null
  }

  export type SentenceAllOrderByWithRelationInput = {
    release_date?: SortOrderInput | SortOrder
    Targetyear_s_?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    Company?: SortOrderInput | SortOrder
    Annual_Report_Date?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    sentence_other?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    Source_Date?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    sentence_waste?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    upload_date?: SortOrderInput | SortOrder
    id?: SortOrder
    PageURL?: SortOrderInput | SortOrder
    DocURL?: SortOrderInput | SortOrder
    DocTitle?: SortOrderInput | SortOrder
    DocName?: SortOrderInput | SortOrder
    Target_Sentence_Page?: SortOrderInput | SortOrder
    _relevance?: SentenceAllOrderByRelevanceInput
  }

  export type SentenceAllWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SentenceAllWhereInput | SentenceAllWhereInput[]
    OR?: SentenceAllWhereInput[]
    NOT?: SentenceAllWhereInput | SentenceAllWhereInput[]
    release_date?: StringNullableFilter<"SentenceAll"> | string | null
    Targetyear_s_?: StringNullableFilter<"SentenceAll"> | string | null
    pr_site?: StringNullableFilter<"SentenceAll"> | string | null
    ArticleTargetYear?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_carbon?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    full_text?: StringNullableFilter<"SentenceAll"> | string | null
    PressReleaseMonth?: StringNullableFilter<"SentenceAll"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_renewables?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    sentence_suppliers?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    sentence_gender?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    Company?: StringNullableFilter<"SentenceAll"> | string | null
    Annual_Report_Date?: StringNullableFilter<"SentenceAll"> | string | null
    title?: StringNullableFilter<"SentenceAll"> | string | null
    emails?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_other?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    Source_link?: StringNullableFilter<"SentenceAll"> | string | null
    Source_Date?: StringNullableFilter<"SentenceAll"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_waste?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    source?: StringNullableFilter<"SentenceAll"> | string | null
    sentence_water?: BigIntNullableFilter<"SentenceAll"> | bigint | number | null
    PressReleaseYear?: StringNullableFilter<"SentenceAll"> | string | null
    ticker?: StringNullableFilter<"SentenceAll"> | string | null
    SentenceTargetYear?: StringNullableFilter<"SentenceAll"> | string | null
    Target_sentence?: StringNullableFilter<"SentenceAll"> | string | null
    upload_date?: StringNullableFilter<"SentenceAll"> | string | null
    PageURL?: StringNullableFilter<"SentenceAll"> | string | null
    DocURL?: StringNullableFilter<"SentenceAll"> | string | null
    DocTitle?: StringNullableFilter<"SentenceAll"> | string | null
    DocName?: StringNullableFilter<"SentenceAll"> | string | null
    Target_Sentence_Page?: StringNullableFilter<"SentenceAll"> | string | null
  }, "id">

  export type SentenceAllOrderByWithAggregationInput = {
    release_date?: SortOrderInput | SortOrder
    Targetyear_s_?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    Company?: SortOrderInput | SortOrder
    Annual_Report_Date?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    sentence_other?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    Source_Date?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    sentence_waste?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    upload_date?: SortOrderInput | SortOrder
    id?: SortOrder
    PageURL?: SortOrderInput | SortOrder
    DocURL?: SortOrderInput | SortOrder
    DocTitle?: SortOrderInput | SortOrder
    DocName?: SortOrderInput | SortOrder
    Target_Sentence_Page?: SortOrderInput | SortOrder
    _count?: SentenceAllCountOrderByAggregateInput
    _avg?: SentenceAllAvgOrderByAggregateInput
    _max?: SentenceAllMaxOrderByAggregateInput
    _min?: SentenceAllMinOrderByAggregateInput
    _sum?: SentenceAllSumOrderByAggregateInput
  }

  export type SentenceAllScalarWhereWithAggregatesInput = {
    AND?: SentenceAllScalarWhereWithAggregatesInput | SentenceAllScalarWhereWithAggregatesInput[]
    OR?: SentenceAllScalarWhereWithAggregatesInput[]
    NOT?: SentenceAllScalarWhereWithAggregatesInput | SentenceAllScalarWhereWithAggregatesInput[]
    release_date?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    Targetyear_s_?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    pr_site?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    ArticleTargetYear?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    sentence_carbon?: BigIntNullableWithAggregatesFilter<"SentenceAll"> | bigint | number | null
    full_text?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    PressReleaseMonth?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    PressReleaseFullClean?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    sentence_renewables?: BigIntNullableWithAggregatesFilter<"SentenceAll"> | bigint | number | null
    sentence_suppliers?: BigIntNullableWithAggregatesFilter<"SentenceAll"> | bigint | number | null
    sentence_gender?: BigIntNullableWithAggregatesFilter<"SentenceAll"> | bigint | number | null
    Company?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    Annual_Report_Date?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    title?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    emails?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    sentence_other?: BigIntNullableWithAggregatesFilter<"SentenceAll"> | bigint | number | null
    Source_link?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    Source_Date?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    PressReleaseFullCleanstep1?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    sentence_waste?: BigIntNullableWithAggregatesFilter<"SentenceAll"> | bigint | number | null
    source?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    sentence_water?: BigIntNullableWithAggregatesFilter<"SentenceAll"> | bigint | number | null
    PressReleaseYear?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    ticker?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    SentenceTargetYear?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    Target_sentence?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    upload_date?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    id?: IntWithAggregatesFilter<"SentenceAll"> | number
    PageURL?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    DocURL?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    DocTitle?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    DocName?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
    Target_Sentence_Page?: StringNullableWithAggregatesFilter<"SentenceAll"> | string | null
  }

  export type TargetSentenceWhereInput = {
    AND?: TargetSentenceWhereInput | TargetSentenceWhereInput[]
    OR?: TargetSentenceWhereInput[]
    NOT?: TargetSentenceWhereInput | TargetSentenceWhereInput[]
    Company?: StringNullableFilter<"TargetSentence"> | string | null
    companylist?: StringNullableFilter<"TargetSentence"> | string | null
    Ticker_s_?: StringNullableFilter<"TargetSentence"> | string | null
    PR_Agency?: StringNullableFilter<"TargetSentence"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"TargetSentence"> | string | null
    Company_Main_Website_URL?: StringNullableFilter<"TargetSentence"> | string | null
    Company_press_release_site_URL?: StringNullableFilter<"TargetSentence"> | string | null
    Country?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__1__NAICS_?: BigIntNullableFilter<"TargetSentence"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    S_P500member?: StringNullableFilter<"TargetSentence"> | string | null
    Russell_1000_member?: StringNullableFilter<"TargetSentence"> | string | null
    emails?: StringNullableFilter<"TargetSentence"> | string | null
    full_text?: StringNullableFilter<"TargetSentence"> | string | null
    Source_link?: StringNullableFilter<"TargetSentence"> | string | null
    pr_site?: StringNullableFilter<"TargetSentence"> | string | null
    release_date?: StringNullableFilter<"TargetSentence"> | string | null
    source?: StringNullableFilter<"TargetSentence"> | string | null
    ticker?: StringNullableFilter<"TargetSentence"> | string | null
    title?: StringNullableFilter<"TargetSentence"> | string | null
    ArticleTargetYear?: StringNullableFilter<"TargetSentence"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"TargetSentence"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"TargetSentence"> | string | null
    Source_date?: StringNullableFilter<"TargetSentence"> | string | null
    PressReleaseYear?: BigIntNullableFilter<"TargetSentence"> | bigint | number | null
    PressReleaseMonth?: BigIntNullableFilter<"TargetSentence"> | bigint | number | null
    Target_sentence?: StringNullableFilter<"TargetSentence"> | string | null
    SentenceTargetYear?: StringNullableFilter<"TargetSentence"> | string | null
    Targetyear_s_?: StringNullableFilter<"TargetSentence"> | string | null
    sentence_carbon?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_gender?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_renewables?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_suppliers?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_water?: BoolNullableFilter<"TargetSentence"> | boolean | null
    Primarysource?: BoolNullableFilter<"TargetSentence"> | boolean | null
    id?: IntFilter<"TargetSentence"> | number
  }

  export type TargetSentenceOrderByWithRelationInput = {
    Company?: SortOrderInput | SortOrder
    companylist?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Main_Website_URL?: SortOrderInput | SortOrder
    Company_press_release_site_URL?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    S_P500member?: SortOrderInput | SortOrder
    Russell_1000_member?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    release_date?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    Source_date?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Targetyear_s_?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    Primarysource?: SortOrderInput | SortOrder
    id?: SortOrder
    _relevance?: TargetSentenceOrderByRelevanceInput
  }

  export type TargetSentenceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TargetSentenceWhereInput | TargetSentenceWhereInput[]
    OR?: TargetSentenceWhereInput[]
    NOT?: TargetSentenceWhereInput | TargetSentenceWhereInput[]
    Company?: StringNullableFilter<"TargetSentence"> | string | null
    companylist?: StringNullableFilter<"TargetSentence"> | string | null
    Ticker_s_?: StringNullableFilter<"TargetSentence"> | string | null
    PR_Agency?: StringNullableFilter<"TargetSentence"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableFilter<"TargetSentence"> | string | null
    Company_Main_Website_URL?: StringNullableFilter<"TargetSentence"> | string | null
    Company_press_release_site_URL?: StringNullableFilter<"TargetSentence"> | string | null
    Country?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__1__NAICS_?: BigIntNullableFilter<"TargetSentence"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__2__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__2__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__3__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__3__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__4__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__4__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_code__5__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    sector_name__5__NAICS_?: StringNullableFilter<"TargetSentence"> | string | null
    S_P500member?: StringNullableFilter<"TargetSentence"> | string | null
    Russell_1000_member?: StringNullableFilter<"TargetSentence"> | string | null
    emails?: StringNullableFilter<"TargetSentence"> | string | null
    full_text?: StringNullableFilter<"TargetSentence"> | string | null
    Source_link?: StringNullableFilter<"TargetSentence"> | string | null
    pr_site?: StringNullableFilter<"TargetSentence"> | string | null
    release_date?: StringNullableFilter<"TargetSentence"> | string | null
    source?: StringNullableFilter<"TargetSentence"> | string | null
    ticker?: StringNullableFilter<"TargetSentence"> | string | null
    title?: StringNullableFilter<"TargetSentence"> | string | null
    ArticleTargetYear?: StringNullableFilter<"TargetSentence"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"TargetSentence"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"TargetSentence"> | string | null
    Source_date?: StringNullableFilter<"TargetSentence"> | string | null
    PressReleaseYear?: BigIntNullableFilter<"TargetSentence"> | bigint | number | null
    PressReleaseMonth?: BigIntNullableFilter<"TargetSentence"> | bigint | number | null
    Target_sentence?: StringNullableFilter<"TargetSentence"> | string | null
    SentenceTargetYear?: StringNullableFilter<"TargetSentence"> | string | null
    Targetyear_s_?: StringNullableFilter<"TargetSentence"> | string | null
    sentence_carbon?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_gender?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_renewables?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_suppliers?: BoolNullableFilter<"TargetSentence"> | boolean | null
    sentence_water?: BoolNullableFilter<"TargetSentence"> | boolean | null
    Primarysource?: BoolNullableFilter<"TargetSentence"> | boolean | null
  }, "id">

  export type TargetSentenceOrderByWithAggregationInput = {
    Company?: SortOrderInput | SortOrder
    companylist?: SortOrderInput | SortOrder
    Ticker_s_?: SortOrderInput | SortOrder
    PR_Agency?: SortOrderInput | SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrderInput | SortOrder
    Company_Main_Website_URL?: SortOrderInput | SortOrder
    Company_press_release_site_URL?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    sector_code__1__NAICS_?: SortOrderInput | SortOrder
    sector_name__1__NAICS_?: SortOrderInput | SortOrder
    sector_code__2__NAICS_?: SortOrderInput | SortOrder
    sector_name__2__NAICS_?: SortOrderInput | SortOrder
    sector_code__3__NAICS_?: SortOrderInput | SortOrder
    sector_name__3__NAICS_?: SortOrderInput | SortOrder
    sector_code__4__NAICS_?: SortOrderInput | SortOrder
    sector_name__4__NAICS_?: SortOrderInput | SortOrder
    sector_code__5__NAICS_?: SortOrderInput | SortOrder
    sector_name__5__NAICS_?: SortOrderInput | SortOrder
    S_P500member?: SortOrderInput | SortOrder
    Russell_1000_member?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    release_date?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    Source_date?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Targetyear_s_?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    Primarysource?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: TargetSentenceCountOrderByAggregateInput
    _avg?: TargetSentenceAvgOrderByAggregateInput
    _max?: TargetSentenceMaxOrderByAggregateInput
    _min?: TargetSentenceMinOrderByAggregateInput
    _sum?: TargetSentenceSumOrderByAggregateInput
  }

  export type TargetSentenceScalarWhereWithAggregatesInput = {
    AND?: TargetSentenceScalarWhereWithAggregatesInput | TargetSentenceScalarWhereWithAggregatesInput[]
    OR?: TargetSentenceScalarWhereWithAggregatesInput[]
    NOT?: TargetSentenceScalarWhereWithAggregatesInput | TargetSentenceScalarWhereWithAggregatesInput[]
    Company?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    companylist?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Ticker_s_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    PR_Agency?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Example_2020_company_PR_agency_press_release_URL?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Company_Main_Website_URL?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Company_press_release_site_URL?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Country?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_code__1__NAICS_?: BigIntNullableWithAggregatesFilter<"TargetSentence"> | bigint | number | null
    sector_name__1__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_code__2__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_name__2__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_code__3__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_name__3__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_code__4__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_name__4__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_code__5__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sector_name__5__NAICS_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    S_P500member?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Russell_1000_member?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    emails?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    full_text?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Source_link?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    pr_site?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    release_date?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    source?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    ticker?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    title?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    ArticleTargetYear?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    PressReleaseFullCleanstep1?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    PressReleaseFullClean?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Source_date?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    PressReleaseYear?: BigIntNullableWithAggregatesFilter<"TargetSentence"> | bigint | number | null
    PressReleaseMonth?: BigIntNullableWithAggregatesFilter<"TargetSentence"> | bigint | number | null
    Target_sentence?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    SentenceTargetYear?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    Targetyear_s_?: StringNullableWithAggregatesFilter<"TargetSentence"> | string | null
    sentence_carbon?: BoolNullableWithAggregatesFilter<"TargetSentence"> | boolean | null
    sentence_gender?: BoolNullableWithAggregatesFilter<"TargetSentence"> | boolean | null
    sentence_renewables?: BoolNullableWithAggregatesFilter<"TargetSentence"> | boolean | null
    sentence_suppliers?: BoolNullableWithAggregatesFilter<"TargetSentence"> | boolean | null
    sentence_water?: BoolNullableWithAggregatesFilter<"TargetSentence"> | boolean | null
    Primarysource?: BoolNullableWithAggregatesFilter<"TargetSentence"> | boolean | null
    id?: IntWithAggregatesFilter<"TargetSentence"> | number
  }

  export type TestableWhereInput = {
    AND?: TestableWhereInput | TestableWhereInput[]
    OR?: TestableWhereInput[]
    NOT?: TestableWhereInput | TestableWhereInput[]
    firstname?: IntFilter<"Testable"> | number
    surname?: IntFilter<"Testable"> | number
    city?: IntFilter<"Testable"> | number
    country?: IntFilter<"Testable"> | number
    id?: IntFilter<"Testable"> | number
  }

  export type TestableOrderByWithRelationInput = {
    firstname?: SortOrder
    surname?: SortOrder
    city?: SortOrder
    country?: SortOrder
    id?: SortOrder
  }

  export type TestableWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TestableWhereInput | TestableWhereInput[]
    OR?: TestableWhereInput[]
    NOT?: TestableWhereInput | TestableWhereInput[]
    firstname?: IntFilter<"Testable"> | number
    surname?: IntFilter<"Testable"> | number
    city?: IntFilter<"Testable"> | number
    country?: IntFilter<"Testable"> | number
  }, "id">

  export type TestableOrderByWithAggregationInput = {
    firstname?: SortOrder
    surname?: SortOrder
    city?: SortOrder
    country?: SortOrder
    id?: SortOrder
    _count?: TestableCountOrderByAggregateInput
    _avg?: TestableAvgOrderByAggregateInput
    _max?: TestableMaxOrderByAggregateInput
    _min?: TestableMinOrderByAggregateInput
    _sum?: TestableSumOrderByAggregateInput
  }

  export type TestableScalarWhereWithAggregatesInput = {
    AND?: TestableScalarWhereWithAggregatesInput | TestableScalarWhereWithAggregatesInput[]
    OR?: TestableScalarWhereWithAggregatesInput[]
    NOT?: TestableScalarWhereWithAggregatesInput | TestableScalarWhereWithAggregatesInput[]
    firstname?: IntWithAggregatesFilter<"Testable"> | number
    surname?: IntWithAggregatesFilter<"Testable"> | number
    city?: IntWithAggregatesFilter<"Testable"> | number
    country?: IntWithAggregatesFilter<"Testable"> | number
    id?: IntWithAggregatesFilter<"Testable"> | number
  }

  export type wp_actionscheduler_actionsWhereInput = {
    AND?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    OR?: wp_actionscheduler_actionsWhereInput[]
    NOT?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    action_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    hook?: StringFilter<"wp_actionscheduler_actions"> | string
    status?: StringFilter<"wp_actionscheduler_actions"> | string
    scheduled_date_gmt?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    scheduled_date_local?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    schedule?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    group_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    attempts?: IntFilter<"wp_actionscheduler_actions"> | number
    last_attempt_gmt?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    last_attempt_local?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    claim_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    extended_args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
  }

  export type wp_actionscheduler_actionsOrderByWithRelationInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    args?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrderInput | SortOrder
    _relevance?: wp_actionscheduler_actionsOrderByRelevanceInput
  }

  export type wp_actionscheduler_actionsWhereUniqueInput = Prisma.AtLeast<{
    action_id?: bigint | number
    AND?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    OR?: wp_actionscheduler_actionsWhereInput[]
    NOT?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    hook?: StringFilter<"wp_actionscheduler_actions"> | string
    status?: StringFilter<"wp_actionscheduler_actions"> | string
    scheduled_date_gmt?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    scheduled_date_local?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    schedule?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    group_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    attempts?: IntFilter<"wp_actionscheduler_actions"> | number
    last_attempt_gmt?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    last_attempt_local?: DateTimeFilter<"wp_actionscheduler_actions"> | Date | string
    claim_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    extended_args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
  }, "action_id">

  export type wp_actionscheduler_actionsOrderByWithAggregationInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    args?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrderInput | SortOrder
    _count?: wp_actionscheduler_actionsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_actionsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_actionsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_actionsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_actionsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_actionsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput | wp_actionscheduler_actionsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput | wp_actionscheduler_actionsScalarWhereWithAggregatesInput[]
    action_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_actions"> | bigint | number
    hook?: StringWithAggregatesFilter<"wp_actionscheduler_actions"> | string
    status?: StringWithAggregatesFilter<"wp_actionscheduler_actions"> | string
    scheduled_date_gmt?: DateTimeWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string
    scheduled_date_local?: DateTimeWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string
    args?: StringNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | string | null
    schedule?: StringNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | string | null
    group_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_actions"> | bigint | number
    attempts?: IntWithAggregatesFilter<"wp_actionscheduler_actions"> | number
    last_attempt_gmt?: DateTimeWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string
    last_attempt_local?: DateTimeWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string
    claim_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_actions"> | bigint | number
    extended_args?: StringNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | string | null
  }

  export type wp_actionscheduler_claimsWhereInput = {
    AND?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    OR?: wp_actionscheduler_claimsWhereInput[]
    NOT?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    claim_id?: BigIntFilter<"wp_actionscheduler_claims"> | bigint | number
    date_created_gmt?: DateTimeFilter<"wp_actionscheduler_claims"> | Date | string
  }

  export type wp_actionscheduler_claimsOrderByWithRelationInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
  }

  export type wp_actionscheduler_claimsWhereUniqueInput = Prisma.AtLeast<{
    claim_id?: bigint | number
    AND?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    OR?: wp_actionscheduler_claimsWhereInput[]
    NOT?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    date_created_gmt?: DateTimeFilter<"wp_actionscheduler_claims"> | Date | string
  }, "claim_id">

  export type wp_actionscheduler_claimsOrderByWithAggregationInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
    _count?: wp_actionscheduler_claimsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_claimsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_claimsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_claimsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_claimsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_claimsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput | wp_actionscheduler_claimsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput | wp_actionscheduler_claimsScalarWhereWithAggregatesInput[]
    claim_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_claims"> | bigint | number
    date_created_gmt?: DateTimeWithAggregatesFilter<"wp_actionscheduler_claims"> | Date | string
  }

  export type wp_actionscheduler_groupsWhereInput = {
    AND?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    OR?: wp_actionscheduler_groupsWhereInput[]
    NOT?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    group_id?: BigIntFilter<"wp_actionscheduler_groups"> | bigint | number
    slug?: StringFilter<"wp_actionscheduler_groups"> | string
  }

  export type wp_actionscheduler_groupsOrderByWithRelationInput = {
    group_id?: SortOrder
    slug?: SortOrder
    _relevance?: wp_actionscheduler_groupsOrderByRelevanceInput
  }

  export type wp_actionscheduler_groupsWhereUniqueInput = Prisma.AtLeast<{
    group_id?: bigint | number
    AND?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    OR?: wp_actionscheduler_groupsWhereInput[]
    NOT?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    slug?: StringFilter<"wp_actionscheduler_groups"> | string
  }, "group_id">

  export type wp_actionscheduler_groupsOrderByWithAggregationInput = {
    group_id?: SortOrder
    slug?: SortOrder
    _count?: wp_actionscheduler_groupsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_groupsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_groupsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_groupsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_groupsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_groupsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput | wp_actionscheduler_groupsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput | wp_actionscheduler_groupsScalarWhereWithAggregatesInput[]
    group_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_groups"> | bigint | number
    slug?: StringWithAggregatesFilter<"wp_actionscheduler_groups"> | string
  }

  export type wp_actionscheduler_logsWhereInput = {
    AND?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    OR?: wp_actionscheduler_logsWhereInput[]
    NOT?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    log_id?: BigIntFilter<"wp_actionscheduler_logs"> | bigint | number
    action_id?: BigIntFilter<"wp_actionscheduler_logs"> | bigint | number
    message?: StringFilter<"wp_actionscheduler_logs"> | string
    log_date_gmt?: DateTimeFilter<"wp_actionscheduler_logs"> | Date | string
    log_date_local?: DateTimeFilter<"wp_actionscheduler_logs"> | Date | string
  }

  export type wp_actionscheduler_logsOrderByWithRelationInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
    _relevance?: wp_actionscheduler_logsOrderByRelevanceInput
  }

  export type wp_actionscheduler_logsWhereUniqueInput = Prisma.AtLeast<{
    log_id?: bigint | number
    AND?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    OR?: wp_actionscheduler_logsWhereInput[]
    NOT?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    action_id?: BigIntFilter<"wp_actionscheduler_logs"> | bigint | number
    message?: StringFilter<"wp_actionscheduler_logs"> | string
    log_date_gmt?: DateTimeFilter<"wp_actionscheduler_logs"> | Date | string
    log_date_local?: DateTimeFilter<"wp_actionscheduler_logs"> | Date | string
  }, "log_id">

  export type wp_actionscheduler_logsOrderByWithAggregationInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
    _count?: wp_actionscheduler_logsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_logsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_logsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_logsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_logsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_logsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_logsScalarWhereWithAggregatesInput | wp_actionscheduler_logsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_logsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_logsScalarWhereWithAggregatesInput | wp_actionscheduler_logsScalarWhereWithAggregatesInput[]
    log_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_logs"> | bigint | number
    action_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_logs"> | bigint | number
    message?: StringWithAggregatesFilter<"wp_actionscheduler_logs"> | string
    log_date_gmt?: DateTimeWithAggregatesFilter<"wp_actionscheduler_logs"> | Date | string
    log_date_local?: DateTimeWithAggregatesFilter<"wp_actionscheduler_logs"> | Date | string
  }

  export type wp_aioseo_notificationsWhereInput = {
    AND?: wp_aioseo_notificationsWhereInput | wp_aioseo_notificationsWhereInput[]
    OR?: wp_aioseo_notificationsWhereInput[]
    NOT?: wp_aioseo_notificationsWhereInput | wp_aioseo_notificationsWhereInput[]
    id?: BigIntFilter<"wp_aioseo_notifications"> | bigint | number
    slug?: StringFilter<"wp_aioseo_notifications"> | string
    title?: StringFilter<"wp_aioseo_notifications"> | string
    content?: StringFilter<"wp_aioseo_notifications"> | string
    type?: StringFilter<"wp_aioseo_notifications"> | string
    level?: StringFilter<"wp_aioseo_notifications"> | string
    notification_id?: BigIntNullableFilter<"wp_aioseo_notifications"> | bigint | number | null
    notification_name?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    start?: DateTimeNullableFilter<"wp_aioseo_notifications"> | Date | string | null
    end?: DateTimeNullableFilter<"wp_aioseo_notifications"> | Date | string | null
    button1_label?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    button1_action?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    button2_label?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    button2_action?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    dismissed?: BoolFilter<"wp_aioseo_notifications"> | boolean
    created?: DateTimeFilter<"wp_aioseo_notifications"> | Date | string
    updated?: DateTimeFilter<"wp_aioseo_notifications"> | Date | string
  }

  export type wp_aioseo_notificationsOrderByWithRelationInput = {
    id?: SortOrder
    slug?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    level?: SortOrder
    notification_id?: SortOrderInput | SortOrder
    notification_name?: SortOrderInput | SortOrder
    start?: SortOrderInput | SortOrder
    end?: SortOrderInput | SortOrder
    button1_label?: SortOrderInput | SortOrder
    button1_action?: SortOrderInput | SortOrder
    button2_label?: SortOrderInput | SortOrder
    button2_action?: SortOrderInput | SortOrder
    dismissed?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _relevance?: wp_aioseo_notificationsOrderByRelevanceInput
  }

  export type wp_aioseo_notificationsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    slug?: string
    AND?: wp_aioseo_notificationsWhereInput | wp_aioseo_notificationsWhereInput[]
    OR?: wp_aioseo_notificationsWhereInput[]
    NOT?: wp_aioseo_notificationsWhereInput | wp_aioseo_notificationsWhereInput[]
    title?: StringFilter<"wp_aioseo_notifications"> | string
    content?: StringFilter<"wp_aioseo_notifications"> | string
    type?: StringFilter<"wp_aioseo_notifications"> | string
    level?: StringFilter<"wp_aioseo_notifications"> | string
    notification_id?: BigIntNullableFilter<"wp_aioseo_notifications"> | bigint | number | null
    notification_name?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    start?: DateTimeNullableFilter<"wp_aioseo_notifications"> | Date | string | null
    end?: DateTimeNullableFilter<"wp_aioseo_notifications"> | Date | string | null
    button1_label?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    button1_action?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    button2_label?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    button2_action?: StringNullableFilter<"wp_aioseo_notifications"> | string | null
    dismissed?: BoolFilter<"wp_aioseo_notifications"> | boolean
    created?: DateTimeFilter<"wp_aioseo_notifications"> | Date | string
    updated?: DateTimeFilter<"wp_aioseo_notifications"> | Date | string
  }, "id" | "slug">

  export type wp_aioseo_notificationsOrderByWithAggregationInput = {
    id?: SortOrder
    slug?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    level?: SortOrder
    notification_id?: SortOrderInput | SortOrder
    notification_name?: SortOrderInput | SortOrder
    start?: SortOrderInput | SortOrder
    end?: SortOrderInput | SortOrder
    button1_label?: SortOrderInput | SortOrder
    button1_action?: SortOrderInput | SortOrder
    button2_label?: SortOrderInput | SortOrder
    button2_action?: SortOrderInput | SortOrder
    dismissed?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: wp_aioseo_notificationsCountOrderByAggregateInput
    _avg?: wp_aioseo_notificationsAvgOrderByAggregateInput
    _max?: wp_aioseo_notificationsMaxOrderByAggregateInput
    _min?: wp_aioseo_notificationsMinOrderByAggregateInput
    _sum?: wp_aioseo_notificationsSumOrderByAggregateInput
  }

  export type wp_aioseo_notificationsScalarWhereWithAggregatesInput = {
    AND?: wp_aioseo_notificationsScalarWhereWithAggregatesInput | wp_aioseo_notificationsScalarWhereWithAggregatesInput[]
    OR?: wp_aioseo_notificationsScalarWhereWithAggregatesInput[]
    NOT?: wp_aioseo_notificationsScalarWhereWithAggregatesInput | wp_aioseo_notificationsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_aioseo_notifications"> | bigint | number
    slug?: StringWithAggregatesFilter<"wp_aioseo_notifications"> | string
    title?: StringWithAggregatesFilter<"wp_aioseo_notifications"> | string
    content?: StringWithAggregatesFilter<"wp_aioseo_notifications"> | string
    type?: StringWithAggregatesFilter<"wp_aioseo_notifications"> | string
    level?: StringWithAggregatesFilter<"wp_aioseo_notifications"> | string
    notification_id?: BigIntNullableWithAggregatesFilter<"wp_aioseo_notifications"> | bigint | number | null
    notification_name?: StringNullableWithAggregatesFilter<"wp_aioseo_notifications"> | string | null
    start?: DateTimeNullableWithAggregatesFilter<"wp_aioseo_notifications"> | Date | string | null
    end?: DateTimeNullableWithAggregatesFilter<"wp_aioseo_notifications"> | Date | string | null
    button1_label?: StringNullableWithAggregatesFilter<"wp_aioseo_notifications"> | string | null
    button1_action?: StringNullableWithAggregatesFilter<"wp_aioseo_notifications"> | string | null
    button2_label?: StringNullableWithAggregatesFilter<"wp_aioseo_notifications"> | string | null
    button2_action?: StringNullableWithAggregatesFilter<"wp_aioseo_notifications"> | string | null
    dismissed?: BoolWithAggregatesFilter<"wp_aioseo_notifications"> | boolean
    created?: DateTimeWithAggregatesFilter<"wp_aioseo_notifications"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"wp_aioseo_notifications"> | Date | string
  }

  export type wp_aioseo_postsWhereInput = {
    AND?: wp_aioseo_postsWhereInput | wp_aioseo_postsWhereInput[]
    OR?: wp_aioseo_postsWhereInput[]
    NOT?: wp_aioseo_postsWhereInput | wp_aioseo_postsWhereInput[]
    id?: BigIntFilter<"wp_aioseo_posts"> | bigint | number
    post_id?: BigIntFilter<"wp_aioseo_posts"> | bigint | number
    title?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    description?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    keywords?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    keyphrases?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    page_analysis?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    canonical_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_title?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_description?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_object_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_image_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_image_custom_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_image_custom_fields?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_custom_image_width?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    og_custom_image_height?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    og_video?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_custom_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_article_section?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_article_tags?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_use_og?: BoolNullableFilter<"wp_aioseo_posts"> | boolean | null
    twitter_card?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_image_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_image_custom_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_image_custom_fields?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_title?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_description?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    seo_score?: IntFilter<"wp_aioseo_posts"> | number
    schema_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    schema_type_options?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    pillar_content?: BoolNullableFilter<"wp_aioseo_posts"> | boolean | null
    robots_default?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noindex?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noarchive?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_nosnippet?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_nofollow?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noimageindex?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noodp?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_notranslate?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_max_snippet?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    robots_max_videopreview?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    robots_max_imagepreview?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    tabs?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    images?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    image_scan_date?: DateTimeNullableFilter<"wp_aioseo_posts"> | Date | string | null
    priority?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    frequency?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    videos?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    video_thumbnail?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    video_scan_date?: DateTimeNullableFilter<"wp_aioseo_posts"> | Date | string | null
    local_seo?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    created?: DateTimeFilter<"wp_aioseo_posts"> | Date | string
    updated?: DateTimeFilter<"wp_aioseo_posts"> | Date | string
  }

  export type wp_aioseo_postsOrderByWithRelationInput = {
    id?: SortOrder
    post_id?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    keywords?: SortOrderInput | SortOrder
    keyphrases?: SortOrderInput | SortOrder
    page_analysis?: SortOrderInput | SortOrder
    canonical_url?: SortOrderInput | SortOrder
    og_title?: SortOrderInput | SortOrder
    og_description?: SortOrderInput | SortOrder
    og_object_type?: SortOrderInput | SortOrder
    og_image_type?: SortOrderInput | SortOrder
    og_image_custom_url?: SortOrderInput | SortOrder
    og_image_custom_fields?: SortOrderInput | SortOrder
    og_custom_image_width?: SortOrderInput | SortOrder
    og_custom_image_height?: SortOrderInput | SortOrder
    og_video?: SortOrderInput | SortOrder
    og_custom_url?: SortOrderInput | SortOrder
    og_article_section?: SortOrderInput | SortOrder
    og_article_tags?: SortOrderInput | SortOrder
    twitter_use_og?: SortOrderInput | SortOrder
    twitter_card?: SortOrderInput | SortOrder
    twitter_image_type?: SortOrderInput | SortOrder
    twitter_image_custom_url?: SortOrderInput | SortOrder
    twitter_image_custom_fields?: SortOrderInput | SortOrder
    twitter_title?: SortOrderInput | SortOrder
    twitter_description?: SortOrderInput | SortOrder
    seo_score?: SortOrder
    schema_type?: SortOrderInput | SortOrder
    schema_type_options?: SortOrderInput | SortOrder
    pillar_content?: SortOrderInput | SortOrder
    robots_default?: SortOrder
    robots_noindex?: SortOrder
    robots_noarchive?: SortOrder
    robots_nosnippet?: SortOrder
    robots_nofollow?: SortOrder
    robots_noimageindex?: SortOrder
    robots_noodp?: SortOrder
    robots_notranslate?: SortOrder
    robots_max_snippet?: SortOrderInput | SortOrder
    robots_max_videopreview?: SortOrderInput | SortOrder
    robots_max_imagepreview?: SortOrderInput | SortOrder
    tabs?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    image_scan_date?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    frequency?: SortOrderInput | SortOrder
    videos?: SortOrderInput | SortOrder
    video_thumbnail?: SortOrderInput | SortOrder
    video_scan_date?: SortOrderInput | SortOrder
    local_seo?: SortOrderInput | SortOrder
    created?: SortOrder
    updated?: SortOrder
    _relevance?: wp_aioseo_postsOrderByRelevanceInput
  }

  export type wp_aioseo_postsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_aioseo_postsWhereInput | wp_aioseo_postsWhereInput[]
    OR?: wp_aioseo_postsWhereInput[]
    NOT?: wp_aioseo_postsWhereInput | wp_aioseo_postsWhereInput[]
    post_id?: BigIntFilter<"wp_aioseo_posts"> | bigint | number
    title?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    description?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    keywords?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    keyphrases?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    page_analysis?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    canonical_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_title?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_description?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_object_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_image_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_image_custom_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_image_custom_fields?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_custom_image_width?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    og_custom_image_height?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    og_video?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_custom_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_article_section?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    og_article_tags?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_use_og?: BoolNullableFilter<"wp_aioseo_posts"> | boolean | null
    twitter_card?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_image_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_image_custom_url?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_image_custom_fields?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_title?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    twitter_description?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    seo_score?: IntFilter<"wp_aioseo_posts"> | number
    schema_type?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    schema_type_options?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    pillar_content?: BoolNullableFilter<"wp_aioseo_posts"> | boolean | null
    robots_default?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noindex?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noarchive?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_nosnippet?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_nofollow?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noimageindex?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_noodp?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_notranslate?: BoolFilter<"wp_aioseo_posts"> | boolean
    robots_max_snippet?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    robots_max_videopreview?: IntNullableFilter<"wp_aioseo_posts"> | number | null
    robots_max_imagepreview?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    tabs?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    images?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    image_scan_date?: DateTimeNullableFilter<"wp_aioseo_posts"> | Date | string | null
    priority?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    frequency?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    videos?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    video_thumbnail?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    video_scan_date?: DateTimeNullableFilter<"wp_aioseo_posts"> | Date | string | null
    local_seo?: StringNullableFilter<"wp_aioseo_posts"> | string | null
    created?: DateTimeFilter<"wp_aioseo_posts"> | Date | string
    updated?: DateTimeFilter<"wp_aioseo_posts"> | Date | string
  }, "id">

  export type wp_aioseo_postsOrderByWithAggregationInput = {
    id?: SortOrder
    post_id?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    keywords?: SortOrderInput | SortOrder
    keyphrases?: SortOrderInput | SortOrder
    page_analysis?: SortOrderInput | SortOrder
    canonical_url?: SortOrderInput | SortOrder
    og_title?: SortOrderInput | SortOrder
    og_description?: SortOrderInput | SortOrder
    og_object_type?: SortOrderInput | SortOrder
    og_image_type?: SortOrderInput | SortOrder
    og_image_custom_url?: SortOrderInput | SortOrder
    og_image_custom_fields?: SortOrderInput | SortOrder
    og_custom_image_width?: SortOrderInput | SortOrder
    og_custom_image_height?: SortOrderInput | SortOrder
    og_video?: SortOrderInput | SortOrder
    og_custom_url?: SortOrderInput | SortOrder
    og_article_section?: SortOrderInput | SortOrder
    og_article_tags?: SortOrderInput | SortOrder
    twitter_use_og?: SortOrderInput | SortOrder
    twitter_card?: SortOrderInput | SortOrder
    twitter_image_type?: SortOrderInput | SortOrder
    twitter_image_custom_url?: SortOrderInput | SortOrder
    twitter_image_custom_fields?: SortOrderInput | SortOrder
    twitter_title?: SortOrderInput | SortOrder
    twitter_description?: SortOrderInput | SortOrder
    seo_score?: SortOrder
    schema_type?: SortOrderInput | SortOrder
    schema_type_options?: SortOrderInput | SortOrder
    pillar_content?: SortOrderInput | SortOrder
    robots_default?: SortOrder
    robots_noindex?: SortOrder
    robots_noarchive?: SortOrder
    robots_nosnippet?: SortOrder
    robots_nofollow?: SortOrder
    robots_noimageindex?: SortOrder
    robots_noodp?: SortOrder
    robots_notranslate?: SortOrder
    robots_max_snippet?: SortOrderInput | SortOrder
    robots_max_videopreview?: SortOrderInput | SortOrder
    robots_max_imagepreview?: SortOrderInput | SortOrder
    tabs?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    image_scan_date?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    frequency?: SortOrderInput | SortOrder
    videos?: SortOrderInput | SortOrder
    video_thumbnail?: SortOrderInput | SortOrder
    video_scan_date?: SortOrderInput | SortOrder
    local_seo?: SortOrderInput | SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: wp_aioseo_postsCountOrderByAggregateInput
    _avg?: wp_aioseo_postsAvgOrderByAggregateInput
    _max?: wp_aioseo_postsMaxOrderByAggregateInput
    _min?: wp_aioseo_postsMinOrderByAggregateInput
    _sum?: wp_aioseo_postsSumOrderByAggregateInput
  }

  export type wp_aioseo_postsScalarWhereWithAggregatesInput = {
    AND?: wp_aioseo_postsScalarWhereWithAggregatesInput | wp_aioseo_postsScalarWhereWithAggregatesInput[]
    OR?: wp_aioseo_postsScalarWhereWithAggregatesInput[]
    NOT?: wp_aioseo_postsScalarWhereWithAggregatesInput | wp_aioseo_postsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_aioseo_posts"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"wp_aioseo_posts"> | bigint | number
    title?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    description?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    keywords?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    keyphrases?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    page_analysis?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    canonical_url?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_title?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_description?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_object_type?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_image_type?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_image_custom_url?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_image_custom_fields?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_custom_image_width?: IntNullableWithAggregatesFilter<"wp_aioseo_posts"> | number | null
    og_custom_image_height?: IntNullableWithAggregatesFilter<"wp_aioseo_posts"> | number | null
    og_video?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_custom_url?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_article_section?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    og_article_tags?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    twitter_use_og?: BoolNullableWithAggregatesFilter<"wp_aioseo_posts"> | boolean | null
    twitter_card?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    twitter_image_type?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    twitter_image_custom_url?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    twitter_image_custom_fields?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    twitter_title?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    twitter_description?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    seo_score?: IntWithAggregatesFilter<"wp_aioseo_posts"> | number
    schema_type?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    schema_type_options?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    pillar_content?: BoolNullableWithAggregatesFilter<"wp_aioseo_posts"> | boolean | null
    robots_default?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_noindex?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_noarchive?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_nosnippet?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_nofollow?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_noimageindex?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_noodp?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_notranslate?: BoolWithAggregatesFilter<"wp_aioseo_posts"> | boolean
    robots_max_snippet?: IntNullableWithAggregatesFilter<"wp_aioseo_posts"> | number | null
    robots_max_videopreview?: IntNullableWithAggregatesFilter<"wp_aioseo_posts"> | number | null
    robots_max_imagepreview?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    tabs?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    images?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    image_scan_date?: DateTimeNullableWithAggregatesFilter<"wp_aioseo_posts"> | Date | string | null
    priority?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    frequency?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    videos?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    video_thumbnail?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    video_scan_date?: DateTimeNullableWithAggregatesFilter<"wp_aioseo_posts"> | Date | string | null
    local_seo?: StringNullableWithAggregatesFilter<"wp_aioseo_posts"> | string | null
    created?: DateTimeWithAggregatesFilter<"wp_aioseo_posts"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"wp_aioseo_posts"> | Date | string
  }

  export type wp_commentmetaWhereInput = {
    AND?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    OR?: wp_commentmetaWhereInput[]
    NOT?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    meta_id?: BigIntFilter<"wp_commentmeta"> | bigint | number
    comment_id?: BigIntFilter<"wp_commentmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_commentmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_commentmeta"> | string | null
  }

  export type wp_commentmetaOrderByWithRelationInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_commentmetaOrderByRelevanceInput
  }

  export type wp_commentmetaWhereUniqueInput = Prisma.AtLeast<{
    meta_id?: bigint | number
    AND?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    OR?: wp_commentmetaWhereInput[]
    NOT?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    comment_id?: BigIntFilter<"wp_commentmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_commentmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_commentmeta"> | string | null
  }, "meta_id">

  export type wp_commentmetaOrderByWithAggregationInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_commentmetaCountOrderByAggregateInput
    _avg?: wp_commentmetaAvgOrderByAggregateInput
    _max?: wp_commentmetaMaxOrderByAggregateInput
    _min?: wp_commentmetaMinOrderByAggregateInput
    _sum?: wp_commentmetaSumOrderByAggregateInput
  }

  export type wp_commentmetaScalarWhereWithAggregatesInput = {
    AND?: wp_commentmetaScalarWhereWithAggregatesInput | wp_commentmetaScalarWhereWithAggregatesInput[]
    OR?: wp_commentmetaScalarWhereWithAggregatesInput[]
    NOT?: wp_commentmetaScalarWhereWithAggregatesInput | wp_commentmetaScalarWhereWithAggregatesInput[]
    meta_id?: BigIntWithAggregatesFilter<"wp_commentmeta"> | bigint | number
    comment_id?: BigIntWithAggregatesFilter<"wp_commentmeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_commentmeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_commentmeta"> | string | null
  }

  export type wp_commentsWhereInput = {
    AND?: wp_commentsWhereInput | wp_commentsWhereInput[]
    OR?: wp_commentsWhereInput[]
    NOT?: wp_commentsWhereInput | wp_commentsWhereInput[]
    comment_ID?: BigIntFilter<"wp_comments"> | bigint | number
    comment_post_ID?: BigIntFilter<"wp_comments"> | bigint | number
    comment_author?: StringFilter<"wp_comments"> | string
    comment_author_email?: StringFilter<"wp_comments"> | string
    comment_author_url?: StringFilter<"wp_comments"> | string
    comment_author_IP?: StringFilter<"wp_comments"> | string
    comment_date?: DateTimeFilter<"wp_comments"> | Date | string
    comment_date_gmt?: DateTimeFilter<"wp_comments"> | Date | string
    comment_content?: StringFilter<"wp_comments"> | string
    comment_karma?: IntFilter<"wp_comments"> | number
    comment_approved?: StringFilter<"wp_comments"> | string
    comment_agent?: StringFilter<"wp_comments"> | string
    comment_type?: StringFilter<"wp_comments"> | string
    comment_parent?: BigIntFilter<"wp_comments"> | bigint | number
    user_id?: BigIntFilter<"wp_comments"> | bigint | number
  }

  export type wp_commentsOrderByWithRelationInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
    _relevance?: wp_commentsOrderByRelevanceInput
  }

  export type wp_commentsWhereUniqueInput = Prisma.AtLeast<{
    comment_ID?: bigint | number
    AND?: wp_commentsWhereInput | wp_commentsWhereInput[]
    OR?: wp_commentsWhereInput[]
    NOT?: wp_commentsWhereInput | wp_commentsWhereInput[]
    comment_post_ID?: BigIntFilter<"wp_comments"> | bigint | number
    comment_author?: StringFilter<"wp_comments"> | string
    comment_author_email?: StringFilter<"wp_comments"> | string
    comment_author_url?: StringFilter<"wp_comments"> | string
    comment_author_IP?: StringFilter<"wp_comments"> | string
    comment_date?: DateTimeFilter<"wp_comments"> | Date | string
    comment_date_gmt?: DateTimeFilter<"wp_comments"> | Date | string
    comment_content?: StringFilter<"wp_comments"> | string
    comment_karma?: IntFilter<"wp_comments"> | number
    comment_approved?: StringFilter<"wp_comments"> | string
    comment_agent?: StringFilter<"wp_comments"> | string
    comment_type?: StringFilter<"wp_comments"> | string
    comment_parent?: BigIntFilter<"wp_comments"> | bigint | number
    user_id?: BigIntFilter<"wp_comments"> | bigint | number
  }, "comment_ID">

  export type wp_commentsOrderByWithAggregationInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
    _count?: wp_commentsCountOrderByAggregateInput
    _avg?: wp_commentsAvgOrderByAggregateInput
    _max?: wp_commentsMaxOrderByAggregateInput
    _min?: wp_commentsMinOrderByAggregateInput
    _sum?: wp_commentsSumOrderByAggregateInput
  }

  export type wp_commentsScalarWhereWithAggregatesInput = {
    AND?: wp_commentsScalarWhereWithAggregatesInput | wp_commentsScalarWhereWithAggregatesInput[]
    OR?: wp_commentsScalarWhereWithAggregatesInput[]
    NOT?: wp_commentsScalarWhereWithAggregatesInput | wp_commentsScalarWhereWithAggregatesInput[]
    comment_ID?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
    comment_post_ID?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
    comment_author?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_author_email?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_author_url?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_author_IP?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_date?: DateTimeWithAggregatesFilter<"wp_comments"> | Date | string
    comment_date_gmt?: DateTimeWithAggregatesFilter<"wp_comments"> | Date | string
    comment_content?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_karma?: IntWithAggregatesFilter<"wp_comments"> | number
    comment_approved?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_agent?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_type?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_parent?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
  }

  export type wp_linksWhereInput = {
    AND?: wp_linksWhereInput | wp_linksWhereInput[]
    OR?: wp_linksWhereInput[]
    NOT?: wp_linksWhereInput | wp_linksWhereInput[]
    link_id?: BigIntFilter<"wp_links"> | bigint | number
    link_url?: StringFilter<"wp_links"> | string
    link_name?: StringFilter<"wp_links"> | string
    link_image?: StringFilter<"wp_links"> | string
    link_target?: StringFilter<"wp_links"> | string
    link_description?: StringFilter<"wp_links"> | string
    link_visible?: StringFilter<"wp_links"> | string
    link_owner?: BigIntFilter<"wp_links"> | bigint | number
    link_rating?: IntFilter<"wp_links"> | number
    link_updated?: DateTimeFilter<"wp_links"> | Date | string
    link_rel?: StringFilter<"wp_links"> | string
    link_notes?: StringFilter<"wp_links"> | string
    link_rss?: StringFilter<"wp_links"> | string
  }

  export type wp_linksOrderByWithRelationInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
    _relevance?: wp_linksOrderByRelevanceInput
  }

  export type wp_linksWhereUniqueInput = Prisma.AtLeast<{
    link_id?: bigint | number
    AND?: wp_linksWhereInput | wp_linksWhereInput[]
    OR?: wp_linksWhereInput[]
    NOT?: wp_linksWhereInput | wp_linksWhereInput[]
    link_url?: StringFilter<"wp_links"> | string
    link_name?: StringFilter<"wp_links"> | string
    link_image?: StringFilter<"wp_links"> | string
    link_target?: StringFilter<"wp_links"> | string
    link_description?: StringFilter<"wp_links"> | string
    link_visible?: StringFilter<"wp_links"> | string
    link_owner?: BigIntFilter<"wp_links"> | bigint | number
    link_rating?: IntFilter<"wp_links"> | number
    link_updated?: DateTimeFilter<"wp_links"> | Date | string
    link_rel?: StringFilter<"wp_links"> | string
    link_notes?: StringFilter<"wp_links"> | string
    link_rss?: StringFilter<"wp_links"> | string
  }, "link_id">

  export type wp_linksOrderByWithAggregationInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
    _count?: wp_linksCountOrderByAggregateInput
    _avg?: wp_linksAvgOrderByAggregateInput
    _max?: wp_linksMaxOrderByAggregateInput
    _min?: wp_linksMinOrderByAggregateInput
    _sum?: wp_linksSumOrderByAggregateInput
  }

  export type wp_linksScalarWhereWithAggregatesInput = {
    AND?: wp_linksScalarWhereWithAggregatesInput | wp_linksScalarWhereWithAggregatesInput[]
    OR?: wp_linksScalarWhereWithAggregatesInput[]
    NOT?: wp_linksScalarWhereWithAggregatesInput | wp_linksScalarWhereWithAggregatesInput[]
    link_id?: BigIntWithAggregatesFilter<"wp_links"> | bigint | number
    link_url?: StringWithAggregatesFilter<"wp_links"> | string
    link_name?: StringWithAggregatesFilter<"wp_links"> | string
    link_image?: StringWithAggregatesFilter<"wp_links"> | string
    link_target?: StringWithAggregatesFilter<"wp_links"> | string
    link_description?: StringWithAggregatesFilter<"wp_links"> | string
    link_visible?: StringWithAggregatesFilter<"wp_links"> | string
    link_owner?: BigIntWithAggregatesFilter<"wp_links"> | bigint | number
    link_rating?: IntWithAggregatesFilter<"wp_links"> | number
    link_updated?: DateTimeWithAggregatesFilter<"wp_links"> | Date | string
    link_rel?: StringWithAggregatesFilter<"wp_links"> | string
    link_notes?: StringWithAggregatesFilter<"wp_links"> | string
    link_rss?: StringWithAggregatesFilter<"wp_links"> | string
  }

  export type wp_nextend2_image_storageWhereInput = {
    AND?: wp_nextend2_image_storageWhereInput | wp_nextend2_image_storageWhereInput[]
    OR?: wp_nextend2_image_storageWhereInput[]
    NOT?: wp_nextend2_image_storageWhereInput | wp_nextend2_image_storageWhereInput[]
    id?: IntFilter<"wp_nextend2_image_storage"> | number
    hash?: StringFilter<"wp_nextend2_image_storage"> | string
    image?: StringFilter<"wp_nextend2_image_storage"> | string
    value?: StringFilter<"wp_nextend2_image_storage"> | string
  }

  export type wp_nextend2_image_storageOrderByWithRelationInput = {
    id?: SortOrder
    hash?: SortOrder
    image?: SortOrder
    value?: SortOrder
    _relevance?: wp_nextend2_image_storageOrderByRelevanceInput
  }

  export type wp_nextend2_image_storageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    hash?: string
    AND?: wp_nextend2_image_storageWhereInput | wp_nextend2_image_storageWhereInput[]
    OR?: wp_nextend2_image_storageWhereInput[]
    NOT?: wp_nextend2_image_storageWhereInput | wp_nextend2_image_storageWhereInput[]
    image?: StringFilter<"wp_nextend2_image_storage"> | string
    value?: StringFilter<"wp_nextend2_image_storage"> | string
  }, "id" | "hash">

  export type wp_nextend2_image_storageOrderByWithAggregationInput = {
    id?: SortOrder
    hash?: SortOrder
    image?: SortOrder
    value?: SortOrder
    _count?: wp_nextend2_image_storageCountOrderByAggregateInput
    _avg?: wp_nextend2_image_storageAvgOrderByAggregateInput
    _max?: wp_nextend2_image_storageMaxOrderByAggregateInput
    _min?: wp_nextend2_image_storageMinOrderByAggregateInput
    _sum?: wp_nextend2_image_storageSumOrderByAggregateInput
  }

  export type wp_nextend2_image_storageScalarWhereWithAggregatesInput = {
    AND?: wp_nextend2_image_storageScalarWhereWithAggregatesInput | wp_nextend2_image_storageScalarWhereWithAggregatesInput[]
    OR?: wp_nextend2_image_storageScalarWhereWithAggregatesInput[]
    NOT?: wp_nextend2_image_storageScalarWhereWithAggregatesInput | wp_nextend2_image_storageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_nextend2_image_storage"> | number
    hash?: StringWithAggregatesFilter<"wp_nextend2_image_storage"> | string
    image?: StringWithAggregatesFilter<"wp_nextend2_image_storage"> | string
    value?: StringWithAggregatesFilter<"wp_nextend2_image_storage"> | string
  }

  export type wp_nextend2_section_storageWhereInput = {
    AND?: wp_nextend2_section_storageWhereInput | wp_nextend2_section_storageWhereInput[]
    OR?: wp_nextend2_section_storageWhereInput[]
    NOT?: wp_nextend2_section_storageWhereInput | wp_nextend2_section_storageWhereInput[]
    id?: IntFilter<"wp_nextend2_section_storage"> | number
    application?: StringFilter<"wp_nextend2_section_storage"> | string
    section?: StringFilter<"wp_nextend2_section_storage"> | string
    referencekey?: StringFilter<"wp_nextend2_section_storage"> | string
    value?: StringFilter<"wp_nextend2_section_storage"> | string
    system?: IntFilter<"wp_nextend2_section_storage"> | number
    editable?: IntFilter<"wp_nextend2_section_storage"> | number
  }

  export type wp_nextend2_section_storageOrderByWithRelationInput = {
    id?: SortOrder
    application?: SortOrder
    section?: SortOrder
    referencekey?: SortOrder
    value?: SortOrder
    system?: SortOrder
    editable?: SortOrder
    _relevance?: wp_nextend2_section_storageOrderByRelevanceInput
  }

  export type wp_nextend2_section_storageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_nextend2_section_storageWhereInput | wp_nextend2_section_storageWhereInput[]
    OR?: wp_nextend2_section_storageWhereInput[]
    NOT?: wp_nextend2_section_storageWhereInput | wp_nextend2_section_storageWhereInput[]
    application?: StringFilter<"wp_nextend2_section_storage"> | string
    section?: StringFilter<"wp_nextend2_section_storage"> | string
    referencekey?: StringFilter<"wp_nextend2_section_storage"> | string
    value?: StringFilter<"wp_nextend2_section_storage"> | string
    system?: IntFilter<"wp_nextend2_section_storage"> | number
    editable?: IntFilter<"wp_nextend2_section_storage"> | number
  }, "id">

  export type wp_nextend2_section_storageOrderByWithAggregationInput = {
    id?: SortOrder
    application?: SortOrder
    section?: SortOrder
    referencekey?: SortOrder
    value?: SortOrder
    system?: SortOrder
    editable?: SortOrder
    _count?: wp_nextend2_section_storageCountOrderByAggregateInput
    _avg?: wp_nextend2_section_storageAvgOrderByAggregateInput
    _max?: wp_nextend2_section_storageMaxOrderByAggregateInput
    _min?: wp_nextend2_section_storageMinOrderByAggregateInput
    _sum?: wp_nextend2_section_storageSumOrderByAggregateInput
  }

  export type wp_nextend2_section_storageScalarWhereWithAggregatesInput = {
    AND?: wp_nextend2_section_storageScalarWhereWithAggregatesInput | wp_nextend2_section_storageScalarWhereWithAggregatesInput[]
    OR?: wp_nextend2_section_storageScalarWhereWithAggregatesInput[]
    NOT?: wp_nextend2_section_storageScalarWhereWithAggregatesInput | wp_nextend2_section_storageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_nextend2_section_storage"> | number
    application?: StringWithAggregatesFilter<"wp_nextend2_section_storage"> | string
    section?: StringWithAggregatesFilter<"wp_nextend2_section_storage"> | string
    referencekey?: StringWithAggregatesFilter<"wp_nextend2_section_storage"> | string
    value?: StringWithAggregatesFilter<"wp_nextend2_section_storage"> | string
    system?: IntWithAggregatesFilter<"wp_nextend2_section_storage"> | number
    editable?: IntWithAggregatesFilter<"wp_nextend2_section_storage"> | number
  }

  export type wp_nextend2_smartslider3_generatorsWhereInput = {
    AND?: wp_nextend2_smartslider3_generatorsWhereInput | wp_nextend2_smartslider3_generatorsWhereInput[]
    OR?: wp_nextend2_smartslider3_generatorsWhereInput[]
    NOT?: wp_nextend2_smartslider3_generatorsWhereInput | wp_nextend2_smartslider3_generatorsWhereInput[]
    id?: IntFilter<"wp_nextend2_smartslider3_generators"> | number
    group?: StringFilter<"wp_nextend2_smartslider3_generators"> | string
    type?: StringFilter<"wp_nextend2_smartslider3_generators"> | string
    params?: StringFilter<"wp_nextend2_smartslider3_generators"> | string
  }

  export type wp_nextend2_smartslider3_generatorsOrderByWithRelationInput = {
    id?: SortOrder
    group?: SortOrder
    type?: SortOrder
    params?: SortOrder
    _relevance?: wp_nextend2_smartslider3_generatorsOrderByRelevanceInput
  }

  export type wp_nextend2_smartslider3_generatorsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_nextend2_smartslider3_generatorsWhereInput | wp_nextend2_smartslider3_generatorsWhereInput[]
    OR?: wp_nextend2_smartslider3_generatorsWhereInput[]
    NOT?: wp_nextend2_smartslider3_generatorsWhereInput | wp_nextend2_smartslider3_generatorsWhereInput[]
    group?: StringFilter<"wp_nextend2_smartslider3_generators"> | string
    type?: StringFilter<"wp_nextend2_smartslider3_generators"> | string
    params?: StringFilter<"wp_nextend2_smartslider3_generators"> | string
  }, "id">

  export type wp_nextend2_smartslider3_generatorsOrderByWithAggregationInput = {
    id?: SortOrder
    group?: SortOrder
    type?: SortOrder
    params?: SortOrder
    _count?: wp_nextend2_smartslider3_generatorsCountOrderByAggregateInput
    _avg?: wp_nextend2_smartslider3_generatorsAvgOrderByAggregateInput
    _max?: wp_nextend2_smartslider3_generatorsMaxOrderByAggregateInput
    _min?: wp_nextend2_smartslider3_generatorsMinOrderByAggregateInput
    _sum?: wp_nextend2_smartslider3_generatorsSumOrderByAggregateInput
  }

  export type wp_nextend2_smartslider3_generatorsScalarWhereWithAggregatesInput = {
    AND?: wp_nextend2_smartslider3_generatorsScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_generatorsScalarWhereWithAggregatesInput[]
    OR?: wp_nextend2_smartslider3_generatorsScalarWhereWithAggregatesInput[]
    NOT?: wp_nextend2_smartslider3_generatorsScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_generatorsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_generators"> | number
    group?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_generators"> | string
    type?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_generators"> | string
    params?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_generators"> | string
  }

  export type wp_nextend2_smartslider3_slidersWhereInput = {
    AND?: wp_nextend2_smartslider3_slidersWhereInput | wp_nextend2_smartslider3_slidersWhereInput[]
    OR?: wp_nextend2_smartslider3_slidersWhereInput[]
    NOT?: wp_nextend2_smartslider3_slidersWhereInput | wp_nextend2_smartslider3_slidersWhereInput[]
    id?: IntFilter<"wp_nextend2_smartslider3_sliders"> | number
    alias?: StringNullableFilter<"wp_nextend2_smartslider3_sliders"> | string | null
    title?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    type?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    params?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    status?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    time?: DateTimeFilter<"wp_nextend2_smartslider3_sliders"> | Date | string
    thumbnail?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    ordering?: IntFilter<"wp_nextend2_smartslider3_sliders"> | number
  }

  export type wp_nextend2_smartslider3_slidersOrderByWithRelationInput = {
    id?: SortOrder
    alias?: SortOrderInput | SortOrder
    title?: SortOrder
    type?: SortOrder
    params?: SortOrder
    status?: SortOrder
    time?: SortOrder
    thumbnail?: SortOrder
    ordering?: SortOrder
    _relevance?: wp_nextend2_smartslider3_slidersOrderByRelevanceInput
  }

  export type wp_nextend2_smartslider3_slidersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_nextend2_smartslider3_slidersWhereInput | wp_nextend2_smartslider3_slidersWhereInput[]
    OR?: wp_nextend2_smartslider3_slidersWhereInput[]
    NOT?: wp_nextend2_smartslider3_slidersWhereInput | wp_nextend2_smartslider3_slidersWhereInput[]
    alias?: StringNullableFilter<"wp_nextend2_smartslider3_sliders"> | string | null
    title?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    type?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    params?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    status?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    time?: DateTimeFilter<"wp_nextend2_smartslider3_sliders"> | Date | string
    thumbnail?: StringFilter<"wp_nextend2_smartslider3_sliders"> | string
    ordering?: IntFilter<"wp_nextend2_smartslider3_sliders"> | number
  }, "id">

  export type wp_nextend2_smartslider3_slidersOrderByWithAggregationInput = {
    id?: SortOrder
    alias?: SortOrderInput | SortOrder
    title?: SortOrder
    type?: SortOrder
    params?: SortOrder
    status?: SortOrder
    time?: SortOrder
    thumbnail?: SortOrder
    ordering?: SortOrder
    _count?: wp_nextend2_smartslider3_slidersCountOrderByAggregateInput
    _avg?: wp_nextend2_smartslider3_slidersAvgOrderByAggregateInput
    _max?: wp_nextend2_smartslider3_slidersMaxOrderByAggregateInput
    _min?: wp_nextend2_smartslider3_slidersMinOrderByAggregateInput
    _sum?: wp_nextend2_smartslider3_slidersSumOrderByAggregateInput
  }

  export type wp_nextend2_smartslider3_slidersScalarWhereWithAggregatesInput = {
    AND?: wp_nextend2_smartslider3_slidersScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_slidersScalarWhereWithAggregatesInput[]
    OR?: wp_nextend2_smartslider3_slidersScalarWhereWithAggregatesInput[]
    NOT?: wp_nextend2_smartslider3_slidersScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_slidersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | number
    alias?: StringNullableWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | string | null
    title?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | string
    type?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | string
    params?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | string
    status?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | string
    time?: DateTimeWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | Date | string
    thumbnail?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | string
    ordering?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_sliders"> | number
  }

  export type wp_nextend2_smartslider3_sliders_xrefWhereInput = {
    AND?: wp_nextend2_smartslider3_sliders_xrefWhereInput | wp_nextend2_smartslider3_sliders_xrefWhereInput[]
    OR?: wp_nextend2_smartslider3_sliders_xrefWhereInput[]
    NOT?: wp_nextend2_smartslider3_sliders_xrefWhereInput | wp_nextend2_smartslider3_sliders_xrefWhereInput[]
    group_id?: IntFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
    slider_id?: IntFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
    ordering?: IntFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
  }

  export type wp_nextend2_smartslider3_sliders_xrefOrderByWithRelationInput = {
    group_id?: SortOrder
    slider_id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_sliders_xrefWhereUniqueInput = Prisma.AtLeast<{
    group_id_slider_id?: wp_nextend2_smartslider3_sliders_xrefGroup_idSlider_idCompoundUniqueInput
    AND?: wp_nextend2_smartslider3_sliders_xrefWhereInput | wp_nextend2_smartslider3_sliders_xrefWhereInput[]
    OR?: wp_nextend2_smartslider3_sliders_xrefWhereInput[]
    NOT?: wp_nextend2_smartslider3_sliders_xrefWhereInput | wp_nextend2_smartslider3_sliders_xrefWhereInput[]
    group_id?: IntFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
    slider_id?: IntFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
    ordering?: IntFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
  }, "group_id_slider_id">

  export type wp_nextend2_smartslider3_sliders_xrefOrderByWithAggregationInput = {
    group_id?: SortOrder
    slider_id?: SortOrder
    ordering?: SortOrder
    _count?: wp_nextend2_smartslider3_sliders_xrefCountOrderByAggregateInput
    _avg?: wp_nextend2_smartslider3_sliders_xrefAvgOrderByAggregateInput
    _max?: wp_nextend2_smartslider3_sliders_xrefMaxOrderByAggregateInput
    _min?: wp_nextend2_smartslider3_sliders_xrefMinOrderByAggregateInput
    _sum?: wp_nextend2_smartslider3_sliders_xrefSumOrderByAggregateInput
  }

  export type wp_nextend2_smartslider3_sliders_xrefScalarWhereWithAggregatesInput = {
    AND?: wp_nextend2_smartslider3_sliders_xrefScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_sliders_xrefScalarWhereWithAggregatesInput[]
    OR?: wp_nextend2_smartslider3_sliders_xrefScalarWhereWithAggregatesInput[]
    NOT?: wp_nextend2_smartslider3_sliders_xrefScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_sliders_xrefScalarWhereWithAggregatesInput[]
    group_id?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
    slider_id?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
    ordering?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_sliders_xref"> | number
  }

  export type wp_nextend2_smartslider3_slidesWhereInput = {
    AND?: wp_nextend2_smartslider3_slidesWhereInput | wp_nextend2_smartslider3_slidesWhereInput[]
    OR?: wp_nextend2_smartslider3_slidesWhereInput[]
    NOT?: wp_nextend2_smartslider3_slidesWhereInput | wp_nextend2_smartslider3_slidesWhereInput[]
    id?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
    title?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    slider?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
    publish_up?: DateTimeFilter<"wp_nextend2_smartslider3_slides"> | Date | string
    publish_down?: DateTimeFilter<"wp_nextend2_smartslider3_slides"> | Date | string
    published?: BoolFilter<"wp_nextend2_smartslider3_slides"> | boolean
    first?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
    slide?: StringNullableFilter<"wp_nextend2_smartslider3_slides"> | string | null
    description?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    thumbnail?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    params?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    ordering?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
    generator_id?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
  }

  export type wp_nextend2_smartslider3_slidesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slider?: SortOrder
    publish_up?: SortOrder
    publish_down?: SortOrder
    published?: SortOrder
    first?: SortOrder
    slide?: SortOrderInput | SortOrder
    description?: SortOrder
    thumbnail?: SortOrder
    params?: SortOrder
    ordering?: SortOrder
    generator_id?: SortOrder
    _relevance?: wp_nextend2_smartslider3_slidesOrderByRelevanceInput
  }

  export type wp_nextend2_smartslider3_slidesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_nextend2_smartslider3_slidesWhereInput | wp_nextend2_smartslider3_slidesWhereInput[]
    OR?: wp_nextend2_smartslider3_slidesWhereInput[]
    NOT?: wp_nextend2_smartslider3_slidesWhereInput | wp_nextend2_smartslider3_slidesWhereInput[]
    title?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    slider?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
    publish_up?: DateTimeFilter<"wp_nextend2_smartslider3_slides"> | Date | string
    publish_down?: DateTimeFilter<"wp_nextend2_smartslider3_slides"> | Date | string
    published?: BoolFilter<"wp_nextend2_smartslider3_slides"> | boolean
    first?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
    slide?: StringNullableFilter<"wp_nextend2_smartslider3_slides"> | string | null
    description?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    thumbnail?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    params?: StringFilter<"wp_nextend2_smartslider3_slides"> | string
    ordering?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
    generator_id?: IntFilter<"wp_nextend2_smartslider3_slides"> | number
  }, "id">

  export type wp_nextend2_smartslider3_slidesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slider?: SortOrder
    publish_up?: SortOrder
    publish_down?: SortOrder
    published?: SortOrder
    first?: SortOrder
    slide?: SortOrderInput | SortOrder
    description?: SortOrder
    thumbnail?: SortOrder
    params?: SortOrder
    ordering?: SortOrder
    generator_id?: SortOrder
    _count?: wp_nextend2_smartslider3_slidesCountOrderByAggregateInput
    _avg?: wp_nextend2_smartslider3_slidesAvgOrderByAggregateInput
    _max?: wp_nextend2_smartslider3_slidesMaxOrderByAggregateInput
    _min?: wp_nextend2_smartslider3_slidesMinOrderByAggregateInput
    _sum?: wp_nextend2_smartslider3_slidesSumOrderByAggregateInput
  }

  export type wp_nextend2_smartslider3_slidesScalarWhereWithAggregatesInput = {
    AND?: wp_nextend2_smartslider3_slidesScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_slidesScalarWhereWithAggregatesInput[]
    OR?: wp_nextend2_smartslider3_slidesScalarWhereWithAggregatesInput[]
    NOT?: wp_nextend2_smartslider3_slidesScalarWhereWithAggregatesInput | wp_nextend2_smartslider3_slidesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | number
    title?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | string
    slider?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | number
    publish_up?: DateTimeWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | Date | string
    publish_down?: DateTimeWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | Date | string
    published?: BoolWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | boolean
    first?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | number
    slide?: StringNullableWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | string | null
    description?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | string
    thumbnail?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | string
    params?: StringWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | string
    ordering?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | number
    generator_id?: IntWithAggregatesFilter<"wp_nextend2_smartslider3_slides"> | number
  }

  export type wp_optionsWhereInput = {
    AND?: wp_optionsWhereInput | wp_optionsWhereInput[]
    OR?: wp_optionsWhereInput[]
    NOT?: wp_optionsWhereInput | wp_optionsWhereInput[]
    option_id?: BigIntFilter<"wp_options"> | bigint | number
    option_name?: StringFilter<"wp_options"> | string
    option_value?: StringFilter<"wp_options"> | string
    autoload?: StringFilter<"wp_options"> | string
  }

  export type wp_optionsOrderByWithRelationInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
    _relevance?: wp_optionsOrderByRelevanceInput
  }

  export type wp_optionsWhereUniqueInput = Prisma.AtLeast<{
    option_id?: bigint | number
    option_name?: string
    AND?: wp_optionsWhereInput | wp_optionsWhereInput[]
    OR?: wp_optionsWhereInput[]
    NOT?: wp_optionsWhereInput | wp_optionsWhereInput[]
    option_value?: StringFilter<"wp_options"> | string
    autoload?: StringFilter<"wp_options"> | string
  }, "option_id" | "option_name">

  export type wp_optionsOrderByWithAggregationInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
    _count?: wp_optionsCountOrderByAggregateInput
    _avg?: wp_optionsAvgOrderByAggregateInput
    _max?: wp_optionsMaxOrderByAggregateInput
    _min?: wp_optionsMinOrderByAggregateInput
    _sum?: wp_optionsSumOrderByAggregateInput
  }

  export type wp_optionsScalarWhereWithAggregatesInput = {
    AND?: wp_optionsScalarWhereWithAggregatesInput | wp_optionsScalarWhereWithAggregatesInput[]
    OR?: wp_optionsScalarWhereWithAggregatesInput[]
    NOT?: wp_optionsScalarWhereWithAggregatesInput | wp_optionsScalarWhereWithAggregatesInput[]
    option_id?: BigIntWithAggregatesFilter<"wp_options"> | bigint | number
    option_name?: StringWithAggregatesFilter<"wp_options"> | string
    option_value?: StringWithAggregatesFilter<"wp_options"> | string
    autoload?: StringWithAggregatesFilter<"wp_options"> | string
  }

  export type wp_postmetaWhereInput = {
    AND?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    OR?: wp_postmetaWhereInput[]
    NOT?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    meta_id?: BigIntFilter<"wp_postmeta"> | bigint | number
    post_id?: BigIntFilter<"wp_postmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_postmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_postmeta"> | string | null
  }

  export type wp_postmetaOrderByWithRelationInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_postmetaOrderByRelevanceInput
  }

  export type wp_postmetaWhereUniqueInput = Prisma.AtLeast<{
    meta_id?: bigint | number
    AND?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    OR?: wp_postmetaWhereInput[]
    NOT?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    post_id?: BigIntFilter<"wp_postmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_postmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_postmeta"> | string | null
  }, "meta_id">

  export type wp_postmetaOrderByWithAggregationInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_postmetaCountOrderByAggregateInput
    _avg?: wp_postmetaAvgOrderByAggregateInput
    _max?: wp_postmetaMaxOrderByAggregateInput
    _min?: wp_postmetaMinOrderByAggregateInput
    _sum?: wp_postmetaSumOrderByAggregateInput
  }

  export type wp_postmetaScalarWhereWithAggregatesInput = {
    AND?: wp_postmetaScalarWhereWithAggregatesInput | wp_postmetaScalarWhereWithAggregatesInput[]
    OR?: wp_postmetaScalarWhereWithAggregatesInput[]
    NOT?: wp_postmetaScalarWhereWithAggregatesInput | wp_postmetaScalarWhereWithAggregatesInput[]
    meta_id?: BigIntWithAggregatesFilter<"wp_postmeta"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"wp_postmeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_postmeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_postmeta"> | string | null
  }

  export type wp_postsWhereInput = {
    AND?: wp_postsWhereInput | wp_postsWhereInput[]
    OR?: wp_postsWhereInput[]
    NOT?: wp_postsWhereInput | wp_postsWhereInput[]
    ID?: BigIntFilter<"wp_posts"> | bigint | number
    post_author?: BigIntFilter<"wp_posts"> | bigint | number
    post_date?: DateTimeFilter<"wp_posts"> | Date | string
    post_date_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content?: StringFilter<"wp_posts"> | string
    post_title?: StringFilter<"wp_posts"> | string
    post_excerpt?: StringFilter<"wp_posts"> | string
    post_status?: StringFilter<"wp_posts"> | string
    comment_status?: StringFilter<"wp_posts"> | string
    ping_status?: StringFilter<"wp_posts"> | string
    post_password?: StringFilter<"wp_posts"> | string
    post_name?: StringFilter<"wp_posts"> | string
    to_ping?: StringFilter<"wp_posts"> | string
    pinged?: StringFilter<"wp_posts"> | string
    post_modified?: DateTimeFilter<"wp_posts"> | Date | string
    post_modified_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content_filtered?: StringFilter<"wp_posts"> | string
    post_parent?: BigIntFilter<"wp_posts"> | bigint | number
    guid?: StringFilter<"wp_posts"> | string
    menu_order?: IntFilter<"wp_posts"> | number
    post_type?: StringFilter<"wp_posts"> | string
    post_mime_type?: StringFilter<"wp_posts"> | string
    comment_count?: BigIntFilter<"wp_posts"> | bigint | number
  }

  export type wp_postsOrderByWithRelationInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
    _relevance?: wp_postsOrderByRelevanceInput
  }

  export type wp_postsWhereUniqueInput = Prisma.AtLeast<{
    ID?: bigint | number
    AND?: wp_postsWhereInput | wp_postsWhereInput[]
    OR?: wp_postsWhereInput[]
    NOT?: wp_postsWhereInput | wp_postsWhereInput[]
    post_author?: BigIntFilter<"wp_posts"> | bigint | number
    post_date?: DateTimeFilter<"wp_posts"> | Date | string
    post_date_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content?: StringFilter<"wp_posts"> | string
    post_title?: StringFilter<"wp_posts"> | string
    post_excerpt?: StringFilter<"wp_posts"> | string
    post_status?: StringFilter<"wp_posts"> | string
    comment_status?: StringFilter<"wp_posts"> | string
    ping_status?: StringFilter<"wp_posts"> | string
    post_password?: StringFilter<"wp_posts"> | string
    post_name?: StringFilter<"wp_posts"> | string
    to_ping?: StringFilter<"wp_posts"> | string
    pinged?: StringFilter<"wp_posts"> | string
    post_modified?: DateTimeFilter<"wp_posts"> | Date | string
    post_modified_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content_filtered?: StringFilter<"wp_posts"> | string
    post_parent?: BigIntFilter<"wp_posts"> | bigint | number
    guid?: StringFilter<"wp_posts"> | string
    menu_order?: IntFilter<"wp_posts"> | number
    post_type?: StringFilter<"wp_posts"> | string
    post_mime_type?: StringFilter<"wp_posts"> | string
    comment_count?: BigIntFilter<"wp_posts"> | bigint | number
  }, "ID">

  export type wp_postsOrderByWithAggregationInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
    _count?: wp_postsCountOrderByAggregateInput
    _avg?: wp_postsAvgOrderByAggregateInput
    _max?: wp_postsMaxOrderByAggregateInput
    _min?: wp_postsMinOrderByAggregateInput
    _sum?: wp_postsSumOrderByAggregateInput
  }

  export type wp_postsScalarWhereWithAggregatesInput = {
    AND?: wp_postsScalarWhereWithAggregatesInput | wp_postsScalarWhereWithAggregatesInput[]
    OR?: wp_postsScalarWhereWithAggregatesInput[]
    NOT?: wp_postsScalarWhereWithAggregatesInput | wp_postsScalarWhereWithAggregatesInput[]
    ID?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
    post_author?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
    post_date?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_date_gmt?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_content?: StringWithAggregatesFilter<"wp_posts"> | string
    post_title?: StringWithAggregatesFilter<"wp_posts"> | string
    post_excerpt?: StringWithAggregatesFilter<"wp_posts"> | string
    post_status?: StringWithAggregatesFilter<"wp_posts"> | string
    comment_status?: StringWithAggregatesFilter<"wp_posts"> | string
    ping_status?: StringWithAggregatesFilter<"wp_posts"> | string
    post_password?: StringWithAggregatesFilter<"wp_posts"> | string
    post_name?: StringWithAggregatesFilter<"wp_posts"> | string
    to_ping?: StringWithAggregatesFilter<"wp_posts"> | string
    pinged?: StringWithAggregatesFilter<"wp_posts"> | string
    post_modified?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_modified_gmt?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_content_filtered?: StringWithAggregatesFilter<"wp_posts"> | string
    post_parent?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
    guid?: StringWithAggregatesFilter<"wp_posts"> | string
    menu_order?: IntWithAggregatesFilter<"wp_posts"> | number
    post_type?: StringWithAggregatesFilter<"wp_posts"> | string
    post_mime_type?: StringWithAggregatesFilter<"wp_posts"> | string
    comment_count?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
  }

  export type wp_term_relationshipsWhereInput = {
    AND?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    OR?: wp_term_relationshipsWhereInput[]
    NOT?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    object_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_taxonomy_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_order?: IntFilter<"wp_term_relationships"> | number
  }

  export type wp_term_relationshipsOrderByWithRelationInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsWhereUniqueInput = Prisma.AtLeast<{
    object_id_term_taxonomy_id?: wp_term_relationshipsObject_idTerm_taxonomy_idCompoundUniqueInput
    AND?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    OR?: wp_term_relationshipsWhereInput[]
    NOT?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    object_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_taxonomy_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_order?: IntFilter<"wp_term_relationships"> | number
  }, "object_id_term_taxonomy_id">

  export type wp_term_relationshipsOrderByWithAggregationInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
    _count?: wp_term_relationshipsCountOrderByAggregateInput
    _avg?: wp_term_relationshipsAvgOrderByAggregateInput
    _max?: wp_term_relationshipsMaxOrderByAggregateInput
    _min?: wp_term_relationshipsMinOrderByAggregateInput
    _sum?: wp_term_relationshipsSumOrderByAggregateInput
  }

  export type wp_term_relationshipsScalarWhereWithAggregatesInput = {
    AND?: wp_term_relationshipsScalarWhereWithAggregatesInput | wp_term_relationshipsScalarWhereWithAggregatesInput[]
    OR?: wp_term_relationshipsScalarWhereWithAggregatesInput[]
    NOT?: wp_term_relationshipsScalarWhereWithAggregatesInput | wp_term_relationshipsScalarWhereWithAggregatesInput[]
    object_id?: BigIntWithAggregatesFilter<"wp_term_relationships"> | bigint | number
    term_taxonomy_id?: BigIntWithAggregatesFilter<"wp_term_relationships"> | bigint | number
    term_order?: IntWithAggregatesFilter<"wp_term_relationships"> | number
  }

  export type wp_term_taxonomyWhereInput = {
    AND?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    OR?: wp_term_taxonomyWhereInput[]
    NOT?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    term_taxonomy_id?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    term_id?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    taxonomy?: StringFilter<"wp_term_taxonomy"> | string
    description?: StringFilter<"wp_term_taxonomy"> | string
    parent?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    count?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
  }

  export type wp_term_taxonomyOrderByWithRelationInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
    _relevance?: wp_term_taxonomyOrderByRelevanceInput
  }

  export type wp_term_taxonomyWhereUniqueInput = Prisma.AtLeast<{
    term_taxonomy_id?: bigint | number
    term_id_taxonomy?: wp_term_taxonomyTerm_idTaxonomyCompoundUniqueInput
    AND?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    OR?: wp_term_taxonomyWhereInput[]
    NOT?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    term_id?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    taxonomy?: StringFilter<"wp_term_taxonomy"> | string
    description?: StringFilter<"wp_term_taxonomy"> | string
    parent?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    count?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
  }, "term_taxonomy_id" | "term_id_taxonomy">

  export type wp_term_taxonomyOrderByWithAggregationInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
    _count?: wp_term_taxonomyCountOrderByAggregateInput
    _avg?: wp_term_taxonomyAvgOrderByAggregateInput
    _max?: wp_term_taxonomyMaxOrderByAggregateInput
    _min?: wp_term_taxonomyMinOrderByAggregateInput
    _sum?: wp_term_taxonomySumOrderByAggregateInput
  }

  export type wp_term_taxonomyScalarWhereWithAggregatesInput = {
    AND?: wp_term_taxonomyScalarWhereWithAggregatesInput | wp_term_taxonomyScalarWhereWithAggregatesInput[]
    OR?: wp_term_taxonomyScalarWhereWithAggregatesInput[]
    NOT?: wp_term_taxonomyScalarWhereWithAggregatesInput | wp_term_taxonomyScalarWhereWithAggregatesInput[]
    term_taxonomy_id?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
    term_id?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
    taxonomy?: StringWithAggregatesFilter<"wp_term_taxonomy"> | string
    description?: StringWithAggregatesFilter<"wp_term_taxonomy"> | string
    parent?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
    count?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
  }

  export type wp_termmetaWhereInput = {
    AND?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    OR?: wp_termmetaWhereInput[]
    NOT?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    meta_id?: BigIntFilter<"wp_termmeta"> | bigint | number
    term_id?: BigIntFilter<"wp_termmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_termmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_termmeta"> | string | null
  }

  export type wp_termmetaOrderByWithRelationInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_termmetaOrderByRelevanceInput
  }

  export type wp_termmetaWhereUniqueInput = Prisma.AtLeast<{
    meta_id?: bigint | number
    AND?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    OR?: wp_termmetaWhereInput[]
    NOT?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    term_id?: BigIntFilter<"wp_termmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_termmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_termmeta"> | string | null
  }, "meta_id">

  export type wp_termmetaOrderByWithAggregationInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_termmetaCountOrderByAggregateInput
    _avg?: wp_termmetaAvgOrderByAggregateInput
    _max?: wp_termmetaMaxOrderByAggregateInput
    _min?: wp_termmetaMinOrderByAggregateInput
    _sum?: wp_termmetaSumOrderByAggregateInput
  }

  export type wp_termmetaScalarWhereWithAggregatesInput = {
    AND?: wp_termmetaScalarWhereWithAggregatesInput | wp_termmetaScalarWhereWithAggregatesInput[]
    OR?: wp_termmetaScalarWhereWithAggregatesInput[]
    NOT?: wp_termmetaScalarWhereWithAggregatesInput | wp_termmetaScalarWhereWithAggregatesInput[]
    meta_id?: BigIntWithAggregatesFilter<"wp_termmeta"> | bigint | number
    term_id?: BigIntWithAggregatesFilter<"wp_termmeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_termmeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_termmeta"> | string | null
  }

  export type wp_termsWhereInput = {
    AND?: wp_termsWhereInput | wp_termsWhereInput[]
    OR?: wp_termsWhereInput[]
    NOT?: wp_termsWhereInput | wp_termsWhereInput[]
    term_id?: BigIntFilter<"wp_terms"> | bigint | number
    name?: StringFilter<"wp_terms"> | string
    slug?: StringFilter<"wp_terms"> | string
    term_group?: BigIntFilter<"wp_terms"> | bigint | number
  }

  export type wp_termsOrderByWithRelationInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
    _relevance?: wp_termsOrderByRelevanceInput
  }

  export type wp_termsWhereUniqueInput = Prisma.AtLeast<{
    term_id?: bigint | number
    AND?: wp_termsWhereInput | wp_termsWhereInput[]
    OR?: wp_termsWhereInput[]
    NOT?: wp_termsWhereInput | wp_termsWhereInput[]
    name?: StringFilter<"wp_terms"> | string
    slug?: StringFilter<"wp_terms"> | string
    term_group?: BigIntFilter<"wp_terms"> | bigint | number
  }, "term_id">

  export type wp_termsOrderByWithAggregationInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
    _count?: wp_termsCountOrderByAggregateInput
    _avg?: wp_termsAvgOrderByAggregateInput
    _max?: wp_termsMaxOrderByAggregateInput
    _min?: wp_termsMinOrderByAggregateInput
    _sum?: wp_termsSumOrderByAggregateInput
  }

  export type wp_termsScalarWhereWithAggregatesInput = {
    AND?: wp_termsScalarWhereWithAggregatesInput | wp_termsScalarWhereWithAggregatesInput[]
    OR?: wp_termsScalarWhereWithAggregatesInput[]
    NOT?: wp_termsScalarWhereWithAggregatesInput | wp_termsScalarWhereWithAggregatesInput[]
    term_id?: BigIntWithAggregatesFilter<"wp_terms"> | bigint | number
    name?: StringWithAggregatesFilter<"wp_terms"> | string
    slug?: StringWithAggregatesFilter<"wp_terms"> | string
    term_group?: BigIntWithAggregatesFilter<"wp_terms"> | bigint | number
  }

  export type wp_um_metadataWhereInput = {
    AND?: wp_um_metadataWhereInput | wp_um_metadataWhereInput[]
    OR?: wp_um_metadataWhereInput[]
    NOT?: wp_um_metadataWhereInput | wp_um_metadataWhereInput[]
    umeta_id?: BigIntFilter<"wp_um_metadata"> | bigint | number
    user_id?: BigIntFilter<"wp_um_metadata"> | bigint | number
    um_key?: StringNullableFilter<"wp_um_metadata"> | string | null
    um_value?: StringNullableFilter<"wp_um_metadata"> | string | null
  }

  export type wp_um_metadataOrderByWithRelationInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    um_key?: SortOrderInput | SortOrder
    um_value?: SortOrderInput | SortOrder
    _relevance?: wp_um_metadataOrderByRelevanceInput
  }

  export type wp_um_metadataWhereUniqueInput = Prisma.AtLeast<{
    umeta_id?: bigint | number
    AND?: wp_um_metadataWhereInput | wp_um_metadataWhereInput[]
    OR?: wp_um_metadataWhereInput[]
    NOT?: wp_um_metadataWhereInput | wp_um_metadataWhereInput[]
    user_id?: BigIntFilter<"wp_um_metadata"> | bigint | number
    um_key?: StringNullableFilter<"wp_um_metadata"> | string | null
    um_value?: StringNullableFilter<"wp_um_metadata"> | string | null
  }, "umeta_id">

  export type wp_um_metadataOrderByWithAggregationInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    um_key?: SortOrderInput | SortOrder
    um_value?: SortOrderInput | SortOrder
    _count?: wp_um_metadataCountOrderByAggregateInput
    _avg?: wp_um_metadataAvgOrderByAggregateInput
    _max?: wp_um_metadataMaxOrderByAggregateInput
    _min?: wp_um_metadataMinOrderByAggregateInput
    _sum?: wp_um_metadataSumOrderByAggregateInput
  }

  export type wp_um_metadataScalarWhereWithAggregatesInput = {
    AND?: wp_um_metadataScalarWhereWithAggregatesInput | wp_um_metadataScalarWhereWithAggregatesInput[]
    OR?: wp_um_metadataScalarWhereWithAggregatesInput[]
    NOT?: wp_um_metadataScalarWhereWithAggregatesInput | wp_um_metadataScalarWhereWithAggregatesInput[]
    umeta_id?: BigIntWithAggregatesFilter<"wp_um_metadata"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"wp_um_metadata"> | bigint | number
    um_key?: StringNullableWithAggregatesFilter<"wp_um_metadata"> | string | null
    um_value?: StringNullableWithAggregatesFilter<"wp_um_metadata"> | string | null
  }

  export type wp_user_registration_sessionsWhereInput = {
    AND?: wp_user_registration_sessionsWhereInput | wp_user_registration_sessionsWhereInput[]
    OR?: wp_user_registration_sessionsWhereInput[]
    NOT?: wp_user_registration_sessionsWhereInput | wp_user_registration_sessionsWhereInput[]
    session_id?: BigIntFilter<"wp_user_registration_sessions"> | bigint | number
    session_key?: StringFilter<"wp_user_registration_sessions"> | string
    session_value?: StringFilter<"wp_user_registration_sessions"> | string
    session_expiry?: BigIntFilter<"wp_user_registration_sessions"> | bigint | number
  }

  export type wp_user_registration_sessionsOrderByWithRelationInput = {
    session_id?: SortOrder
    session_key?: SortOrder
    session_value?: SortOrder
    session_expiry?: SortOrder
    _relevance?: wp_user_registration_sessionsOrderByRelevanceInput
  }

  export type wp_user_registration_sessionsWhereUniqueInput = Prisma.AtLeast<{
    session_id?: bigint | number
    session_key?: string
    AND?: wp_user_registration_sessionsWhereInput | wp_user_registration_sessionsWhereInput[]
    OR?: wp_user_registration_sessionsWhereInput[]
    NOT?: wp_user_registration_sessionsWhereInput | wp_user_registration_sessionsWhereInput[]
    session_value?: StringFilter<"wp_user_registration_sessions"> | string
    session_expiry?: BigIntFilter<"wp_user_registration_sessions"> | bigint | number
  }, "session_key" | "session_id">

  export type wp_user_registration_sessionsOrderByWithAggregationInput = {
    session_id?: SortOrder
    session_key?: SortOrder
    session_value?: SortOrder
    session_expiry?: SortOrder
    _count?: wp_user_registration_sessionsCountOrderByAggregateInput
    _avg?: wp_user_registration_sessionsAvgOrderByAggregateInput
    _max?: wp_user_registration_sessionsMaxOrderByAggregateInput
    _min?: wp_user_registration_sessionsMinOrderByAggregateInput
    _sum?: wp_user_registration_sessionsSumOrderByAggregateInput
  }

  export type wp_user_registration_sessionsScalarWhereWithAggregatesInput = {
    AND?: wp_user_registration_sessionsScalarWhereWithAggregatesInput | wp_user_registration_sessionsScalarWhereWithAggregatesInput[]
    OR?: wp_user_registration_sessionsScalarWhereWithAggregatesInput[]
    NOT?: wp_user_registration_sessionsScalarWhereWithAggregatesInput | wp_user_registration_sessionsScalarWhereWithAggregatesInput[]
    session_id?: BigIntWithAggregatesFilter<"wp_user_registration_sessions"> | bigint | number
    session_key?: StringWithAggregatesFilter<"wp_user_registration_sessions"> | string
    session_value?: StringWithAggregatesFilter<"wp_user_registration_sessions"> | string
    session_expiry?: BigIntWithAggregatesFilter<"wp_user_registration_sessions"> | bigint | number
  }

  export type wp_usermetaWhereInput = {
    AND?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    OR?: wp_usermetaWhereInput[]
    NOT?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    umeta_id?: BigIntFilter<"wp_usermeta"> | bigint | number
    user_id?: BigIntFilter<"wp_usermeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_usermeta"> | string | null
    meta_value?: StringNullableFilter<"wp_usermeta"> | string | null
  }

  export type wp_usermetaOrderByWithRelationInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_usermetaOrderByRelevanceInput
  }

  export type wp_usermetaWhereUniqueInput = Prisma.AtLeast<{
    umeta_id?: bigint | number
    AND?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    OR?: wp_usermetaWhereInput[]
    NOT?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    user_id?: BigIntFilter<"wp_usermeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_usermeta"> | string | null
    meta_value?: StringNullableFilter<"wp_usermeta"> | string | null
  }, "umeta_id">

  export type wp_usermetaOrderByWithAggregationInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_usermetaCountOrderByAggregateInput
    _avg?: wp_usermetaAvgOrderByAggregateInput
    _max?: wp_usermetaMaxOrderByAggregateInput
    _min?: wp_usermetaMinOrderByAggregateInput
    _sum?: wp_usermetaSumOrderByAggregateInput
  }

  export type wp_usermetaScalarWhereWithAggregatesInput = {
    AND?: wp_usermetaScalarWhereWithAggregatesInput | wp_usermetaScalarWhereWithAggregatesInput[]
    OR?: wp_usermetaScalarWhereWithAggregatesInput[]
    NOT?: wp_usermetaScalarWhereWithAggregatesInput | wp_usermetaScalarWhereWithAggregatesInput[]
    umeta_id?: BigIntWithAggregatesFilter<"wp_usermeta"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"wp_usermeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_usermeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_usermeta"> | string | null
  }

  export type wp_usersWhereInput = {
    AND?: wp_usersWhereInput | wp_usersWhereInput[]
    OR?: wp_usersWhereInput[]
    NOT?: wp_usersWhereInput | wp_usersWhereInput[]
    ID?: BigIntFilter<"wp_users"> | bigint | number
    user_login?: StringFilter<"wp_users"> | string
    user_pass?: StringFilter<"wp_users"> | string
    user_nicename?: StringFilter<"wp_users"> | string
    user_email?: StringFilter<"wp_users"> | string
    user_url?: StringFilter<"wp_users"> | string
    user_registered?: DateTimeFilter<"wp_users"> | Date | string
    user_activation_key?: StringFilter<"wp_users"> | string
    user_status?: IntFilter<"wp_users"> | number
    display_name?: StringFilter<"wp_users"> | string
  }

  export type wp_usersOrderByWithRelationInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
    _relevance?: wp_usersOrderByRelevanceInput
  }

  export type wp_usersWhereUniqueInput = Prisma.AtLeast<{
    ID?: bigint | number
    AND?: wp_usersWhereInput | wp_usersWhereInput[]
    OR?: wp_usersWhereInput[]
    NOT?: wp_usersWhereInput | wp_usersWhereInput[]
    user_login?: StringFilter<"wp_users"> | string
    user_pass?: StringFilter<"wp_users"> | string
    user_nicename?: StringFilter<"wp_users"> | string
    user_email?: StringFilter<"wp_users"> | string
    user_url?: StringFilter<"wp_users"> | string
    user_registered?: DateTimeFilter<"wp_users"> | Date | string
    user_activation_key?: StringFilter<"wp_users"> | string
    user_status?: IntFilter<"wp_users"> | number
    display_name?: StringFilter<"wp_users"> | string
  }, "ID">

  export type wp_usersOrderByWithAggregationInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
    _count?: wp_usersCountOrderByAggregateInput
    _avg?: wp_usersAvgOrderByAggregateInput
    _max?: wp_usersMaxOrderByAggregateInput
    _min?: wp_usersMinOrderByAggregateInput
    _sum?: wp_usersSumOrderByAggregateInput
  }

  export type wp_usersScalarWhereWithAggregatesInput = {
    AND?: wp_usersScalarWhereWithAggregatesInput | wp_usersScalarWhereWithAggregatesInput[]
    OR?: wp_usersScalarWhereWithAggregatesInput[]
    NOT?: wp_usersScalarWhereWithAggregatesInput | wp_usersScalarWhereWithAggregatesInput[]
    ID?: BigIntWithAggregatesFilter<"wp_users"> | bigint | number
    user_login?: StringWithAggregatesFilter<"wp_users"> | string
    user_pass?: StringWithAggregatesFilter<"wp_users"> | string
    user_nicename?: StringWithAggregatesFilter<"wp_users"> | string
    user_email?: StringWithAggregatesFilter<"wp_users"> | string
    user_url?: StringWithAggregatesFilter<"wp_users"> | string
    user_registered?: DateTimeWithAggregatesFilter<"wp_users"> | Date | string
    user_activation_key?: StringWithAggregatesFilter<"wp_users"> | string
    user_status?: IntWithAggregatesFilter<"wp_users"> | number
    display_name?: StringWithAggregatesFilter<"wp_users"> | string
  }

  export type wp_wpdatachartsWhereInput = {
    AND?: wp_wpdatachartsWhereInput | wp_wpdatachartsWhereInput[]
    OR?: wp_wpdatachartsWhereInput[]
    NOT?: wp_wpdatachartsWhereInput | wp_wpdatachartsWhereInput[]
    id?: IntFilter<"wp_wpdatacharts"> | number
    wpdatatable_id?: IntFilter<"wp_wpdatacharts"> | number
    title?: StringFilter<"wp_wpdatacharts"> | string
    engine?: Enumwp_wpdatacharts_engineFilter<"wp_wpdatacharts"> | $Enums.wp_wpdatacharts_engine
    type?: StringFilter<"wp_wpdatacharts"> | string
    json_render_data?: StringFilter<"wp_wpdatacharts"> | string
  }

  export type wp_wpdatachartsOrderByWithRelationInput = {
    id?: SortOrder
    wpdatatable_id?: SortOrder
    title?: SortOrder
    engine?: SortOrder
    type?: SortOrder
    json_render_data?: SortOrder
    _relevance?: wp_wpdatachartsOrderByRelevanceInput
  }

  export type wp_wpdatachartsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_wpdatachartsWhereInput | wp_wpdatachartsWhereInput[]
    OR?: wp_wpdatachartsWhereInput[]
    NOT?: wp_wpdatachartsWhereInput | wp_wpdatachartsWhereInput[]
    wpdatatable_id?: IntFilter<"wp_wpdatacharts"> | number
    title?: StringFilter<"wp_wpdatacharts"> | string
    engine?: Enumwp_wpdatacharts_engineFilter<"wp_wpdatacharts"> | $Enums.wp_wpdatacharts_engine
    type?: StringFilter<"wp_wpdatacharts"> | string
    json_render_data?: StringFilter<"wp_wpdatacharts"> | string
  }, "id">

  export type wp_wpdatachartsOrderByWithAggregationInput = {
    id?: SortOrder
    wpdatatable_id?: SortOrder
    title?: SortOrder
    engine?: SortOrder
    type?: SortOrder
    json_render_data?: SortOrder
    _count?: wp_wpdatachartsCountOrderByAggregateInput
    _avg?: wp_wpdatachartsAvgOrderByAggregateInput
    _max?: wp_wpdatachartsMaxOrderByAggregateInput
    _min?: wp_wpdatachartsMinOrderByAggregateInput
    _sum?: wp_wpdatachartsSumOrderByAggregateInput
  }

  export type wp_wpdatachartsScalarWhereWithAggregatesInput = {
    AND?: wp_wpdatachartsScalarWhereWithAggregatesInput | wp_wpdatachartsScalarWhereWithAggregatesInput[]
    OR?: wp_wpdatachartsScalarWhereWithAggregatesInput[]
    NOT?: wp_wpdatachartsScalarWhereWithAggregatesInput | wp_wpdatachartsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_wpdatacharts"> | number
    wpdatatable_id?: IntWithAggregatesFilter<"wp_wpdatacharts"> | number
    title?: StringWithAggregatesFilter<"wp_wpdatacharts"> | string
    engine?: Enumwp_wpdatacharts_engineWithAggregatesFilter<"wp_wpdatacharts"> | $Enums.wp_wpdatacharts_engine
    type?: StringWithAggregatesFilter<"wp_wpdatacharts"> | string
    json_render_data?: StringWithAggregatesFilter<"wp_wpdatacharts"> | string
  }

  export type wp_wpdatatablesWhereInput = {
    AND?: wp_wpdatatablesWhereInput | wp_wpdatatablesWhereInput[]
    OR?: wp_wpdatatablesWhereInput[]
    NOT?: wp_wpdatatablesWhereInput | wp_wpdatatablesWhereInput[]
    id?: IntFilter<"wp_wpdatatables"> | number
    title?: StringFilter<"wp_wpdatatables"> | string
    show_title?: BoolFilter<"wp_wpdatatables"> | boolean
    table_type?: StringFilter<"wp_wpdatatables"> | string
    content?: StringFilter<"wp_wpdatatables"> | string
    filtering?: BoolFilter<"wp_wpdatatables"> | boolean
    filtering_form?: BoolFilter<"wp_wpdatatables"> | boolean
    sorting?: BoolFilter<"wp_wpdatatables"> | boolean
    tools?: BoolFilter<"wp_wpdatatables"> | boolean
    server_side?: BoolFilter<"wp_wpdatatables"> | boolean
    editable?: BoolFilter<"wp_wpdatatables"> | boolean
    inline_editing?: BoolFilter<"wp_wpdatatables"> | boolean
    popover_tools?: BoolFilter<"wp_wpdatatables"> | boolean
    editor_roles?: StringFilter<"wp_wpdatatables"> | string
    mysql_table_name?: StringFilter<"wp_wpdatatables"> | string
    edit_only_own_rows?: BoolFilter<"wp_wpdatatables"> | boolean
    userid_column_id?: IntFilter<"wp_wpdatatables"> | number
    display_length?: IntFilter<"wp_wpdatatables"> | number
    auto_refresh?: IntFilter<"wp_wpdatatables"> | number
    fixed_columns?: IntFilter<"wp_wpdatatables"> | number
    fixed_layout?: BoolFilter<"wp_wpdatatables"> | boolean
    responsive?: BoolFilter<"wp_wpdatatables"> | boolean
    scrollable?: BoolFilter<"wp_wpdatatables"> | boolean
    word_wrap?: BoolFilter<"wp_wpdatatables"> | boolean
    hide_before_load?: BoolFilter<"wp_wpdatatables"> | boolean
    var1?: StringFilter<"wp_wpdatatables"> | string
    var2?: StringFilter<"wp_wpdatatables"> | string
    var3?: StringFilter<"wp_wpdatatables"> | string
    tabletools_config?: StringFilter<"wp_wpdatatables"> | string
    advanced_settings?: StringFilter<"wp_wpdatatables"> | string
    connection?: StringFilter<"wp_wpdatatables"> | string
  }

  export type wp_wpdatatablesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    show_title?: SortOrder
    table_type?: SortOrder
    content?: SortOrder
    filtering?: SortOrder
    filtering_form?: SortOrder
    sorting?: SortOrder
    tools?: SortOrder
    server_side?: SortOrder
    editable?: SortOrder
    inline_editing?: SortOrder
    popover_tools?: SortOrder
    editor_roles?: SortOrder
    mysql_table_name?: SortOrder
    edit_only_own_rows?: SortOrder
    userid_column_id?: SortOrder
    display_length?: SortOrder
    auto_refresh?: SortOrder
    fixed_columns?: SortOrder
    fixed_layout?: SortOrder
    responsive?: SortOrder
    scrollable?: SortOrder
    word_wrap?: SortOrder
    hide_before_load?: SortOrder
    var1?: SortOrder
    var2?: SortOrder
    var3?: SortOrder
    tabletools_config?: SortOrder
    advanced_settings?: SortOrder
    connection?: SortOrder
    _relevance?: wp_wpdatatablesOrderByRelevanceInput
  }

  export type wp_wpdatatablesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_wpdatatablesWhereInput | wp_wpdatatablesWhereInput[]
    OR?: wp_wpdatatablesWhereInput[]
    NOT?: wp_wpdatatablesWhereInput | wp_wpdatatablesWhereInput[]
    title?: StringFilter<"wp_wpdatatables"> | string
    show_title?: BoolFilter<"wp_wpdatatables"> | boolean
    table_type?: StringFilter<"wp_wpdatatables"> | string
    content?: StringFilter<"wp_wpdatatables"> | string
    filtering?: BoolFilter<"wp_wpdatatables"> | boolean
    filtering_form?: BoolFilter<"wp_wpdatatables"> | boolean
    sorting?: BoolFilter<"wp_wpdatatables"> | boolean
    tools?: BoolFilter<"wp_wpdatatables"> | boolean
    server_side?: BoolFilter<"wp_wpdatatables"> | boolean
    editable?: BoolFilter<"wp_wpdatatables"> | boolean
    inline_editing?: BoolFilter<"wp_wpdatatables"> | boolean
    popover_tools?: BoolFilter<"wp_wpdatatables"> | boolean
    editor_roles?: StringFilter<"wp_wpdatatables"> | string
    mysql_table_name?: StringFilter<"wp_wpdatatables"> | string
    edit_only_own_rows?: BoolFilter<"wp_wpdatatables"> | boolean
    userid_column_id?: IntFilter<"wp_wpdatatables"> | number
    display_length?: IntFilter<"wp_wpdatatables"> | number
    auto_refresh?: IntFilter<"wp_wpdatatables"> | number
    fixed_columns?: IntFilter<"wp_wpdatatables"> | number
    fixed_layout?: BoolFilter<"wp_wpdatatables"> | boolean
    responsive?: BoolFilter<"wp_wpdatatables"> | boolean
    scrollable?: BoolFilter<"wp_wpdatatables"> | boolean
    word_wrap?: BoolFilter<"wp_wpdatatables"> | boolean
    hide_before_load?: BoolFilter<"wp_wpdatatables"> | boolean
    var1?: StringFilter<"wp_wpdatatables"> | string
    var2?: StringFilter<"wp_wpdatatables"> | string
    var3?: StringFilter<"wp_wpdatatables"> | string
    tabletools_config?: StringFilter<"wp_wpdatatables"> | string
    advanced_settings?: StringFilter<"wp_wpdatatables"> | string
    connection?: StringFilter<"wp_wpdatatables"> | string
  }, "id">

  export type wp_wpdatatablesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    show_title?: SortOrder
    table_type?: SortOrder
    content?: SortOrder
    filtering?: SortOrder
    filtering_form?: SortOrder
    sorting?: SortOrder
    tools?: SortOrder
    server_side?: SortOrder
    editable?: SortOrder
    inline_editing?: SortOrder
    popover_tools?: SortOrder
    editor_roles?: SortOrder
    mysql_table_name?: SortOrder
    edit_only_own_rows?: SortOrder
    userid_column_id?: SortOrder
    display_length?: SortOrder
    auto_refresh?: SortOrder
    fixed_columns?: SortOrder
    fixed_layout?: SortOrder
    responsive?: SortOrder
    scrollable?: SortOrder
    word_wrap?: SortOrder
    hide_before_load?: SortOrder
    var1?: SortOrder
    var2?: SortOrder
    var3?: SortOrder
    tabletools_config?: SortOrder
    advanced_settings?: SortOrder
    connection?: SortOrder
    _count?: wp_wpdatatablesCountOrderByAggregateInput
    _avg?: wp_wpdatatablesAvgOrderByAggregateInput
    _max?: wp_wpdatatablesMaxOrderByAggregateInput
    _min?: wp_wpdatatablesMinOrderByAggregateInput
    _sum?: wp_wpdatatablesSumOrderByAggregateInput
  }

  export type wp_wpdatatablesScalarWhereWithAggregatesInput = {
    AND?: wp_wpdatatablesScalarWhereWithAggregatesInput | wp_wpdatatablesScalarWhereWithAggregatesInput[]
    OR?: wp_wpdatatablesScalarWhereWithAggregatesInput[]
    NOT?: wp_wpdatatablesScalarWhereWithAggregatesInput | wp_wpdatatablesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_wpdatatables"> | number
    title?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    show_title?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    table_type?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    content?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    filtering?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    filtering_form?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    sorting?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    tools?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    server_side?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    editable?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    inline_editing?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    popover_tools?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    editor_roles?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    mysql_table_name?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    edit_only_own_rows?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    userid_column_id?: IntWithAggregatesFilter<"wp_wpdatatables"> | number
    display_length?: IntWithAggregatesFilter<"wp_wpdatatables"> | number
    auto_refresh?: IntWithAggregatesFilter<"wp_wpdatatables"> | number
    fixed_columns?: IntWithAggregatesFilter<"wp_wpdatatables"> | number
    fixed_layout?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    responsive?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    scrollable?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    word_wrap?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    hide_before_load?: BoolWithAggregatesFilter<"wp_wpdatatables"> | boolean
    var1?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    var2?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    var3?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    tabletools_config?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    advanced_settings?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
    connection?: StringWithAggregatesFilter<"wp_wpdatatables"> | string
  }

  export type wp_wpdatatables_columnsWhereInput = {
    AND?: wp_wpdatatables_columnsWhereInput | wp_wpdatatables_columnsWhereInput[]
    OR?: wp_wpdatatables_columnsWhereInput[]
    NOT?: wp_wpdatatables_columnsWhereInput | wp_wpdatatables_columnsWhereInput[]
    id?: IntFilter<"wp_wpdatatables_columns"> | number
    table_id?: IntFilter<"wp_wpdatatables_columns"> | number
    orig_header?: StringFilter<"wp_wpdatatables_columns"> | string
    display_header?: StringFilter<"wp_wpdatatables_columns"> | string
    filter_type?: Enumwp_wpdatatables_columns_filter_typeFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_filter_type
    column_type?: Enumwp_wpdatatables_columns_column_typeFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_column_type
    input_type?: Enumwp_wpdatatables_columns_input_typeFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    id_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    group_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    sort_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    hide_on_phones?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    hide_on_tablets?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    visible?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    sum_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    skip_thousands_separator?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    width?: StringFilter<"wp_wpdatatables_columns"> | string
    possible_values?: StringFilter<"wp_wpdatatables_columns"> | string
    default_value?: StringFilter<"wp_wpdatatables_columns"> | string
    css_class?: StringFilter<"wp_wpdatatables_columns"> | string
    text_before?: StringFilter<"wp_wpdatatables_columns"> | string
    text_after?: StringFilter<"wp_wpdatatables_columns"> | string
    formatting_rules?: StringFilter<"wp_wpdatatables_columns"> | string
    calc_formula?: StringFilter<"wp_wpdatatables_columns"> | string
    color?: StringFilter<"wp_wpdatatables_columns"> | string
    advanced_settings?: StringFilter<"wp_wpdatatables_columns"> | string
    pos?: IntFilter<"wp_wpdatatables_columns"> | number
  }

  export type wp_wpdatatables_columnsOrderByWithRelationInput = {
    id?: SortOrder
    table_id?: SortOrder
    orig_header?: SortOrder
    display_header?: SortOrder
    filter_type?: SortOrder
    column_type?: SortOrder
    input_type?: SortOrder
    input_mandatory?: SortOrder
    id_column?: SortOrder
    group_column?: SortOrder
    sort_column?: SortOrder
    hide_on_phones?: SortOrder
    hide_on_tablets?: SortOrder
    visible?: SortOrder
    sum_column?: SortOrder
    skip_thousands_separator?: SortOrder
    width?: SortOrder
    possible_values?: SortOrder
    default_value?: SortOrder
    css_class?: SortOrder
    text_before?: SortOrder
    text_after?: SortOrder
    formatting_rules?: SortOrder
    calc_formula?: SortOrder
    color?: SortOrder
    advanced_settings?: SortOrder
    pos?: SortOrder
    _relevance?: wp_wpdatatables_columnsOrderByRelevanceInput
  }

  export type wp_wpdatatables_columnsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_wpdatatables_columnsWhereInput | wp_wpdatatables_columnsWhereInput[]
    OR?: wp_wpdatatables_columnsWhereInput[]
    NOT?: wp_wpdatatables_columnsWhereInput | wp_wpdatatables_columnsWhereInput[]
    table_id?: IntFilter<"wp_wpdatatables_columns"> | number
    orig_header?: StringFilter<"wp_wpdatatables_columns"> | string
    display_header?: StringFilter<"wp_wpdatatables_columns"> | string
    filter_type?: Enumwp_wpdatatables_columns_filter_typeFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_filter_type
    column_type?: Enumwp_wpdatatables_columns_column_typeFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_column_type
    input_type?: Enumwp_wpdatatables_columns_input_typeFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    id_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    group_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    sort_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    hide_on_phones?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    hide_on_tablets?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    visible?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    sum_column?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    skip_thousands_separator?: BoolFilter<"wp_wpdatatables_columns"> | boolean
    width?: StringFilter<"wp_wpdatatables_columns"> | string
    possible_values?: StringFilter<"wp_wpdatatables_columns"> | string
    default_value?: StringFilter<"wp_wpdatatables_columns"> | string
    css_class?: StringFilter<"wp_wpdatatables_columns"> | string
    text_before?: StringFilter<"wp_wpdatatables_columns"> | string
    text_after?: StringFilter<"wp_wpdatatables_columns"> | string
    formatting_rules?: StringFilter<"wp_wpdatatables_columns"> | string
    calc_formula?: StringFilter<"wp_wpdatatables_columns"> | string
    color?: StringFilter<"wp_wpdatatables_columns"> | string
    advanced_settings?: StringFilter<"wp_wpdatatables_columns"> | string
    pos?: IntFilter<"wp_wpdatatables_columns"> | number
  }, "id">

  export type wp_wpdatatables_columnsOrderByWithAggregationInput = {
    id?: SortOrder
    table_id?: SortOrder
    orig_header?: SortOrder
    display_header?: SortOrder
    filter_type?: SortOrder
    column_type?: SortOrder
    input_type?: SortOrder
    input_mandatory?: SortOrder
    id_column?: SortOrder
    group_column?: SortOrder
    sort_column?: SortOrder
    hide_on_phones?: SortOrder
    hide_on_tablets?: SortOrder
    visible?: SortOrder
    sum_column?: SortOrder
    skip_thousands_separator?: SortOrder
    width?: SortOrder
    possible_values?: SortOrder
    default_value?: SortOrder
    css_class?: SortOrder
    text_before?: SortOrder
    text_after?: SortOrder
    formatting_rules?: SortOrder
    calc_formula?: SortOrder
    color?: SortOrder
    advanced_settings?: SortOrder
    pos?: SortOrder
    _count?: wp_wpdatatables_columnsCountOrderByAggregateInput
    _avg?: wp_wpdatatables_columnsAvgOrderByAggregateInput
    _max?: wp_wpdatatables_columnsMaxOrderByAggregateInput
    _min?: wp_wpdatatables_columnsMinOrderByAggregateInput
    _sum?: wp_wpdatatables_columnsSumOrderByAggregateInput
  }

  export type wp_wpdatatables_columnsScalarWhereWithAggregatesInput = {
    AND?: wp_wpdatatables_columnsScalarWhereWithAggregatesInput | wp_wpdatatables_columnsScalarWhereWithAggregatesInput[]
    OR?: wp_wpdatatables_columnsScalarWhereWithAggregatesInput[]
    NOT?: wp_wpdatatables_columnsScalarWhereWithAggregatesInput | wp_wpdatatables_columnsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_wpdatatables_columns"> | number
    table_id?: IntWithAggregatesFilter<"wp_wpdatatables_columns"> | number
    orig_header?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    display_header?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    filter_type?: Enumwp_wpdatatables_columns_filter_typeWithAggregatesFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_filter_type
    column_type?: Enumwp_wpdatatables_columns_column_typeWithAggregatesFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_column_type
    input_type?: Enumwp_wpdatatables_columns_input_typeWithAggregatesFilter<"wp_wpdatatables_columns"> | $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    id_column?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    group_column?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    sort_column?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    hide_on_phones?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    hide_on_tablets?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    visible?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    sum_column?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    skip_thousands_separator?: BoolWithAggregatesFilter<"wp_wpdatatables_columns"> | boolean
    width?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    possible_values?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    default_value?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    css_class?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    text_before?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    text_after?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    formatting_rules?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    calc_formula?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    color?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    advanced_settings?: StringWithAggregatesFilter<"wp_wpdatatables_columns"> | string
    pos?: IntWithAggregatesFilter<"wp_wpdatatables_columns"> | number
  }

  export type wp_wpdatatables_rowsWhereInput = {
    AND?: wp_wpdatatables_rowsWhereInput | wp_wpdatatables_rowsWhereInput[]
    OR?: wp_wpdatatables_rowsWhereInput[]
    NOT?: wp_wpdatatables_rowsWhereInput | wp_wpdatatables_rowsWhereInput[]
    id?: IntFilter<"wp_wpdatatables_rows"> | number
    table_id?: IntFilter<"wp_wpdatatables_rows"> | number
    data?: StringFilter<"wp_wpdatatables_rows"> | string
  }

  export type wp_wpdatatables_rowsOrderByWithRelationInput = {
    id?: SortOrder
    table_id?: SortOrder
    data?: SortOrder
    _relevance?: wp_wpdatatables_rowsOrderByRelevanceInput
  }

  export type wp_wpdatatables_rowsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_wpdatatables_rowsWhereInput | wp_wpdatatables_rowsWhereInput[]
    OR?: wp_wpdatatables_rowsWhereInput[]
    NOT?: wp_wpdatatables_rowsWhereInput | wp_wpdatatables_rowsWhereInput[]
    table_id?: IntFilter<"wp_wpdatatables_rows"> | number
    data?: StringFilter<"wp_wpdatatables_rows"> | string
  }, "id">

  export type wp_wpdatatables_rowsOrderByWithAggregationInput = {
    id?: SortOrder
    table_id?: SortOrder
    data?: SortOrder
    _count?: wp_wpdatatables_rowsCountOrderByAggregateInput
    _avg?: wp_wpdatatables_rowsAvgOrderByAggregateInput
    _max?: wp_wpdatatables_rowsMaxOrderByAggregateInput
    _min?: wp_wpdatatables_rowsMinOrderByAggregateInput
    _sum?: wp_wpdatatables_rowsSumOrderByAggregateInput
  }

  export type wp_wpdatatables_rowsScalarWhereWithAggregatesInput = {
    AND?: wp_wpdatatables_rowsScalarWhereWithAggregatesInput | wp_wpdatatables_rowsScalarWhereWithAggregatesInput[]
    OR?: wp_wpdatatables_rowsScalarWhereWithAggregatesInput[]
    NOT?: wp_wpdatatables_rowsScalarWhereWithAggregatesInput | wp_wpdatatables_rowsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_wpdatatables_rows"> | number
    table_id?: IntWithAggregatesFilter<"wp_wpdatatables_rows"> | number
    data?: StringWithAggregatesFilter<"wp_wpdatatables_rows"> | string
  }

  export type wp_wpforms_tasks_metaWhereInput = {
    AND?: wp_wpforms_tasks_metaWhereInput | wp_wpforms_tasks_metaWhereInput[]
    OR?: wp_wpforms_tasks_metaWhereInput[]
    NOT?: wp_wpforms_tasks_metaWhereInput | wp_wpforms_tasks_metaWhereInput[]
    id?: BigIntFilter<"wp_wpforms_tasks_meta"> | bigint | number
    action?: StringFilter<"wp_wpforms_tasks_meta"> | string
    data?: StringFilter<"wp_wpforms_tasks_meta"> | string
    date?: DateTimeFilter<"wp_wpforms_tasks_meta"> | Date | string
  }

  export type wp_wpforms_tasks_metaOrderByWithRelationInput = {
    id?: SortOrder
    action?: SortOrder
    data?: SortOrder
    date?: SortOrder
    _relevance?: wp_wpforms_tasks_metaOrderByRelevanceInput
  }

  export type wp_wpforms_tasks_metaWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_wpforms_tasks_metaWhereInput | wp_wpforms_tasks_metaWhereInput[]
    OR?: wp_wpforms_tasks_metaWhereInput[]
    NOT?: wp_wpforms_tasks_metaWhereInput | wp_wpforms_tasks_metaWhereInput[]
    action?: StringFilter<"wp_wpforms_tasks_meta"> | string
    data?: StringFilter<"wp_wpforms_tasks_meta"> | string
    date?: DateTimeFilter<"wp_wpforms_tasks_meta"> | Date | string
  }, "id">

  export type wp_wpforms_tasks_metaOrderByWithAggregationInput = {
    id?: SortOrder
    action?: SortOrder
    data?: SortOrder
    date?: SortOrder
    _count?: wp_wpforms_tasks_metaCountOrderByAggregateInput
    _avg?: wp_wpforms_tasks_metaAvgOrderByAggregateInput
    _max?: wp_wpforms_tasks_metaMaxOrderByAggregateInput
    _min?: wp_wpforms_tasks_metaMinOrderByAggregateInput
    _sum?: wp_wpforms_tasks_metaSumOrderByAggregateInput
  }

  export type wp_wpforms_tasks_metaScalarWhereWithAggregatesInput = {
    AND?: wp_wpforms_tasks_metaScalarWhereWithAggregatesInput | wp_wpforms_tasks_metaScalarWhereWithAggregatesInput[]
    OR?: wp_wpforms_tasks_metaScalarWhereWithAggregatesInput[]
    NOT?: wp_wpforms_tasks_metaScalarWhereWithAggregatesInput | wp_wpforms_tasks_metaScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_wpforms_tasks_meta"> | bigint | number
    action?: StringWithAggregatesFilter<"wp_wpforms_tasks_meta"> | string
    data?: StringWithAggregatesFilter<"wp_wpforms_tasks_meta"> | string
    date?: DateTimeWithAggregatesFilter<"wp_wpforms_tasks_meta"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    profileImage?: StringNullableFilter<"User"> | string | null
    plan?: IntFilter<"User"> | number
    role?: StringFilter<"User"> | string
    stripeId?: StringNullableFilter<"User"> | string | null
    customerId?: StringNullableFilter<"User"> | string | null
    planId?: StringNullableFilter<"User"> | string | null
    planName?: StringNullableFilter<"User"> | string | null
    subscriptionId?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailUpdate?: StringFilter<"User"> | string
    isPaid?: BoolNullableFilter<"User"> | boolean | null
    Portfolio?: PortfolioListRelationFilter
    ticketComments?: TicketCommentListRelationFilter
    tickets?: TicketListRelationFilter
    UserSubscription?: UserSubscriptionListRelationFilter
    search?: SearchListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    profileImage?: SortOrderInput | SortOrder
    plan?: SortOrder
    role?: SortOrder
    stripeId?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    planId?: SortOrderInput | SortOrder
    planName?: SortOrderInput | SortOrder
    subscriptionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    emailUpdate?: SortOrder
    isPaid?: SortOrderInput | SortOrder
    Portfolio?: PortfolioOrderByRelationAggregateInput
    ticketComments?: TicketCommentOrderByRelationAggregateInput
    tickets?: TicketOrderByRelationAggregateInput
    UserSubscription?: UserSubscriptionOrderByRelationAggregateInput
    search?: SearchOrderByRelationAggregateInput
    _relevance?: UserOrderByRelevanceInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    isActive?: BoolFilter<"User"> | boolean
    profileImage?: StringNullableFilter<"User"> | string | null
    plan?: IntFilter<"User"> | number
    role?: StringFilter<"User"> | string
    stripeId?: StringNullableFilter<"User"> | string | null
    customerId?: StringNullableFilter<"User"> | string | null
    planId?: StringNullableFilter<"User"> | string | null
    planName?: StringNullableFilter<"User"> | string | null
    subscriptionId?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    emailUpdate?: StringFilter<"User"> | string
    isPaid?: BoolNullableFilter<"User"> | boolean | null
    Portfolio?: PortfolioListRelationFilter
    ticketComments?: TicketCommentListRelationFilter
    tickets?: TicketListRelationFilter
    UserSubscription?: UserSubscriptionListRelationFilter
    search?: SearchListRelationFilter
  }, "id">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    profileImage?: SortOrderInput | SortOrder
    plan?: SortOrder
    role?: SortOrder
    stripeId?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    planId?: SortOrderInput | SortOrder
    planName?: SortOrderInput | SortOrder
    subscriptionId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    emailUpdate?: SortOrder
    isPaid?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    profileImage?: StringNullableWithAggregatesFilter<"User"> | string | null
    plan?: IntWithAggregatesFilter<"User"> | number
    role?: StringWithAggregatesFilter<"User"> | string
    stripeId?: StringNullableWithAggregatesFilter<"User"> | string | null
    customerId?: StringNullableWithAggregatesFilter<"User"> | string | null
    planId?: StringNullableWithAggregatesFilter<"User"> | string | null
    planName?: StringNullableWithAggregatesFilter<"User"> | string | null
    subscriptionId?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    emailUpdate?: StringWithAggregatesFilter<"User"> | string
    isPaid?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
  }

  export type TicketWhereInput = {
    AND?: TicketWhereInput | TicketWhereInput[]
    OR?: TicketWhereInput[]
    NOT?: TicketWhereInput | TicketWhereInput[]
    id?: IntFilter<"Ticket"> | number
    userId?: IntFilter<"Ticket"> | number
    title?: StringFilter<"Ticket"> | string
    description?: StringFilter<"Ticket"> | string
    status?: StringFilter<"Ticket"> | string
    createdAt?: DateTimeFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    comments?: TicketCommentListRelationFilter
    documents?: TicketDocumentListRelationFilter
    postedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type TicketOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    comments?: TicketCommentOrderByRelationAggregateInput
    documents?: TicketDocumentOrderByRelationAggregateInput
    postedBy?: UserOrderByWithRelationInput
    _relevance?: TicketOrderByRelevanceInput
  }

  export type TicketWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TicketWhereInput | TicketWhereInput[]
    OR?: TicketWhereInput[]
    NOT?: TicketWhereInput | TicketWhereInput[]
    userId?: IntFilter<"Ticket"> | number
    title?: StringFilter<"Ticket"> | string
    description?: StringFilter<"Ticket"> | string
    status?: StringFilter<"Ticket"> | string
    createdAt?: DateTimeFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    comments?: TicketCommentListRelationFilter
    documents?: TicketDocumentListRelationFilter
    postedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type TicketOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: TicketCountOrderByAggregateInput
    _avg?: TicketAvgOrderByAggregateInput
    _max?: TicketMaxOrderByAggregateInput
    _min?: TicketMinOrderByAggregateInput
    _sum?: TicketSumOrderByAggregateInput
  }

  export type TicketScalarWhereWithAggregatesInput = {
    AND?: TicketScalarWhereWithAggregatesInput | TicketScalarWhereWithAggregatesInput[]
    OR?: TicketScalarWhereWithAggregatesInput[]
    NOT?: TicketScalarWhereWithAggregatesInput | TicketScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Ticket"> | number
    userId?: IntWithAggregatesFilter<"Ticket"> | number
    title?: StringWithAggregatesFilter<"Ticket"> | string
    description?: StringWithAggregatesFilter<"Ticket"> | string
    status?: StringWithAggregatesFilter<"Ticket"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Ticket"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Ticket"> | Date | string | null
  }

  export type TicketDocumentWhereInput = {
    AND?: TicketDocumentWhereInput | TicketDocumentWhereInput[]
    OR?: TicketDocumentWhereInput[]
    NOT?: TicketDocumentWhereInput | TicketDocumentWhereInput[]
    id?: IntFilter<"TicketDocument"> | number
    url?: StringFilter<"TicketDocument"> | string
    name?: StringFilter<"TicketDocument"> | string
    size?: IntFilter<"TicketDocument"> | number
    createdAt?: DateTimeFilter<"TicketDocument"> | Date | string
    updatedAt?: DateTimeNullableFilter<"TicketDocument"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"TicketDocument"> | Date | string | null
    ticketId?: IntFilter<"TicketDocument"> | number
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
  }

  export type TicketDocumentOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    name?: SortOrder
    size?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    ticketId?: SortOrder
    ticket?: TicketOrderByWithRelationInput
    _relevance?: TicketDocumentOrderByRelevanceInput
  }

  export type TicketDocumentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TicketDocumentWhereInput | TicketDocumentWhereInput[]
    OR?: TicketDocumentWhereInput[]
    NOT?: TicketDocumentWhereInput | TicketDocumentWhereInput[]
    url?: StringFilter<"TicketDocument"> | string
    name?: StringFilter<"TicketDocument"> | string
    size?: IntFilter<"TicketDocument"> | number
    createdAt?: DateTimeFilter<"TicketDocument"> | Date | string
    updatedAt?: DateTimeNullableFilter<"TicketDocument"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"TicketDocument"> | Date | string | null
    ticketId?: IntFilter<"TicketDocument"> | number
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
  }, "id">

  export type TicketDocumentOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    name?: SortOrder
    size?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    ticketId?: SortOrder
    _count?: TicketDocumentCountOrderByAggregateInput
    _avg?: TicketDocumentAvgOrderByAggregateInput
    _max?: TicketDocumentMaxOrderByAggregateInput
    _min?: TicketDocumentMinOrderByAggregateInput
    _sum?: TicketDocumentSumOrderByAggregateInput
  }

  export type TicketDocumentScalarWhereWithAggregatesInput = {
    AND?: TicketDocumentScalarWhereWithAggregatesInput | TicketDocumentScalarWhereWithAggregatesInput[]
    OR?: TicketDocumentScalarWhereWithAggregatesInput[]
    NOT?: TicketDocumentScalarWhereWithAggregatesInput | TicketDocumentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TicketDocument"> | number
    url?: StringWithAggregatesFilter<"TicketDocument"> | string
    name?: StringWithAggregatesFilter<"TicketDocument"> | string
    size?: IntWithAggregatesFilter<"TicketDocument"> | number
    createdAt?: DateTimeWithAggregatesFilter<"TicketDocument"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TicketDocument"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TicketDocument"> | Date | string | null
    ticketId?: IntWithAggregatesFilter<"TicketDocument"> | number
  }

  export type TicketCommentWhereInput = {
    AND?: TicketCommentWhereInput | TicketCommentWhereInput[]
    OR?: TicketCommentWhereInput[]
    NOT?: TicketCommentWhereInput | TicketCommentWhereInput[]
    id?: IntFilter<"TicketComment"> | number
    text?: StringFilter<"TicketComment"> | string
    ticketId?: IntFilter<"TicketComment"> | number
    userId?: IntFilter<"TicketComment"> | number
    createdAt?: DateTimeFilter<"TicketComment"> | Date | string
    updatedAt?: DateTimeNullableFilter<"TicketComment"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"TicketComment"> | Date | string | null
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    postedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type TicketCommentOrderByWithRelationInput = {
    id?: SortOrder
    text?: SortOrder
    ticketId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    ticket?: TicketOrderByWithRelationInput
    postedBy?: UserOrderByWithRelationInput
    _relevance?: TicketCommentOrderByRelevanceInput
  }

  export type TicketCommentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TicketCommentWhereInput | TicketCommentWhereInput[]
    OR?: TicketCommentWhereInput[]
    NOT?: TicketCommentWhereInput | TicketCommentWhereInput[]
    text?: StringFilter<"TicketComment"> | string
    ticketId?: IntFilter<"TicketComment"> | number
    userId?: IntFilter<"TicketComment"> | number
    createdAt?: DateTimeFilter<"TicketComment"> | Date | string
    updatedAt?: DateTimeNullableFilter<"TicketComment"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"TicketComment"> | Date | string | null
    ticket?: XOR<TicketScalarRelationFilter, TicketWhereInput>
    postedBy?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type TicketCommentOrderByWithAggregationInput = {
    id?: SortOrder
    text?: SortOrder
    ticketId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: TicketCommentCountOrderByAggregateInput
    _avg?: TicketCommentAvgOrderByAggregateInput
    _max?: TicketCommentMaxOrderByAggregateInput
    _min?: TicketCommentMinOrderByAggregateInput
    _sum?: TicketCommentSumOrderByAggregateInput
  }

  export type TicketCommentScalarWhereWithAggregatesInput = {
    AND?: TicketCommentScalarWhereWithAggregatesInput | TicketCommentScalarWhereWithAggregatesInput[]
    OR?: TicketCommentScalarWhereWithAggregatesInput[]
    NOT?: TicketCommentScalarWhereWithAggregatesInput | TicketCommentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TicketComment"> | number
    text?: StringWithAggregatesFilter<"TicketComment"> | string
    ticketId?: IntWithAggregatesFilter<"TicketComment"> | number
    userId?: IntWithAggregatesFilter<"TicketComment"> | number
    createdAt?: DateTimeWithAggregatesFilter<"TicketComment"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"TicketComment"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"TicketComment"> | Date | string | null
  }

  export type UserSubscriptionWhereInput = {
    AND?: UserSubscriptionWhereInput | UserSubscriptionWhereInput[]
    OR?: UserSubscriptionWhereInput[]
    NOT?: UserSubscriptionWhereInput | UserSubscriptionWhereInput[]
    id?: IntFilter<"UserSubscription"> | number
    userId?: IntFilter<"UserSubscription"> | number
    subscriptionId?: StringFilter<"UserSubscription"> | string
    createdAt?: DateTimeFilter<"UserSubscription"> | Date | string
    updatedAt?: DateTimeNullableFilter<"UserSubscription"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"UserSubscription"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type UserSubscriptionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: UserSubscriptionOrderByRelevanceInput
  }

  export type UserSubscriptionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UserSubscriptionWhereInput | UserSubscriptionWhereInput[]
    OR?: UserSubscriptionWhereInput[]
    NOT?: UserSubscriptionWhereInput | UserSubscriptionWhereInput[]
    userId?: IntFilter<"UserSubscription"> | number
    subscriptionId?: StringFilter<"UserSubscription"> | string
    createdAt?: DateTimeFilter<"UserSubscription"> | Date | string
    updatedAt?: DateTimeNullableFilter<"UserSubscription"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"UserSubscription"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type UserSubscriptionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: UserSubscriptionCountOrderByAggregateInput
    _avg?: UserSubscriptionAvgOrderByAggregateInput
    _max?: UserSubscriptionMaxOrderByAggregateInput
    _min?: UserSubscriptionMinOrderByAggregateInput
    _sum?: UserSubscriptionSumOrderByAggregateInput
  }

  export type UserSubscriptionScalarWhereWithAggregatesInput = {
    AND?: UserSubscriptionScalarWhereWithAggregatesInput | UserSubscriptionScalarWhereWithAggregatesInput[]
    OR?: UserSubscriptionScalarWhereWithAggregatesInput[]
    NOT?: UserSubscriptionScalarWhereWithAggregatesInput | UserSubscriptionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UserSubscription"> | number
    userId?: IntWithAggregatesFilter<"UserSubscription"> | number
    subscriptionId?: StringWithAggregatesFilter<"UserSubscription"> | string
    createdAt?: DateTimeWithAggregatesFilter<"UserSubscription"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"UserSubscription"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"UserSubscription"> | Date | string | null
  }

  export type PortfolioWhereInput = {
    AND?: PortfolioWhereInput | PortfolioWhereInput[]
    OR?: PortfolioWhereInput[]
    NOT?: PortfolioWhereInput | PortfolioWhereInput[]
    id?: IntFilter<"Portfolio"> | number
    userId?: IntFilter<"Portfolio"> | number
    name?: StringFilter<"Portfolio"> | string
    filters?: JsonFilter<"Portfolio">
    tableName?: StringFilter<"Portfolio"> | string
    createdAt?: DateTimeFilter<"Portfolio"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Portfolio"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Portfolio"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type PortfolioOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    filters?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: PortfolioOrderByRelevanceInput
  }

  export type PortfolioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PortfolioWhereInput | PortfolioWhereInput[]
    OR?: PortfolioWhereInput[]
    NOT?: PortfolioWhereInput | PortfolioWhereInput[]
    userId?: IntFilter<"Portfolio"> | number
    name?: StringFilter<"Portfolio"> | string
    filters?: JsonFilter<"Portfolio">
    tableName?: StringFilter<"Portfolio"> | string
    createdAt?: DateTimeFilter<"Portfolio"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Portfolio"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Portfolio"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type PortfolioOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    filters?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: PortfolioCountOrderByAggregateInput
    _avg?: PortfolioAvgOrderByAggregateInput
    _max?: PortfolioMaxOrderByAggregateInput
    _min?: PortfolioMinOrderByAggregateInput
    _sum?: PortfolioSumOrderByAggregateInput
  }

  export type PortfolioScalarWhereWithAggregatesInput = {
    AND?: PortfolioScalarWhereWithAggregatesInput | PortfolioScalarWhereWithAggregatesInput[]
    OR?: PortfolioScalarWhereWithAggregatesInput[]
    NOT?: PortfolioScalarWhereWithAggregatesInput | PortfolioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Portfolio"> | number
    userId?: IntWithAggregatesFilter<"Portfolio"> | number
    name?: StringWithAggregatesFilter<"Portfolio"> | string
    filters?: JsonWithAggregatesFilter<"Portfolio">
    tableName?: StringWithAggregatesFilter<"Portfolio"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Portfolio"> | Date | string
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Portfolio"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Portfolio"> | Date | string | null
  }

  export type sentenceallviewWhereInput = {
    AND?: sentenceallviewWhereInput | sentenceallviewWhereInput[]
    OR?: sentenceallviewWhereInput[]
    NOT?: sentenceallviewWhereInput | sentenceallviewWhereInput[]
    id?: IntFilter<"sentenceallview"> | number
    release_date?: DateTimeNullableFilter<"sentenceallview"> | Date | string | null
    pr_site?: StringNullableFilter<"sentenceallview"> | string | null
    Targetyear_s?: StringNullableFilter<"sentenceallview"> | string | null
    ArticleTargetYear?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_carbon?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    full_text?: StringNullableFilter<"sentenceallview"> | string | null
    PressReleaseMonth?: StringNullableFilter<"sentenceallview"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_renewables?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    sentence_suppliers?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    sentence_gender?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    Company?: StringNullableFilter<"sentenceallview"> | string | null
    Annual_Report_Date?: StringNullableFilter<"sentenceallview"> | string | null
    title?: StringNullableFilter<"sentenceallview"> | string | null
    emails?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_other?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    Source_link?: StringNullableFilter<"sentenceallview"> | string | null
    Source_Date?: StringNullableFilter<"sentenceallview"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_waste?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    source?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_water?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    PressReleaseYear?: StringNullableFilter<"sentenceallview"> | string | null
    ticker?: StringNullableFilter<"sentenceallview"> | string | null
    SentenceTargetYear?: StringNullableFilter<"sentenceallview"> | string | null
    Target_sentence?: StringNullableFilter<"sentenceallview"> | string | null
    upload_date?: StringNullableFilter<"sentenceallview"> | string | null
    PageURL?: StringNullableFilter<"sentenceallview"> | string | null
    DocURL?: StringNullableFilter<"sentenceallview"> | string | null
    DocTitle?: StringNullableFilter<"sentenceallview"> | string | null
    DocName?: StringNullableFilter<"sentenceallview"> | string | null
    Target_Sentence_Page?: StringNullableFilter<"sentenceallview"> | string | null
    x?: StringNullableFilter<"sentenceallview"> | string | null
    Member_SP500?: StringNullableFilter<"sentenceallview"> | string | null
    Member_Russell1000?: StringNullableFilter<"sentenceallview"> | string | null
    ScrapingCodeSetUp?: StringNullableFilter<"sentenceallview"> | string | null
    Tickers?: StringNullableFilter<"sentenceallview"> | string | null
    PRAgency?: StringNullableFilter<"sentenceallview"> | string | null
    Domain?: StringNullableFilter<"sentenceallview"> | string | null
    PressURL?: StringNullableFilter<"sentenceallview"> | string | null
    SubscribedEsgroadmap?: StringNullableFilter<"sentenceallview"> | string | null
    SubscribedJames?: StringNullableFilter<"sentenceallview"> | string | null
    PlainTextSubscription?: StringNullableFilter<"sentenceallview"> | string | null
    AnnualReportsURL?: StringNullableFilter<"sentenceallview"> | string | null
    AnnualReportPDF2020?: StringNullableFilter<"sentenceallview"> | string | null
    ESGReportsURL?: StringNullableFilter<"sentenceallview"> | string | null
    ESGReportPDF2020?: StringNullableFilter<"sentenceallview"> | string | null
    Country?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode1?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName1?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode2?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName2?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode3?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName3?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode4?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName4?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode5?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName5?: StringNullableFilter<"sentenceallview"> | string | null
    WorkedBy?: StringNullableFilter<"sentenceallview"> | string | null
    CommentsNotes?: StringNullableFilter<"sentenceallview"> | string | null
    CarbonSentenceAvailable?: StringNullableFilter<"sentenceallview"> | string | null
  }

  export type sentenceallviewOrderByWithRelationInput = {
    id?: SortOrder
    release_date?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    Targetyear_s?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    Company?: SortOrderInput | SortOrder
    Annual_Report_Date?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    sentence_other?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    Source_Date?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    sentence_waste?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    upload_date?: SortOrderInput | SortOrder
    PageURL?: SortOrderInput | SortOrder
    DocURL?: SortOrderInput | SortOrder
    DocTitle?: SortOrderInput | SortOrder
    DocName?: SortOrderInput | SortOrder
    Target_Sentence_Page?: SortOrderInput | SortOrder
    x?: SortOrderInput | SortOrder
    Member_SP500?: SortOrderInput | SortOrder
    Member_Russell1000?: SortOrderInput | SortOrder
    ScrapingCodeSetUp?: SortOrderInput | SortOrder
    Tickers?: SortOrderInput | SortOrder
    PRAgency?: SortOrderInput | SortOrder
    Domain?: SortOrderInput | SortOrder
    PressURL?: SortOrderInput | SortOrder
    SubscribedEsgroadmap?: SortOrderInput | SortOrder
    SubscribedJames?: SortOrderInput | SortOrder
    PlainTextSubscription?: SortOrderInput | SortOrder
    AnnualReportsURL?: SortOrderInput | SortOrder
    AnnualReportPDF2020?: SortOrderInput | SortOrder
    ESGReportsURL?: SortOrderInput | SortOrder
    ESGReportPDF2020?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    SectorCode1?: SortOrderInput | SortOrder
    SectorName1?: SortOrderInput | SortOrder
    SectorCode2?: SortOrderInput | SortOrder
    SectorName2?: SortOrderInput | SortOrder
    SectorCode3?: SortOrderInput | SortOrder
    SectorName3?: SortOrderInput | SortOrder
    SectorCode4?: SortOrderInput | SortOrder
    SectorName4?: SortOrderInput | SortOrder
    SectorCode5?: SortOrderInput | SortOrder
    SectorName5?: SortOrderInput | SortOrder
    WorkedBy?: SortOrderInput | SortOrder
    CommentsNotes?: SortOrderInput | SortOrder
    CarbonSentenceAvailable?: SortOrderInput | SortOrder
    _relevance?: sentenceallviewOrderByRelevanceInput
  }

  export type sentenceallviewWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sentenceallviewWhereInput | sentenceallviewWhereInput[]
    OR?: sentenceallviewWhereInput[]
    NOT?: sentenceallviewWhereInput | sentenceallviewWhereInput[]
    release_date?: DateTimeNullableFilter<"sentenceallview"> | Date | string | null
    pr_site?: StringNullableFilter<"sentenceallview"> | string | null
    Targetyear_s?: StringNullableFilter<"sentenceallview"> | string | null
    ArticleTargetYear?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_carbon?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    full_text?: StringNullableFilter<"sentenceallview"> | string | null
    PressReleaseMonth?: StringNullableFilter<"sentenceallview"> | string | null
    PressReleaseFullClean?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_renewables?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    sentence_suppliers?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    sentence_gender?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    Company?: StringNullableFilter<"sentenceallview"> | string | null
    Annual_Report_Date?: StringNullableFilter<"sentenceallview"> | string | null
    title?: StringNullableFilter<"sentenceallview"> | string | null
    emails?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_other?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    Source_link?: StringNullableFilter<"sentenceallview"> | string | null
    Source_Date?: StringNullableFilter<"sentenceallview"> | string | null
    PressReleaseFullCleanstep1?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_waste?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    source?: StringNullableFilter<"sentenceallview"> | string | null
    sentence_water?: BigIntNullableFilter<"sentenceallview"> | bigint | number | null
    PressReleaseYear?: StringNullableFilter<"sentenceallview"> | string | null
    ticker?: StringNullableFilter<"sentenceallview"> | string | null
    SentenceTargetYear?: StringNullableFilter<"sentenceallview"> | string | null
    Target_sentence?: StringNullableFilter<"sentenceallview"> | string | null
    upload_date?: StringNullableFilter<"sentenceallview"> | string | null
    PageURL?: StringNullableFilter<"sentenceallview"> | string | null
    DocURL?: StringNullableFilter<"sentenceallview"> | string | null
    DocTitle?: StringNullableFilter<"sentenceallview"> | string | null
    DocName?: StringNullableFilter<"sentenceallview"> | string | null
    Target_Sentence_Page?: StringNullableFilter<"sentenceallview"> | string | null
    x?: StringNullableFilter<"sentenceallview"> | string | null
    Member_SP500?: StringNullableFilter<"sentenceallview"> | string | null
    Member_Russell1000?: StringNullableFilter<"sentenceallview"> | string | null
    ScrapingCodeSetUp?: StringNullableFilter<"sentenceallview"> | string | null
    Tickers?: StringNullableFilter<"sentenceallview"> | string | null
    PRAgency?: StringNullableFilter<"sentenceallview"> | string | null
    Domain?: StringNullableFilter<"sentenceallview"> | string | null
    PressURL?: StringNullableFilter<"sentenceallview"> | string | null
    SubscribedEsgroadmap?: StringNullableFilter<"sentenceallview"> | string | null
    SubscribedJames?: StringNullableFilter<"sentenceallview"> | string | null
    PlainTextSubscription?: StringNullableFilter<"sentenceallview"> | string | null
    AnnualReportsURL?: StringNullableFilter<"sentenceallview"> | string | null
    AnnualReportPDF2020?: StringNullableFilter<"sentenceallview"> | string | null
    ESGReportsURL?: StringNullableFilter<"sentenceallview"> | string | null
    ESGReportPDF2020?: StringNullableFilter<"sentenceallview"> | string | null
    Country?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode1?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName1?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode2?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName2?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode3?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName3?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode4?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName4?: StringNullableFilter<"sentenceallview"> | string | null
    SectorCode5?: StringNullableFilter<"sentenceallview"> | string | null
    SectorName5?: StringNullableFilter<"sentenceallview"> | string | null
    WorkedBy?: StringNullableFilter<"sentenceallview"> | string | null
    CommentsNotes?: StringNullableFilter<"sentenceallview"> | string | null
    CarbonSentenceAvailable?: StringNullableFilter<"sentenceallview"> | string | null
  }, "id">

  export type sentenceallviewOrderByWithAggregationInput = {
    id?: SortOrder
    release_date?: SortOrderInput | SortOrder
    pr_site?: SortOrderInput | SortOrder
    Targetyear_s?: SortOrderInput | SortOrder
    ArticleTargetYear?: SortOrderInput | SortOrder
    sentence_carbon?: SortOrderInput | SortOrder
    full_text?: SortOrderInput | SortOrder
    PressReleaseMonth?: SortOrderInput | SortOrder
    PressReleaseFullClean?: SortOrderInput | SortOrder
    sentence_renewables?: SortOrderInput | SortOrder
    sentence_suppliers?: SortOrderInput | SortOrder
    sentence_gender?: SortOrderInput | SortOrder
    Company?: SortOrderInput | SortOrder
    Annual_Report_Date?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    emails?: SortOrderInput | SortOrder
    sentence_other?: SortOrderInput | SortOrder
    Source_link?: SortOrderInput | SortOrder
    Source_Date?: SortOrderInput | SortOrder
    PressReleaseFullCleanstep1?: SortOrderInput | SortOrder
    sentence_waste?: SortOrderInput | SortOrder
    source?: SortOrderInput | SortOrder
    sentence_water?: SortOrderInput | SortOrder
    PressReleaseYear?: SortOrderInput | SortOrder
    ticker?: SortOrderInput | SortOrder
    SentenceTargetYear?: SortOrderInput | SortOrder
    Target_sentence?: SortOrderInput | SortOrder
    upload_date?: SortOrderInput | SortOrder
    PageURL?: SortOrderInput | SortOrder
    DocURL?: SortOrderInput | SortOrder
    DocTitle?: SortOrderInput | SortOrder
    DocName?: SortOrderInput | SortOrder
    Target_Sentence_Page?: SortOrderInput | SortOrder
    x?: SortOrderInput | SortOrder
    Member_SP500?: SortOrderInput | SortOrder
    Member_Russell1000?: SortOrderInput | SortOrder
    ScrapingCodeSetUp?: SortOrderInput | SortOrder
    Tickers?: SortOrderInput | SortOrder
    PRAgency?: SortOrderInput | SortOrder
    Domain?: SortOrderInput | SortOrder
    PressURL?: SortOrderInput | SortOrder
    SubscribedEsgroadmap?: SortOrderInput | SortOrder
    SubscribedJames?: SortOrderInput | SortOrder
    PlainTextSubscription?: SortOrderInput | SortOrder
    AnnualReportsURL?: SortOrderInput | SortOrder
    AnnualReportPDF2020?: SortOrderInput | SortOrder
    ESGReportsURL?: SortOrderInput | SortOrder
    ESGReportPDF2020?: SortOrderInput | SortOrder
    Country?: SortOrderInput | SortOrder
    SectorCode1?: SortOrderInput | SortOrder
    SectorName1?: SortOrderInput | SortOrder
    SectorCode2?: SortOrderInput | SortOrder
    SectorName2?: SortOrderInput | SortOrder
    SectorCode3?: SortOrderInput | SortOrder
    SectorName3?: SortOrderInput | SortOrder
    SectorCode4?: SortOrderInput | SortOrder
    SectorName4?: SortOrderInput | SortOrder
    SectorCode5?: SortOrderInput | SortOrder
    SectorName5?: SortOrderInput | SortOrder
    WorkedBy?: SortOrderInput | SortOrder
    CommentsNotes?: SortOrderInput | SortOrder
    CarbonSentenceAvailable?: SortOrderInput | SortOrder
    _count?: sentenceallviewCountOrderByAggregateInput
    _avg?: sentenceallviewAvgOrderByAggregateInput
    _max?: sentenceallviewMaxOrderByAggregateInput
    _min?: sentenceallviewMinOrderByAggregateInput
    _sum?: sentenceallviewSumOrderByAggregateInput
  }

  export type sentenceallviewScalarWhereWithAggregatesInput = {
    AND?: sentenceallviewScalarWhereWithAggregatesInput | sentenceallviewScalarWhereWithAggregatesInput[]
    OR?: sentenceallviewScalarWhereWithAggregatesInput[]
    NOT?: sentenceallviewScalarWhereWithAggregatesInput | sentenceallviewScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sentenceallview"> | number
    release_date?: DateTimeNullableWithAggregatesFilter<"sentenceallview"> | Date | string | null
    pr_site?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Targetyear_s?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    ArticleTargetYear?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    sentence_carbon?: BigIntNullableWithAggregatesFilter<"sentenceallview"> | bigint | number | null
    full_text?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    PressReleaseMonth?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    PressReleaseFullClean?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    sentence_renewables?: BigIntNullableWithAggregatesFilter<"sentenceallview"> | bigint | number | null
    sentence_suppliers?: BigIntNullableWithAggregatesFilter<"sentenceallview"> | bigint | number | null
    sentence_gender?: BigIntNullableWithAggregatesFilter<"sentenceallview"> | bigint | number | null
    Company?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Annual_Report_Date?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    title?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    emails?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    sentence_other?: BigIntNullableWithAggregatesFilter<"sentenceallview"> | bigint | number | null
    Source_link?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Source_Date?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    PressReleaseFullCleanstep1?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    sentence_waste?: BigIntNullableWithAggregatesFilter<"sentenceallview"> | bigint | number | null
    source?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    sentence_water?: BigIntNullableWithAggregatesFilter<"sentenceallview"> | bigint | number | null
    PressReleaseYear?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    ticker?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SentenceTargetYear?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Target_sentence?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    upload_date?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    PageURL?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    DocURL?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    DocTitle?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    DocName?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Target_Sentence_Page?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    x?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Member_SP500?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Member_Russell1000?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    ScrapingCodeSetUp?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Tickers?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    PRAgency?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Domain?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    PressURL?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SubscribedEsgroadmap?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SubscribedJames?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    PlainTextSubscription?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    AnnualReportsURL?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    AnnualReportPDF2020?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    ESGReportsURL?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    ESGReportPDF2020?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    Country?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorCode1?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorName1?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorCode2?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorName2?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorCode3?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorName3?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorCode4?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorName4?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorCode5?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    SectorName5?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    WorkedBy?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    CommentsNotes?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
    CarbonSentenceAvailable?: StringNullableWithAggregatesFilter<"sentenceallview"> | string | null
  }

  export type SearchWhereInput = {
    AND?: SearchWhereInput | SearchWhereInput[]
    OR?: SearchWhereInput[]
    NOT?: SearchWhereInput | SearchWhereInput[]
    id?: StringFilter<"Search"> | string
    userId?: IntFilter<"Search"> | number
    keyword?: StringFilter<"Search"> | string
    tableName?: StringFilter<"Search"> | string
    createdAt?: DateTimeFilter<"Search"> | Date | string
    lastChecked?: DateTimeNullableFilter<"Search"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SearchOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    keyword?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    lastChecked?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
    _relevance?: SearchOrderByRelevanceInput
  }

  export type SearchWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SearchWhereInput | SearchWhereInput[]
    OR?: SearchWhereInput[]
    NOT?: SearchWhereInput | SearchWhereInput[]
    userId?: IntFilter<"Search"> | number
    keyword?: StringFilter<"Search"> | string
    tableName?: StringFilter<"Search"> | string
    createdAt?: DateTimeFilter<"Search"> | Date | string
    lastChecked?: DateTimeNullableFilter<"Search"> | Date | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type SearchOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    keyword?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    lastChecked?: SortOrderInput | SortOrder
    _count?: SearchCountOrderByAggregateInput
    _avg?: SearchAvgOrderByAggregateInput
    _max?: SearchMaxOrderByAggregateInput
    _min?: SearchMinOrderByAggregateInput
    _sum?: SearchSumOrderByAggregateInput
  }

  export type SearchScalarWhereWithAggregatesInput = {
    AND?: SearchScalarWhereWithAggregatesInput | SearchScalarWhereWithAggregatesInput[]
    OR?: SearchScalarWhereWithAggregatesInput[]
    NOT?: SearchScalarWhereWithAggregatesInput | SearchScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Search"> | string
    userId?: IntWithAggregatesFilter<"Search"> | number
    keyword?: StringWithAggregatesFilter<"Search"> | string
    tableName?: StringWithAggregatesFilter<"Search"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Search"> | Date | string
    lastChecked?: DateTimeNullableWithAggregatesFilter<"Search"> | Date | string | null
  }

  export type UniqueFactorsTableCreateInput = {
    KPI_Report_Date: Date | string
    Company__NON_NULL_Total_?: string | null
    Company__NON_NULL_Unique_?: string | null
    Member_of_the_S_P500__YES_Total_?: string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: string | null
    Ticker_s___NON_NULL_Total_?: string | null
    Ticker_s___NON_NULL_Unique_?: string | null
    Country__NON_NULL_Total_?: string | null
    Country__NON_NULL_Unique_?: string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: string | null
    ArticleTargetYear__NON_NULL_Unique_?: string | null
    Source_Date__NON_NULL_Unique_?: string | null
    PressReleaseYear__NON_NULL_Unique_?: string | null
    Target_sentence__NON_NULL_Total_?: string | null
    Target_sentence__NON_NULL_Unique_?: string | null
    Targetyear_s___NON_NULL_Unique_?: string | null
    sentence_carbon__1_Total_?: string | null
    sentence_gender__1_Total_?: string | null
    sentence_renewables__1_Total_?: string | null
    sentence_suppliers__1_Total_?: string | null
    sentence_water__1_Total_?: string | null
    sentence_waste__1_Total_?: string | null
    sentence_other__1_Total_?: string | null
  }

  export type UniqueFactorsTableUncheckedCreateInput = {
    KPI_Report_Date: Date | string
    Company__NON_NULL_Total_?: string | null
    Company__NON_NULL_Unique_?: string | null
    Member_of_the_S_P500__YES_Total_?: string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: string | null
    Ticker_s___NON_NULL_Total_?: string | null
    Ticker_s___NON_NULL_Unique_?: string | null
    Country__NON_NULL_Total_?: string | null
    Country__NON_NULL_Unique_?: string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: string | null
    ArticleTargetYear__NON_NULL_Unique_?: string | null
    Source_Date__NON_NULL_Unique_?: string | null
    PressReleaseYear__NON_NULL_Unique_?: string | null
    Target_sentence__NON_NULL_Total_?: string | null
    Target_sentence__NON_NULL_Unique_?: string | null
    Targetyear_s___NON_NULL_Unique_?: string | null
    sentence_carbon__1_Total_?: string | null
    sentence_gender__1_Total_?: string | null
    sentence_renewables__1_Total_?: string | null
    sentence_suppliers__1_Total_?: string | null
    sentence_water__1_Total_?: string | null
    sentence_waste__1_Total_?: string | null
    sentence_other__1_Total_?: string | null
    id?: number
  }

  export type UniqueFactorsTableUpdateInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Company__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniqueFactorsTableUncheckedUpdateInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Company__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type UniqueFactorsTableCreateManyInput = {
    KPI_Report_Date: Date | string
    Company__NON_NULL_Total_?: string | null
    Company__NON_NULL_Unique_?: string | null
    Member_of_the_S_P500__YES_Total_?: string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: string | null
    Ticker_s___NON_NULL_Total_?: string | null
    Ticker_s___NON_NULL_Unique_?: string | null
    Country__NON_NULL_Total_?: string | null
    Country__NON_NULL_Unique_?: string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: string | null
    ArticleTargetYear__NON_NULL_Unique_?: string | null
    Source_Date__NON_NULL_Unique_?: string | null
    PressReleaseYear__NON_NULL_Unique_?: string | null
    Target_sentence__NON_NULL_Total_?: string | null
    Target_sentence__NON_NULL_Unique_?: string | null
    Targetyear_s___NON_NULL_Unique_?: string | null
    sentence_carbon__1_Total_?: string | null
    sentence_gender__1_Total_?: string | null
    sentence_renewables__1_Total_?: string | null
    sentence_suppliers__1_Total_?: string | null
    sentence_water__1_Total_?: string | null
    sentence_waste__1_Total_?: string | null
    sentence_other__1_Total_?: string | null
    id?: number
  }

  export type UniqueFactorsTableUpdateManyMutationInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Company__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UniqueFactorsTableUncheckedUpdateManyInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Company__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index__YES_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Country__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence__NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s___NON_NULL_Unique_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other__1_Total_?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type CompanyUniverseCreateInput = {
    Company: string
    x?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    source?: string | null
    Scraping_code_set_up__?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Domain?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: string | null
    Plain_text_press_release_subscription_possible___yes_no_?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    WORKED_BY_?: string | null
    COMMENTS___NOTES?: string | null
    Carbon_sentence_available__?: string | null
  }

  export type CompanyUniverseUncheckedCreateInput = {
    Company: string
    x?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    source?: string | null
    Scraping_code_set_up__?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Domain?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: string | null
    Plain_text_press_release_subscription_possible___yes_no_?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    WORKED_BY_?: string | null
    COMMENTS___NOTES?: string | null
    Carbon_sentence_available__?: string | null
  }

  export type CompanyUniverseUpdateInput = {
    Company?: StringFieldUpdateOperationsInput | string
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    Scraping_code_set_up__?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Plain_text_press_release_subscription_possible___yes_no_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    WORKED_BY_?: NullableStringFieldUpdateOperationsInput | string | null
    COMMENTS___NOTES?: NullableStringFieldUpdateOperationsInput | string | null
    Carbon_sentence_available__?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUniverseUncheckedUpdateInput = {
    Company?: StringFieldUpdateOperationsInput | string
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    Scraping_code_set_up__?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Plain_text_press_release_subscription_possible___yes_no_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    WORKED_BY_?: NullableStringFieldUpdateOperationsInput | string | null
    COMMENTS___NOTES?: NullableStringFieldUpdateOperationsInput | string | null
    Carbon_sentence_available__?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUniverseCreateManyInput = {
    Company: string
    x?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    source?: string | null
    Scraping_code_set_up__?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Domain?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: string | null
    Plain_text_press_release_subscription_possible___yes_no_?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    WORKED_BY_?: string | null
    COMMENTS___NOTES?: string | null
    Carbon_sentence_available__?: string | null
  }

  export type CompanyUniverseUpdateManyMutationInput = {
    Company?: StringFieldUpdateOperationsInput | string
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    Scraping_code_set_up__?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Plain_text_press_release_subscription_possible___yes_no_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    WORKED_BY_?: NullableStringFieldUpdateOperationsInput | string | null
    COMMENTS___NOTES?: NullableStringFieldUpdateOperationsInput | string | null
    Carbon_sentence_available__?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUniverseUncheckedUpdateManyInput = {
    Company?: StringFieldUpdateOperationsInput | string
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    Scraping_code_set_up__?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Subscribed_to_press_releases_jameskijani_gmail_com__?: NullableStringFieldUpdateOperationsInput | string | null
    Plain_text_press_release_subscription_possible___yes_no_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    WORKED_BY_?: NullableStringFieldUpdateOperationsInput | string | null
    COMMENTS___NOTES?: NullableStringFieldUpdateOperationsInput | string | null
    Carbon_sentence_available__?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyDataCreateInput = {
    company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
  }

  export type CompanyDataUncheckedCreateInput = {
    company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    id?: number
  }

  export type CompanyDataUpdateInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyDataUncheckedUpdateInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type CompanyDataCreateManyInput = {
    company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    id?: number
  }

  export type CompanyDataUpdateManyMutationInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyDataUncheckedUpdateManyInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type CompanyData2CreateInput = {
    company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    NAICS__1_GIG?: string | null
    NAICS__1_GIG_name?: string | null
  }

  export type CompanyData2UncheckedCreateInput = {
    company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    NAICS__1_GIG?: string | null
    NAICS__1_GIG_name?: string | null
    id?: number
  }

  export type CompanyData2UpdateInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyData2UncheckedUpdateInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG_name?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type CompanyData2CreateManyInput = {
    company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    NAICS__1_GIG?: string | null
    NAICS__1_GIG_name?: string | null
    id?: number
  }

  export type CompanyData2UpdateManyMutationInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyData2UncheckedUpdateManyInput = {
    company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG?: NullableStringFieldUpdateOperationsInput | string | null
    NAICS__1_GIG_name?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type PercentageTableCreateInput = {
    KPI_Report_Date: Date | string
    Company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    climateaction100?: string | null
    emails?: string | null
    full_text?: string | null
    Source_link?: string | null
    pr_site?: string | null
    release_date?: string | null
    source?: string | null
    ticker?: string | null
    title?: string | null
    ArticleTargetYear?: string | null
    PressReleaseFullCleanstep1?: string | null
    PressReleaseFullClean?: string | null
    Source_Date?: string | null
    Annual_Report_Date?: string | null
    PressReleaseYear?: string | null
    PressReleaseMonth?: string | null
    Target_sentence?: string | null
    SentenceTargetYear?: string | null
    Targetyear_s_?: string | null
    sentence_carbon?: string | null
    sentence_gender?: string | null
    sentence_renewables?: string | null
    sentence_suppliers?: string | null
    sentence_water?: string | null
    sentence_waste?: string | null
    sentence_other?: string | null
  }

  export type PercentageTableUncheckedCreateInput = {
    KPI_Report_Date: Date | string
    Company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    climateaction100?: string | null
    emails?: string | null
    full_text?: string | null
    Source_link?: string | null
    pr_site?: string | null
    release_date?: string | null
    source?: string | null
    ticker?: string | null
    title?: string | null
    ArticleTargetYear?: string | null
    PressReleaseFullCleanstep1?: string | null
    PressReleaseFullClean?: string | null
    Source_Date?: string | null
    Annual_Report_Date?: string | null
    PressReleaseYear?: string | null
    PressReleaseMonth?: string | null
    Target_sentence?: string | null
    SentenceTargetYear?: string | null
    Targetyear_s_?: string | null
    sentence_carbon?: string | null
    sentence_gender?: string | null
    sentence_renewables?: string | null
    sentence_suppliers?: string | null
    sentence_water?: string | null
    sentence_waste?: string | null
    sentence_other?: string | null
    id?: number
  }

  export type PercentageTableUpdateInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    climateaction100?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PercentageTableUncheckedUpdateInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    climateaction100?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type PercentageTableCreateManyInput = {
    KPI_Report_Date: Date | string
    Company?: string | null
    Member_of_the_S_P500?: string | null
    Member_of_the_Russell_1000_Index?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Global___Main_Website_URL?: string | null
    Company_global_main_press___news_release_site_URL?: string | null
    Company_annual_reports_page_URL?: string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: string | null
    Company_sustainability___ESG_reports_page_URL?: string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: string | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    sector_codes_all__NAICS_?: string | null
    sector_name_all__NAICS_?: string | null
    climateaction100?: string | null
    emails?: string | null
    full_text?: string | null
    Source_link?: string | null
    pr_site?: string | null
    release_date?: string | null
    source?: string | null
    ticker?: string | null
    title?: string | null
    ArticleTargetYear?: string | null
    PressReleaseFullCleanstep1?: string | null
    PressReleaseFullClean?: string | null
    Source_Date?: string | null
    Annual_Report_Date?: string | null
    PressReleaseYear?: string | null
    PressReleaseMonth?: string | null
    Target_sentence?: string | null
    SentenceTargetYear?: string | null
    Targetyear_s_?: string | null
    sentence_carbon?: string | null
    sentence_gender?: string | null
    sentence_renewables?: string | null
    sentence_suppliers?: string | null
    sentence_water?: string | null
    sentence_waste?: string | null
    sentence_other?: string | null
    id?: number
  }

  export type PercentageTableUpdateManyMutationInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    climateaction100?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PercentageTableUncheckedUpdateManyInput = {
    KPI_Report_Date?: DateTimeFieldUpdateOperationsInput | Date | string
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_S_P500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_of_the_Russell_1000_Index?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Global___Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_global_main_press___news_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_annual___financial_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Company_sustainability___ESG_reports_page_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_codes_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name_all__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    climateaction100?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_gender?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_suppliers?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type RoadmapCarbonCreateInput = {
    Company?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Company_Main_Website_URL?: string | null
    Company_Source_site_URL?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    S_P500member?: string | null
    Russell_1000_member?: string | null
    Source_link_1?: string | null
    Source_date_1?: string | null
    Source_sentence_1?: string | null
    Targetyear_s__1?: string | null
    Source_link_2?: string | null
    Source_date_2?: string | null
    Source_sentence_2?: string | null
    Targetyear_s__2?: string | null
    Source_link_3?: string | null
    Source_date_3?: string | null
    Source_sentence_3?: string | null
    Targetyear_s__3?: string | null
    Source_link_4?: string | null
    Source_date_4?: string | null
    Source_sentence_4?: string | null
    Targetyear_s__4?: number | null
    Source_link_5?: string | null
    Source_date_5?: string | null
    Source_sentence_5?: string | null
    Targetyear_s__5?: number | null
    Source_link_6?: string | null
    Source_date_6?: string | null
    Source_sentence_6?: string | null
    Targetyear_s__6?: number | null
  }

  export type RoadmapCarbonUncheckedCreateInput = {
    Company?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Company_Main_Website_URL?: string | null
    Company_Source_site_URL?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    S_P500member?: string | null
    Russell_1000_member?: string | null
    Source_link_1?: string | null
    Source_date_1?: string | null
    Source_sentence_1?: string | null
    Targetyear_s__1?: string | null
    Source_link_2?: string | null
    Source_date_2?: string | null
    Source_sentence_2?: string | null
    Targetyear_s__2?: string | null
    Source_link_3?: string | null
    Source_date_3?: string | null
    Source_sentence_3?: string | null
    Targetyear_s__3?: string | null
    Source_link_4?: string | null
    Source_date_4?: string | null
    Source_sentence_4?: string | null
    Targetyear_s__4?: number | null
    Source_link_5?: string | null
    Source_date_5?: string | null
    Source_sentence_5?: string | null
    Targetyear_s__5?: number | null
    Source_link_6?: string | null
    Source_date_6?: string | null
    Source_sentence_6?: string | null
    Targetyear_s__6?: number | null
    id?: number
  }

  export type RoadmapCarbonUpdateInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Source_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_1?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_2?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_3?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_4?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__4?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_5?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__5?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_6?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__6?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type RoadmapCarbonUncheckedUpdateInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Source_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_1?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_2?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_3?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_4?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__4?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_5?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__5?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_6?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__6?: NullableFloatFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type RoadmapCarbonCreateManyInput = {
    Company?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Company_Main_Website_URL?: string | null
    Company_Source_site_URL?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    S_P500member?: string | null
    Russell_1000_member?: string | null
    Source_link_1?: string | null
    Source_date_1?: string | null
    Source_sentence_1?: string | null
    Targetyear_s__1?: string | null
    Source_link_2?: string | null
    Source_date_2?: string | null
    Source_sentence_2?: string | null
    Targetyear_s__2?: string | null
    Source_link_3?: string | null
    Source_date_3?: string | null
    Source_sentence_3?: string | null
    Targetyear_s__3?: string | null
    Source_link_4?: string | null
    Source_date_4?: string | null
    Source_sentence_4?: string | null
    Targetyear_s__4?: number | null
    Source_link_5?: string | null
    Source_date_5?: string | null
    Source_sentence_5?: string | null
    Targetyear_s__5?: number | null
    Source_link_6?: string | null
    Source_date_6?: string | null
    Source_sentence_6?: string | null
    Targetyear_s__6?: number | null
    id?: number
  }

  export type RoadmapCarbonUpdateManyMutationInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Source_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_1?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_2?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_3?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_4?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__4?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_5?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__5?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_6?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__6?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type RoadmapCarbonUncheckedUpdateManyInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Source_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_1?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__1?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_2?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__2?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_3?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__3?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_4?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_4?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__4?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_5?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_5?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__5?: NullableFloatFieldUpdateOperationsInput | number | null
    Source_link_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date_6?: NullableStringFieldUpdateOperationsInput | string | null
    Source_sentence_6?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s__6?: NullableFloatFieldUpdateOperationsInput | number | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type SentenceAllCreateInput = {
    release_date?: string | null
    Targetyear_s_?: string | null
    pr_site?: string | null
    ArticleTargetYear?: string | null
    sentence_carbon?: bigint | number | null
    full_text?: string | null
    PressReleaseMonth?: string | null
    PressReleaseFullClean?: string | null
    sentence_renewables?: bigint | number | null
    sentence_suppliers?: bigint | number | null
    sentence_gender?: bigint | number | null
    Company?: string | null
    Annual_Report_Date?: string | null
    title?: string | null
    emails?: string | null
    sentence_other?: bigint | number | null
    Source_link?: string | null
    Source_Date?: string | null
    PressReleaseFullCleanstep1?: string | null
    sentence_waste?: bigint | number | null
    source?: string | null
    sentence_water?: bigint | number | null
    PressReleaseYear?: string | null
    ticker?: string | null
    SentenceTargetYear?: string | null
    Target_sentence?: string | null
    upload_date?: string | null
    PageURL?: string | null
    DocURL?: string | null
    DocTitle?: string | null
    DocName?: string | null
    Target_Sentence_Page?: string | null
  }

  export type SentenceAllUncheckedCreateInput = {
    release_date?: string | null
    Targetyear_s_?: string | null
    pr_site?: string | null
    ArticleTargetYear?: string | null
    sentence_carbon?: bigint | number | null
    full_text?: string | null
    PressReleaseMonth?: string | null
    PressReleaseFullClean?: string | null
    sentence_renewables?: bigint | number | null
    sentence_suppliers?: bigint | number | null
    sentence_gender?: bigint | number | null
    Company?: string | null
    Annual_Report_Date?: string | null
    title?: string | null
    emails?: string | null
    sentence_other?: bigint | number | null
    Source_link?: string | null
    Source_Date?: string | null
    PressReleaseFullCleanstep1?: string | null
    sentence_waste?: bigint | number | null
    source?: string | null
    sentence_water?: bigint | number | null
    PressReleaseYear?: string | null
    ticker?: string | null
    SentenceTargetYear?: string | null
    Target_sentence?: string | null
    upload_date?: string | null
    id?: number
    PageURL?: string | null
    DocURL?: string | null
    DocTitle?: string | null
    DocName?: string | null
    Target_Sentence_Page?: string | null
  }

  export type SentenceAllUpdateInput = {
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SentenceAllUncheckedUpdateInput = {
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SentenceAllCreateManyInput = {
    release_date?: string | null
    Targetyear_s_?: string | null
    pr_site?: string | null
    ArticleTargetYear?: string | null
    sentence_carbon?: bigint | number | null
    full_text?: string | null
    PressReleaseMonth?: string | null
    PressReleaseFullClean?: string | null
    sentence_renewables?: bigint | number | null
    sentence_suppliers?: bigint | number | null
    sentence_gender?: bigint | number | null
    Company?: string | null
    Annual_Report_Date?: string | null
    title?: string | null
    emails?: string | null
    sentence_other?: bigint | number | null
    Source_link?: string | null
    Source_Date?: string | null
    PressReleaseFullCleanstep1?: string | null
    sentence_waste?: bigint | number | null
    source?: string | null
    sentence_water?: bigint | number | null
    PressReleaseYear?: string | null
    ticker?: string | null
    SentenceTargetYear?: string | null
    Target_sentence?: string | null
    upload_date?: string | null
    id?: number
    PageURL?: string | null
    DocURL?: string | null
    DocTitle?: string | null
    DocName?: string | null
    Target_Sentence_Page?: string | null
  }

  export type SentenceAllUpdateManyMutationInput = {
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SentenceAllUncheckedUpdateManyInput = {
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    id?: IntFieldUpdateOperationsInput | number
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TargetSentenceCreateInput = {
    Company?: string | null
    companylist?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Main_Website_URL?: string | null
    Company_press_release_site_URL?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    S_P500member?: string | null
    Russell_1000_member?: string | null
    emails?: string | null
    full_text?: string | null
    Source_link?: string | null
    pr_site?: string | null
    release_date?: string | null
    source?: string | null
    ticker?: string | null
    title?: string | null
    ArticleTargetYear?: string | null
    PressReleaseFullCleanstep1?: string | null
    PressReleaseFullClean?: string | null
    Source_date?: string | null
    PressReleaseYear?: bigint | number | null
    PressReleaseMonth?: bigint | number | null
    Target_sentence?: string | null
    SentenceTargetYear?: string | null
    Targetyear_s_?: string | null
    sentence_carbon?: boolean | null
    sentence_gender?: boolean | null
    sentence_renewables?: boolean | null
    sentence_suppliers?: boolean | null
    sentence_water?: boolean | null
    Primarysource?: boolean | null
  }

  export type TargetSentenceUncheckedCreateInput = {
    Company?: string | null
    companylist?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Main_Website_URL?: string | null
    Company_press_release_site_URL?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    S_P500member?: string | null
    Russell_1000_member?: string | null
    emails?: string | null
    full_text?: string | null
    Source_link?: string | null
    pr_site?: string | null
    release_date?: string | null
    source?: string | null
    ticker?: string | null
    title?: string | null
    ArticleTargetYear?: string | null
    PressReleaseFullCleanstep1?: string | null
    PressReleaseFullClean?: string | null
    Source_date?: string | null
    PressReleaseYear?: bigint | number | null
    PressReleaseMonth?: bigint | number | null
    Target_sentence?: string | null
    SentenceTargetYear?: string | null
    Targetyear_s_?: string | null
    sentence_carbon?: boolean | null
    sentence_gender?: boolean | null
    sentence_renewables?: boolean | null
    sentence_suppliers?: boolean | null
    sentence_water?: boolean | null
    Primarysource?: boolean | null
    id?: number
  }

  export type TargetSentenceUpdateInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    companylist?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_press_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseMonth?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_renewables?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_suppliers?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_water?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Primarysource?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TargetSentenceUncheckedUpdateInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    companylist?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_press_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseMonth?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_renewables?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_suppliers?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_water?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Primarysource?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type TargetSentenceCreateManyInput = {
    Company?: string | null
    companylist?: string | null
    Ticker_s_?: string | null
    PR_Agency?: string | null
    Example_2020_company_PR_agency_press_release_URL?: string | null
    Company_Main_Website_URL?: string | null
    Company_press_release_site_URL?: string | null
    Country?: string | null
    sector_code__1__NAICS_?: bigint | number | null
    sector_name__1__NAICS_?: string | null
    sector_code__2__NAICS_?: string | null
    sector_name__2__NAICS_?: string | null
    sector_code__3__NAICS_?: string | null
    sector_name__3__NAICS_?: string | null
    sector_code__4__NAICS_?: string | null
    sector_name__4__NAICS_?: string | null
    sector_code__5__NAICS_?: string | null
    sector_name__5__NAICS_?: string | null
    S_P500member?: string | null
    Russell_1000_member?: string | null
    emails?: string | null
    full_text?: string | null
    Source_link?: string | null
    pr_site?: string | null
    release_date?: string | null
    source?: string | null
    ticker?: string | null
    title?: string | null
    ArticleTargetYear?: string | null
    PressReleaseFullCleanstep1?: string | null
    PressReleaseFullClean?: string | null
    Source_date?: string | null
    PressReleaseYear?: bigint | number | null
    PressReleaseMonth?: bigint | number | null
    Target_sentence?: string | null
    SentenceTargetYear?: string | null
    Targetyear_s_?: string | null
    sentence_carbon?: boolean | null
    sentence_gender?: boolean | null
    sentence_renewables?: boolean | null
    sentence_suppliers?: boolean | null
    sentence_water?: boolean | null
    Primarysource?: boolean | null
    id?: number
  }

  export type TargetSentenceUpdateManyMutationInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    companylist?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_press_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseMonth?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_renewables?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_suppliers?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_water?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Primarysource?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TargetSentenceUncheckedUpdateManyInput = {
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    companylist?: NullableStringFieldUpdateOperationsInput | string | null
    Ticker_s_?: NullableStringFieldUpdateOperationsInput | string | null
    PR_Agency?: NullableStringFieldUpdateOperationsInput | string | null
    Example_2020_company_PR_agency_press_release_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_Main_Website_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Company_press_release_site_URL?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__1__NAICS_?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sector_name__1__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__2__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__3__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__4__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_code__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    sector_name__5__NAICS_?: NullableStringFieldUpdateOperationsInput | string | null
    S_P500member?: NullableStringFieldUpdateOperationsInput | string | null
    Russell_1000_member?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    release_date?: NullableStringFieldUpdateOperationsInput | string | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    Source_date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseYear?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseMonth?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s_?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_gender?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_renewables?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_suppliers?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sentence_water?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Primarysource?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id?: IntFieldUpdateOperationsInput | number
  }

  export type TestableCreateInput = {
    firstname: number
    surname: number
    city: number
    country: number
  }

  export type TestableUncheckedCreateInput = {
    firstname: number
    surname: number
    city: number
    country: number
    id?: number
  }

  export type TestableUpdateInput = {
    firstname?: IntFieldUpdateOperationsInput | number
    surname?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    country?: IntFieldUpdateOperationsInput | number
  }

  export type TestableUncheckedUpdateInput = {
    firstname?: IntFieldUpdateOperationsInput | number
    surname?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    country?: IntFieldUpdateOperationsInput | number
    id?: IntFieldUpdateOperationsInput | number
  }

  export type TestableCreateManyInput = {
    firstname: number
    surname: number
    city: number
    country: number
    id?: number
  }

  export type TestableUpdateManyMutationInput = {
    firstname?: IntFieldUpdateOperationsInput | number
    surname?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    country?: IntFieldUpdateOperationsInput | number
  }

  export type TestableUncheckedUpdateManyInput = {
    firstname?: IntFieldUpdateOperationsInput | number
    surname?: IntFieldUpdateOperationsInput | number
    city?: IntFieldUpdateOperationsInput | number
    country?: IntFieldUpdateOperationsInput | number
    id?: IntFieldUpdateOperationsInput | number
  }

  export type wp_actionscheduler_actionsCreateInput = {
    action_id?: bigint | number
    hook: string
    status: string
    scheduled_date_gmt?: Date | string
    scheduled_date_local?: Date | string
    args?: string | null
    schedule?: string | null
    group_id?: bigint | number
    attempts?: number
    last_attempt_gmt?: Date | string
    last_attempt_local?: Date | string
    claim_id?: bigint | number
    extended_args?: string | null
  }

  export type wp_actionscheduler_actionsUncheckedCreateInput = {
    action_id?: bigint | number
    hook: string
    status: string
    scheduled_date_gmt?: Date | string
    scheduled_date_local?: Date | string
    args?: string | null
    schedule?: string | null
    group_id?: bigint | number
    attempts?: number
    last_attempt_gmt?: Date | string
    last_attempt_local?: Date | string
    claim_id?: bigint | number
    extended_args?: string | null
  }

  export type wp_actionscheduler_actionsUpdateInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduled_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    last_attempt_local?: DateTimeFieldUpdateOperationsInput | Date | string
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_actionsUncheckedUpdateInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduled_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    last_attempt_local?: DateTimeFieldUpdateOperationsInput | Date | string
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_actionsCreateManyInput = {
    action_id?: bigint | number
    hook: string
    status: string
    scheduled_date_gmt?: Date | string
    scheduled_date_local?: Date | string
    args?: string | null
    schedule?: string | null
    group_id?: bigint | number
    attempts?: number
    last_attempt_gmt?: Date | string
    last_attempt_local?: Date | string
    claim_id?: bigint | number
    extended_args?: string | null
  }

  export type wp_actionscheduler_actionsUpdateManyMutationInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduled_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    last_attempt_local?: DateTimeFieldUpdateOperationsInput | Date | string
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_actionsUncheckedUpdateManyInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    scheduled_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    last_attempt_local?: DateTimeFieldUpdateOperationsInput | Date | string
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_claimsCreateInput = {
    claim_id?: bigint | number
    date_created_gmt?: Date | string
  }

  export type wp_actionscheduler_claimsUncheckedCreateInput = {
    claim_id?: bigint | number
    date_created_gmt?: Date | string
  }

  export type wp_actionscheduler_claimsUpdateInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_actionscheduler_claimsUncheckedUpdateInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_actionscheduler_claimsCreateManyInput = {
    claim_id?: bigint | number
    date_created_gmt?: Date | string
  }

  export type wp_actionscheduler_claimsUpdateManyMutationInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_actionscheduler_claimsUncheckedUpdateManyInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_actionscheduler_groupsCreateInput = {
    group_id?: bigint | number
    slug: string
  }

  export type wp_actionscheduler_groupsUncheckedCreateInput = {
    group_id?: bigint | number
    slug: string
  }

  export type wp_actionscheduler_groupsUpdateInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_groupsUncheckedUpdateInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_groupsCreateManyInput = {
    group_id?: bigint | number
    slug: string
  }

  export type wp_actionscheduler_groupsUpdateManyMutationInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_groupsUncheckedUpdateManyInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_logsCreateInput = {
    log_id?: bigint | number
    action_id: bigint | number
    message: string
    log_date_gmt?: Date | string
    log_date_local?: Date | string
  }

  export type wp_actionscheduler_logsUncheckedCreateInput = {
    log_id?: bigint | number
    action_id: bigint | number
    message: string
    log_date_gmt?: Date | string
    log_date_local?: Date | string
  }

  export type wp_actionscheduler_logsUpdateInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    log_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_actionscheduler_logsUncheckedUpdateInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    log_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_actionscheduler_logsCreateManyInput = {
    log_id?: bigint | number
    action_id: bigint | number
    message: string
    log_date_gmt?: Date | string
    log_date_local?: Date | string
  }

  export type wp_actionscheduler_logsUpdateManyMutationInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    log_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_actionscheduler_logsUncheckedUpdateManyInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    log_date_local?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_notificationsCreateInput = {
    id?: bigint | number
    slug: string
    title: string
    content: string
    type: string
    level: string
    notification_id?: bigint | number | null
    notification_name?: string | null
    start?: Date | string | null
    end?: Date | string | null
    button1_label?: string | null
    button1_action?: string | null
    button2_label?: string | null
    button2_action?: string | null
    dismissed?: boolean
    created: Date | string
    updated: Date | string
  }

  export type wp_aioseo_notificationsUncheckedCreateInput = {
    id?: bigint | number
    slug: string
    title: string
    content: string
    type: string
    level: string
    notification_id?: bigint | number | null
    notification_name?: string | null
    start?: Date | string | null
    end?: Date | string | null
    button1_label?: string | null
    button1_action?: string | null
    button2_label?: string | null
    button2_action?: string | null
    dismissed?: boolean
    created: Date | string
    updated: Date | string
  }

  export type wp_aioseo_notificationsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    notification_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notification_name?: NullableStringFieldUpdateOperationsInput | string | null
    start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    button1_label?: NullableStringFieldUpdateOperationsInput | string | null
    button1_action?: NullableStringFieldUpdateOperationsInput | string | null
    button2_label?: NullableStringFieldUpdateOperationsInput | string | null
    button2_action?: NullableStringFieldUpdateOperationsInput | string | null
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_notificationsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    notification_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notification_name?: NullableStringFieldUpdateOperationsInput | string | null
    start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    button1_label?: NullableStringFieldUpdateOperationsInput | string | null
    button1_action?: NullableStringFieldUpdateOperationsInput | string | null
    button2_label?: NullableStringFieldUpdateOperationsInput | string | null
    button2_action?: NullableStringFieldUpdateOperationsInput | string | null
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_notificationsCreateManyInput = {
    id?: bigint | number
    slug: string
    title: string
    content: string
    type: string
    level: string
    notification_id?: bigint | number | null
    notification_name?: string | null
    start?: Date | string | null
    end?: Date | string | null
    button1_label?: string | null
    button1_action?: string | null
    button2_label?: string | null
    button2_action?: string | null
    dismissed?: boolean
    created: Date | string
    updated: Date | string
  }

  export type wp_aioseo_notificationsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    notification_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notification_name?: NullableStringFieldUpdateOperationsInput | string | null
    start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    button1_label?: NullableStringFieldUpdateOperationsInput | string | null
    button1_action?: NullableStringFieldUpdateOperationsInput | string | null
    button2_label?: NullableStringFieldUpdateOperationsInput | string | null
    button2_action?: NullableStringFieldUpdateOperationsInput | string | null
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_notificationsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    notification_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notification_name?: NullableStringFieldUpdateOperationsInput | string | null
    start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    button1_label?: NullableStringFieldUpdateOperationsInput | string | null
    button1_action?: NullableStringFieldUpdateOperationsInput | string | null
    button2_label?: NullableStringFieldUpdateOperationsInput | string | null
    button2_action?: NullableStringFieldUpdateOperationsInput | string | null
    dismissed?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_postsCreateInput = {
    id?: bigint | number
    post_id: bigint | number
    title?: string | null
    description?: string | null
    keywords?: string | null
    keyphrases?: string | null
    page_analysis?: string | null
    canonical_url?: string | null
    og_title?: string | null
    og_description?: string | null
    og_object_type?: string | null
    og_image_type?: string | null
    og_image_custom_url?: string | null
    og_image_custom_fields?: string | null
    og_custom_image_width?: number | null
    og_custom_image_height?: number | null
    og_video?: string | null
    og_custom_url?: string | null
    og_article_section?: string | null
    og_article_tags?: string | null
    twitter_use_og?: boolean | null
    twitter_card?: string | null
    twitter_image_type?: string | null
    twitter_image_custom_url?: string | null
    twitter_image_custom_fields?: string | null
    twitter_title?: string | null
    twitter_description?: string | null
    seo_score?: number
    schema_type?: string | null
    schema_type_options?: string | null
    pillar_content?: boolean | null
    robots_default?: boolean
    robots_noindex?: boolean
    robots_noarchive?: boolean
    robots_nosnippet?: boolean
    robots_nofollow?: boolean
    robots_noimageindex?: boolean
    robots_noodp?: boolean
    robots_notranslate?: boolean
    robots_max_snippet?: number | null
    robots_max_videopreview?: number | null
    robots_max_imagepreview?: string | null
    tabs?: string | null
    images?: string | null
    image_scan_date?: Date | string | null
    priority?: string | null
    frequency?: string | null
    videos?: string | null
    video_thumbnail?: string | null
    video_scan_date?: Date | string | null
    local_seo?: string | null
    created: Date | string
    updated: Date | string
  }

  export type wp_aioseo_postsUncheckedCreateInput = {
    id?: bigint | number
    post_id: bigint | number
    title?: string | null
    description?: string | null
    keywords?: string | null
    keyphrases?: string | null
    page_analysis?: string | null
    canonical_url?: string | null
    og_title?: string | null
    og_description?: string | null
    og_object_type?: string | null
    og_image_type?: string | null
    og_image_custom_url?: string | null
    og_image_custom_fields?: string | null
    og_custom_image_width?: number | null
    og_custom_image_height?: number | null
    og_video?: string | null
    og_custom_url?: string | null
    og_article_section?: string | null
    og_article_tags?: string | null
    twitter_use_og?: boolean | null
    twitter_card?: string | null
    twitter_image_type?: string | null
    twitter_image_custom_url?: string | null
    twitter_image_custom_fields?: string | null
    twitter_title?: string | null
    twitter_description?: string | null
    seo_score?: number
    schema_type?: string | null
    schema_type_options?: string | null
    pillar_content?: boolean | null
    robots_default?: boolean
    robots_noindex?: boolean
    robots_noarchive?: boolean
    robots_nosnippet?: boolean
    robots_nofollow?: boolean
    robots_noimageindex?: boolean
    robots_noodp?: boolean
    robots_notranslate?: boolean
    robots_max_snippet?: number | null
    robots_max_videopreview?: number | null
    robots_max_imagepreview?: string | null
    tabs?: string | null
    images?: string | null
    image_scan_date?: Date | string | null
    priority?: string | null
    frequency?: string | null
    videos?: string | null
    video_thumbnail?: string | null
    video_scan_date?: Date | string | null
    local_seo?: string | null
    created: Date | string
    updated: Date | string
  }

  export type wp_aioseo_postsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    keyphrases?: NullableStringFieldUpdateOperationsInput | string | null
    page_analysis?: NullableStringFieldUpdateOperationsInput | string | null
    canonical_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_title?: NullableStringFieldUpdateOperationsInput | string | null
    og_description?: NullableStringFieldUpdateOperationsInput | string | null
    og_object_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_image_width?: NullableIntFieldUpdateOperationsInput | number | null
    og_custom_image_height?: NullableIntFieldUpdateOperationsInput | number | null
    og_video?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_section?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_tags?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_use_og?: NullableBoolFieldUpdateOperationsInput | boolean | null
    twitter_card?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_title?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_description?: NullableStringFieldUpdateOperationsInput | string | null
    seo_score?: IntFieldUpdateOperationsInput | number
    schema_type?: NullableStringFieldUpdateOperationsInput | string | null
    schema_type_options?: NullableStringFieldUpdateOperationsInput | string | null
    pillar_content?: NullableBoolFieldUpdateOperationsInput | boolean | null
    robots_default?: BoolFieldUpdateOperationsInput | boolean
    robots_noindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noarchive?: BoolFieldUpdateOperationsInput | boolean
    robots_nosnippet?: BoolFieldUpdateOperationsInput | boolean
    robots_nofollow?: BoolFieldUpdateOperationsInput | boolean
    robots_noimageindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noodp?: BoolFieldUpdateOperationsInput | boolean
    robots_notranslate?: BoolFieldUpdateOperationsInput | boolean
    robots_max_snippet?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_videopreview?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_imagepreview?: NullableStringFieldUpdateOperationsInput | string | null
    tabs?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    image_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    videos?: NullableStringFieldUpdateOperationsInput | string | null
    video_thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    video_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    local_seo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_postsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    keyphrases?: NullableStringFieldUpdateOperationsInput | string | null
    page_analysis?: NullableStringFieldUpdateOperationsInput | string | null
    canonical_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_title?: NullableStringFieldUpdateOperationsInput | string | null
    og_description?: NullableStringFieldUpdateOperationsInput | string | null
    og_object_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_image_width?: NullableIntFieldUpdateOperationsInput | number | null
    og_custom_image_height?: NullableIntFieldUpdateOperationsInput | number | null
    og_video?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_section?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_tags?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_use_og?: NullableBoolFieldUpdateOperationsInput | boolean | null
    twitter_card?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_title?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_description?: NullableStringFieldUpdateOperationsInput | string | null
    seo_score?: IntFieldUpdateOperationsInput | number
    schema_type?: NullableStringFieldUpdateOperationsInput | string | null
    schema_type_options?: NullableStringFieldUpdateOperationsInput | string | null
    pillar_content?: NullableBoolFieldUpdateOperationsInput | boolean | null
    robots_default?: BoolFieldUpdateOperationsInput | boolean
    robots_noindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noarchive?: BoolFieldUpdateOperationsInput | boolean
    robots_nosnippet?: BoolFieldUpdateOperationsInput | boolean
    robots_nofollow?: BoolFieldUpdateOperationsInput | boolean
    robots_noimageindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noodp?: BoolFieldUpdateOperationsInput | boolean
    robots_notranslate?: BoolFieldUpdateOperationsInput | boolean
    robots_max_snippet?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_videopreview?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_imagepreview?: NullableStringFieldUpdateOperationsInput | string | null
    tabs?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    image_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    videos?: NullableStringFieldUpdateOperationsInput | string | null
    video_thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    video_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    local_seo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_postsCreateManyInput = {
    id?: bigint | number
    post_id: bigint | number
    title?: string | null
    description?: string | null
    keywords?: string | null
    keyphrases?: string | null
    page_analysis?: string | null
    canonical_url?: string | null
    og_title?: string | null
    og_description?: string | null
    og_object_type?: string | null
    og_image_type?: string | null
    og_image_custom_url?: string | null
    og_image_custom_fields?: string | null
    og_custom_image_width?: number | null
    og_custom_image_height?: number | null
    og_video?: string | null
    og_custom_url?: string | null
    og_article_section?: string | null
    og_article_tags?: string | null
    twitter_use_og?: boolean | null
    twitter_card?: string | null
    twitter_image_type?: string | null
    twitter_image_custom_url?: string | null
    twitter_image_custom_fields?: string | null
    twitter_title?: string | null
    twitter_description?: string | null
    seo_score?: number
    schema_type?: string | null
    schema_type_options?: string | null
    pillar_content?: boolean | null
    robots_default?: boolean
    robots_noindex?: boolean
    robots_noarchive?: boolean
    robots_nosnippet?: boolean
    robots_nofollow?: boolean
    robots_noimageindex?: boolean
    robots_noodp?: boolean
    robots_notranslate?: boolean
    robots_max_snippet?: number | null
    robots_max_videopreview?: number | null
    robots_max_imagepreview?: string | null
    tabs?: string | null
    images?: string | null
    image_scan_date?: Date | string | null
    priority?: string | null
    frequency?: string | null
    videos?: string | null
    video_thumbnail?: string | null
    video_scan_date?: Date | string | null
    local_seo?: string | null
    created: Date | string
    updated: Date | string
  }

  export type wp_aioseo_postsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    keyphrases?: NullableStringFieldUpdateOperationsInput | string | null
    page_analysis?: NullableStringFieldUpdateOperationsInput | string | null
    canonical_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_title?: NullableStringFieldUpdateOperationsInput | string | null
    og_description?: NullableStringFieldUpdateOperationsInput | string | null
    og_object_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_image_width?: NullableIntFieldUpdateOperationsInput | number | null
    og_custom_image_height?: NullableIntFieldUpdateOperationsInput | number | null
    og_video?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_section?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_tags?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_use_og?: NullableBoolFieldUpdateOperationsInput | boolean | null
    twitter_card?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_title?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_description?: NullableStringFieldUpdateOperationsInput | string | null
    seo_score?: IntFieldUpdateOperationsInput | number
    schema_type?: NullableStringFieldUpdateOperationsInput | string | null
    schema_type_options?: NullableStringFieldUpdateOperationsInput | string | null
    pillar_content?: NullableBoolFieldUpdateOperationsInput | boolean | null
    robots_default?: BoolFieldUpdateOperationsInput | boolean
    robots_noindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noarchive?: BoolFieldUpdateOperationsInput | boolean
    robots_nosnippet?: BoolFieldUpdateOperationsInput | boolean
    robots_nofollow?: BoolFieldUpdateOperationsInput | boolean
    robots_noimageindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noodp?: BoolFieldUpdateOperationsInput | boolean
    robots_notranslate?: BoolFieldUpdateOperationsInput | boolean
    robots_max_snippet?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_videopreview?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_imagepreview?: NullableStringFieldUpdateOperationsInput | string | null
    tabs?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    image_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    videos?: NullableStringFieldUpdateOperationsInput | string | null
    video_thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    video_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    local_seo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_aioseo_postsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    keywords?: NullableStringFieldUpdateOperationsInput | string | null
    keyphrases?: NullableStringFieldUpdateOperationsInput | string | null
    page_analysis?: NullableStringFieldUpdateOperationsInput | string | null
    canonical_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_title?: NullableStringFieldUpdateOperationsInput | string | null
    og_description?: NullableStringFieldUpdateOperationsInput | string | null
    og_object_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_image_width?: NullableIntFieldUpdateOperationsInput | number | null
    og_custom_image_height?: NullableIntFieldUpdateOperationsInput | number | null
    og_video?: NullableStringFieldUpdateOperationsInput | string | null
    og_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_section?: NullableStringFieldUpdateOperationsInput | string | null
    og_article_tags?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_use_og?: NullableBoolFieldUpdateOperationsInput | boolean | null
    twitter_card?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_type?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_url?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_image_custom_fields?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_title?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_description?: NullableStringFieldUpdateOperationsInput | string | null
    seo_score?: IntFieldUpdateOperationsInput | number
    schema_type?: NullableStringFieldUpdateOperationsInput | string | null
    schema_type_options?: NullableStringFieldUpdateOperationsInput | string | null
    pillar_content?: NullableBoolFieldUpdateOperationsInput | boolean | null
    robots_default?: BoolFieldUpdateOperationsInput | boolean
    robots_noindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noarchive?: BoolFieldUpdateOperationsInput | boolean
    robots_nosnippet?: BoolFieldUpdateOperationsInput | boolean
    robots_nofollow?: BoolFieldUpdateOperationsInput | boolean
    robots_noimageindex?: BoolFieldUpdateOperationsInput | boolean
    robots_noodp?: BoolFieldUpdateOperationsInput | boolean
    robots_notranslate?: BoolFieldUpdateOperationsInput | boolean
    robots_max_snippet?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_videopreview?: NullableIntFieldUpdateOperationsInput | number | null
    robots_max_imagepreview?: NullableStringFieldUpdateOperationsInput | string | null
    tabs?: NullableStringFieldUpdateOperationsInput | string | null
    images?: NullableStringFieldUpdateOperationsInput | string | null
    image_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    videos?: NullableStringFieldUpdateOperationsInput | string | null
    video_thumbnail?: NullableStringFieldUpdateOperationsInput | string | null
    video_scan_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    local_seo?: NullableStringFieldUpdateOperationsInput | string | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_commentmetaCreateInput = {
    meta_id?: bigint | number
    comment_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_commentmetaUncheckedCreateInput = {
    meta_id?: bigint | number
    comment_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_commentmetaUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentmetaUncheckedUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentmetaCreateManyInput = {
    meta_id?: bigint | number
    comment_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_commentmetaUpdateManyMutationInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentmetaUncheckedUpdateManyInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentsCreateInput = {
    comment_ID?: bigint | number
    comment_post_ID?: bigint | number
    comment_author: string
    comment_author_email?: string
    comment_author_url?: string
    comment_author_IP?: string
    comment_date?: Date | string
    comment_date_gmt?: Date | string
    comment_content: string
    comment_karma?: number
    comment_approved?: string
    comment_agent?: string
    comment_type?: string
    comment_parent?: bigint | number
    user_id?: bigint | number
  }

  export type wp_commentsUncheckedCreateInput = {
    comment_ID?: bigint | number
    comment_post_ID?: bigint | number
    comment_author: string
    comment_author_email?: string
    comment_author_url?: string
    comment_author_IP?: string
    comment_date?: Date | string
    comment_date_gmt?: Date | string
    comment_content: string
    comment_karma?: number
    comment_approved?: string
    comment_agent?: string
    comment_type?: string
    comment_parent?: bigint | number
    user_id?: bigint | number
  }

  export type wp_commentsUpdateInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_commentsUncheckedUpdateInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_commentsCreateManyInput = {
    comment_ID?: bigint | number
    comment_post_ID?: bigint | number
    comment_author: string
    comment_author_email?: string
    comment_author_url?: string
    comment_author_IP?: string
    comment_date?: Date | string
    comment_date_gmt?: Date | string
    comment_content: string
    comment_karma?: number
    comment_approved?: string
    comment_agent?: string
    comment_type?: string
    comment_parent?: bigint | number
    user_id?: bigint | number
  }

  export type wp_commentsUpdateManyMutationInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_commentsUncheckedUpdateManyInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_linksCreateInput = {
    link_id?: bigint | number
    link_url?: string
    link_name?: string
    link_image?: string
    link_target?: string
    link_description?: string
    link_visible?: string
    link_owner?: bigint | number
    link_rating?: number
    link_updated?: Date | string
    link_rel?: string
    link_notes: string
    link_rss?: string
  }

  export type wp_linksUncheckedCreateInput = {
    link_id?: bigint | number
    link_url?: string
    link_name?: string
    link_image?: string
    link_target?: string
    link_description?: string
    link_visible?: string
    link_owner?: bigint | number
    link_rating?: number
    link_updated?: Date | string
    link_rel?: string
    link_notes: string
    link_rss?: string
  }

  export type wp_linksUpdateInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_linksUncheckedUpdateInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_linksCreateManyInput = {
    link_id?: bigint | number
    link_url?: string
    link_name?: string
    link_image?: string
    link_target?: string
    link_description?: string
    link_visible?: string
    link_owner?: bigint | number
    link_rating?: number
    link_updated?: Date | string
    link_rel?: string
    link_notes: string
    link_rss?: string
  }

  export type wp_linksUpdateManyMutationInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_linksUncheckedUpdateManyInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_image_storageCreateInput = {
    hash: string
    image: string
    value: string
  }

  export type wp_nextend2_image_storageUncheckedCreateInput = {
    id?: number
    hash: string
    image: string
    value: string
  }

  export type wp_nextend2_image_storageUpdateInput = {
    hash?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_image_storageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    hash?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_image_storageCreateManyInput = {
    id?: number
    hash: string
    image: string
    value: string
  }

  export type wp_nextend2_image_storageUpdateManyMutationInput = {
    hash?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_image_storageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    hash?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_section_storageCreateInput = {
    application: string
    section: string
    referencekey: string
    value: string
    system?: number
    editable?: number
  }

  export type wp_nextend2_section_storageUncheckedCreateInput = {
    id?: number
    application: string
    section: string
    referencekey: string
    value: string
    system?: number
    editable?: number
  }

  export type wp_nextend2_section_storageUpdateInput = {
    application?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    referencekey?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    system?: IntFieldUpdateOperationsInput | number
    editable?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_section_storageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    application?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    referencekey?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    system?: IntFieldUpdateOperationsInput | number
    editable?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_section_storageCreateManyInput = {
    id?: number
    application: string
    section: string
    referencekey: string
    value: string
    system?: number
    editable?: number
  }

  export type wp_nextend2_section_storageUpdateManyMutationInput = {
    application?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    referencekey?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    system?: IntFieldUpdateOperationsInput | number
    editable?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_section_storageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    application?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    referencekey?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    system?: IntFieldUpdateOperationsInput | number
    editable?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_generatorsCreateInput = {
    group: string
    type: string
    params: string
  }

  export type wp_nextend2_smartslider3_generatorsUncheckedCreateInput = {
    id?: number
    group: string
    type: string
    params: string
  }

  export type wp_nextend2_smartslider3_generatorsUpdateInput = {
    group?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_smartslider3_generatorsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    group?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_smartslider3_generatorsCreateManyInput = {
    id?: number
    group: string
    type: string
    params: string
  }

  export type wp_nextend2_smartslider3_generatorsUpdateManyMutationInput = {
    group?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_smartslider3_generatorsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    group?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
  }

  export type wp_nextend2_smartslider3_slidersCreateInput = {
    alias?: string | null
    title: string
    type: string
    params: string
    status?: string
    time: Date | string
    thumbnail: string
    ordering?: number
  }

  export type wp_nextend2_smartslider3_slidersUncheckedCreateInput = {
    id?: number
    alias?: string | null
    title: string
    type: string
    params: string
    status?: string
    time: Date | string
    thumbnail: string
    ordering?: number
  }

  export type wp_nextend2_smartslider3_slidersUpdateInput = {
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_slidersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_slidersCreateManyInput = {
    id?: number
    alias?: string | null
    title: string
    type: string
    params: string
    status?: string
    time: Date | string
    thumbnail: string
    ordering?: number
  }

  export type wp_nextend2_smartslider3_slidersUpdateManyMutationInput = {
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_slidersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    title?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    time?: DateTimeFieldUpdateOperationsInput | Date | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_sliders_xrefCreateInput = {
    group_id: number
    slider_id: number
    ordering?: number
  }

  export type wp_nextend2_smartslider3_sliders_xrefUncheckedCreateInput = {
    group_id: number
    slider_id: number
    ordering?: number
  }

  export type wp_nextend2_smartslider3_sliders_xrefUpdateInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    slider_id?: IntFieldUpdateOperationsInput | number
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_sliders_xrefUncheckedUpdateInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    slider_id?: IntFieldUpdateOperationsInput | number
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_sliders_xrefCreateManyInput = {
    group_id: number
    slider_id: number
    ordering?: number
  }

  export type wp_nextend2_smartslider3_sliders_xrefUpdateManyMutationInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    slider_id?: IntFieldUpdateOperationsInput | number
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_sliders_xrefUncheckedUpdateManyInput = {
    group_id?: IntFieldUpdateOperationsInput | number
    slider_id?: IntFieldUpdateOperationsInput | number
    ordering?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_slidesCreateInput = {
    title: string
    slider: number
    publish_up?: Date | string
    publish_down?: Date | string
    published: boolean
    first: number
    slide?: string | null
    description: string
    thumbnail: string
    params: string
    ordering: number
    generator_id: number
  }

  export type wp_nextend2_smartslider3_slidesUncheckedCreateInput = {
    id?: number
    title: string
    slider: number
    publish_up?: Date | string
    publish_down?: Date | string
    published: boolean
    first: number
    slide?: string | null
    description: string
    thumbnail: string
    params: string
    ordering: number
    generator_id: number
  }

  export type wp_nextend2_smartslider3_slidesUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    slider?: IntFieldUpdateOperationsInput | number
    publish_up?: DateTimeFieldUpdateOperationsInput | Date | string
    publish_down?: DateTimeFieldUpdateOperationsInput | Date | string
    published?: BoolFieldUpdateOperationsInput | boolean
    first?: IntFieldUpdateOperationsInput | number
    slide?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
    generator_id?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_slidesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    slider?: IntFieldUpdateOperationsInput | number
    publish_up?: DateTimeFieldUpdateOperationsInput | Date | string
    publish_down?: DateTimeFieldUpdateOperationsInput | Date | string
    published?: BoolFieldUpdateOperationsInput | boolean
    first?: IntFieldUpdateOperationsInput | number
    slide?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
    generator_id?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_slidesCreateManyInput = {
    id?: number
    title: string
    slider: number
    publish_up?: Date | string
    publish_down?: Date | string
    published: boolean
    first: number
    slide?: string | null
    description: string
    thumbnail: string
    params: string
    ordering: number
    generator_id: number
  }

  export type wp_nextend2_smartslider3_slidesUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    slider?: IntFieldUpdateOperationsInput | number
    publish_up?: DateTimeFieldUpdateOperationsInput | Date | string
    publish_down?: DateTimeFieldUpdateOperationsInput | Date | string
    published?: BoolFieldUpdateOperationsInput | boolean
    first?: IntFieldUpdateOperationsInput | number
    slide?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
    generator_id?: IntFieldUpdateOperationsInput | number
  }

  export type wp_nextend2_smartslider3_slidesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    slider?: IntFieldUpdateOperationsInput | number
    publish_up?: DateTimeFieldUpdateOperationsInput | Date | string
    publish_down?: DateTimeFieldUpdateOperationsInput | Date | string
    published?: BoolFieldUpdateOperationsInput | boolean
    first?: IntFieldUpdateOperationsInput | number
    slide?: NullableStringFieldUpdateOperationsInput | string | null
    description?: StringFieldUpdateOperationsInput | string
    thumbnail?: StringFieldUpdateOperationsInput | string
    params?: StringFieldUpdateOperationsInput | string
    ordering?: IntFieldUpdateOperationsInput | number
    generator_id?: IntFieldUpdateOperationsInput | number
  }

  export type wp_optionsCreateInput = {
    option_id?: bigint | number
    option_name?: string
    option_value: string
    autoload?: string
  }

  export type wp_optionsUncheckedCreateInput = {
    option_id?: bigint | number
    option_name?: string
    option_value: string
    autoload?: string
  }

  export type wp_optionsUpdateInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_optionsUncheckedUpdateInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_optionsCreateManyInput = {
    option_id?: bigint | number
    option_name?: string
    option_value: string
    autoload?: string
  }

  export type wp_optionsUpdateManyMutationInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_optionsUncheckedUpdateManyInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_postmetaCreateInput = {
    meta_id?: bigint | number
    post_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_postmetaUncheckedCreateInput = {
    meta_id?: bigint | number
    post_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_postmetaUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postmetaUncheckedUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postmetaCreateManyInput = {
    meta_id?: bigint | number
    post_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_postmetaUpdateManyMutationInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postmetaUncheckedUpdateManyInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postsCreateInput = {
    ID?: bigint | number
    post_author?: bigint | number
    post_date?: Date | string
    post_date_gmt?: Date | string
    post_content: string
    post_title: string
    post_excerpt: string
    post_status?: string
    comment_status?: string
    ping_status?: string
    post_password?: string
    post_name?: string
    to_ping: string
    pinged: string
    post_modified?: Date | string
    post_modified_gmt?: Date | string
    post_content_filtered: string
    post_parent?: bigint | number
    guid?: string
    menu_order?: number
    post_type?: string
    post_mime_type?: string
    comment_count?: bigint | number
  }

  export type wp_postsUncheckedCreateInput = {
    ID?: bigint | number
    post_author?: bigint | number
    post_date?: Date | string
    post_date_gmt?: Date | string
    post_content: string
    post_title: string
    post_excerpt: string
    post_status?: string
    comment_status?: string
    ping_status?: string
    post_password?: string
    post_name?: string
    to_ping: string
    pinged: string
    post_modified?: Date | string
    post_modified_gmt?: Date | string
    post_content_filtered: string
    post_parent?: bigint | number
    guid?: string
    menu_order?: number
    post_type?: string
    post_mime_type?: string
    comment_count?: bigint | number
  }

  export type wp_postsUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_postsUncheckedUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_postsCreateManyInput = {
    ID?: bigint | number
    post_author?: bigint | number
    post_date?: Date | string
    post_date_gmt?: Date | string
    post_content: string
    post_title: string
    post_excerpt: string
    post_status?: string
    comment_status?: string
    ping_status?: string
    post_password?: string
    post_name?: string
    to_ping: string
    pinged: string
    post_modified?: Date | string
    post_modified_gmt?: Date | string
    post_content_filtered: string
    post_parent?: bigint | number
    guid?: string
    menu_order?: number
    post_type?: string
    post_mime_type?: string
    comment_count?: bigint | number
  }

  export type wp_postsUpdateManyMutationInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_postsUncheckedUpdateManyInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_relationshipsCreateInput = {
    object_id?: bigint | number
    term_taxonomy_id?: bigint | number
    term_order?: number
  }

  export type wp_term_relationshipsUncheckedCreateInput = {
    object_id?: bigint | number
    term_taxonomy_id?: bigint | number
    term_order?: number
  }

  export type wp_term_relationshipsUpdateInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_relationshipsUncheckedUpdateInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_relationshipsCreateManyInput = {
    object_id?: bigint | number
    term_taxonomy_id?: bigint | number
    term_order?: number
  }

  export type wp_term_relationshipsUpdateManyMutationInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_relationshipsUncheckedUpdateManyInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_taxonomyCreateInput = {
    term_taxonomy_id?: bigint | number
    term_id?: bigint | number
    taxonomy?: string
    description: string
    parent?: bigint | number
    count?: bigint | number
  }

  export type wp_term_taxonomyUncheckedCreateInput = {
    term_taxonomy_id?: bigint | number
    term_id?: bigint | number
    taxonomy?: string
    description: string
    parent?: bigint | number
    count?: bigint | number
  }

  export type wp_term_taxonomyUpdateInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_taxonomyUncheckedUpdateInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_taxonomyCreateManyInput = {
    term_taxonomy_id?: bigint | number
    term_id?: bigint | number
    taxonomy?: string
    description: string
    parent?: bigint | number
    count?: bigint | number
  }

  export type wp_term_taxonomyUpdateManyMutationInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_taxonomyUncheckedUpdateManyInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termmetaCreateInput = {
    meta_id?: bigint | number
    term_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_termmetaUncheckedCreateInput = {
    meta_id?: bigint | number
    term_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_termmetaUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termmetaUncheckedUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termmetaCreateManyInput = {
    meta_id?: bigint | number
    term_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_termmetaUpdateManyMutationInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termmetaUncheckedUpdateManyInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termsCreateInput = {
    term_id?: bigint | number
    name?: string
    slug?: string
    term_group?: bigint | number
  }

  export type wp_termsUncheckedCreateInput = {
    term_id?: bigint | number
    name?: string
    slug?: string
    term_group?: bigint | number
  }

  export type wp_termsUpdateInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termsUncheckedUpdateInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termsCreateManyInput = {
    term_id?: bigint | number
    name?: string
    slug?: string
    term_group?: bigint | number
  }

  export type wp_termsUpdateManyMutationInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termsUncheckedUpdateManyInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_um_metadataCreateInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    um_key?: string | null
    um_value?: string | null
  }

  export type wp_um_metadataUncheckedCreateInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    um_key?: string | null
    um_value?: string | null
  }

  export type wp_um_metadataUpdateInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    um_key?: NullableStringFieldUpdateOperationsInput | string | null
    um_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_um_metadataUncheckedUpdateInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    um_key?: NullableStringFieldUpdateOperationsInput | string | null
    um_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_um_metadataCreateManyInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    um_key?: string | null
    um_value?: string | null
  }

  export type wp_um_metadataUpdateManyMutationInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    um_key?: NullableStringFieldUpdateOperationsInput | string | null
    um_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_um_metadataUncheckedUpdateManyInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    um_key?: NullableStringFieldUpdateOperationsInput | string | null
    um_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_user_registration_sessionsCreateInput = {
    session_id?: bigint | number
    session_key: string
    session_value: string
    session_expiry: bigint | number
  }

  export type wp_user_registration_sessionsUncheckedCreateInput = {
    session_id?: bigint | number
    session_key: string
    session_value: string
    session_expiry: bigint | number
  }

  export type wp_user_registration_sessionsUpdateInput = {
    session_id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_key?: StringFieldUpdateOperationsInput | string
    session_value?: StringFieldUpdateOperationsInput | string
    session_expiry?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_user_registration_sessionsUncheckedUpdateInput = {
    session_id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_key?: StringFieldUpdateOperationsInput | string
    session_value?: StringFieldUpdateOperationsInput | string
    session_expiry?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_user_registration_sessionsCreateManyInput = {
    session_id?: bigint | number
    session_key: string
    session_value: string
    session_expiry: bigint | number
  }

  export type wp_user_registration_sessionsUpdateManyMutationInput = {
    session_id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_key?: StringFieldUpdateOperationsInput | string
    session_value?: StringFieldUpdateOperationsInput | string
    session_expiry?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_user_registration_sessionsUncheckedUpdateManyInput = {
    session_id?: BigIntFieldUpdateOperationsInput | bigint | number
    session_key?: StringFieldUpdateOperationsInput | string
    session_value?: StringFieldUpdateOperationsInput | string
    session_expiry?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_usermetaCreateInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_usermetaUncheckedCreateInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_usermetaUpdateInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usermetaUncheckedUpdateInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usermetaCreateManyInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_usermetaUpdateManyMutationInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usermetaUncheckedUpdateManyInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usersCreateInput = {
    ID?: bigint | number
    user_login?: string
    user_pass?: string
    user_nicename?: string
    user_email?: string
    user_url?: string
    user_registered?: Date | string
    user_activation_key?: string
    user_status?: number
    display_name?: string
  }

  export type wp_usersUncheckedCreateInput = {
    ID?: bigint | number
    user_login?: string
    user_pass?: string
    user_nicename?: string
    user_email?: string
    user_url?: string
    user_registered?: Date | string
    user_activation_key?: string
    user_status?: number
    display_name?: string
  }

  export type wp_usersUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_usersUncheckedUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_usersCreateManyInput = {
    ID?: bigint | number
    user_login?: string
    user_pass?: string
    user_nicename?: string
    user_email?: string
    user_url?: string
    user_registered?: Date | string
    user_activation_key?: string
    user_status?: number
    display_name?: string
  }

  export type wp_usersUpdateManyMutationInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_usersUncheckedUpdateManyInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatachartsCreateInput = {
    id?: number
    wpdatatable_id: number
    title: string
    engine: $Enums.wp_wpdatacharts_engine
    type: string
    json_render_data: string
  }

  export type wp_wpdatachartsUncheckedCreateInput = {
    id?: number
    wpdatatable_id: number
    title: string
    engine: $Enums.wp_wpdatacharts_engine
    type: string
    json_render_data: string
  }

  export type wp_wpdatachartsUpdateInput = {
    wpdatatable_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    engine?: Enumwp_wpdatacharts_engineFieldUpdateOperationsInput | $Enums.wp_wpdatacharts_engine
    type?: StringFieldUpdateOperationsInput | string
    json_render_data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatachartsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    wpdatatable_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    engine?: Enumwp_wpdatacharts_engineFieldUpdateOperationsInput | $Enums.wp_wpdatacharts_engine
    type?: StringFieldUpdateOperationsInput | string
    json_render_data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatachartsCreateManyInput = {
    id?: number
    wpdatatable_id: number
    title: string
    engine: $Enums.wp_wpdatacharts_engine
    type: string
    json_render_data: string
  }

  export type wp_wpdatachartsUpdateManyMutationInput = {
    wpdatatable_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    engine?: Enumwp_wpdatacharts_engineFieldUpdateOperationsInput | $Enums.wp_wpdatacharts_engine
    type?: StringFieldUpdateOperationsInput | string
    json_render_data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatachartsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    wpdatatable_id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    engine?: Enumwp_wpdatacharts_engineFieldUpdateOperationsInput | $Enums.wp_wpdatacharts_engine
    type?: StringFieldUpdateOperationsInput | string
    json_render_data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatablesCreateInput = {
    id?: number
    title: string
    show_title?: boolean
    table_type: string
    content: string
    filtering?: boolean
    filtering_form?: boolean
    sorting?: boolean
    tools?: boolean
    server_side?: boolean
    editable?: boolean
    inline_editing?: boolean
    popover_tools?: boolean
    editor_roles?: string
    mysql_table_name?: string
    edit_only_own_rows?: boolean
    userid_column_id?: number
    display_length?: number
    auto_refresh?: number
    fixed_columns?: number
    fixed_layout?: boolean
    responsive?: boolean
    scrollable?: boolean
    word_wrap?: boolean
    hide_before_load?: boolean
    var1?: string
    var2?: string
    var3?: string
    tabletools_config?: string
    advanced_settings: string
    connection?: string
  }

  export type wp_wpdatatablesUncheckedCreateInput = {
    id?: number
    title: string
    show_title?: boolean
    table_type: string
    content: string
    filtering?: boolean
    filtering_form?: boolean
    sorting?: boolean
    tools?: boolean
    server_side?: boolean
    editable?: boolean
    inline_editing?: boolean
    popover_tools?: boolean
    editor_roles?: string
    mysql_table_name?: string
    edit_only_own_rows?: boolean
    userid_column_id?: number
    display_length?: number
    auto_refresh?: number
    fixed_columns?: number
    fixed_layout?: boolean
    responsive?: boolean
    scrollable?: boolean
    word_wrap?: boolean
    hide_before_load?: boolean
    var1?: string
    var2?: string
    var3?: string
    tabletools_config?: string
    advanced_settings: string
    connection?: string
  }

  export type wp_wpdatatablesUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    show_title?: BoolFieldUpdateOperationsInput | boolean
    table_type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    filtering?: BoolFieldUpdateOperationsInput | boolean
    filtering_form?: BoolFieldUpdateOperationsInput | boolean
    sorting?: BoolFieldUpdateOperationsInput | boolean
    tools?: BoolFieldUpdateOperationsInput | boolean
    server_side?: BoolFieldUpdateOperationsInput | boolean
    editable?: BoolFieldUpdateOperationsInput | boolean
    inline_editing?: BoolFieldUpdateOperationsInput | boolean
    popover_tools?: BoolFieldUpdateOperationsInput | boolean
    editor_roles?: StringFieldUpdateOperationsInput | string
    mysql_table_name?: StringFieldUpdateOperationsInput | string
    edit_only_own_rows?: BoolFieldUpdateOperationsInput | boolean
    userid_column_id?: IntFieldUpdateOperationsInput | number
    display_length?: IntFieldUpdateOperationsInput | number
    auto_refresh?: IntFieldUpdateOperationsInput | number
    fixed_columns?: IntFieldUpdateOperationsInput | number
    fixed_layout?: BoolFieldUpdateOperationsInput | boolean
    responsive?: BoolFieldUpdateOperationsInput | boolean
    scrollable?: BoolFieldUpdateOperationsInput | boolean
    word_wrap?: BoolFieldUpdateOperationsInput | boolean
    hide_before_load?: BoolFieldUpdateOperationsInput | boolean
    var1?: StringFieldUpdateOperationsInput | string
    var2?: StringFieldUpdateOperationsInput | string
    var3?: StringFieldUpdateOperationsInput | string
    tabletools_config?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatablesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    show_title?: BoolFieldUpdateOperationsInput | boolean
    table_type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    filtering?: BoolFieldUpdateOperationsInput | boolean
    filtering_form?: BoolFieldUpdateOperationsInput | boolean
    sorting?: BoolFieldUpdateOperationsInput | boolean
    tools?: BoolFieldUpdateOperationsInput | boolean
    server_side?: BoolFieldUpdateOperationsInput | boolean
    editable?: BoolFieldUpdateOperationsInput | boolean
    inline_editing?: BoolFieldUpdateOperationsInput | boolean
    popover_tools?: BoolFieldUpdateOperationsInput | boolean
    editor_roles?: StringFieldUpdateOperationsInput | string
    mysql_table_name?: StringFieldUpdateOperationsInput | string
    edit_only_own_rows?: BoolFieldUpdateOperationsInput | boolean
    userid_column_id?: IntFieldUpdateOperationsInput | number
    display_length?: IntFieldUpdateOperationsInput | number
    auto_refresh?: IntFieldUpdateOperationsInput | number
    fixed_columns?: IntFieldUpdateOperationsInput | number
    fixed_layout?: BoolFieldUpdateOperationsInput | boolean
    responsive?: BoolFieldUpdateOperationsInput | boolean
    scrollable?: BoolFieldUpdateOperationsInput | boolean
    word_wrap?: BoolFieldUpdateOperationsInput | boolean
    hide_before_load?: BoolFieldUpdateOperationsInput | boolean
    var1?: StringFieldUpdateOperationsInput | string
    var2?: StringFieldUpdateOperationsInput | string
    var3?: StringFieldUpdateOperationsInput | string
    tabletools_config?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatablesCreateManyInput = {
    id?: number
    title: string
    show_title?: boolean
    table_type: string
    content: string
    filtering?: boolean
    filtering_form?: boolean
    sorting?: boolean
    tools?: boolean
    server_side?: boolean
    editable?: boolean
    inline_editing?: boolean
    popover_tools?: boolean
    editor_roles?: string
    mysql_table_name?: string
    edit_only_own_rows?: boolean
    userid_column_id?: number
    display_length?: number
    auto_refresh?: number
    fixed_columns?: number
    fixed_layout?: boolean
    responsive?: boolean
    scrollable?: boolean
    word_wrap?: boolean
    hide_before_load?: boolean
    var1?: string
    var2?: string
    var3?: string
    tabletools_config?: string
    advanced_settings: string
    connection?: string
  }

  export type wp_wpdatatablesUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    show_title?: BoolFieldUpdateOperationsInput | boolean
    table_type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    filtering?: BoolFieldUpdateOperationsInput | boolean
    filtering_form?: BoolFieldUpdateOperationsInput | boolean
    sorting?: BoolFieldUpdateOperationsInput | boolean
    tools?: BoolFieldUpdateOperationsInput | boolean
    server_side?: BoolFieldUpdateOperationsInput | boolean
    editable?: BoolFieldUpdateOperationsInput | boolean
    inline_editing?: BoolFieldUpdateOperationsInput | boolean
    popover_tools?: BoolFieldUpdateOperationsInput | boolean
    editor_roles?: StringFieldUpdateOperationsInput | string
    mysql_table_name?: StringFieldUpdateOperationsInput | string
    edit_only_own_rows?: BoolFieldUpdateOperationsInput | boolean
    userid_column_id?: IntFieldUpdateOperationsInput | number
    display_length?: IntFieldUpdateOperationsInput | number
    auto_refresh?: IntFieldUpdateOperationsInput | number
    fixed_columns?: IntFieldUpdateOperationsInput | number
    fixed_layout?: BoolFieldUpdateOperationsInput | boolean
    responsive?: BoolFieldUpdateOperationsInput | boolean
    scrollable?: BoolFieldUpdateOperationsInput | boolean
    word_wrap?: BoolFieldUpdateOperationsInput | boolean
    hide_before_load?: BoolFieldUpdateOperationsInput | boolean
    var1?: StringFieldUpdateOperationsInput | string
    var2?: StringFieldUpdateOperationsInput | string
    var3?: StringFieldUpdateOperationsInput | string
    tabletools_config?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatablesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    show_title?: BoolFieldUpdateOperationsInput | boolean
    table_type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    filtering?: BoolFieldUpdateOperationsInput | boolean
    filtering_form?: BoolFieldUpdateOperationsInput | boolean
    sorting?: BoolFieldUpdateOperationsInput | boolean
    tools?: BoolFieldUpdateOperationsInput | boolean
    server_side?: BoolFieldUpdateOperationsInput | boolean
    editable?: BoolFieldUpdateOperationsInput | boolean
    inline_editing?: BoolFieldUpdateOperationsInput | boolean
    popover_tools?: BoolFieldUpdateOperationsInput | boolean
    editor_roles?: StringFieldUpdateOperationsInput | string
    mysql_table_name?: StringFieldUpdateOperationsInput | string
    edit_only_own_rows?: BoolFieldUpdateOperationsInput | boolean
    userid_column_id?: IntFieldUpdateOperationsInput | number
    display_length?: IntFieldUpdateOperationsInput | number
    auto_refresh?: IntFieldUpdateOperationsInput | number
    fixed_columns?: IntFieldUpdateOperationsInput | number
    fixed_layout?: BoolFieldUpdateOperationsInput | boolean
    responsive?: BoolFieldUpdateOperationsInput | boolean
    scrollable?: BoolFieldUpdateOperationsInput | boolean
    word_wrap?: BoolFieldUpdateOperationsInput | boolean
    hide_before_load?: BoolFieldUpdateOperationsInput | boolean
    var1?: StringFieldUpdateOperationsInput | string
    var2?: StringFieldUpdateOperationsInput | string
    var3?: StringFieldUpdateOperationsInput | string
    tabletools_config?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    connection?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatables_columnsCreateInput = {
    id?: number
    table_id: number
    orig_header: string
    display_header: string
    filter_type: $Enums.wp_wpdatatables_columns_filter_type
    column_type: $Enums.wp_wpdatatables_columns_column_type
    input_type?: $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: boolean
    id_column?: boolean
    group_column?: boolean
    sort_column?: boolean
    hide_on_phones?: boolean
    hide_on_tablets?: boolean
    visible?: boolean
    sum_column?: boolean
    skip_thousands_separator?: boolean
    width?: string
    possible_values: string
    default_value?: string
    css_class?: string
    text_before?: string
    text_after?: string
    formatting_rules: string
    calc_formula: string
    color?: string
    advanced_settings: string
    pos?: number
  }

  export type wp_wpdatatables_columnsUncheckedCreateInput = {
    id?: number
    table_id: number
    orig_header: string
    display_header: string
    filter_type: $Enums.wp_wpdatatables_columns_filter_type
    column_type: $Enums.wp_wpdatatables_columns_column_type
    input_type?: $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: boolean
    id_column?: boolean
    group_column?: boolean
    sort_column?: boolean
    hide_on_phones?: boolean
    hide_on_tablets?: boolean
    visible?: boolean
    sum_column?: boolean
    skip_thousands_separator?: boolean
    width?: string
    possible_values: string
    default_value?: string
    css_class?: string
    text_before?: string
    text_after?: string
    formatting_rules: string
    calc_formula: string
    color?: string
    advanced_settings: string
    pos?: number
  }

  export type wp_wpdatatables_columnsUpdateInput = {
    table_id?: IntFieldUpdateOperationsInput | number
    orig_header?: StringFieldUpdateOperationsInput | string
    display_header?: StringFieldUpdateOperationsInput | string
    filter_type?: Enumwp_wpdatatables_columns_filter_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_filter_type
    column_type?: Enumwp_wpdatatables_columns_column_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_column_type
    input_type?: Enumwp_wpdatatables_columns_input_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: BoolFieldUpdateOperationsInput | boolean
    id_column?: BoolFieldUpdateOperationsInput | boolean
    group_column?: BoolFieldUpdateOperationsInput | boolean
    sort_column?: BoolFieldUpdateOperationsInput | boolean
    hide_on_phones?: BoolFieldUpdateOperationsInput | boolean
    hide_on_tablets?: BoolFieldUpdateOperationsInput | boolean
    visible?: BoolFieldUpdateOperationsInput | boolean
    sum_column?: BoolFieldUpdateOperationsInput | boolean
    skip_thousands_separator?: BoolFieldUpdateOperationsInput | boolean
    width?: StringFieldUpdateOperationsInput | string
    possible_values?: StringFieldUpdateOperationsInput | string
    default_value?: StringFieldUpdateOperationsInput | string
    css_class?: StringFieldUpdateOperationsInput | string
    text_before?: StringFieldUpdateOperationsInput | string
    text_after?: StringFieldUpdateOperationsInput | string
    formatting_rules?: StringFieldUpdateOperationsInput | string
    calc_formula?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    pos?: IntFieldUpdateOperationsInput | number
  }

  export type wp_wpdatatables_columnsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    table_id?: IntFieldUpdateOperationsInput | number
    orig_header?: StringFieldUpdateOperationsInput | string
    display_header?: StringFieldUpdateOperationsInput | string
    filter_type?: Enumwp_wpdatatables_columns_filter_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_filter_type
    column_type?: Enumwp_wpdatatables_columns_column_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_column_type
    input_type?: Enumwp_wpdatatables_columns_input_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: BoolFieldUpdateOperationsInput | boolean
    id_column?: BoolFieldUpdateOperationsInput | boolean
    group_column?: BoolFieldUpdateOperationsInput | boolean
    sort_column?: BoolFieldUpdateOperationsInput | boolean
    hide_on_phones?: BoolFieldUpdateOperationsInput | boolean
    hide_on_tablets?: BoolFieldUpdateOperationsInput | boolean
    visible?: BoolFieldUpdateOperationsInput | boolean
    sum_column?: BoolFieldUpdateOperationsInput | boolean
    skip_thousands_separator?: BoolFieldUpdateOperationsInput | boolean
    width?: StringFieldUpdateOperationsInput | string
    possible_values?: StringFieldUpdateOperationsInput | string
    default_value?: StringFieldUpdateOperationsInput | string
    css_class?: StringFieldUpdateOperationsInput | string
    text_before?: StringFieldUpdateOperationsInput | string
    text_after?: StringFieldUpdateOperationsInput | string
    formatting_rules?: StringFieldUpdateOperationsInput | string
    calc_formula?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    pos?: IntFieldUpdateOperationsInput | number
  }

  export type wp_wpdatatables_columnsCreateManyInput = {
    id?: number
    table_id: number
    orig_header: string
    display_header: string
    filter_type: $Enums.wp_wpdatatables_columns_filter_type
    column_type: $Enums.wp_wpdatatables_columns_column_type
    input_type?: $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: boolean
    id_column?: boolean
    group_column?: boolean
    sort_column?: boolean
    hide_on_phones?: boolean
    hide_on_tablets?: boolean
    visible?: boolean
    sum_column?: boolean
    skip_thousands_separator?: boolean
    width?: string
    possible_values: string
    default_value?: string
    css_class?: string
    text_before?: string
    text_after?: string
    formatting_rules: string
    calc_formula: string
    color?: string
    advanced_settings: string
    pos?: number
  }

  export type wp_wpdatatables_columnsUpdateManyMutationInput = {
    table_id?: IntFieldUpdateOperationsInput | number
    orig_header?: StringFieldUpdateOperationsInput | string
    display_header?: StringFieldUpdateOperationsInput | string
    filter_type?: Enumwp_wpdatatables_columns_filter_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_filter_type
    column_type?: Enumwp_wpdatatables_columns_column_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_column_type
    input_type?: Enumwp_wpdatatables_columns_input_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: BoolFieldUpdateOperationsInput | boolean
    id_column?: BoolFieldUpdateOperationsInput | boolean
    group_column?: BoolFieldUpdateOperationsInput | boolean
    sort_column?: BoolFieldUpdateOperationsInput | boolean
    hide_on_phones?: BoolFieldUpdateOperationsInput | boolean
    hide_on_tablets?: BoolFieldUpdateOperationsInput | boolean
    visible?: BoolFieldUpdateOperationsInput | boolean
    sum_column?: BoolFieldUpdateOperationsInput | boolean
    skip_thousands_separator?: BoolFieldUpdateOperationsInput | boolean
    width?: StringFieldUpdateOperationsInput | string
    possible_values?: StringFieldUpdateOperationsInput | string
    default_value?: StringFieldUpdateOperationsInput | string
    css_class?: StringFieldUpdateOperationsInput | string
    text_before?: StringFieldUpdateOperationsInput | string
    text_after?: StringFieldUpdateOperationsInput | string
    formatting_rules?: StringFieldUpdateOperationsInput | string
    calc_formula?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    pos?: IntFieldUpdateOperationsInput | number
  }

  export type wp_wpdatatables_columnsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    table_id?: IntFieldUpdateOperationsInput | number
    orig_header?: StringFieldUpdateOperationsInput | string
    display_header?: StringFieldUpdateOperationsInput | string
    filter_type?: Enumwp_wpdatatables_columns_filter_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_filter_type
    column_type?: Enumwp_wpdatatables_columns_column_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_column_type
    input_type?: Enumwp_wpdatatables_columns_input_typeFieldUpdateOperationsInput | $Enums.wp_wpdatatables_columns_input_type
    input_mandatory?: BoolFieldUpdateOperationsInput | boolean
    id_column?: BoolFieldUpdateOperationsInput | boolean
    group_column?: BoolFieldUpdateOperationsInput | boolean
    sort_column?: BoolFieldUpdateOperationsInput | boolean
    hide_on_phones?: BoolFieldUpdateOperationsInput | boolean
    hide_on_tablets?: BoolFieldUpdateOperationsInput | boolean
    visible?: BoolFieldUpdateOperationsInput | boolean
    sum_column?: BoolFieldUpdateOperationsInput | boolean
    skip_thousands_separator?: BoolFieldUpdateOperationsInput | boolean
    width?: StringFieldUpdateOperationsInput | string
    possible_values?: StringFieldUpdateOperationsInput | string
    default_value?: StringFieldUpdateOperationsInput | string
    css_class?: StringFieldUpdateOperationsInput | string
    text_before?: StringFieldUpdateOperationsInput | string
    text_after?: StringFieldUpdateOperationsInput | string
    formatting_rules?: StringFieldUpdateOperationsInput | string
    calc_formula?: StringFieldUpdateOperationsInput | string
    color?: StringFieldUpdateOperationsInput | string
    advanced_settings?: StringFieldUpdateOperationsInput | string
    pos?: IntFieldUpdateOperationsInput | number
  }

  export type wp_wpdatatables_rowsCreateInput = {
    id?: number
    table_id: number
    data: string
  }

  export type wp_wpdatatables_rowsUncheckedCreateInput = {
    id?: number
    table_id: number
    data: string
  }

  export type wp_wpdatatables_rowsUpdateInput = {
    table_id?: IntFieldUpdateOperationsInput | number
    data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatables_rowsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    table_id?: IntFieldUpdateOperationsInput | number
    data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatables_rowsCreateManyInput = {
    id?: number
    table_id: number
    data: string
  }

  export type wp_wpdatatables_rowsUpdateManyMutationInput = {
    table_id?: IntFieldUpdateOperationsInput | number
    data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpdatatables_rowsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    table_id?: IntFieldUpdateOperationsInput | number
    data?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpforms_tasks_metaCreateInput = {
    id?: bigint | number
    action: string
    data: string
    date: Date | string
  }

  export type wp_wpforms_tasks_metaUncheckedCreateInput = {
    id?: bigint | number
    action: string
    data: string
    date: Date | string
  }

  export type wp_wpforms_tasks_metaUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    action?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpforms_tasks_metaUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    action?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpforms_tasks_metaCreateManyInput = {
    id?: bigint | number
    action: string
    data: string
    date: Date | string
  }

  export type wp_wpforms_tasks_metaUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    action?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpforms_tasks_metaUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    action?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentCreateNestedManyWithoutPostedByInput
    tickets?: TicketCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionCreateNestedManyWithoutUserInput
    search?: SearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioUncheckedCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentUncheckedCreateNestedManyWithoutPostedByInput
    tickets?: TicketUncheckedCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionUncheckedCreateNestedManyWithoutUserInput
    search?: SearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUpdateManyWithoutUserNestedInput
    search?: SearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUncheckedUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUncheckedUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUncheckedUpdateManyWithoutUserNestedInput
    search?: SearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
  }

  export type UserUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TicketCreateInput = {
    id?: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    comments?: TicketCommentCreateNestedManyWithoutTicketInput
    documents?: TicketDocumentCreateNestedManyWithoutTicketInput
    postedBy: UserCreateNestedOneWithoutTicketsInput
  }

  export type TicketUncheckedCreateInput = {
    id?: number
    userId: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    comments?: TicketCommentUncheckedCreateNestedManyWithoutTicketInput
    documents?: TicketDocumentUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: TicketCommentUpdateManyWithoutTicketNestedInput
    documents?: TicketDocumentUpdateManyWithoutTicketNestedInput
    postedBy?: UserUpdateOneRequiredWithoutTicketsNestedInput
  }

  export type TicketUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: TicketCommentUncheckedUpdateManyWithoutTicketNestedInput
    documents?: TicketDocumentUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketCreateManyInput = {
    id?: number
    userId: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketDocumentCreateInput = {
    id?: number
    url: string
    name: string
    size: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    ticket: TicketCreateNestedOneWithoutDocumentsInput
  }

  export type TicketDocumentUncheckedCreateInput = {
    id?: number
    url: string
    name: string
    size: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    ticketId: number
  }

  export type TicketDocumentUpdateInput = {
    url?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutDocumentsNestedInput
  }

  export type TicketDocumentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketId?: IntFieldUpdateOperationsInput | number
  }

  export type TicketDocumentCreateManyInput = {
    id?: number
    url: string
    name: string
    size: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    ticketId: number
  }

  export type TicketDocumentUpdateManyMutationInput = {
    url?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketDocumentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticketId?: IntFieldUpdateOperationsInput | number
  }

  export type TicketCommentCreateInput = {
    id?: number
    text: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    ticket: TicketCreateNestedOneWithoutCommentsInput
    postedBy: UserCreateNestedOneWithoutTicketCommentsInput
  }

  export type TicketCommentUncheckedCreateInput = {
    id?: number
    text: string
    ticketId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketCommentUpdateInput = {
    text?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutCommentsNestedInput
    postedBy?: UserUpdateOneRequiredWithoutTicketCommentsNestedInput
  }

  export type TicketCommentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    ticketId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCommentCreateManyInput = {
    id?: number
    text: string
    ticketId: number
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketCommentUpdateManyMutationInput = {
    text?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCommentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    ticketId?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSubscriptionCreateInput = {
    id?: number
    subscriptionId: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    user: UserCreateNestedOneWithoutUserSubscriptionInput
  }

  export type UserSubscriptionUncheckedCreateInput = {
    id?: number
    userId: number
    subscriptionId: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type UserSubscriptionUpdateInput = {
    subscriptionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutUserSubscriptionNestedInput
  }

  export type UserSubscriptionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    subscriptionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSubscriptionCreateManyInput = {
    id?: number
    userId: number
    subscriptionId: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type UserSubscriptionUpdateManyMutationInput = {
    subscriptionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSubscriptionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    subscriptionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PortfolioCreateInput = {
    id?: number
    name: string
    filters: JsonNullValueInput | InputJsonValue
    tableName: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    user: UserCreateNestedOneWithoutPortfolioInput
  }

  export type PortfolioUncheckedCreateInput = {
    id?: number
    userId: number
    name: string
    filters: JsonNullValueInput | InputJsonValue
    tableName: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type PortfolioUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    filters?: JsonNullValueInput | InputJsonValue
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutPortfolioNestedInput
  }

  export type PortfolioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    filters?: JsonNullValueInput | InputJsonValue
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PortfolioCreateManyInput = {
    id?: number
    userId: number
    name: string
    filters: JsonNullValueInput | InputJsonValue
    tableName: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type PortfolioUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    filters?: JsonNullValueInput | InputJsonValue
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PortfolioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    filters?: JsonNullValueInput | InputJsonValue
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sentenceallviewCreateInput = {
    id: number
    release_date?: Date | string | null
    pr_site?: string | null
    Targetyear_s?: string | null
    ArticleTargetYear?: string | null
    sentence_carbon?: bigint | number | null
    full_text?: string | null
    PressReleaseMonth?: string | null
    PressReleaseFullClean?: string | null
    sentence_renewables?: bigint | number | null
    sentence_suppliers?: bigint | number | null
    sentence_gender?: bigint | number | null
    Company?: string | null
    Annual_Report_Date?: string | null
    title?: string | null
    emails?: string | null
    sentence_other?: bigint | number | null
    Source_link?: string | null
    Source_Date?: string | null
    PressReleaseFullCleanstep1?: string | null
    sentence_waste?: bigint | number | null
    source?: string | null
    sentence_water?: bigint | number | null
    PressReleaseYear?: string | null
    ticker?: string | null
    SentenceTargetYear?: string | null
    Target_sentence?: string | null
    upload_date?: string | null
    PageURL?: string | null
    DocURL?: string | null
    DocTitle?: string | null
    DocName?: string | null
    Target_Sentence_Page?: string | null
    x?: string | null
    Member_SP500?: string | null
    Member_Russell1000?: string | null
    ScrapingCodeSetUp?: string | null
    Tickers?: string | null
    PRAgency?: string | null
    Domain?: string | null
    PressURL?: string | null
    SubscribedEsgroadmap?: string | null
    SubscribedJames?: string | null
    PlainTextSubscription?: string | null
    AnnualReportsURL?: string | null
    AnnualReportPDF2020?: string | null
    ESGReportsURL?: string | null
    ESGReportPDF2020?: string | null
    Country?: string | null
    SectorCode1?: string | null
    SectorName1?: string | null
    SectorCode2?: string | null
    SectorName2?: string | null
    SectorCode3?: string | null
    SectorName3?: string | null
    SectorCode4?: string | null
    SectorName4?: string | null
    SectorCode5?: string | null
    SectorName5?: string | null
    WorkedBy?: string | null
    CommentsNotes?: string | null
    CarbonSentenceAvailable?: string | null
  }

  export type sentenceallviewUncheckedCreateInput = {
    id: number
    release_date?: Date | string | null
    pr_site?: string | null
    Targetyear_s?: string | null
    ArticleTargetYear?: string | null
    sentence_carbon?: bigint | number | null
    full_text?: string | null
    PressReleaseMonth?: string | null
    PressReleaseFullClean?: string | null
    sentence_renewables?: bigint | number | null
    sentence_suppliers?: bigint | number | null
    sentence_gender?: bigint | number | null
    Company?: string | null
    Annual_Report_Date?: string | null
    title?: string | null
    emails?: string | null
    sentence_other?: bigint | number | null
    Source_link?: string | null
    Source_Date?: string | null
    PressReleaseFullCleanstep1?: string | null
    sentence_waste?: bigint | number | null
    source?: string | null
    sentence_water?: bigint | number | null
    PressReleaseYear?: string | null
    ticker?: string | null
    SentenceTargetYear?: string | null
    Target_sentence?: string | null
    upload_date?: string | null
    PageURL?: string | null
    DocURL?: string | null
    DocTitle?: string | null
    DocName?: string | null
    Target_Sentence_Page?: string | null
    x?: string | null
    Member_SP500?: string | null
    Member_Russell1000?: string | null
    ScrapingCodeSetUp?: string | null
    Tickers?: string | null
    PRAgency?: string | null
    Domain?: string | null
    PressURL?: string | null
    SubscribedEsgroadmap?: string | null
    SubscribedJames?: string | null
    PlainTextSubscription?: string | null
    AnnualReportsURL?: string | null
    AnnualReportPDF2020?: string | null
    ESGReportsURL?: string | null
    ESGReportPDF2020?: string | null
    Country?: string | null
    SectorCode1?: string | null
    SectorName1?: string | null
    SectorCode2?: string | null
    SectorName2?: string | null
    SectorCode3?: string | null
    SectorName3?: string | null
    SectorCode4?: string | null
    SectorName4?: string | null
    SectorCode5?: string | null
    SectorName5?: string | null
    WorkedBy?: string | null
    CommentsNotes?: string | null
    CarbonSentenceAvailable?: string | null
  }

  export type sentenceallviewUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    release_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_SP500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_Russell1000?: NullableStringFieldUpdateOperationsInput | string | null
    ScrapingCodeSetUp?: NullableStringFieldUpdateOperationsInput | string | null
    Tickers?: NullableStringFieldUpdateOperationsInput | string | null
    PRAgency?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    PressURL?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedEsgroadmap?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedJames?: NullableStringFieldUpdateOperationsInput | string | null
    PlainTextSubscription?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode5?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName5?: NullableStringFieldUpdateOperationsInput | string | null
    WorkedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CommentsNotes?: NullableStringFieldUpdateOperationsInput | string | null
    CarbonSentenceAvailable?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sentenceallviewUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    release_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_SP500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_Russell1000?: NullableStringFieldUpdateOperationsInput | string | null
    ScrapingCodeSetUp?: NullableStringFieldUpdateOperationsInput | string | null
    Tickers?: NullableStringFieldUpdateOperationsInput | string | null
    PRAgency?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    PressURL?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedEsgroadmap?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedJames?: NullableStringFieldUpdateOperationsInput | string | null
    PlainTextSubscription?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode5?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName5?: NullableStringFieldUpdateOperationsInput | string | null
    WorkedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CommentsNotes?: NullableStringFieldUpdateOperationsInput | string | null
    CarbonSentenceAvailable?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sentenceallviewCreateManyInput = {
    id: number
    release_date?: Date | string | null
    pr_site?: string | null
    Targetyear_s?: string | null
    ArticleTargetYear?: string | null
    sentence_carbon?: bigint | number | null
    full_text?: string | null
    PressReleaseMonth?: string | null
    PressReleaseFullClean?: string | null
    sentence_renewables?: bigint | number | null
    sentence_suppliers?: bigint | number | null
    sentence_gender?: bigint | number | null
    Company?: string | null
    Annual_Report_Date?: string | null
    title?: string | null
    emails?: string | null
    sentence_other?: bigint | number | null
    Source_link?: string | null
    Source_Date?: string | null
    PressReleaseFullCleanstep1?: string | null
    sentence_waste?: bigint | number | null
    source?: string | null
    sentence_water?: bigint | number | null
    PressReleaseYear?: string | null
    ticker?: string | null
    SentenceTargetYear?: string | null
    Target_sentence?: string | null
    upload_date?: string | null
    PageURL?: string | null
    DocURL?: string | null
    DocTitle?: string | null
    DocName?: string | null
    Target_Sentence_Page?: string | null
    x?: string | null
    Member_SP500?: string | null
    Member_Russell1000?: string | null
    ScrapingCodeSetUp?: string | null
    Tickers?: string | null
    PRAgency?: string | null
    Domain?: string | null
    PressURL?: string | null
    SubscribedEsgroadmap?: string | null
    SubscribedJames?: string | null
    PlainTextSubscription?: string | null
    AnnualReportsURL?: string | null
    AnnualReportPDF2020?: string | null
    ESGReportsURL?: string | null
    ESGReportPDF2020?: string | null
    Country?: string | null
    SectorCode1?: string | null
    SectorName1?: string | null
    SectorCode2?: string | null
    SectorName2?: string | null
    SectorCode3?: string | null
    SectorName3?: string | null
    SectorCode4?: string | null
    SectorName4?: string | null
    SectorCode5?: string | null
    SectorName5?: string | null
    WorkedBy?: string | null
    CommentsNotes?: string | null
    CarbonSentenceAvailable?: string | null
  }

  export type sentenceallviewUpdateManyMutationInput = {
    id?: IntFieldUpdateOperationsInput | number
    release_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_SP500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_Russell1000?: NullableStringFieldUpdateOperationsInput | string | null
    ScrapingCodeSetUp?: NullableStringFieldUpdateOperationsInput | string | null
    Tickers?: NullableStringFieldUpdateOperationsInput | string | null
    PRAgency?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    PressURL?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedEsgroadmap?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedJames?: NullableStringFieldUpdateOperationsInput | string | null
    PlainTextSubscription?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode5?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName5?: NullableStringFieldUpdateOperationsInput | string | null
    WorkedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CommentsNotes?: NullableStringFieldUpdateOperationsInput | string | null
    CarbonSentenceAvailable?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sentenceallviewUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    release_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pr_site?: NullableStringFieldUpdateOperationsInput | string | null
    Targetyear_s?: NullableStringFieldUpdateOperationsInput | string | null
    ArticleTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_carbon?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    full_text?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseMonth?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullClean?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_renewables?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_suppliers?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    sentence_gender?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Company?: NullableStringFieldUpdateOperationsInput | string | null
    Annual_Report_Date?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    emails?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_other?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    Source_link?: NullableStringFieldUpdateOperationsInput | string | null
    Source_Date?: NullableStringFieldUpdateOperationsInput | string | null
    PressReleaseFullCleanstep1?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_waste?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    source?: NullableStringFieldUpdateOperationsInput | string | null
    sentence_water?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    PressReleaseYear?: NullableStringFieldUpdateOperationsInput | string | null
    ticker?: NullableStringFieldUpdateOperationsInput | string | null
    SentenceTargetYear?: NullableStringFieldUpdateOperationsInput | string | null
    Target_sentence?: NullableStringFieldUpdateOperationsInput | string | null
    upload_date?: NullableStringFieldUpdateOperationsInput | string | null
    PageURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocURL?: NullableStringFieldUpdateOperationsInput | string | null
    DocTitle?: NullableStringFieldUpdateOperationsInput | string | null
    DocName?: NullableStringFieldUpdateOperationsInput | string | null
    Target_Sentence_Page?: NullableStringFieldUpdateOperationsInput | string | null
    x?: NullableStringFieldUpdateOperationsInput | string | null
    Member_SP500?: NullableStringFieldUpdateOperationsInput | string | null
    Member_Russell1000?: NullableStringFieldUpdateOperationsInput | string | null
    ScrapingCodeSetUp?: NullableStringFieldUpdateOperationsInput | string | null
    Tickers?: NullableStringFieldUpdateOperationsInput | string | null
    PRAgency?: NullableStringFieldUpdateOperationsInput | string | null
    Domain?: NullableStringFieldUpdateOperationsInput | string | null
    PressURL?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedEsgroadmap?: NullableStringFieldUpdateOperationsInput | string | null
    SubscribedJames?: NullableStringFieldUpdateOperationsInput | string | null
    PlainTextSubscription?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    AnnualReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportsURL?: NullableStringFieldUpdateOperationsInput | string | null
    ESGReportPDF2020?: NullableStringFieldUpdateOperationsInput | string | null
    Country?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName1?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName2?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName3?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName4?: NullableStringFieldUpdateOperationsInput | string | null
    SectorCode5?: NullableStringFieldUpdateOperationsInput | string | null
    SectorName5?: NullableStringFieldUpdateOperationsInput | string | null
    WorkedBy?: NullableStringFieldUpdateOperationsInput | string | null
    CommentsNotes?: NullableStringFieldUpdateOperationsInput | string | null
    CarbonSentenceAvailable?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SearchCreateInput = {
    id?: string
    keyword: string
    tableName: string
    createdAt?: Date | string
    lastChecked?: Date | string | null
    user: UserCreateNestedOneWithoutSearchInput
  }

  export type SearchUncheckedCreateInput = {
    id?: string
    userId: number
    keyword: string
    tableName: string
    createdAt?: Date | string
    lastChecked?: Date | string | null
  }

  export type SearchUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyword?: StringFieldUpdateOperationsInput | string
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: UserUpdateOneRequiredWithoutSearchNestedInput
  }

  export type SearchUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SearchCreateManyInput = {
    id?: string
    userId: number
    keyword: string
    tableName: string
    createdAt?: Date | string
    lastChecked?: Date | string | null
  }

  export type SearchUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyword?: StringFieldUpdateOperationsInput | string
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SearchUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    keyword?: StringFieldUpdateOperationsInput | string
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UniqueFactorsTableOrderByRelevanceInput = {
    fields: UniqueFactorsTableOrderByRelevanceFieldEnum | UniqueFactorsTableOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UniqueFactorsTableCountOrderByAggregateInput = {
    KPI_Report_Date?: SortOrder
    Company__NON_NULL_Total_?: SortOrder
    Company__NON_NULL_Unique_?: SortOrder
    Member_of_the_S_P500__YES_Total_?: SortOrder
    Member_of_the_Russell_1000_Index__YES_Total_?: SortOrder
    Ticker_s___NON_NULL_Total_?: SortOrder
    Ticker_s___NON_NULL_Unique_?: SortOrder
    Country__NON_NULL_Total_?: SortOrder
    Country__NON_NULL_Unique_?: SortOrder
    sector_code__1__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__2__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__3__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__4__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__5__NAICS___NON_NULL_Unique_?: SortOrder
    sector_codes_all__NAICS___NON_NULL_Unique_?: SortOrder
    ArticleTargetYear__NON_NULL_Unique_?: SortOrder
    Source_Date__NON_NULL_Unique_?: SortOrder
    PressReleaseYear__NON_NULL_Unique_?: SortOrder
    Target_sentence__NON_NULL_Total_?: SortOrder
    Target_sentence__NON_NULL_Unique_?: SortOrder
    Targetyear_s___NON_NULL_Unique_?: SortOrder
    sentence_carbon__1_Total_?: SortOrder
    sentence_gender__1_Total_?: SortOrder
    sentence_renewables__1_Total_?: SortOrder
    sentence_suppliers__1_Total_?: SortOrder
    sentence_water__1_Total_?: SortOrder
    sentence_waste__1_Total_?: SortOrder
    sentence_other__1_Total_?: SortOrder
    id?: SortOrder
  }

  export type UniqueFactorsTableAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UniqueFactorsTableMaxOrderByAggregateInput = {
    KPI_Report_Date?: SortOrder
    Company__NON_NULL_Total_?: SortOrder
    Company__NON_NULL_Unique_?: SortOrder
    Member_of_the_S_P500__YES_Total_?: SortOrder
    Member_of_the_Russell_1000_Index__YES_Total_?: SortOrder
    Ticker_s___NON_NULL_Total_?: SortOrder
    Ticker_s___NON_NULL_Unique_?: SortOrder
    Country__NON_NULL_Total_?: SortOrder
    Country__NON_NULL_Unique_?: SortOrder
    sector_code__1__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__2__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__3__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__4__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__5__NAICS___NON_NULL_Unique_?: SortOrder
    sector_codes_all__NAICS___NON_NULL_Unique_?: SortOrder
    ArticleTargetYear__NON_NULL_Unique_?: SortOrder
    Source_Date__NON_NULL_Unique_?: SortOrder
    PressReleaseYear__NON_NULL_Unique_?: SortOrder
    Target_sentence__NON_NULL_Total_?: SortOrder
    Target_sentence__NON_NULL_Unique_?: SortOrder
    Targetyear_s___NON_NULL_Unique_?: SortOrder
    sentence_carbon__1_Total_?: SortOrder
    sentence_gender__1_Total_?: SortOrder
    sentence_renewables__1_Total_?: SortOrder
    sentence_suppliers__1_Total_?: SortOrder
    sentence_water__1_Total_?: SortOrder
    sentence_waste__1_Total_?: SortOrder
    sentence_other__1_Total_?: SortOrder
    id?: SortOrder
  }

  export type UniqueFactorsTableMinOrderByAggregateInput = {
    KPI_Report_Date?: SortOrder
    Company__NON_NULL_Total_?: SortOrder
    Company__NON_NULL_Unique_?: SortOrder
    Member_of_the_S_P500__YES_Total_?: SortOrder
    Member_of_the_Russell_1000_Index__YES_Total_?: SortOrder
    Ticker_s___NON_NULL_Total_?: SortOrder
    Ticker_s___NON_NULL_Unique_?: SortOrder
    Country__NON_NULL_Total_?: SortOrder
    Country__NON_NULL_Unique_?: SortOrder
    sector_code__1__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__2__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__3__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__4__NAICS___NON_NULL_Unique_?: SortOrder
    sector_code__5__NAICS___NON_NULL_Unique_?: SortOrder
    sector_codes_all__NAICS___NON_NULL_Unique_?: SortOrder
    ArticleTargetYear__NON_NULL_Unique_?: SortOrder
    Source_Date__NON_NULL_Unique_?: SortOrder
    PressReleaseYear__NON_NULL_Unique_?: SortOrder
    Target_sentence__NON_NULL_Total_?: SortOrder
    Target_sentence__NON_NULL_Unique_?: SortOrder
    Targetyear_s___NON_NULL_Unique_?: SortOrder
    sentence_carbon__1_Total_?: SortOrder
    sentence_gender__1_Total_?: SortOrder
    sentence_renewables__1_Total_?: SortOrder
    sentence_suppliers__1_Total_?: SortOrder
    sentence_water__1_Total_?: SortOrder
    sentence_waste__1_Total_?: SortOrder
    sentence_other__1_Total_?: SortOrder
    id?: SortOrder
  }

  export type UniqueFactorsTableSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type CompanyUniverseOrderByRelevanceInput = {
    fields: CompanyUniverseOrderByRelevanceFieldEnum | CompanyUniverseOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CompanyUniverseCountOrderByAggregateInput = {
    Company?: SortOrder
    x?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    source?: SortOrder
    Scraping_code_set_up__?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Domain?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: SortOrder
    Subscribed_to_press_releases_jameskijani_gmail_com__?: SortOrder
    Plain_text_press_release_subscription_possible___yes_no_?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    WORKED_BY_?: SortOrder
    COMMENTS___NOTES?: SortOrder
    Carbon_sentence_available__?: SortOrder
  }

  export type CompanyUniverseMaxOrderByAggregateInput = {
    Company?: SortOrder
    x?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    source?: SortOrder
    Scraping_code_set_up__?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Domain?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: SortOrder
    Subscribed_to_press_releases_jameskijani_gmail_com__?: SortOrder
    Plain_text_press_release_subscription_possible___yes_no_?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    WORKED_BY_?: SortOrder
    COMMENTS___NOTES?: SortOrder
    Carbon_sentence_available__?: SortOrder
  }

  export type CompanyUniverseMinOrderByAggregateInput = {
    Company?: SortOrder
    x?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    source?: SortOrder
    Scraping_code_set_up__?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Domain?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Subscribed_to_press_releases_esgroadmap_gmail_com__?: SortOrder
    Subscribed_to_press_releases_jameskijani_gmail_com__?: SortOrder
    Plain_text_press_release_subscription_possible___yes_no_?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual_report_2020_URL_of_pdf_document__including_10_k_?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    WORKED_BY_?: SortOrder
    COMMENTS___NOTES?: SortOrder
    Carbon_sentence_available__?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type CompanyDataOrderByRelevanceInput = {
    fields: CompanyDataOrderByRelevanceFieldEnum | CompanyDataOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CompanyDataCountOrderByAggregateInput = {
    company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    id?: SortOrder
  }

  export type CompanyDataAvgOrderByAggregateInput = {
    sector_code__1__NAICS_?: SortOrder
    id?: SortOrder
  }

  export type CompanyDataMaxOrderByAggregateInput = {
    company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    id?: SortOrder
  }

  export type CompanyDataMinOrderByAggregateInput = {
    company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    id?: SortOrder
  }

  export type CompanyDataSumOrderByAggregateInput = {
    sector_code__1__NAICS_?: SortOrder
    id?: SortOrder
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type CompanyData2OrderByRelevanceInput = {
    fields: CompanyData2OrderByRelevanceFieldEnum | CompanyData2OrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type CompanyData2CountOrderByAggregateInput = {
    company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    NAICS__1_GIG?: SortOrder
    NAICS__1_GIG_name?: SortOrder
    id?: SortOrder
  }

  export type CompanyData2AvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type CompanyData2MaxOrderByAggregateInput = {
    company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    NAICS__1_GIG?: SortOrder
    NAICS__1_GIG_name?: SortOrder
    id?: SortOrder
  }

  export type CompanyData2MinOrderByAggregateInput = {
    company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    NAICS__1_GIG?: SortOrder
    NAICS__1_GIG_name?: SortOrder
    id?: SortOrder
  }

  export type CompanyData2SumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PercentageTableOrderByRelevanceInput = {
    fields: PercentageTableOrderByRelevanceFieldEnum | PercentageTableOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PercentageTableCountOrderByAggregateInput = {
    KPI_Report_Date?: SortOrder
    Company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    climateaction100?: SortOrder
    emails?: SortOrder
    full_text?: SortOrder
    Source_link?: SortOrder
    pr_site?: SortOrder
    release_date?: SortOrder
    source?: SortOrder
    ticker?: SortOrder
    title?: SortOrder
    ArticleTargetYear?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    PressReleaseFullClean?: SortOrder
    Source_Date?: SortOrder
    Annual_Report_Date?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    Target_sentence?: SortOrder
    SentenceTargetYear?: SortOrder
    Targetyear_s_?: SortOrder
    sentence_carbon?: SortOrder
    sentence_gender?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_water?: SortOrder
    sentence_waste?: SortOrder
    sentence_other?: SortOrder
    id?: SortOrder
  }

  export type PercentageTableAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PercentageTableMaxOrderByAggregateInput = {
    KPI_Report_Date?: SortOrder
    Company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    climateaction100?: SortOrder
    emails?: SortOrder
    full_text?: SortOrder
    Source_link?: SortOrder
    pr_site?: SortOrder
    release_date?: SortOrder
    source?: SortOrder
    ticker?: SortOrder
    title?: SortOrder
    ArticleTargetYear?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    PressReleaseFullClean?: SortOrder
    Source_Date?: SortOrder
    Annual_Report_Date?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    Target_sentence?: SortOrder
    SentenceTargetYear?: SortOrder
    Targetyear_s_?: SortOrder
    sentence_carbon?: SortOrder
    sentence_gender?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_water?: SortOrder
    sentence_waste?: SortOrder
    sentence_other?: SortOrder
    id?: SortOrder
  }

  export type PercentageTableMinOrderByAggregateInput = {
    KPI_Report_Date?: SortOrder
    Company?: SortOrder
    Member_of_the_S_P500?: SortOrder
    Member_of_the_Russell_1000_Index?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Global___Main_Website_URL?: SortOrder
    Company_global_main_press___news_release_site_URL?: SortOrder
    Company_annual_reports_page_URL?: SortOrder
    Company_annual___financial_report_2020_URL_of_pdf_document?: SortOrder
    Company_sustainability___ESG_reports_page_URL?: SortOrder
    Company_Sustainability___ESG_report_2020_URL_of_pdf_document?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    sector_codes_all__NAICS_?: SortOrder
    sector_name_all__NAICS_?: SortOrder
    climateaction100?: SortOrder
    emails?: SortOrder
    full_text?: SortOrder
    Source_link?: SortOrder
    pr_site?: SortOrder
    release_date?: SortOrder
    source?: SortOrder
    ticker?: SortOrder
    title?: SortOrder
    ArticleTargetYear?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    PressReleaseFullClean?: SortOrder
    Source_Date?: SortOrder
    Annual_Report_Date?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    Target_sentence?: SortOrder
    SentenceTargetYear?: SortOrder
    Targetyear_s_?: SortOrder
    sentence_carbon?: SortOrder
    sentence_gender?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_water?: SortOrder
    sentence_waste?: SortOrder
    sentence_other?: SortOrder
    id?: SortOrder
  }

  export type PercentageTableSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type RoadmapCarbonOrderByRelevanceInput = {
    fields: RoadmapCarbonOrderByRelevanceFieldEnum | RoadmapCarbonOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type RoadmapCarbonCountOrderByAggregateInput = {
    Company?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Company_Main_Website_URL?: SortOrder
    Company_Source_site_URL?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    S_P500member?: SortOrder
    Russell_1000_member?: SortOrder
    Source_link_1?: SortOrder
    Source_date_1?: SortOrder
    Source_sentence_1?: SortOrder
    Targetyear_s__1?: SortOrder
    Source_link_2?: SortOrder
    Source_date_2?: SortOrder
    Source_sentence_2?: SortOrder
    Targetyear_s__2?: SortOrder
    Source_link_3?: SortOrder
    Source_date_3?: SortOrder
    Source_sentence_3?: SortOrder
    Targetyear_s__3?: SortOrder
    Source_link_4?: SortOrder
    Source_date_4?: SortOrder
    Source_sentence_4?: SortOrder
    Targetyear_s__4?: SortOrder
    Source_link_5?: SortOrder
    Source_date_5?: SortOrder
    Source_sentence_5?: SortOrder
    Targetyear_s__5?: SortOrder
    Source_link_6?: SortOrder
    Source_date_6?: SortOrder
    Source_sentence_6?: SortOrder
    Targetyear_s__6?: SortOrder
    id?: SortOrder
  }

  export type RoadmapCarbonAvgOrderByAggregateInput = {
    sector_code__1__NAICS_?: SortOrder
    Targetyear_s__4?: SortOrder
    Targetyear_s__5?: SortOrder
    Targetyear_s__6?: SortOrder
    id?: SortOrder
  }

  export type RoadmapCarbonMaxOrderByAggregateInput = {
    Company?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Company_Main_Website_URL?: SortOrder
    Company_Source_site_URL?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    S_P500member?: SortOrder
    Russell_1000_member?: SortOrder
    Source_link_1?: SortOrder
    Source_date_1?: SortOrder
    Source_sentence_1?: SortOrder
    Targetyear_s__1?: SortOrder
    Source_link_2?: SortOrder
    Source_date_2?: SortOrder
    Source_sentence_2?: SortOrder
    Targetyear_s__2?: SortOrder
    Source_link_3?: SortOrder
    Source_date_3?: SortOrder
    Source_sentence_3?: SortOrder
    Targetyear_s__3?: SortOrder
    Source_link_4?: SortOrder
    Source_date_4?: SortOrder
    Source_sentence_4?: SortOrder
    Targetyear_s__4?: SortOrder
    Source_link_5?: SortOrder
    Source_date_5?: SortOrder
    Source_sentence_5?: SortOrder
    Targetyear_s__5?: SortOrder
    Source_link_6?: SortOrder
    Source_date_6?: SortOrder
    Source_sentence_6?: SortOrder
    Targetyear_s__6?: SortOrder
    id?: SortOrder
  }

  export type RoadmapCarbonMinOrderByAggregateInput = {
    Company?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Company_Main_Website_URL?: SortOrder
    Company_Source_site_URL?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    S_P500member?: SortOrder
    Russell_1000_member?: SortOrder
    Source_link_1?: SortOrder
    Source_date_1?: SortOrder
    Source_sentence_1?: SortOrder
    Targetyear_s__1?: SortOrder
    Source_link_2?: SortOrder
    Source_date_2?: SortOrder
    Source_sentence_2?: SortOrder
    Targetyear_s__2?: SortOrder
    Source_link_3?: SortOrder
    Source_date_3?: SortOrder
    Source_sentence_3?: SortOrder
    Targetyear_s__3?: SortOrder
    Source_link_4?: SortOrder
    Source_date_4?: SortOrder
    Source_sentence_4?: SortOrder
    Targetyear_s__4?: SortOrder
    Source_link_5?: SortOrder
    Source_date_5?: SortOrder
    Source_sentence_5?: SortOrder
    Targetyear_s__5?: SortOrder
    Source_link_6?: SortOrder
    Source_date_6?: SortOrder
    Source_sentence_6?: SortOrder
    Targetyear_s__6?: SortOrder
    id?: SortOrder
  }

  export type RoadmapCarbonSumOrderByAggregateInput = {
    sector_code__1__NAICS_?: SortOrder
    Targetyear_s__4?: SortOrder
    Targetyear_s__5?: SortOrder
    Targetyear_s__6?: SortOrder
    id?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type SentenceAllOrderByRelevanceInput = {
    fields: SentenceAllOrderByRelevanceFieldEnum | SentenceAllOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SentenceAllCountOrderByAggregateInput = {
    release_date?: SortOrder
    Targetyear_s_?: SortOrder
    pr_site?: SortOrder
    ArticleTargetYear?: SortOrder
    sentence_carbon?: SortOrder
    full_text?: SortOrder
    PressReleaseMonth?: SortOrder
    PressReleaseFullClean?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    Company?: SortOrder
    Annual_Report_Date?: SortOrder
    title?: SortOrder
    emails?: SortOrder
    sentence_other?: SortOrder
    Source_link?: SortOrder
    Source_Date?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    sentence_waste?: SortOrder
    source?: SortOrder
    sentence_water?: SortOrder
    PressReleaseYear?: SortOrder
    ticker?: SortOrder
    SentenceTargetYear?: SortOrder
    Target_sentence?: SortOrder
    upload_date?: SortOrder
    id?: SortOrder
    PageURL?: SortOrder
    DocURL?: SortOrder
    DocTitle?: SortOrder
    DocName?: SortOrder
    Target_Sentence_Page?: SortOrder
  }

  export type SentenceAllAvgOrderByAggregateInput = {
    sentence_carbon?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    sentence_other?: SortOrder
    sentence_waste?: SortOrder
    sentence_water?: SortOrder
    id?: SortOrder
  }

  export type SentenceAllMaxOrderByAggregateInput = {
    release_date?: SortOrder
    Targetyear_s_?: SortOrder
    pr_site?: SortOrder
    ArticleTargetYear?: SortOrder
    sentence_carbon?: SortOrder
    full_text?: SortOrder
    PressReleaseMonth?: SortOrder
    PressReleaseFullClean?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    Company?: SortOrder
    Annual_Report_Date?: SortOrder
    title?: SortOrder
    emails?: SortOrder
    sentence_other?: SortOrder
    Source_link?: SortOrder
    Source_Date?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    sentence_waste?: SortOrder
    source?: SortOrder
    sentence_water?: SortOrder
    PressReleaseYear?: SortOrder
    ticker?: SortOrder
    SentenceTargetYear?: SortOrder
    Target_sentence?: SortOrder
    upload_date?: SortOrder
    id?: SortOrder
    PageURL?: SortOrder
    DocURL?: SortOrder
    DocTitle?: SortOrder
    DocName?: SortOrder
    Target_Sentence_Page?: SortOrder
  }

  export type SentenceAllMinOrderByAggregateInput = {
    release_date?: SortOrder
    Targetyear_s_?: SortOrder
    pr_site?: SortOrder
    ArticleTargetYear?: SortOrder
    sentence_carbon?: SortOrder
    full_text?: SortOrder
    PressReleaseMonth?: SortOrder
    PressReleaseFullClean?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    Company?: SortOrder
    Annual_Report_Date?: SortOrder
    title?: SortOrder
    emails?: SortOrder
    sentence_other?: SortOrder
    Source_link?: SortOrder
    Source_Date?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    sentence_waste?: SortOrder
    source?: SortOrder
    sentence_water?: SortOrder
    PressReleaseYear?: SortOrder
    ticker?: SortOrder
    SentenceTargetYear?: SortOrder
    Target_sentence?: SortOrder
    upload_date?: SortOrder
    id?: SortOrder
    PageURL?: SortOrder
    DocURL?: SortOrder
    DocTitle?: SortOrder
    DocName?: SortOrder
    Target_Sentence_Page?: SortOrder
  }

  export type SentenceAllSumOrderByAggregateInput = {
    sentence_carbon?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    sentence_other?: SortOrder
    sentence_waste?: SortOrder
    sentence_water?: SortOrder
    id?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type TargetSentenceOrderByRelevanceInput = {
    fields: TargetSentenceOrderByRelevanceFieldEnum | TargetSentenceOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TargetSentenceCountOrderByAggregateInput = {
    Company?: SortOrder
    companylist?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Main_Website_URL?: SortOrder
    Company_press_release_site_URL?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    S_P500member?: SortOrder
    Russell_1000_member?: SortOrder
    emails?: SortOrder
    full_text?: SortOrder
    Source_link?: SortOrder
    pr_site?: SortOrder
    release_date?: SortOrder
    source?: SortOrder
    ticker?: SortOrder
    title?: SortOrder
    ArticleTargetYear?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    PressReleaseFullClean?: SortOrder
    Source_date?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    Target_sentence?: SortOrder
    SentenceTargetYear?: SortOrder
    Targetyear_s_?: SortOrder
    sentence_carbon?: SortOrder
    sentence_gender?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_water?: SortOrder
    Primarysource?: SortOrder
    id?: SortOrder
  }

  export type TargetSentenceAvgOrderByAggregateInput = {
    sector_code__1__NAICS_?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    id?: SortOrder
  }

  export type TargetSentenceMaxOrderByAggregateInput = {
    Company?: SortOrder
    companylist?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Main_Website_URL?: SortOrder
    Company_press_release_site_URL?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    S_P500member?: SortOrder
    Russell_1000_member?: SortOrder
    emails?: SortOrder
    full_text?: SortOrder
    Source_link?: SortOrder
    pr_site?: SortOrder
    release_date?: SortOrder
    source?: SortOrder
    ticker?: SortOrder
    title?: SortOrder
    ArticleTargetYear?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    PressReleaseFullClean?: SortOrder
    Source_date?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    Target_sentence?: SortOrder
    SentenceTargetYear?: SortOrder
    Targetyear_s_?: SortOrder
    sentence_carbon?: SortOrder
    sentence_gender?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_water?: SortOrder
    Primarysource?: SortOrder
    id?: SortOrder
  }

  export type TargetSentenceMinOrderByAggregateInput = {
    Company?: SortOrder
    companylist?: SortOrder
    Ticker_s_?: SortOrder
    PR_Agency?: SortOrder
    Example_2020_company_PR_agency_press_release_URL?: SortOrder
    Company_Main_Website_URL?: SortOrder
    Company_press_release_site_URL?: SortOrder
    Country?: SortOrder
    sector_code__1__NAICS_?: SortOrder
    sector_name__1__NAICS_?: SortOrder
    sector_code__2__NAICS_?: SortOrder
    sector_name__2__NAICS_?: SortOrder
    sector_code__3__NAICS_?: SortOrder
    sector_name__3__NAICS_?: SortOrder
    sector_code__4__NAICS_?: SortOrder
    sector_name__4__NAICS_?: SortOrder
    sector_code__5__NAICS_?: SortOrder
    sector_name__5__NAICS_?: SortOrder
    S_P500member?: SortOrder
    Russell_1000_member?: SortOrder
    emails?: SortOrder
    full_text?: SortOrder
    Source_link?: SortOrder
    pr_site?: SortOrder
    release_date?: SortOrder
    source?: SortOrder
    ticker?: SortOrder
    title?: SortOrder
    ArticleTargetYear?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    PressReleaseFullClean?: SortOrder
    Source_date?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    Target_sentence?: SortOrder
    SentenceTargetYear?: SortOrder
    Targetyear_s_?: SortOrder
    sentence_carbon?: SortOrder
    sentence_gender?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_water?: SortOrder
    Primarysource?: SortOrder
    id?: SortOrder
  }

  export type TargetSentenceSumOrderByAggregateInput = {
    sector_code__1__NAICS_?: SortOrder
    PressReleaseYear?: SortOrder
    PressReleaseMonth?: SortOrder
    id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type TestableCountOrderByAggregateInput = {
    firstname?: SortOrder
    surname?: SortOrder
    city?: SortOrder
    country?: SortOrder
    id?: SortOrder
  }

  export type TestableAvgOrderByAggregateInput = {
    firstname?: SortOrder
    surname?: SortOrder
    city?: SortOrder
    country?: SortOrder
    id?: SortOrder
  }

  export type TestableMaxOrderByAggregateInput = {
    firstname?: SortOrder
    surname?: SortOrder
    city?: SortOrder
    country?: SortOrder
    id?: SortOrder
  }

  export type TestableMinOrderByAggregateInput = {
    firstname?: SortOrder
    surname?: SortOrder
    city?: SortOrder
    country?: SortOrder
    id?: SortOrder
  }

  export type TestableSumOrderByAggregateInput = {
    firstname?: SortOrder
    surname?: SortOrder
    city?: SortOrder
    country?: SortOrder
    id?: SortOrder
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type wp_actionscheduler_actionsOrderByRelevanceInput = {
    fields: wp_actionscheduler_actionsOrderByRelevanceFieldEnum | wp_actionscheduler_actionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_actionscheduler_actionsCountOrderByAggregateInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    args?: SortOrder
    schedule?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrder
  }

  export type wp_actionscheduler_actionsAvgOrderByAggregateInput = {
    action_id?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    claim_id?: SortOrder
  }

  export type wp_actionscheduler_actionsMaxOrderByAggregateInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    args?: SortOrder
    schedule?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrder
  }

  export type wp_actionscheduler_actionsMinOrderByAggregateInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    args?: SortOrder
    schedule?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrder
  }

  export type wp_actionscheduler_actionsSumOrderByAggregateInput = {
    action_id?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    claim_id?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type wp_actionscheduler_claimsCountOrderByAggregateInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
  }

  export type wp_actionscheduler_claimsAvgOrderByAggregateInput = {
    claim_id?: SortOrder
  }

  export type wp_actionscheduler_claimsMaxOrderByAggregateInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
  }

  export type wp_actionscheduler_claimsMinOrderByAggregateInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
  }

  export type wp_actionscheduler_claimsSumOrderByAggregateInput = {
    claim_id?: SortOrder
  }

  export type wp_actionscheduler_groupsOrderByRelevanceInput = {
    fields: wp_actionscheduler_groupsOrderByRelevanceFieldEnum | wp_actionscheduler_groupsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_actionscheduler_groupsCountOrderByAggregateInput = {
    group_id?: SortOrder
    slug?: SortOrder
  }

  export type wp_actionscheduler_groupsAvgOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type wp_actionscheduler_groupsMaxOrderByAggregateInput = {
    group_id?: SortOrder
    slug?: SortOrder
  }

  export type wp_actionscheduler_groupsMinOrderByAggregateInput = {
    group_id?: SortOrder
    slug?: SortOrder
  }

  export type wp_actionscheduler_groupsSumOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type wp_actionscheduler_logsOrderByRelevanceInput = {
    fields: wp_actionscheduler_logsOrderByRelevanceFieldEnum | wp_actionscheduler_logsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_actionscheduler_logsCountOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
  }

  export type wp_actionscheduler_logsAvgOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
  }

  export type wp_actionscheduler_logsMaxOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
  }

  export type wp_actionscheduler_logsMinOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
  }

  export type wp_actionscheduler_logsSumOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type wp_aioseo_notificationsOrderByRelevanceInput = {
    fields: wp_aioseo_notificationsOrderByRelevanceFieldEnum | wp_aioseo_notificationsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_aioseo_notificationsCountOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    level?: SortOrder
    notification_id?: SortOrder
    notification_name?: SortOrder
    start?: SortOrder
    end?: SortOrder
    button1_label?: SortOrder
    button1_action?: SortOrder
    button2_label?: SortOrder
    button2_action?: SortOrder
    dismissed?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type wp_aioseo_notificationsAvgOrderByAggregateInput = {
    id?: SortOrder
    notification_id?: SortOrder
  }

  export type wp_aioseo_notificationsMaxOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    level?: SortOrder
    notification_id?: SortOrder
    notification_name?: SortOrder
    start?: SortOrder
    end?: SortOrder
    button1_label?: SortOrder
    button1_action?: SortOrder
    button2_label?: SortOrder
    button2_action?: SortOrder
    dismissed?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type wp_aioseo_notificationsMinOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    title?: SortOrder
    content?: SortOrder
    type?: SortOrder
    level?: SortOrder
    notification_id?: SortOrder
    notification_name?: SortOrder
    start?: SortOrder
    end?: SortOrder
    button1_label?: SortOrder
    button1_action?: SortOrder
    button2_label?: SortOrder
    button2_action?: SortOrder
    dismissed?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type wp_aioseo_notificationsSumOrderByAggregateInput = {
    id?: SortOrder
    notification_id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type wp_aioseo_postsOrderByRelevanceInput = {
    fields: wp_aioseo_postsOrderByRelevanceFieldEnum | wp_aioseo_postsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_aioseo_postsCountOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    keywords?: SortOrder
    keyphrases?: SortOrder
    page_analysis?: SortOrder
    canonical_url?: SortOrder
    og_title?: SortOrder
    og_description?: SortOrder
    og_object_type?: SortOrder
    og_image_type?: SortOrder
    og_image_custom_url?: SortOrder
    og_image_custom_fields?: SortOrder
    og_custom_image_width?: SortOrder
    og_custom_image_height?: SortOrder
    og_video?: SortOrder
    og_custom_url?: SortOrder
    og_article_section?: SortOrder
    og_article_tags?: SortOrder
    twitter_use_og?: SortOrder
    twitter_card?: SortOrder
    twitter_image_type?: SortOrder
    twitter_image_custom_url?: SortOrder
    twitter_image_custom_fields?: SortOrder
    twitter_title?: SortOrder
    twitter_description?: SortOrder
    seo_score?: SortOrder
    schema_type?: SortOrder
    schema_type_options?: SortOrder
    pillar_content?: SortOrder
    robots_default?: SortOrder
    robots_noindex?: SortOrder
    robots_noarchive?: SortOrder
    robots_nosnippet?: SortOrder
    robots_nofollow?: SortOrder
    robots_noimageindex?: SortOrder
    robots_noodp?: SortOrder
    robots_notranslate?: SortOrder
    robots_max_snippet?: SortOrder
    robots_max_videopreview?: SortOrder
    robots_max_imagepreview?: SortOrder
    tabs?: SortOrder
    images?: SortOrder
    image_scan_date?: SortOrder
    priority?: SortOrder
    frequency?: SortOrder
    videos?: SortOrder
    video_thumbnail?: SortOrder
    video_scan_date?: SortOrder
    local_seo?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type wp_aioseo_postsAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    og_custom_image_width?: SortOrder
    og_custom_image_height?: SortOrder
    seo_score?: SortOrder
    robots_max_snippet?: SortOrder
    robots_max_videopreview?: SortOrder
  }

  export type wp_aioseo_postsMaxOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    keywords?: SortOrder
    keyphrases?: SortOrder
    page_analysis?: SortOrder
    canonical_url?: SortOrder
    og_title?: SortOrder
    og_description?: SortOrder
    og_object_type?: SortOrder
    og_image_type?: SortOrder
    og_image_custom_url?: SortOrder
    og_image_custom_fields?: SortOrder
    og_custom_image_width?: SortOrder
    og_custom_image_height?: SortOrder
    og_video?: SortOrder
    og_custom_url?: SortOrder
    og_article_section?: SortOrder
    og_article_tags?: SortOrder
    twitter_use_og?: SortOrder
    twitter_card?: SortOrder
    twitter_image_type?: SortOrder
    twitter_image_custom_url?: SortOrder
    twitter_image_custom_fields?: SortOrder
    twitter_title?: SortOrder
    twitter_description?: SortOrder
    seo_score?: SortOrder
    schema_type?: SortOrder
    schema_type_options?: SortOrder
    pillar_content?: SortOrder
    robots_default?: SortOrder
    robots_noindex?: SortOrder
    robots_noarchive?: SortOrder
    robots_nosnippet?: SortOrder
    robots_nofollow?: SortOrder
    robots_noimageindex?: SortOrder
    robots_noodp?: SortOrder
    robots_notranslate?: SortOrder
    robots_max_snippet?: SortOrder
    robots_max_videopreview?: SortOrder
    robots_max_imagepreview?: SortOrder
    tabs?: SortOrder
    images?: SortOrder
    image_scan_date?: SortOrder
    priority?: SortOrder
    frequency?: SortOrder
    videos?: SortOrder
    video_thumbnail?: SortOrder
    video_scan_date?: SortOrder
    local_seo?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type wp_aioseo_postsMinOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    keywords?: SortOrder
    keyphrases?: SortOrder
    page_analysis?: SortOrder
    canonical_url?: SortOrder
    og_title?: SortOrder
    og_description?: SortOrder
    og_object_type?: SortOrder
    og_image_type?: SortOrder
    og_image_custom_url?: SortOrder
    og_image_custom_fields?: SortOrder
    og_custom_image_width?: SortOrder
    og_custom_image_height?: SortOrder
    og_video?: SortOrder
    og_custom_url?: SortOrder
    og_article_section?: SortOrder
    og_article_tags?: SortOrder
    twitter_use_og?: SortOrder
    twitter_card?: SortOrder
    twitter_image_type?: SortOrder
    twitter_image_custom_url?: SortOrder
    twitter_image_custom_fields?: SortOrder
    twitter_title?: SortOrder
    twitter_description?: SortOrder
    seo_score?: SortOrder
    schema_type?: SortOrder
    schema_type_options?: SortOrder
    pillar_content?: SortOrder
    robots_default?: SortOrder
    robots_noindex?: SortOrder
    robots_noarchive?: SortOrder
    robots_nosnippet?: SortOrder
    robots_nofollow?: SortOrder
    robots_noimageindex?: SortOrder
    robots_noodp?: SortOrder
    robots_notranslate?: SortOrder
    robots_max_snippet?: SortOrder
    robots_max_videopreview?: SortOrder
    robots_max_imagepreview?: SortOrder
    tabs?: SortOrder
    images?: SortOrder
    image_scan_date?: SortOrder
    priority?: SortOrder
    frequency?: SortOrder
    videos?: SortOrder
    video_thumbnail?: SortOrder
    video_scan_date?: SortOrder
    local_seo?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type wp_aioseo_postsSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    og_custom_image_width?: SortOrder
    og_custom_image_height?: SortOrder
    seo_score?: SortOrder
    robots_max_snippet?: SortOrder
    robots_max_videopreview?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type wp_commentmetaOrderByRelevanceInput = {
    fields: wp_commentmetaOrderByRelevanceFieldEnum | wp_commentmetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_commentmetaCountOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_commentmetaAvgOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
  }

  export type wp_commentmetaMaxOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_commentmetaMinOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_commentmetaSumOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
  }

  export type wp_commentsOrderByRelevanceInput = {
    fields: wp_commentsOrderByRelevanceFieldEnum | wp_commentsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_commentsCountOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsAvgOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_karma?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsMaxOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsMinOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsSumOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_karma?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_linksOrderByRelevanceInput = {
    fields: wp_linksOrderByRelevanceFieldEnum | wp_linksOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_linksCountOrderByAggregateInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
  }

  export type wp_linksAvgOrderByAggregateInput = {
    link_id?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
  }

  export type wp_linksMaxOrderByAggregateInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
  }

  export type wp_linksMinOrderByAggregateInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
  }

  export type wp_linksSumOrderByAggregateInput = {
    link_id?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
  }

  export type wp_nextend2_image_storageOrderByRelevanceInput = {
    fields: wp_nextend2_image_storageOrderByRelevanceFieldEnum | wp_nextend2_image_storageOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_nextend2_image_storageCountOrderByAggregateInput = {
    id?: SortOrder
    hash?: SortOrder
    image?: SortOrder
    value?: SortOrder
  }

  export type wp_nextend2_image_storageAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_nextend2_image_storageMaxOrderByAggregateInput = {
    id?: SortOrder
    hash?: SortOrder
    image?: SortOrder
    value?: SortOrder
  }

  export type wp_nextend2_image_storageMinOrderByAggregateInput = {
    id?: SortOrder
    hash?: SortOrder
    image?: SortOrder
    value?: SortOrder
  }

  export type wp_nextend2_image_storageSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_nextend2_section_storageOrderByRelevanceInput = {
    fields: wp_nextend2_section_storageOrderByRelevanceFieldEnum | wp_nextend2_section_storageOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_nextend2_section_storageCountOrderByAggregateInput = {
    id?: SortOrder
    application?: SortOrder
    section?: SortOrder
    referencekey?: SortOrder
    value?: SortOrder
    system?: SortOrder
    editable?: SortOrder
  }

  export type wp_nextend2_section_storageAvgOrderByAggregateInput = {
    id?: SortOrder
    system?: SortOrder
    editable?: SortOrder
  }

  export type wp_nextend2_section_storageMaxOrderByAggregateInput = {
    id?: SortOrder
    application?: SortOrder
    section?: SortOrder
    referencekey?: SortOrder
    value?: SortOrder
    system?: SortOrder
    editable?: SortOrder
  }

  export type wp_nextend2_section_storageMinOrderByAggregateInput = {
    id?: SortOrder
    application?: SortOrder
    section?: SortOrder
    referencekey?: SortOrder
    value?: SortOrder
    system?: SortOrder
    editable?: SortOrder
  }

  export type wp_nextend2_section_storageSumOrderByAggregateInput = {
    id?: SortOrder
    system?: SortOrder
    editable?: SortOrder
  }

  export type wp_nextend2_smartslider3_generatorsOrderByRelevanceInput = {
    fields: wp_nextend2_smartslider3_generatorsOrderByRelevanceFieldEnum | wp_nextend2_smartslider3_generatorsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_nextend2_smartslider3_generatorsCountOrderByAggregateInput = {
    id?: SortOrder
    group?: SortOrder
    type?: SortOrder
    params?: SortOrder
  }

  export type wp_nextend2_smartslider3_generatorsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_nextend2_smartslider3_generatorsMaxOrderByAggregateInput = {
    id?: SortOrder
    group?: SortOrder
    type?: SortOrder
    params?: SortOrder
  }

  export type wp_nextend2_smartslider3_generatorsMinOrderByAggregateInput = {
    id?: SortOrder
    group?: SortOrder
    type?: SortOrder
    params?: SortOrder
  }

  export type wp_nextend2_smartslider3_generatorsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidersOrderByRelevanceInput = {
    fields: wp_nextend2_smartslider3_slidersOrderByRelevanceFieldEnum | wp_nextend2_smartslider3_slidersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_nextend2_smartslider3_slidersCountOrderByAggregateInput = {
    id?: SortOrder
    alias?: SortOrder
    title?: SortOrder
    type?: SortOrder
    params?: SortOrder
    status?: SortOrder
    time?: SortOrder
    thumbnail?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidersAvgOrderByAggregateInput = {
    id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidersMaxOrderByAggregateInput = {
    id?: SortOrder
    alias?: SortOrder
    title?: SortOrder
    type?: SortOrder
    params?: SortOrder
    status?: SortOrder
    time?: SortOrder
    thumbnail?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidersMinOrderByAggregateInput = {
    id?: SortOrder
    alias?: SortOrder
    title?: SortOrder
    type?: SortOrder
    params?: SortOrder
    status?: SortOrder
    time?: SortOrder
    thumbnail?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidersSumOrderByAggregateInput = {
    id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_sliders_xrefGroup_idSlider_idCompoundUniqueInput = {
    group_id: number
    slider_id: number
  }

  export type wp_nextend2_smartslider3_sliders_xrefCountOrderByAggregateInput = {
    group_id?: SortOrder
    slider_id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_sliders_xrefAvgOrderByAggregateInput = {
    group_id?: SortOrder
    slider_id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_sliders_xrefMaxOrderByAggregateInput = {
    group_id?: SortOrder
    slider_id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_sliders_xrefMinOrderByAggregateInput = {
    group_id?: SortOrder
    slider_id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_sliders_xrefSumOrderByAggregateInput = {
    group_id?: SortOrder
    slider_id?: SortOrder
    ordering?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidesOrderByRelevanceInput = {
    fields: wp_nextend2_smartslider3_slidesOrderByRelevanceFieldEnum | wp_nextend2_smartslider3_slidesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_nextend2_smartslider3_slidesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slider?: SortOrder
    publish_up?: SortOrder
    publish_down?: SortOrder
    published?: SortOrder
    first?: SortOrder
    slide?: SortOrder
    description?: SortOrder
    thumbnail?: SortOrder
    params?: SortOrder
    ordering?: SortOrder
    generator_id?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidesAvgOrderByAggregateInput = {
    id?: SortOrder
    slider?: SortOrder
    first?: SortOrder
    ordering?: SortOrder
    generator_id?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slider?: SortOrder
    publish_up?: SortOrder
    publish_down?: SortOrder
    published?: SortOrder
    first?: SortOrder
    slide?: SortOrder
    description?: SortOrder
    thumbnail?: SortOrder
    params?: SortOrder
    ordering?: SortOrder
    generator_id?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slider?: SortOrder
    publish_up?: SortOrder
    publish_down?: SortOrder
    published?: SortOrder
    first?: SortOrder
    slide?: SortOrder
    description?: SortOrder
    thumbnail?: SortOrder
    params?: SortOrder
    ordering?: SortOrder
    generator_id?: SortOrder
  }

  export type wp_nextend2_smartslider3_slidesSumOrderByAggregateInput = {
    id?: SortOrder
    slider?: SortOrder
    first?: SortOrder
    ordering?: SortOrder
    generator_id?: SortOrder
  }

  export type wp_optionsOrderByRelevanceInput = {
    fields: wp_optionsOrderByRelevanceFieldEnum | wp_optionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_optionsCountOrderByAggregateInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
  }

  export type wp_optionsAvgOrderByAggregateInput = {
    option_id?: SortOrder
  }

  export type wp_optionsMaxOrderByAggregateInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
  }

  export type wp_optionsMinOrderByAggregateInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
  }

  export type wp_optionsSumOrderByAggregateInput = {
    option_id?: SortOrder
  }

  export type wp_postmetaOrderByRelevanceInput = {
    fields: wp_postmetaOrderByRelevanceFieldEnum | wp_postmetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_postmetaCountOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_postmetaAvgOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
  }

  export type wp_postmetaMaxOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_postmetaMinOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_postmetaSumOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
  }

  export type wp_postsOrderByRelevanceInput = {
    fields: wp_postsOrderByRelevanceFieldEnum | wp_postsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_postsCountOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsAvgOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_parent?: SortOrder
    menu_order?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsMaxOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsMinOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsSumOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_parent?: SortOrder
    menu_order?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_term_relationshipsObject_idTerm_taxonomy_idCompoundUniqueInput = {
    object_id: bigint | number
    term_taxonomy_id: bigint | number
  }

  export type wp_term_relationshipsCountOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsAvgOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsMaxOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsMinOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsSumOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_taxonomyOrderByRelevanceInput = {
    fields: wp_term_taxonomyOrderByRelevanceFieldEnum | wp_term_taxonomyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_term_taxonomyTerm_idTaxonomyCompoundUniqueInput = {
    term_id: bigint | number
    taxonomy: string
  }

  export type wp_term_taxonomyCountOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomyAvgOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomyMaxOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomyMinOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomySumOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_termmetaOrderByRelevanceInput = {
    fields: wp_termmetaOrderByRelevanceFieldEnum | wp_termmetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_termmetaCountOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_termmetaAvgOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
  }

  export type wp_termmetaMaxOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_termmetaMinOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_termmetaSumOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
  }

  export type wp_termsOrderByRelevanceInput = {
    fields: wp_termsOrderByRelevanceFieldEnum | wp_termsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_termsCountOrderByAggregateInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsAvgOrderByAggregateInput = {
    term_id?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsMaxOrderByAggregateInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsMinOrderByAggregateInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsSumOrderByAggregateInput = {
    term_id?: SortOrder
    term_group?: SortOrder
  }

  export type wp_um_metadataOrderByRelevanceInput = {
    fields: wp_um_metadataOrderByRelevanceFieldEnum | wp_um_metadataOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_um_metadataCountOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    um_key?: SortOrder
    um_value?: SortOrder
  }

  export type wp_um_metadataAvgOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_um_metadataMaxOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    um_key?: SortOrder
    um_value?: SortOrder
  }

  export type wp_um_metadataMinOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    um_key?: SortOrder
    um_value?: SortOrder
  }

  export type wp_um_metadataSumOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_user_registration_sessionsOrderByRelevanceInput = {
    fields: wp_user_registration_sessionsOrderByRelevanceFieldEnum | wp_user_registration_sessionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_user_registration_sessionsCountOrderByAggregateInput = {
    session_id?: SortOrder
    session_key?: SortOrder
    session_value?: SortOrder
    session_expiry?: SortOrder
  }

  export type wp_user_registration_sessionsAvgOrderByAggregateInput = {
    session_id?: SortOrder
    session_expiry?: SortOrder
  }

  export type wp_user_registration_sessionsMaxOrderByAggregateInput = {
    session_id?: SortOrder
    session_key?: SortOrder
    session_value?: SortOrder
    session_expiry?: SortOrder
  }

  export type wp_user_registration_sessionsMinOrderByAggregateInput = {
    session_id?: SortOrder
    session_key?: SortOrder
    session_value?: SortOrder
    session_expiry?: SortOrder
  }

  export type wp_user_registration_sessionsSumOrderByAggregateInput = {
    session_id?: SortOrder
    session_expiry?: SortOrder
  }

  export type wp_usermetaOrderByRelevanceInput = {
    fields: wp_usermetaOrderByRelevanceFieldEnum | wp_usermetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_usermetaCountOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_usermetaAvgOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_usermetaMaxOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_usermetaMinOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_usermetaSumOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_usersOrderByRelevanceInput = {
    fields: wp_usersOrderByRelevanceFieldEnum | wp_usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_usersCountOrderByAggregateInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
  }

  export type wp_usersAvgOrderByAggregateInput = {
    ID?: SortOrder
    user_status?: SortOrder
  }

  export type wp_usersMaxOrderByAggregateInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
  }

  export type wp_usersMinOrderByAggregateInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
  }

  export type wp_usersSumOrderByAggregateInput = {
    ID?: SortOrder
    user_status?: SortOrder
  }

  export type Enumwp_wpdatacharts_engineFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatacharts_engine | Enumwp_wpdatacharts_engineFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatacharts_engine[]
    notIn?: $Enums.wp_wpdatacharts_engine[]
    not?: NestedEnumwp_wpdatacharts_engineFilter<$PrismaModel> | $Enums.wp_wpdatacharts_engine
  }

  export type wp_wpdatachartsOrderByRelevanceInput = {
    fields: wp_wpdatachartsOrderByRelevanceFieldEnum | wp_wpdatachartsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpdatachartsCountOrderByAggregateInput = {
    id?: SortOrder
    wpdatatable_id?: SortOrder
    title?: SortOrder
    engine?: SortOrder
    type?: SortOrder
    json_render_data?: SortOrder
  }

  export type wp_wpdatachartsAvgOrderByAggregateInput = {
    id?: SortOrder
    wpdatatable_id?: SortOrder
  }

  export type wp_wpdatachartsMaxOrderByAggregateInput = {
    id?: SortOrder
    wpdatatable_id?: SortOrder
    title?: SortOrder
    engine?: SortOrder
    type?: SortOrder
    json_render_data?: SortOrder
  }

  export type wp_wpdatachartsMinOrderByAggregateInput = {
    id?: SortOrder
    wpdatatable_id?: SortOrder
    title?: SortOrder
    engine?: SortOrder
    type?: SortOrder
    json_render_data?: SortOrder
  }

  export type wp_wpdatachartsSumOrderByAggregateInput = {
    id?: SortOrder
    wpdatatable_id?: SortOrder
  }

  export type Enumwp_wpdatacharts_engineWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatacharts_engine | Enumwp_wpdatacharts_engineFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatacharts_engine[]
    notIn?: $Enums.wp_wpdatacharts_engine[]
    not?: NestedEnumwp_wpdatacharts_engineWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatacharts_engine
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatacharts_engineFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatacharts_engineFilter<$PrismaModel>
  }

  export type wp_wpdatatablesOrderByRelevanceInput = {
    fields: wp_wpdatatablesOrderByRelevanceFieldEnum | wp_wpdatatablesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpdatatablesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    show_title?: SortOrder
    table_type?: SortOrder
    content?: SortOrder
    filtering?: SortOrder
    filtering_form?: SortOrder
    sorting?: SortOrder
    tools?: SortOrder
    server_side?: SortOrder
    editable?: SortOrder
    inline_editing?: SortOrder
    popover_tools?: SortOrder
    editor_roles?: SortOrder
    mysql_table_name?: SortOrder
    edit_only_own_rows?: SortOrder
    userid_column_id?: SortOrder
    display_length?: SortOrder
    auto_refresh?: SortOrder
    fixed_columns?: SortOrder
    fixed_layout?: SortOrder
    responsive?: SortOrder
    scrollable?: SortOrder
    word_wrap?: SortOrder
    hide_before_load?: SortOrder
    var1?: SortOrder
    var2?: SortOrder
    var3?: SortOrder
    tabletools_config?: SortOrder
    advanced_settings?: SortOrder
    connection?: SortOrder
  }

  export type wp_wpdatatablesAvgOrderByAggregateInput = {
    id?: SortOrder
    userid_column_id?: SortOrder
    display_length?: SortOrder
    auto_refresh?: SortOrder
    fixed_columns?: SortOrder
  }

  export type wp_wpdatatablesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    show_title?: SortOrder
    table_type?: SortOrder
    content?: SortOrder
    filtering?: SortOrder
    filtering_form?: SortOrder
    sorting?: SortOrder
    tools?: SortOrder
    server_side?: SortOrder
    editable?: SortOrder
    inline_editing?: SortOrder
    popover_tools?: SortOrder
    editor_roles?: SortOrder
    mysql_table_name?: SortOrder
    edit_only_own_rows?: SortOrder
    userid_column_id?: SortOrder
    display_length?: SortOrder
    auto_refresh?: SortOrder
    fixed_columns?: SortOrder
    fixed_layout?: SortOrder
    responsive?: SortOrder
    scrollable?: SortOrder
    word_wrap?: SortOrder
    hide_before_load?: SortOrder
    var1?: SortOrder
    var2?: SortOrder
    var3?: SortOrder
    tabletools_config?: SortOrder
    advanced_settings?: SortOrder
    connection?: SortOrder
  }

  export type wp_wpdatatablesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    show_title?: SortOrder
    table_type?: SortOrder
    content?: SortOrder
    filtering?: SortOrder
    filtering_form?: SortOrder
    sorting?: SortOrder
    tools?: SortOrder
    server_side?: SortOrder
    editable?: SortOrder
    inline_editing?: SortOrder
    popover_tools?: SortOrder
    editor_roles?: SortOrder
    mysql_table_name?: SortOrder
    edit_only_own_rows?: SortOrder
    userid_column_id?: SortOrder
    display_length?: SortOrder
    auto_refresh?: SortOrder
    fixed_columns?: SortOrder
    fixed_layout?: SortOrder
    responsive?: SortOrder
    scrollable?: SortOrder
    word_wrap?: SortOrder
    hide_before_load?: SortOrder
    var1?: SortOrder
    var2?: SortOrder
    var3?: SortOrder
    tabletools_config?: SortOrder
    advanced_settings?: SortOrder
    connection?: SortOrder
  }

  export type wp_wpdatatablesSumOrderByAggregateInput = {
    id?: SortOrder
    userid_column_id?: SortOrder
    display_length?: SortOrder
    auto_refresh?: SortOrder
    fixed_columns?: SortOrder
  }

  export type Enumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_filter_type | Enumwp_wpdatatables_columns_filter_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_filter_type[]
    notIn?: $Enums.wp_wpdatatables_columns_filter_type[]
    not?: NestedEnumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_filter_type
  }

  export type Enumwp_wpdatatables_columns_column_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_column_type | Enumwp_wpdatatables_columns_column_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_column_type[]
    notIn?: $Enums.wp_wpdatatables_columns_column_type[]
    not?: NestedEnumwp_wpdatatables_columns_column_typeFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_column_type
  }

  export type Enumwp_wpdatatables_columns_input_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_input_type | Enumwp_wpdatatables_columns_input_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_input_type[]
    notIn?: $Enums.wp_wpdatatables_columns_input_type[]
    not?: NestedEnumwp_wpdatatables_columns_input_typeFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_input_type
  }

  export type wp_wpdatatables_columnsOrderByRelevanceInput = {
    fields: wp_wpdatatables_columnsOrderByRelevanceFieldEnum | wp_wpdatatables_columnsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpdatatables_columnsCountOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    orig_header?: SortOrder
    display_header?: SortOrder
    filter_type?: SortOrder
    column_type?: SortOrder
    input_type?: SortOrder
    input_mandatory?: SortOrder
    id_column?: SortOrder
    group_column?: SortOrder
    sort_column?: SortOrder
    hide_on_phones?: SortOrder
    hide_on_tablets?: SortOrder
    visible?: SortOrder
    sum_column?: SortOrder
    skip_thousands_separator?: SortOrder
    width?: SortOrder
    possible_values?: SortOrder
    default_value?: SortOrder
    css_class?: SortOrder
    text_before?: SortOrder
    text_after?: SortOrder
    formatting_rules?: SortOrder
    calc_formula?: SortOrder
    color?: SortOrder
    advanced_settings?: SortOrder
    pos?: SortOrder
  }

  export type wp_wpdatatables_columnsAvgOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    pos?: SortOrder
  }

  export type wp_wpdatatables_columnsMaxOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    orig_header?: SortOrder
    display_header?: SortOrder
    filter_type?: SortOrder
    column_type?: SortOrder
    input_type?: SortOrder
    input_mandatory?: SortOrder
    id_column?: SortOrder
    group_column?: SortOrder
    sort_column?: SortOrder
    hide_on_phones?: SortOrder
    hide_on_tablets?: SortOrder
    visible?: SortOrder
    sum_column?: SortOrder
    skip_thousands_separator?: SortOrder
    width?: SortOrder
    possible_values?: SortOrder
    default_value?: SortOrder
    css_class?: SortOrder
    text_before?: SortOrder
    text_after?: SortOrder
    formatting_rules?: SortOrder
    calc_formula?: SortOrder
    color?: SortOrder
    advanced_settings?: SortOrder
    pos?: SortOrder
  }

  export type wp_wpdatatables_columnsMinOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    orig_header?: SortOrder
    display_header?: SortOrder
    filter_type?: SortOrder
    column_type?: SortOrder
    input_type?: SortOrder
    input_mandatory?: SortOrder
    id_column?: SortOrder
    group_column?: SortOrder
    sort_column?: SortOrder
    hide_on_phones?: SortOrder
    hide_on_tablets?: SortOrder
    visible?: SortOrder
    sum_column?: SortOrder
    skip_thousands_separator?: SortOrder
    width?: SortOrder
    possible_values?: SortOrder
    default_value?: SortOrder
    css_class?: SortOrder
    text_before?: SortOrder
    text_after?: SortOrder
    formatting_rules?: SortOrder
    calc_formula?: SortOrder
    color?: SortOrder
    advanced_settings?: SortOrder
    pos?: SortOrder
  }

  export type wp_wpdatatables_columnsSumOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    pos?: SortOrder
  }

  export type Enumwp_wpdatatables_columns_filter_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_filter_type | Enumwp_wpdatatables_columns_filter_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_filter_type[]
    notIn?: $Enums.wp_wpdatatables_columns_filter_type[]
    not?: NestedEnumwp_wpdatatables_columns_filter_typeWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_filter_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel>
  }

  export type Enumwp_wpdatatables_columns_column_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_column_type | Enumwp_wpdatatables_columns_column_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_column_type[]
    notIn?: $Enums.wp_wpdatatables_columns_column_type[]
    not?: NestedEnumwp_wpdatatables_columns_column_typeWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_column_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatatables_columns_column_typeFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatatables_columns_column_typeFilter<$PrismaModel>
  }

  export type Enumwp_wpdatatables_columns_input_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_input_type | Enumwp_wpdatatables_columns_input_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_input_type[]
    notIn?: $Enums.wp_wpdatatables_columns_input_type[]
    not?: NestedEnumwp_wpdatatables_columns_input_typeWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_input_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatatables_columns_input_typeFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatatables_columns_input_typeFilter<$PrismaModel>
  }

  export type wp_wpdatatables_rowsOrderByRelevanceInput = {
    fields: wp_wpdatatables_rowsOrderByRelevanceFieldEnum | wp_wpdatatables_rowsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpdatatables_rowsCountOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    data?: SortOrder
  }

  export type wp_wpdatatables_rowsAvgOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
  }

  export type wp_wpdatatables_rowsMaxOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    data?: SortOrder
  }

  export type wp_wpdatatables_rowsMinOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
    data?: SortOrder
  }

  export type wp_wpdatatables_rowsSumOrderByAggregateInput = {
    id?: SortOrder
    table_id?: SortOrder
  }

  export type wp_wpforms_tasks_metaOrderByRelevanceInput = {
    fields: wp_wpforms_tasks_metaOrderByRelevanceFieldEnum | wp_wpforms_tasks_metaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpforms_tasks_metaCountOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    data?: SortOrder
    date?: SortOrder
  }

  export type wp_wpforms_tasks_metaAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_wpforms_tasks_metaMaxOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    data?: SortOrder
    date?: SortOrder
  }

  export type wp_wpforms_tasks_metaMinOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    data?: SortOrder
    date?: SortOrder
  }

  export type wp_wpforms_tasks_metaSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PortfolioListRelationFilter = {
    every?: PortfolioWhereInput
    some?: PortfolioWhereInput
    none?: PortfolioWhereInput
  }

  export type TicketCommentListRelationFilter = {
    every?: TicketCommentWhereInput
    some?: TicketCommentWhereInput
    none?: TicketCommentWhereInput
  }

  export type TicketListRelationFilter = {
    every?: TicketWhereInput
    some?: TicketWhereInput
    none?: TicketWhereInput
  }

  export type UserSubscriptionListRelationFilter = {
    every?: UserSubscriptionWhereInput
    some?: UserSubscriptionWhereInput
    none?: UserSubscriptionWhereInput
  }

  export type SearchListRelationFilter = {
    every?: SearchWhereInput
    some?: SearchWhereInput
    none?: SearchWhereInput
  }

  export type PortfolioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketCommentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserSubscriptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SearchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelevanceInput = {
    fields: UserOrderByRelevanceFieldEnum | UserOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    profileImage?: SortOrder
    plan?: SortOrder
    role?: SortOrder
    stripeId?: SortOrder
    customerId?: SortOrder
    planId?: SortOrder
    planName?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    emailUpdate?: SortOrder
    isPaid?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
    plan?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    profileImage?: SortOrder
    plan?: SortOrder
    role?: SortOrder
    stripeId?: SortOrder
    customerId?: SortOrder
    planId?: SortOrder
    planName?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    emailUpdate?: SortOrder
    isPaid?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    isActive?: SortOrder
    profileImage?: SortOrder
    plan?: SortOrder
    role?: SortOrder
    stripeId?: SortOrder
    customerId?: SortOrder
    planId?: SortOrder
    planName?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    emailUpdate?: SortOrder
    isPaid?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
    plan?: SortOrder
  }

  export type TicketDocumentListRelationFilter = {
    every?: TicketDocumentWhereInput
    some?: TicketDocumentWhereInput
    none?: TicketDocumentWhereInput
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type TicketDocumentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TicketOrderByRelevanceInput = {
    fields: TicketOrderByRelevanceFieldEnum | TicketOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TicketCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type TicketAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type TicketMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type TicketMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    title?: SortOrder
    description?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type TicketSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type TicketScalarRelationFilter = {
    is?: TicketWhereInput
    isNot?: TicketWhereInput
  }

  export type TicketDocumentOrderByRelevanceInput = {
    fields: TicketDocumentOrderByRelevanceFieldEnum | TicketDocumentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TicketDocumentCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    name?: SortOrder
    size?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    ticketId?: SortOrder
  }

  export type TicketDocumentAvgOrderByAggregateInput = {
    id?: SortOrder
    size?: SortOrder
    ticketId?: SortOrder
  }

  export type TicketDocumentMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    name?: SortOrder
    size?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    ticketId?: SortOrder
  }

  export type TicketDocumentMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    name?: SortOrder
    size?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
    ticketId?: SortOrder
  }

  export type TicketDocumentSumOrderByAggregateInput = {
    id?: SortOrder
    size?: SortOrder
    ticketId?: SortOrder
  }

  export type TicketCommentOrderByRelevanceInput = {
    fields: TicketCommentOrderByRelevanceFieldEnum | TicketCommentOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TicketCommentCountOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    ticketId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type TicketCommentAvgOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    userId?: SortOrder
  }

  export type TicketCommentMaxOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    ticketId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type TicketCommentMinOrderByAggregateInput = {
    id?: SortOrder
    text?: SortOrder
    ticketId?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type TicketCommentSumOrderByAggregateInput = {
    id?: SortOrder
    ticketId?: SortOrder
    userId?: SortOrder
  }

  export type UserSubscriptionOrderByRelevanceInput = {
    fields: UserSubscriptionOrderByRelevanceFieldEnum | UserSubscriptionOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UserSubscriptionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserSubscriptionAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type UserSubscriptionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserSubscriptionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    subscriptionId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type UserSubscriptionSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type PortfolioOrderByRelevanceInput = {
    fields: PortfolioOrderByRelevanceFieldEnum | PortfolioOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PortfolioCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    filters?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type PortfolioAvgOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }

  export type PortfolioMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type PortfolioMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    name?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type PortfolioSumOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type sentenceallviewOrderByRelevanceInput = {
    fields: sentenceallviewOrderByRelevanceFieldEnum | sentenceallviewOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sentenceallviewCountOrderByAggregateInput = {
    id?: SortOrder
    release_date?: SortOrder
    pr_site?: SortOrder
    Targetyear_s?: SortOrder
    ArticleTargetYear?: SortOrder
    sentence_carbon?: SortOrder
    full_text?: SortOrder
    PressReleaseMonth?: SortOrder
    PressReleaseFullClean?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    Company?: SortOrder
    Annual_Report_Date?: SortOrder
    title?: SortOrder
    emails?: SortOrder
    sentence_other?: SortOrder
    Source_link?: SortOrder
    Source_Date?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    sentence_waste?: SortOrder
    source?: SortOrder
    sentence_water?: SortOrder
    PressReleaseYear?: SortOrder
    ticker?: SortOrder
    SentenceTargetYear?: SortOrder
    Target_sentence?: SortOrder
    upload_date?: SortOrder
    PageURL?: SortOrder
    DocURL?: SortOrder
    DocTitle?: SortOrder
    DocName?: SortOrder
    Target_Sentence_Page?: SortOrder
    x?: SortOrder
    Member_SP500?: SortOrder
    Member_Russell1000?: SortOrder
    ScrapingCodeSetUp?: SortOrder
    Tickers?: SortOrder
    PRAgency?: SortOrder
    Domain?: SortOrder
    PressURL?: SortOrder
    SubscribedEsgroadmap?: SortOrder
    SubscribedJames?: SortOrder
    PlainTextSubscription?: SortOrder
    AnnualReportsURL?: SortOrder
    AnnualReportPDF2020?: SortOrder
    ESGReportsURL?: SortOrder
    ESGReportPDF2020?: SortOrder
    Country?: SortOrder
    SectorCode1?: SortOrder
    SectorName1?: SortOrder
    SectorCode2?: SortOrder
    SectorName2?: SortOrder
    SectorCode3?: SortOrder
    SectorName3?: SortOrder
    SectorCode4?: SortOrder
    SectorName4?: SortOrder
    SectorCode5?: SortOrder
    SectorName5?: SortOrder
    WorkedBy?: SortOrder
    CommentsNotes?: SortOrder
    CarbonSentenceAvailable?: SortOrder
  }

  export type sentenceallviewAvgOrderByAggregateInput = {
    id?: SortOrder
    sentence_carbon?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    sentence_other?: SortOrder
    sentence_waste?: SortOrder
    sentence_water?: SortOrder
  }

  export type sentenceallviewMaxOrderByAggregateInput = {
    id?: SortOrder
    release_date?: SortOrder
    pr_site?: SortOrder
    Targetyear_s?: SortOrder
    ArticleTargetYear?: SortOrder
    sentence_carbon?: SortOrder
    full_text?: SortOrder
    PressReleaseMonth?: SortOrder
    PressReleaseFullClean?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    Company?: SortOrder
    Annual_Report_Date?: SortOrder
    title?: SortOrder
    emails?: SortOrder
    sentence_other?: SortOrder
    Source_link?: SortOrder
    Source_Date?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    sentence_waste?: SortOrder
    source?: SortOrder
    sentence_water?: SortOrder
    PressReleaseYear?: SortOrder
    ticker?: SortOrder
    SentenceTargetYear?: SortOrder
    Target_sentence?: SortOrder
    upload_date?: SortOrder
    PageURL?: SortOrder
    DocURL?: SortOrder
    DocTitle?: SortOrder
    DocName?: SortOrder
    Target_Sentence_Page?: SortOrder
    x?: SortOrder
    Member_SP500?: SortOrder
    Member_Russell1000?: SortOrder
    ScrapingCodeSetUp?: SortOrder
    Tickers?: SortOrder
    PRAgency?: SortOrder
    Domain?: SortOrder
    PressURL?: SortOrder
    SubscribedEsgroadmap?: SortOrder
    SubscribedJames?: SortOrder
    PlainTextSubscription?: SortOrder
    AnnualReportsURL?: SortOrder
    AnnualReportPDF2020?: SortOrder
    ESGReportsURL?: SortOrder
    ESGReportPDF2020?: SortOrder
    Country?: SortOrder
    SectorCode1?: SortOrder
    SectorName1?: SortOrder
    SectorCode2?: SortOrder
    SectorName2?: SortOrder
    SectorCode3?: SortOrder
    SectorName3?: SortOrder
    SectorCode4?: SortOrder
    SectorName4?: SortOrder
    SectorCode5?: SortOrder
    SectorName5?: SortOrder
    WorkedBy?: SortOrder
    CommentsNotes?: SortOrder
    CarbonSentenceAvailable?: SortOrder
  }

  export type sentenceallviewMinOrderByAggregateInput = {
    id?: SortOrder
    release_date?: SortOrder
    pr_site?: SortOrder
    Targetyear_s?: SortOrder
    ArticleTargetYear?: SortOrder
    sentence_carbon?: SortOrder
    full_text?: SortOrder
    PressReleaseMonth?: SortOrder
    PressReleaseFullClean?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    Company?: SortOrder
    Annual_Report_Date?: SortOrder
    title?: SortOrder
    emails?: SortOrder
    sentence_other?: SortOrder
    Source_link?: SortOrder
    Source_Date?: SortOrder
    PressReleaseFullCleanstep1?: SortOrder
    sentence_waste?: SortOrder
    source?: SortOrder
    sentence_water?: SortOrder
    PressReleaseYear?: SortOrder
    ticker?: SortOrder
    SentenceTargetYear?: SortOrder
    Target_sentence?: SortOrder
    upload_date?: SortOrder
    PageURL?: SortOrder
    DocURL?: SortOrder
    DocTitle?: SortOrder
    DocName?: SortOrder
    Target_Sentence_Page?: SortOrder
    x?: SortOrder
    Member_SP500?: SortOrder
    Member_Russell1000?: SortOrder
    ScrapingCodeSetUp?: SortOrder
    Tickers?: SortOrder
    PRAgency?: SortOrder
    Domain?: SortOrder
    PressURL?: SortOrder
    SubscribedEsgroadmap?: SortOrder
    SubscribedJames?: SortOrder
    PlainTextSubscription?: SortOrder
    AnnualReportsURL?: SortOrder
    AnnualReportPDF2020?: SortOrder
    ESGReportsURL?: SortOrder
    ESGReportPDF2020?: SortOrder
    Country?: SortOrder
    SectorCode1?: SortOrder
    SectorName1?: SortOrder
    SectorCode2?: SortOrder
    SectorName2?: SortOrder
    SectorCode3?: SortOrder
    SectorName3?: SortOrder
    SectorCode4?: SortOrder
    SectorName4?: SortOrder
    SectorCode5?: SortOrder
    SectorName5?: SortOrder
    WorkedBy?: SortOrder
    CommentsNotes?: SortOrder
    CarbonSentenceAvailable?: SortOrder
  }

  export type sentenceallviewSumOrderByAggregateInput = {
    id?: SortOrder
    sentence_carbon?: SortOrder
    sentence_renewables?: SortOrder
    sentence_suppliers?: SortOrder
    sentence_gender?: SortOrder
    sentence_other?: SortOrder
    sentence_waste?: SortOrder
    sentence_water?: SortOrder
  }

  export type SearchOrderByRelevanceInput = {
    fields: SearchOrderByRelevanceFieldEnum | SearchOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type SearchCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    keyword?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    lastChecked?: SortOrder
  }

  export type SearchAvgOrderByAggregateInput = {
    userId?: SortOrder
  }

  export type SearchMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    keyword?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    lastChecked?: SortOrder
  }

  export type SearchMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    keyword?: SortOrder
    tableName?: SortOrder
    createdAt?: SortOrder
    lastChecked?: SortOrder
  }

  export type SearchSumOrderByAggregateInput = {
    userId?: SortOrder
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type Enumwp_wpdatacharts_engineFieldUpdateOperationsInput = {
    set?: $Enums.wp_wpdatacharts_engine
  }

  export type Enumwp_wpdatatables_columns_filter_typeFieldUpdateOperationsInput = {
    set?: $Enums.wp_wpdatatables_columns_filter_type
  }

  export type Enumwp_wpdatatables_columns_column_typeFieldUpdateOperationsInput = {
    set?: $Enums.wp_wpdatatables_columns_column_type
  }

  export type Enumwp_wpdatatables_columns_input_typeFieldUpdateOperationsInput = {
    set?: $Enums.wp_wpdatatables_columns_input_type
  }

  export type PortfolioCreateNestedManyWithoutUserInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput> | PortfolioCreateWithoutUserInput[] | PortfolioUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput | PortfolioCreateOrConnectWithoutUserInput[]
    createMany?: PortfolioCreateManyUserInputEnvelope
    connect?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
  }

  export type TicketCommentCreateNestedManyWithoutPostedByInput = {
    create?: XOR<TicketCommentCreateWithoutPostedByInput, TicketCommentUncheckedCreateWithoutPostedByInput> | TicketCommentCreateWithoutPostedByInput[] | TicketCommentUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutPostedByInput | TicketCommentCreateOrConnectWithoutPostedByInput[]
    createMany?: TicketCommentCreateManyPostedByInputEnvelope
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
  }

  export type TicketCreateNestedManyWithoutPostedByInput = {
    create?: XOR<TicketCreateWithoutPostedByInput, TicketUncheckedCreateWithoutPostedByInput> | TicketCreateWithoutPostedByInput[] | TicketUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPostedByInput | TicketCreateOrConnectWithoutPostedByInput[]
    createMany?: TicketCreateManyPostedByInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type UserSubscriptionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSubscriptionCreateWithoutUserInput, UserSubscriptionUncheckedCreateWithoutUserInput> | UserSubscriptionCreateWithoutUserInput[] | UserSubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSubscriptionCreateOrConnectWithoutUserInput | UserSubscriptionCreateOrConnectWithoutUserInput[]
    createMany?: UserSubscriptionCreateManyUserInputEnvelope
    connect?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
  }

  export type SearchCreateNestedManyWithoutUserInput = {
    create?: XOR<SearchCreateWithoutUserInput, SearchUncheckedCreateWithoutUserInput> | SearchCreateWithoutUserInput[] | SearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchCreateOrConnectWithoutUserInput | SearchCreateOrConnectWithoutUserInput[]
    createMany?: SearchCreateManyUserInputEnvelope
    connect?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
  }

  export type PortfolioUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput> | PortfolioCreateWithoutUserInput[] | PortfolioUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput | PortfolioCreateOrConnectWithoutUserInput[]
    createMany?: PortfolioCreateManyUserInputEnvelope
    connect?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
  }

  export type TicketCommentUncheckedCreateNestedManyWithoutPostedByInput = {
    create?: XOR<TicketCommentCreateWithoutPostedByInput, TicketCommentUncheckedCreateWithoutPostedByInput> | TicketCommentCreateWithoutPostedByInput[] | TicketCommentUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutPostedByInput | TicketCommentCreateOrConnectWithoutPostedByInput[]
    createMany?: TicketCommentCreateManyPostedByInputEnvelope
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
  }

  export type TicketUncheckedCreateNestedManyWithoutPostedByInput = {
    create?: XOR<TicketCreateWithoutPostedByInput, TicketUncheckedCreateWithoutPostedByInput> | TicketCreateWithoutPostedByInput[] | TicketUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPostedByInput | TicketCreateOrConnectWithoutPostedByInput[]
    createMany?: TicketCreateManyPostedByInputEnvelope
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
  }

  export type UserSubscriptionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSubscriptionCreateWithoutUserInput, UserSubscriptionUncheckedCreateWithoutUserInput> | UserSubscriptionCreateWithoutUserInput[] | UserSubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSubscriptionCreateOrConnectWithoutUserInput | UserSubscriptionCreateOrConnectWithoutUserInput[]
    createMany?: UserSubscriptionCreateManyUserInputEnvelope
    connect?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
  }

  export type SearchUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SearchCreateWithoutUserInput, SearchUncheckedCreateWithoutUserInput> | SearchCreateWithoutUserInput[] | SearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchCreateOrConnectWithoutUserInput | SearchCreateOrConnectWithoutUserInput[]
    createMany?: SearchCreateManyUserInputEnvelope
    connect?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
  }

  export type PortfolioUpdateManyWithoutUserNestedInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput> | PortfolioCreateWithoutUserInput[] | PortfolioUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput | PortfolioCreateOrConnectWithoutUserInput[]
    upsert?: PortfolioUpsertWithWhereUniqueWithoutUserInput | PortfolioUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PortfolioCreateManyUserInputEnvelope
    set?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    disconnect?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    delete?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    connect?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    update?: PortfolioUpdateWithWhereUniqueWithoutUserInput | PortfolioUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PortfolioUpdateManyWithWhereWithoutUserInput | PortfolioUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PortfolioScalarWhereInput | PortfolioScalarWhereInput[]
  }

  export type TicketCommentUpdateManyWithoutPostedByNestedInput = {
    create?: XOR<TicketCommentCreateWithoutPostedByInput, TicketCommentUncheckedCreateWithoutPostedByInput> | TicketCommentCreateWithoutPostedByInput[] | TicketCommentUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutPostedByInput | TicketCommentCreateOrConnectWithoutPostedByInput[]
    upsert?: TicketCommentUpsertWithWhereUniqueWithoutPostedByInput | TicketCommentUpsertWithWhereUniqueWithoutPostedByInput[]
    createMany?: TicketCommentCreateManyPostedByInputEnvelope
    set?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    disconnect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    delete?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    update?: TicketCommentUpdateWithWhereUniqueWithoutPostedByInput | TicketCommentUpdateWithWhereUniqueWithoutPostedByInput[]
    updateMany?: TicketCommentUpdateManyWithWhereWithoutPostedByInput | TicketCommentUpdateManyWithWhereWithoutPostedByInput[]
    deleteMany?: TicketCommentScalarWhereInput | TicketCommentScalarWhereInput[]
  }

  export type TicketUpdateManyWithoutPostedByNestedInput = {
    create?: XOR<TicketCreateWithoutPostedByInput, TicketUncheckedCreateWithoutPostedByInput> | TicketCreateWithoutPostedByInput[] | TicketUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPostedByInput | TicketCreateOrConnectWithoutPostedByInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutPostedByInput | TicketUpsertWithWhereUniqueWithoutPostedByInput[]
    createMany?: TicketCreateManyPostedByInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutPostedByInput | TicketUpdateWithWhereUniqueWithoutPostedByInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutPostedByInput | TicketUpdateManyWithWhereWithoutPostedByInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type UserSubscriptionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSubscriptionCreateWithoutUserInput, UserSubscriptionUncheckedCreateWithoutUserInput> | UserSubscriptionCreateWithoutUserInput[] | UserSubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSubscriptionCreateOrConnectWithoutUserInput | UserSubscriptionCreateOrConnectWithoutUserInput[]
    upsert?: UserSubscriptionUpsertWithWhereUniqueWithoutUserInput | UserSubscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSubscriptionCreateManyUserInputEnvelope
    set?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    disconnect?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    delete?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    connect?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    update?: UserSubscriptionUpdateWithWhereUniqueWithoutUserInput | UserSubscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSubscriptionUpdateManyWithWhereWithoutUserInput | UserSubscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSubscriptionScalarWhereInput | UserSubscriptionScalarWhereInput[]
  }

  export type SearchUpdateManyWithoutUserNestedInput = {
    create?: XOR<SearchCreateWithoutUserInput, SearchUncheckedCreateWithoutUserInput> | SearchCreateWithoutUserInput[] | SearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchCreateOrConnectWithoutUserInput | SearchCreateOrConnectWithoutUserInput[]
    upsert?: SearchUpsertWithWhereUniqueWithoutUserInput | SearchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SearchCreateManyUserInputEnvelope
    set?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    disconnect?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    delete?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    connect?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    update?: SearchUpdateWithWhereUniqueWithoutUserInput | SearchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SearchUpdateManyWithWhereWithoutUserInput | SearchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SearchScalarWhereInput | SearchScalarWhereInput[]
  }

  export type PortfolioUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput> | PortfolioCreateWithoutUserInput[] | PortfolioUncheckedCreateWithoutUserInput[]
    connectOrCreate?: PortfolioCreateOrConnectWithoutUserInput | PortfolioCreateOrConnectWithoutUserInput[]
    upsert?: PortfolioUpsertWithWhereUniqueWithoutUserInput | PortfolioUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: PortfolioCreateManyUserInputEnvelope
    set?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    disconnect?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    delete?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    connect?: PortfolioWhereUniqueInput | PortfolioWhereUniqueInput[]
    update?: PortfolioUpdateWithWhereUniqueWithoutUserInput | PortfolioUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: PortfolioUpdateManyWithWhereWithoutUserInput | PortfolioUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: PortfolioScalarWhereInput | PortfolioScalarWhereInput[]
  }

  export type TicketCommentUncheckedUpdateManyWithoutPostedByNestedInput = {
    create?: XOR<TicketCommentCreateWithoutPostedByInput, TicketCommentUncheckedCreateWithoutPostedByInput> | TicketCommentCreateWithoutPostedByInput[] | TicketCommentUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutPostedByInput | TicketCommentCreateOrConnectWithoutPostedByInput[]
    upsert?: TicketCommentUpsertWithWhereUniqueWithoutPostedByInput | TicketCommentUpsertWithWhereUniqueWithoutPostedByInput[]
    createMany?: TicketCommentCreateManyPostedByInputEnvelope
    set?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    disconnect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    delete?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    update?: TicketCommentUpdateWithWhereUniqueWithoutPostedByInput | TicketCommentUpdateWithWhereUniqueWithoutPostedByInput[]
    updateMany?: TicketCommentUpdateManyWithWhereWithoutPostedByInput | TicketCommentUpdateManyWithWhereWithoutPostedByInput[]
    deleteMany?: TicketCommentScalarWhereInput | TicketCommentScalarWhereInput[]
  }

  export type TicketUncheckedUpdateManyWithoutPostedByNestedInput = {
    create?: XOR<TicketCreateWithoutPostedByInput, TicketUncheckedCreateWithoutPostedByInput> | TicketCreateWithoutPostedByInput[] | TicketUncheckedCreateWithoutPostedByInput[]
    connectOrCreate?: TicketCreateOrConnectWithoutPostedByInput | TicketCreateOrConnectWithoutPostedByInput[]
    upsert?: TicketUpsertWithWhereUniqueWithoutPostedByInput | TicketUpsertWithWhereUniqueWithoutPostedByInput[]
    createMany?: TicketCreateManyPostedByInputEnvelope
    set?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    disconnect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    delete?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    connect?: TicketWhereUniqueInput | TicketWhereUniqueInput[]
    update?: TicketUpdateWithWhereUniqueWithoutPostedByInput | TicketUpdateWithWhereUniqueWithoutPostedByInput[]
    updateMany?: TicketUpdateManyWithWhereWithoutPostedByInput | TicketUpdateManyWithWhereWithoutPostedByInput[]
    deleteMany?: TicketScalarWhereInput | TicketScalarWhereInput[]
  }

  export type UserSubscriptionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSubscriptionCreateWithoutUserInput, UserSubscriptionUncheckedCreateWithoutUserInput> | UserSubscriptionCreateWithoutUserInput[] | UserSubscriptionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSubscriptionCreateOrConnectWithoutUserInput | UserSubscriptionCreateOrConnectWithoutUserInput[]
    upsert?: UserSubscriptionUpsertWithWhereUniqueWithoutUserInput | UserSubscriptionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSubscriptionCreateManyUserInputEnvelope
    set?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    disconnect?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    delete?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    connect?: UserSubscriptionWhereUniqueInput | UserSubscriptionWhereUniqueInput[]
    update?: UserSubscriptionUpdateWithWhereUniqueWithoutUserInput | UserSubscriptionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSubscriptionUpdateManyWithWhereWithoutUserInput | UserSubscriptionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSubscriptionScalarWhereInput | UserSubscriptionScalarWhereInput[]
  }

  export type SearchUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SearchCreateWithoutUserInput, SearchUncheckedCreateWithoutUserInput> | SearchCreateWithoutUserInput[] | SearchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SearchCreateOrConnectWithoutUserInput | SearchCreateOrConnectWithoutUserInput[]
    upsert?: SearchUpsertWithWhereUniqueWithoutUserInput | SearchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SearchCreateManyUserInputEnvelope
    set?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    disconnect?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    delete?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    connect?: SearchWhereUniqueInput | SearchWhereUniqueInput[]
    update?: SearchUpdateWithWhereUniqueWithoutUserInput | SearchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SearchUpdateManyWithWhereWithoutUserInput | SearchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SearchScalarWhereInput | SearchScalarWhereInput[]
  }

  export type TicketCommentCreateNestedManyWithoutTicketInput = {
    create?: XOR<TicketCommentCreateWithoutTicketInput, TicketCommentUncheckedCreateWithoutTicketInput> | TicketCommentCreateWithoutTicketInput[] | TicketCommentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutTicketInput | TicketCommentCreateOrConnectWithoutTicketInput[]
    createMany?: TicketCommentCreateManyTicketInputEnvelope
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
  }

  export type TicketDocumentCreateNestedManyWithoutTicketInput = {
    create?: XOR<TicketDocumentCreateWithoutTicketInput, TicketDocumentUncheckedCreateWithoutTicketInput> | TicketDocumentCreateWithoutTicketInput[] | TicketDocumentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketDocumentCreateOrConnectWithoutTicketInput | TicketDocumentCreateOrConnectWithoutTicketInput[]
    createMany?: TicketDocumentCreateManyTicketInputEnvelope
    connect?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutTicketsInput = {
    create?: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTicketsInput
    connect?: UserWhereUniqueInput
  }

  export type TicketCommentUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<TicketCommentCreateWithoutTicketInput, TicketCommentUncheckedCreateWithoutTicketInput> | TicketCommentCreateWithoutTicketInput[] | TicketCommentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutTicketInput | TicketCommentCreateOrConnectWithoutTicketInput[]
    createMany?: TicketCommentCreateManyTicketInputEnvelope
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
  }

  export type TicketDocumentUncheckedCreateNestedManyWithoutTicketInput = {
    create?: XOR<TicketDocumentCreateWithoutTicketInput, TicketDocumentUncheckedCreateWithoutTicketInput> | TicketDocumentCreateWithoutTicketInput[] | TicketDocumentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketDocumentCreateOrConnectWithoutTicketInput | TicketDocumentCreateOrConnectWithoutTicketInput[]
    createMany?: TicketDocumentCreateManyTicketInputEnvelope
    connect?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
  }

  export type TicketCommentUpdateManyWithoutTicketNestedInput = {
    create?: XOR<TicketCommentCreateWithoutTicketInput, TicketCommentUncheckedCreateWithoutTicketInput> | TicketCommentCreateWithoutTicketInput[] | TicketCommentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutTicketInput | TicketCommentCreateOrConnectWithoutTicketInput[]
    upsert?: TicketCommentUpsertWithWhereUniqueWithoutTicketInput | TicketCommentUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: TicketCommentCreateManyTicketInputEnvelope
    set?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    disconnect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    delete?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    update?: TicketCommentUpdateWithWhereUniqueWithoutTicketInput | TicketCommentUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: TicketCommentUpdateManyWithWhereWithoutTicketInput | TicketCommentUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: TicketCommentScalarWhereInput | TicketCommentScalarWhereInput[]
  }

  export type TicketDocumentUpdateManyWithoutTicketNestedInput = {
    create?: XOR<TicketDocumentCreateWithoutTicketInput, TicketDocumentUncheckedCreateWithoutTicketInput> | TicketDocumentCreateWithoutTicketInput[] | TicketDocumentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketDocumentCreateOrConnectWithoutTicketInput | TicketDocumentCreateOrConnectWithoutTicketInput[]
    upsert?: TicketDocumentUpsertWithWhereUniqueWithoutTicketInput | TicketDocumentUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: TicketDocumentCreateManyTicketInputEnvelope
    set?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    disconnect?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    delete?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    connect?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    update?: TicketDocumentUpdateWithWhereUniqueWithoutTicketInput | TicketDocumentUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: TicketDocumentUpdateManyWithWhereWithoutTicketInput | TicketDocumentUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: TicketDocumentScalarWhereInput | TicketDocumentScalarWhereInput[]
  }

  export type UserUpdateOneRequiredWithoutTicketsNestedInput = {
    create?: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTicketsInput
    upsert?: UserUpsertWithoutTicketsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTicketsInput, UserUpdateWithoutTicketsInput>, UserUncheckedUpdateWithoutTicketsInput>
  }

  export type TicketCommentUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<TicketCommentCreateWithoutTicketInput, TicketCommentUncheckedCreateWithoutTicketInput> | TicketCommentCreateWithoutTicketInput[] | TicketCommentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketCommentCreateOrConnectWithoutTicketInput | TicketCommentCreateOrConnectWithoutTicketInput[]
    upsert?: TicketCommentUpsertWithWhereUniqueWithoutTicketInput | TicketCommentUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: TicketCommentCreateManyTicketInputEnvelope
    set?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    disconnect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    delete?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    connect?: TicketCommentWhereUniqueInput | TicketCommentWhereUniqueInput[]
    update?: TicketCommentUpdateWithWhereUniqueWithoutTicketInput | TicketCommentUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: TicketCommentUpdateManyWithWhereWithoutTicketInput | TicketCommentUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: TicketCommentScalarWhereInput | TicketCommentScalarWhereInput[]
  }

  export type TicketDocumentUncheckedUpdateManyWithoutTicketNestedInput = {
    create?: XOR<TicketDocumentCreateWithoutTicketInput, TicketDocumentUncheckedCreateWithoutTicketInput> | TicketDocumentCreateWithoutTicketInput[] | TicketDocumentUncheckedCreateWithoutTicketInput[]
    connectOrCreate?: TicketDocumentCreateOrConnectWithoutTicketInput | TicketDocumentCreateOrConnectWithoutTicketInput[]
    upsert?: TicketDocumentUpsertWithWhereUniqueWithoutTicketInput | TicketDocumentUpsertWithWhereUniqueWithoutTicketInput[]
    createMany?: TicketDocumentCreateManyTicketInputEnvelope
    set?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    disconnect?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    delete?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    connect?: TicketDocumentWhereUniqueInput | TicketDocumentWhereUniqueInput[]
    update?: TicketDocumentUpdateWithWhereUniqueWithoutTicketInput | TicketDocumentUpdateWithWhereUniqueWithoutTicketInput[]
    updateMany?: TicketDocumentUpdateManyWithWhereWithoutTicketInput | TicketDocumentUpdateManyWithWhereWithoutTicketInput[]
    deleteMany?: TicketDocumentScalarWhereInput | TicketDocumentScalarWhereInput[]
  }

  export type TicketCreateNestedOneWithoutDocumentsInput = {
    create?: XOR<TicketCreateWithoutDocumentsInput, TicketUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: TicketCreateOrConnectWithoutDocumentsInput
    connect?: TicketWhereUniqueInput
  }

  export type TicketUpdateOneRequiredWithoutDocumentsNestedInput = {
    create?: XOR<TicketCreateWithoutDocumentsInput, TicketUncheckedCreateWithoutDocumentsInput>
    connectOrCreate?: TicketCreateOrConnectWithoutDocumentsInput
    upsert?: TicketUpsertWithoutDocumentsInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutDocumentsInput, TicketUpdateWithoutDocumentsInput>, TicketUncheckedUpdateWithoutDocumentsInput>
  }

  export type TicketCreateNestedOneWithoutCommentsInput = {
    create?: XOR<TicketCreateWithoutCommentsInput, TicketUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: TicketCreateOrConnectWithoutCommentsInput
    connect?: TicketWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutTicketCommentsInput = {
    create?: XOR<UserCreateWithoutTicketCommentsInput, UserUncheckedCreateWithoutTicketCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTicketCommentsInput
    connect?: UserWhereUniqueInput
  }

  export type TicketUpdateOneRequiredWithoutCommentsNestedInput = {
    create?: XOR<TicketCreateWithoutCommentsInput, TicketUncheckedCreateWithoutCommentsInput>
    connectOrCreate?: TicketCreateOrConnectWithoutCommentsInput
    upsert?: TicketUpsertWithoutCommentsInput
    connect?: TicketWhereUniqueInput
    update?: XOR<XOR<TicketUpdateToOneWithWhereWithoutCommentsInput, TicketUpdateWithoutCommentsInput>, TicketUncheckedUpdateWithoutCommentsInput>
  }

  export type UserUpdateOneRequiredWithoutTicketCommentsNestedInput = {
    create?: XOR<UserCreateWithoutTicketCommentsInput, UserUncheckedCreateWithoutTicketCommentsInput>
    connectOrCreate?: UserCreateOrConnectWithoutTicketCommentsInput
    upsert?: UserUpsertWithoutTicketCommentsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTicketCommentsInput, UserUpdateWithoutTicketCommentsInput>, UserUncheckedUpdateWithoutTicketCommentsInput>
  }

  export type UserCreateNestedOneWithoutUserSubscriptionInput = {
    create?: XOR<UserCreateWithoutUserSubscriptionInput, UserUncheckedCreateWithoutUserSubscriptionInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSubscriptionInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserSubscriptionNestedInput = {
    create?: XOR<UserCreateWithoutUserSubscriptionInput, UserUncheckedCreateWithoutUserSubscriptionInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSubscriptionInput
    upsert?: UserUpsertWithoutUserSubscriptionInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserSubscriptionInput, UserUpdateWithoutUserSubscriptionInput>, UserUncheckedUpdateWithoutUserSubscriptionInput>
  }

  export type UserCreateNestedOneWithoutPortfolioInput = {
    create?: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
    connectOrCreate?: UserCreateOrConnectWithoutPortfolioInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutPortfolioNestedInput = {
    create?: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
    connectOrCreate?: UserCreateOrConnectWithoutPortfolioInput
    upsert?: UserUpsertWithoutPortfolioInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutPortfolioInput, UserUpdateWithoutPortfolioInput>, UserUncheckedUpdateWithoutPortfolioInput>
  }

  export type UserCreateNestedOneWithoutSearchInput = {
    create?: XOR<UserCreateWithoutSearchInput, UserUncheckedCreateWithoutSearchInput>
    connectOrCreate?: UserCreateOrConnectWithoutSearchInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSearchNestedInput = {
    create?: XOR<UserCreateWithoutSearchInput, UserUncheckedCreateWithoutSearchInput>
    connectOrCreate?: UserCreateOrConnectWithoutSearchInput
    upsert?: UserUpsertWithoutSearchInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSearchInput, UserUpdateWithoutSearchInput>, UserUncheckedUpdateWithoutSearchInput>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumwp_wpdatacharts_engineFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatacharts_engine | Enumwp_wpdatacharts_engineFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatacharts_engine[]
    notIn?: $Enums.wp_wpdatacharts_engine[]
    not?: NestedEnumwp_wpdatacharts_engineFilter<$PrismaModel> | $Enums.wp_wpdatacharts_engine
  }

  export type NestedEnumwp_wpdatacharts_engineWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatacharts_engine | Enumwp_wpdatacharts_engineFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatacharts_engine[]
    notIn?: $Enums.wp_wpdatacharts_engine[]
    not?: NestedEnumwp_wpdatacharts_engineWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatacharts_engine
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatacharts_engineFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatacharts_engineFilter<$PrismaModel>
  }

  export type NestedEnumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_filter_type | Enumwp_wpdatatables_columns_filter_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_filter_type[]
    notIn?: $Enums.wp_wpdatatables_columns_filter_type[]
    not?: NestedEnumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_filter_type
  }

  export type NestedEnumwp_wpdatatables_columns_column_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_column_type | Enumwp_wpdatatables_columns_column_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_column_type[]
    notIn?: $Enums.wp_wpdatatables_columns_column_type[]
    not?: NestedEnumwp_wpdatatables_columns_column_typeFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_column_type
  }

  export type NestedEnumwp_wpdatatables_columns_input_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_input_type | Enumwp_wpdatatables_columns_input_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_input_type[]
    notIn?: $Enums.wp_wpdatatables_columns_input_type[]
    not?: NestedEnumwp_wpdatatables_columns_input_typeFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_input_type
  }

  export type NestedEnumwp_wpdatatables_columns_filter_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_filter_type | Enumwp_wpdatatables_columns_filter_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_filter_type[]
    notIn?: $Enums.wp_wpdatatables_columns_filter_type[]
    not?: NestedEnumwp_wpdatatables_columns_filter_typeWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_filter_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatatables_columns_filter_typeFilter<$PrismaModel>
  }

  export type NestedEnumwp_wpdatatables_columns_column_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_column_type | Enumwp_wpdatatables_columns_column_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_column_type[]
    notIn?: $Enums.wp_wpdatatables_columns_column_type[]
    not?: NestedEnumwp_wpdatatables_columns_column_typeWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_column_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatatables_columns_column_typeFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatatables_columns_column_typeFilter<$PrismaModel>
  }

  export type NestedEnumwp_wpdatatables_columns_input_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.wp_wpdatatables_columns_input_type | Enumwp_wpdatatables_columns_input_typeFieldRefInput<$PrismaModel>
    in?: $Enums.wp_wpdatatables_columns_input_type[]
    notIn?: $Enums.wp_wpdatatables_columns_input_type[]
    not?: NestedEnumwp_wpdatatables_columns_input_typeWithAggregatesFilter<$PrismaModel> | $Enums.wp_wpdatatables_columns_input_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumwp_wpdatatables_columns_input_typeFilter<$PrismaModel>
    _max?: NestedEnumwp_wpdatatables_columns_input_typeFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type PortfolioCreateWithoutUserInput = {
    id?: number
    name: string
    filters: JsonNullValueInput | InputJsonValue
    tableName: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type PortfolioUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    filters: JsonNullValueInput | InputJsonValue
    tableName: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type PortfolioCreateOrConnectWithoutUserInput = {
    where: PortfolioWhereUniqueInput
    create: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
  }

  export type PortfolioCreateManyUserInputEnvelope = {
    data: PortfolioCreateManyUserInput | PortfolioCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type TicketCommentCreateWithoutPostedByInput = {
    id?: number
    text: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    ticket: TicketCreateNestedOneWithoutCommentsInput
  }

  export type TicketCommentUncheckedCreateWithoutPostedByInput = {
    id?: number
    text: string
    ticketId: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketCommentCreateOrConnectWithoutPostedByInput = {
    where: TicketCommentWhereUniqueInput
    create: XOR<TicketCommentCreateWithoutPostedByInput, TicketCommentUncheckedCreateWithoutPostedByInput>
  }

  export type TicketCommentCreateManyPostedByInputEnvelope = {
    data: TicketCommentCreateManyPostedByInput | TicketCommentCreateManyPostedByInput[]
    skipDuplicates?: boolean
  }

  export type TicketCreateWithoutPostedByInput = {
    id?: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    comments?: TicketCommentCreateNestedManyWithoutTicketInput
    documents?: TicketDocumentCreateNestedManyWithoutTicketInput
  }

  export type TicketUncheckedCreateWithoutPostedByInput = {
    id?: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    comments?: TicketCommentUncheckedCreateNestedManyWithoutTicketInput
    documents?: TicketDocumentUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutPostedByInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutPostedByInput, TicketUncheckedCreateWithoutPostedByInput>
  }

  export type TicketCreateManyPostedByInputEnvelope = {
    data: TicketCreateManyPostedByInput | TicketCreateManyPostedByInput[]
    skipDuplicates?: boolean
  }

  export type UserSubscriptionCreateWithoutUserInput = {
    id?: number
    subscriptionId: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type UserSubscriptionUncheckedCreateWithoutUserInput = {
    id?: number
    subscriptionId: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type UserSubscriptionCreateOrConnectWithoutUserInput = {
    where: UserSubscriptionWhereUniqueInput
    create: XOR<UserSubscriptionCreateWithoutUserInput, UserSubscriptionUncheckedCreateWithoutUserInput>
  }

  export type UserSubscriptionCreateManyUserInputEnvelope = {
    data: UserSubscriptionCreateManyUserInput | UserSubscriptionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SearchCreateWithoutUserInput = {
    id?: string
    keyword: string
    tableName: string
    createdAt?: Date | string
    lastChecked?: Date | string | null
  }

  export type SearchUncheckedCreateWithoutUserInput = {
    id?: string
    keyword: string
    tableName: string
    createdAt?: Date | string
    lastChecked?: Date | string | null
  }

  export type SearchCreateOrConnectWithoutUserInput = {
    where: SearchWhereUniqueInput
    create: XOR<SearchCreateWithoutUserInput, SearchUncheckedCreateWithoutUserInput>
  }

  export type SearchCreateManyUserInputEnvelope = {
    data: SearchCreateManyUserInput | SearchCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PortfolioUpsertWithWhereUniqueWithoutUserInput = {
    where: PortfolioWhereUniqueInput
    update: XOR<PortfolioUpdateWithoutUserInput, PortfolioUncheckedUpdateWithoutUserInput>
    create: XOR<PortfolioCreateWithoutUserInput, PortfolioUncheckedCreateWithoutUserInput>
  }

  export type PortfolioUpdateWithWhereUniqueWithoutUserInput = {
    where: PortfolioWhereUniqueInput
    data: XOR<PortfolioUpdateWithoutUserInput, PortfolioUncheckedUpdateWithoutUserInput>
  }

  export type PortfolioUpdateManyWithWhereWithoutUserInput = {
    where: PortfolioScalarWhereInput
    data: XOR<PortfolioUpdateManyMutationInput, PortfolioUncheckedUpdateManyWithoutUserInput>
  }

  export type PortfolioScalarWhereInput = {
    AND?: PortfolioScalarWhereInput | PortfolioScalarWhereInput[]
    OR?: PortfolioScalarWhereInput[]
    NOT?: PortfolioScalarWhereInput | PortfolioScalarWhereInput[]
    id?: IntFilter<"Portfolio"> | number
    userId?: IntFilter<"Portfolio"> | number
    name?: StringFilter<"Portfolio"> | string
    filters?: JsonFilter<"Portfolio">
    tableName?: StringFilter<"Portfolio"> | string
    createdAt?: DateTimeFilter<"Portfolio"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Portfolio"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Portfolio"> | Date | string | null
  }

  export type TicketCommentUpsertWithWhereUniqueWithoutPostedByInput = {
    where: TicketCommentWhereUniqueInput
    update: XOR<TicketCommentUpdateWithoutPostedByInput, TicketCommentUncheckedUpdateWithoutPostedByInput>
    create: XOR<TicketCommentCreateWithoutPostedByInput, TicketCommentUncheckedCreateWithoutPostedByInput>
  }

  export type TicketCommentUpdateWithWhereUniqueWithoutPostedByInput = {
    where: TicketCommentWhereUniqueInput
    data: XOR<TicketCommentUpdateWithoutPostedByInput, TicketCommentUncheckedUpdateWithoutPostedByInput>
  }

  export type TicketCommentUpdateManyWithWhereWithoutPostedByInput = {
    where: TicketCommentScalarWhereInput
    data: XOR<TicketCommentUpdateManyMutationInput, TicketCommentUncheckedUpdateManyWithoutPostedByInput>
  }

  export type TicketCommentScalarWhereInput = {
    AND?: TicketCommentScalarWhereInput | TicketCommentScalarWhereInput[]
    OR?: TicketCommentScalarWhereInput[]
    NOT?: TicketCommentScalarWhereInput | TicketCommentScalarWhereInput[]
    id?: IntFilter<"TicketComment"> | number
    text?: StringFilter<"TicketComment"> | string
    ticketId?: IntFilter<"TicketComment"> | number
    userId?: IntFilter<"TicketComment"> | number
    createdAt?: DateTimeFilter<"TicketComment"> | Date | string
    updatedAt?: DateTimeNullableFilter<"TicketComment"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"TicketComment"> | Date | string | null
  }

  export type TicketUpsertWithWhereUniqueWithoutPostedByInput = {
    where: TicketWhereUniqueInput
    update: XOR<TicketUpdateWithoutPostedByInput, TicketUncheckedUpdateWithoutPostedByInput>
    create: XOR<TicketCreateWithoutPostedByInput, TicketUncheckedCreateWithoutPostedByInput>
  }

  export type TicketUpdateWithWhereUniqueWithoutPostedByInput = {
    where: TicketWhereUniqueInput
    data: XOR<TicketUpdateWithoutPostedByInput, TicketUncheckedUpdateWithoutPostedByInput>
  }

  export type TicketUpdateManyWithWhereWithoutPostedByInput = {
    where: TicketScalarWhereInput
    data: XOR<TicketUpdateManyMutationInput, TicketUncheckedUpdateManyWithoutPostedByInput>
  }

  export type TicketScalarWhereInput = {
    AND?: TicketScalarWhereInput | TicketScalarWhereInput[]
    OR?: TicketScalarWhereInput[]
    NOT?: TicketScalarWhereInput | TicketScalarWhereInput[]
    id?: IntFilter<"Ticket"> | number
    userId?: IntFilter<"Ticket"> | number
    title?: StringFilter<"Ticket"> | string
    description?: StringFilter<"Ticket"> | string
    status?: StringFilter<"Ticket"> | string
    createdAt?: DateTimeFilter<"Ticket"> | Date | string
    updatedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Ticket"> | Date | string | null
  }

  export type UserSubscriptionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSubscriptionWhereUniqueInput
    update: XOR<UserSubscriptionUpdateWithoutUserInput, UserSubscriptionUncheckedUpdateWithoutUserInput>
    create: XOR<UserSubscriptionCreateWithoutUserInput, UserSubscriptionUncheckedCreateWithoutUserInput>
  }

  export type UserSubscriptionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSubscriptionWhereUniqueInput
    data: XOR<UserSubscriptionUpdateWithoutUserInput, UserSubscriptionUncheckedUpdateWithoutUserInput>
  }

  export type UserSubscriptionUpdateManyWithWhereWithoutUserInput = {
    where: UserSubscriptionScalarWhereInput
    data: XOR<UserSubscriptionUpdateManyMutationInput, UserSubscriptionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserSubscriptionScalarWhereInput = {
    AND?: UserSubscriptionScalarWhereInput | UserSubscriptionScalarWhereInput[]
    OR?: UserSubscriptionScalarWhereInput[]
    NOT?: UserSubscriptionScalarWhereInput | UserSubscriptionScalarWhereInput[]
    id?: IntFilter<"UserSubscription"> | number
    userId?: IntFilter<"UserSubscription"> | number
    subscriptionId?: StringFilter<"UserSubscription"> | string
    createdAt?: DateTimeFilter<"UserSubscription"> | Date | string
    updatedAt?: DateTimeNullableFilter<"UserSubscription"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"UserSubscription"> | Date | string | null
  }

  export type SearchUpsertWithWhereUniqueWithoutUserInput = {
    where: SearchWhereUniqueInput
    update: XOR<SearchUpdateWithoutUserInput, SearchUncheckedUpdateWithoutUserInput>
    create: XOR<SearchCreateWithoutUserInput, SearchUncheckedCreateWithoutUserInput>
  }

  export type SearchUpdateWithWhereUniqueWithoutUserInput = {
    where: SearchWhereUniqueInput
    data: XOR<SearchUpdateWithoutUserInput, SearchUncheckedUpdateWithoutUserInput>
  }

  export type SearchUpdateManyWithWhereWithoutUserInput = {
    where: SearchScalarWhereInput
    data: XOR<SearchUpdateManyMutationInput, SearchUncheckedUpdateManyWithoutUserInput>
  }

  export type SearchScalarWhereInput = {
    AND?: SearchScalarWhereInput | SearchScalarWhereInput[]
    OR?: SearchScalarWhereInput[]
    NOT?: SearchScalarWhereInput | SearchScalarWhereInput[]
    id?: StringFilter<"Search"> | string
    userId?: IntFilter<"Search"> | number
    keyword?: StringFilter<"Search"> | string
    tableName?: StringFilter<"Search"> | string
    createdAt?: DateTimeFilter<"Search"> | Date | string
    lastChecked?: DateTimeNullableFilter<"Search"> | Date | string | null
  }

  export type TicketCommentCreateWithoutTicketInput = {
    id?: number
    text: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    postedBy: UserCreateNestedOneWithoutTicketCommentsInput
  }

  export type TicketCommentUncheckedCreateWithoutTicketInput = {
    id?: number
    text: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketCommentCreateOrConnectWithoutTicketInput = {
    where: TicketCommentWhereUniqueInput
    create: XOR<TicketCommentCreateWithoutTicketInput, TicketCommentUncheckedCreateWithoutTicketInput>
  }

  export type TicketCommentCreateManyTicketInputEnvelope = {
    data: TicketCommentCreateManyTicketInput | TicketCommentCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type TicketDocumentCreateWithoutTicketInput = {
    id?: number
    url: string
    name: string
    size: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketDocumentUncheckedCreateWithoutTicketInput = {
    id?: number
    url: string
    name: string
    size: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketDocumentCreateOrConnectWithoutTicketInput = {
    where: TicketDocumentWhereUniqueInput
    create: XOR<TicketDocumentCreateWithoutTicketInput, TicketDocumentUncheckedCreateWithoutTicketInput>
  }

  export type TicketDocumentCreateManyTicketInputEnvelope = {
    data: TicketDocumentCreateManyTicketInput | TicketDocumentCreateManyTicketInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTicketsInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionCreateNestedManyWithoutUserInput
    search?: SearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTicketsInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioUncheckedCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentUncheckedCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionUncheckedCreateNestedManyWithoutUserInput
    search?: SearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTicketsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
  }

  export type TicketCommentUpsertWithWhereUniqueWithoutTicketInput = {
    where: TicketCommentWhereUniqueInput
    update: XOR<TicketCommentUpdateWithoutTicketInput, TicketCommentUncheckedUpdateWithoutTicketInput>
    create: XOR<TicketCommentCreateWithoutTicketInput, TicketCommentUncheckedCreateWithoutTicketInput>
  }

  export type TicketCommentUpdateWithWhereUniqueWithoutTicketInput = {
    where: TicketCommentWhereUniqueInput
    data: XOR<TicketCommentUpdateWithoutTicketInput, TicketCommentUncheckedUpdateWithoutTicketInput>
  }

  export type TicketCommentUpdateManyWithWhereWithoutTicketInput = {
    where: TicketCommentScalarWhereInput
    data: XOR<TicketCommentUpdateManyMutationInput, TicketCommentUncheckedUpdateManyWithoutTicketInput>
  }

  export type TicketDocumentUpsertWithWhereUniqueWithoutTicketInput = {
    where: TicketDocumentWhereUniqueInput
    update: XOR<TicketDocumentUpdateWithoutTicketInput, TicketDocumentUncheckedUpdateWithoutTicketInput>
    create: XOR<TicketDocumentCreateWithoutTicketInput, TicketDocumentUncheckedCreateWithoutTicketInput>
  }

  export type TicketDocumentUpdateWithWhereUniqueWithoutTicketInput = {
    where: TicketDocumentWhereUniqueInput
    data: XOR<TicketDocumentUpdateWithoutTicketInput, TicketDocumentUncheckedUpdateWithoutTicketInput>
  }

  export type TicketDocumentUpdateManyWithWhereWithoutTicketInput = {
    where: TicketDocumentScalarWhereInput
    data: XOR<TicketDocumentUpdateManyMutationInput, TicketDocumentUncheckedUpdateManyWithoutTicketInput>
  }

  export type TicketDocumentScalarWhereInput = {
    AND?: TicketDocumentScalarWhereInput | TicketDocumentScalarWhereInput[]
    OR?: TicketDocumentScalarWhereInput[]
    NOT?: TicketDocumentScalarWhereInput | TicketDocumentScalarWhereInput[]
    id?: IntFilter<"TicketDocument"> | number
    url?: StringFilter<"TicketDocument"> | string
    name?: StringFilter<"TicketDocument"> | string
    size?: IntFilter<"TicketDocument"> | number
    createdAt?: DateTimeFilter<"TicketDocument"> | Date | string
    updatedAt?: DateTimeNullableFilter<"TicketDocument"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"TicketDocument"> | Date | string | null
    ticketId?: IntFilter<"TicketDocument"> | number
  }

  export type UserUpsertWithoutTicketsInput = {
    update: XOR<UserUpdateWithoutTicketsInput, UserUncheckedUpdateWithoutTicketsInput>
    create: XOR<UserCreateWithoutTicketsInput, UserUncheckedCreateWithoutTicketsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTicketsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTicketsInput, UserUncheckedUpdateWithoutTicketsInput>
  }

  export type UserUpdateWithoutTicketsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUpdateManyWithoutUserNestedInput
    search?: SearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTicketsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUncheckedUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUncheckedUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUncheckedUpdateManyWithoutUserNestedInput
    search?: SearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type TicketCreateWithoutDocumentsInput = {
    id?: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    comments?: TicketCommentCreateNestedManyWithoutTicketInput
    postedBy: UserCreateNestedOneWithoutTicketsInput
  }

  export type TicketUncheckedCreateWithoutDocumentsInput = {
    id?: number
    userId: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    comments?: TicketCommentUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutDocumentsInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutDocumentsInput, TicketUncheckedCreateWithoutDocumentsInput>
  }

  export type TicketUpsertWithoutDocumentsInput = {
    update: XOR<TicketUpdateWithoutDocumentsInput, TicketUncheckedUpdateWithoutDocumentsInput>
    create: XOR<TicketCreateWithoutDocumentsInput, TicketUncheckedCreateWithoutDocumentsInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutDocumentsInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutDocumentsInput, TicketUncheckedUpdateWithoutDocumentsInput>
  }

  export type TicketUpdateWithoutDocumentsInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: TicketCommentUpdateManyWithoutTicketNestedInput
    postedBy?: UserUpdateOneRequiredWithoutTicketsNestedInput
  }

  export type TicketUncheckedUpdateWithoutDocumentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: TicketCommentUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketCreateWithoutCommentsInput = {
    id?: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    documents?: TicketDocumentCreateNestedManyWithoutTicketInput
    postedBy: UserCreateNestedOneWithoutTicketsInput
  }

  export type TicketUncheckedCreateWithoutCommentsInput = {
    id?: number
    userId: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    documents?: TicketDocumentUncheckedCreateNestedManyWithoutTicketInput
  }

  export type TicketCreateOrConnectWithoutCommentsInput = {
    where: TicketWhereUniqueInput
    create: XOR<TicketCreateWithoutCommentsInput, TicketUncheckedCreateWithoutCommentsInput>
  }

  export type UserCreateWithoutTicketCommentsInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioCreateNestedManyWithoutUserInput
    tickets?: TicketCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionCreateNestedManyWithoutUserInput
    search?: SearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTicketCommentsInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioUncheckedCreateNestedManyWithoutUserInput
    tickets?: TicketUncheckedCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionUncheckedCreateNestedManyWithoutUserInput
    search?: SearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTicketCommentsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTicketCommentsInput, UserUncheckedCreateWithoutTicketCommentsInput>
  }

  export type TicketUpsertWithoutCommentsInput = {
    update: XOR<TicketUpdateWithoutCommentsInput, TicketUncheckedUpdateWithoutCommentsInput>
    create: XOR<TicketCreateWithoutCommentsInput, TicketUncheckedCreateWithoutCommentsInput>
    where?: TicketWhereInput
  }

  export type TicketUpdateToOneWithWhereWithoutCommentsInput = {
    where?: TicketWhereInput
    data: XOR<TicketUpdateWithoutCommentsInput, TicketUncheckedUpdateWithoutCommentsInput>
  }

  export type TicketUpdateWithoutCommentsInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: TicketDocumentUpdateManyWithoutTicketNestedInput
    postedBy?: UserUpdateOneRequiredWithoutTicketsNestedInput
  }

  export type TicketUncheckedUpdateWithoutCommentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    documents?: TicketDocumentUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type UserUpsertWithoutTicketCommentsInput = {
    update: XOR<UserUpdateWithoutTicketCommentsInput, UserUncheckedUpdateWithoutTicketCommentsInput>
    create: XOR<UserCreateWithoutTicketCommentsInput, UserUncheckedCreateWithoutTicketCommentsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTicketCommentsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTicketCommentsInput, UserUncheckedUpdateWithoutTicketCommentsInput>
  }

  export type UserUpdateWithoutTicketCommentsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUpdateManyWithoutUserNestedInput
    tickets?: TicketUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUpdateManyWithoutUserNestedInput
    search?: SearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTicketCommentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUncheckedUpdateManyWithoutUserNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUncheckedUpdateManyWithoutUserNestedInput
    search?: SearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutUserSubscriptionInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentCreateNestedManyWithoutPostedByInput
    tickets?: TicketCreateNestedManyWithoutPostedByInput
    search?: SearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserSubscriptionInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioUncheckedCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentUncheckedCreateNestedManyWithoutPostedByInput
    tickets?: TicketUncheckedCreateNestedManyWithoutPostedByInput
    search?: SearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserSubscriptionInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserSubscriptionInput, UserUncheckedCreateWithoutUserSubscriptionInput>
  }

  export type UserUpsertWithoutUserSubscriptionInput = {
    update: XOR<UserUpdateWithoutUserSubscriptionInput, UserUncheckedUpdateWithoutUserSubscriptionInput>
    create: XOR<UserCreateWithoutUserSubscriptionInput, UserUncheckedCreateWithoutUserSubscriptionInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserSubscriptionInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserSubscriptionInput, UserUncheckedUpdateWithoutUserSubscriptionInput>
  }

  export type UserUpdateWithoutUserSubscriptionInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUpdateManyWithoutPostedByNestedInput
    search?: SearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserSubscriptionInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUncheckedUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUncheckedUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutPostedByNestedInput
    search?: SearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutPortfolioInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    ticketComments?: TicketCommentCreateNestedManyWithoutPostedByInput
    tickets?: TicketCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionCreateNestedManyWithoutUserInput
    search?: SearchCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutPortfolioInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    ticketComments?: TicketCommentUncheckedCreateNestedManyWithoutPostedByInput
    tickets?: TicketUncheckedCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionUncheckedCreateNestedManyWithoutUserInput
    search?: SearchUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutPortfolioInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
  }

  export type UserUpsertWithoutPortfolioInput = {
    update: XOR<UserUpdateWithoutPortfolioInput, UserUncheckedUpdateWithoutPortfolioInput>
    create: XOR<UserCreateWithoutPortfolioInput, UserUncheckedCreateWithoutPortfolioInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutPortfolioInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutPortfolioInput, UserUncheckedUpdateWithoutPortfolioInput>
  }

  export type UserUpdateWithoutPortfolioInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ticketComments?: TicketCommentUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUpdateManyWithoutUserNestedInput
    search?: SearchUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutPortfolioInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    ticketComments?: TicketCommentUncheckedUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUncheckedUpdateManyWithoutUserNestedInput
    search?: SearchUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutSearchInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentCreateNestedManyWithoutPostedByInput
    tickets?: TicketCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSearchInput = {
    id?: number
    username: string
    email: string
    password: string
    isActive: boolean
    profileImage?: string | null
    plan?: number
    role?: string
    stripeId?: string | null
    customerId?: string | null
    planId?: string | null
    planName?: string | null
    subscriptionId?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
    emailUpdate: string
    isPaid?: boolean | null
    Portfolio?: PortfolioUncheckedCreateNestedManyWithoutUserInput
    ticketComments?: TicketCommentUncheckedCreateNestedManyWithoutPostedByInput
    tickets?: TicketUncheckedCreateNestedManyWithoutPostedByInput
    UserSubscription?: UserSubscriptionUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSearchInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSearchInput, UserUncheckedCreateWithoutSearchInput>
  }

  export type UserUpsertWithoutSearchInput = {
    update: XOR<UserUpdateWithoutSearchInput, UserUncheckedUpdateWithoutSearchInput>
    create: XOR<UserCreateWithoutSearchInput, UserUncheckedCreateWithoutSearchInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSearchInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSearchInput, UserUncheckedUpdateWithoutSearchInput>
  }

  export type UserUpdateWithoutSearchInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSearchInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    isActive?: BoolFieldUpdateOperationsInput | boolean
    profileImage?: NullableStringFieldUpdateOperationsInput | string | null
    plan?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    stripeId?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    planId?: NullableStringFieldUpdateOperationsInput | string | null
    planName?: NullableStringFieldUpdateOperationsInput | string | null
    subscriptionId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    emailUpdate?: StringFieldUpdateOperationsInput | string
    isPaid?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Portfolio?: PortfolioUncheckedUpdateManyWithoutUserNestedInput
    ticketComments?: TicketCommentUncheckedUpdateManyWithoutPostedByNestedInput
    tickets?: TicketUncheckedUpdateManyWithoutPostedByNestedInput
    UserSubscription?: UserSubscriptionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PortfolioCreateManyUserInput = {
    id?: number
    name: string
    filters: JsonNullValueInput | InputJsonValue
    tableName: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketCommentCreateManyPostedByInput = {
    id?: number
    text: string
    ticketId: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketCreateManyPostedByInput = {
    id?: number
    title: string
    description: string
    status: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type UserSubscriptionCreateManyUserInput = {
    id?: number
    subscriptionId: string
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type SearchCreateManyUserInput = {
    id?: string
    keyword: string
    tableName: string
    createdAt?: Date | string
    lastChecked?: Date | string | null
  }

  export type PortfolioUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    filters?: JsonNullValueInput | InputJsonValue
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PortfolioUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    filters?: JsonNullValueInput | InputJsonValue
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PortfolioUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    filters?: JsonNullValueInput | InputJsonValue
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCommentUpdateWithoutPostedByInput = {
    text?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ticket?: TicketUpdateOneRequiredWithoutCommentsNestedInput
  }

  export type TicketCommentUncheckedUpdateWithoutPostedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    ticketId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCommentUncheckedUpdateManyWithoutPostedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    ticketId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketUpdateWithoutPostedByInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: TicketCommentUpdateManyWithoutTicketNestedInput
    documents?: TicketDocumentUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateWithoutPostedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comments?: TicketCommentUncheckedUpdateManyWithoutTicketNestedInput
    documents?: TicketDocumentUncheckedUpdateManyWithoutTicketNestedInput
  }

  export type TicketUncheckedUpdateManyWithoutPostedByInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSubscriptionUpdateWithoutUserInput = {
    subscriptionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSubscriptionUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    subscriptionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserSubscriptionUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    subscriptionId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SearchUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyword?: StringFieldUpdateOperationsInput | string
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SearchUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyword?: StringFieldUpdateOperationsInput | string
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SearchUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    keyword?: StringFieldUpdateOperationsInput | string
    tableName?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastChecked?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCommentCreateManyTicketInput = {
    id?: number
    text: string
    userId: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketDocumentCreateManyTicketInput = {
    id?: number
    url: string
    name: string
    size: number
    createdAt?: Date | string
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type TicketCommentUpdateWithoutTicketInput = {
    text?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    postedBy?: UserUpdateOneRequiredWithoutTicketCommentsNestedInput
  }

  export type TicketCommentUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketCommentUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    text?: StringFieldUpdateOperationsInput | string
    userId?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketDocumentUpdateWithoutTicketInput = {
    url?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketDocumentUncheckedUpdateWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type TicketDocumentUncheckedUpdateManyWithoutTicketInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}